(	index	+	1	)	%	4
index	+	1	%	4
(	1	<<	FIX_DECIMAL	)	*	shrink
1	<<	FIX_DECIMAL	*	shrink
(	1	<<	FIX_DECIMAL	)	*	shrink
1	<<	FIX_DECIMAL	*	shrink
(	int	)	(	x	+	width	/	shrink	)	>=	OFFSCREEN_BITMAP_SIZE	-	1

(	(	int	)	(	(	OFFSCREEN_BITMAP_SIZE	-	x	-	1	)	*	shrink	)	)	<<	FIX_DECIMAL
(	(	int	)	(	OFFSCREEN_BITMAP_SIZE	-	x	-	1	*	shrink	)	)	<<	FIX_DECIMAL
(	int	)	(	y	+	height	/	shrink	)	>=	OFFSCREEN_BITMAP_SIZE	-	1

(	(	int	)	(	(	OFFSCREEN_BITMAP_SIZE	-	y	-	1	)	*	shrink	)	)	<<	FIX_DECIMAL
(	(	int	)	(	OFFSCREEN_BITMAP_SIZE	-	y	-	1	*	shrink	)	)	<<	FIX_DECIMAL
-	(	x	*	xinc	)
-	x	*	xinc
-	(	y	*	yinc	)
-	y	*	yinc
CurrentBBG	==	-	1

i	<	reserved_colors	/	2

i	<	height	/	2

!	pBiXlat	||	partsFirst	<=	0	||	partsSecond	<=	0

op	==	Rnormal	&&	regexp_ansi_sequences

1	+	256	/	8

1	+	256	/	8

a	<	256	/	8

prev	!=	-	1

a	<	256	/	8

op	==	Ropenpar	||	op	==	Ror

a	<	256	/	8

(	a	<<	3	)	+	b
a	<<	3	+	b
pos	>=	0	&&	size1	>=	0	&&	size2	>=	0	&&	mstop	>=	0

pos	>=	0	&&	size1	>=	0	&&	size2	>=	0	&&	mstop	>=	0

mstop	<=	size1	+	size2

mstop	<=	size1	+	size2

text	==	string2	+	size2

text	==	string1	+	size1

1	<<	(	ch	&	7	)
1	<<	ch	&	7
ch	!=	(	unsigned	char	)	*	code	++

(	unsigned	char	)	*	code	++	<<	8

1	<<	(	b	&	7	)
1	<<	b	&	7
p1	!=	p2	-	3

(	unsigned	char	)	*	code	++	<<	8

2	*	failure_stack_size	>	MAX_FAILURES

(	unsigned	char	)	*	code	++	<<	8

text	==	string1	+	size1

text	==	string2	+	size2

text	==	string2	+	size2

size2	==	0	&&	text	==	string1	+	size1

text	==	string1	+	size1

text	==	string2	+	size2

size2	==	0	&&	text	==	string1	+	size1

text	==	string2	+	size2

size2	==	0	&&	text	==	string1	+	size1

text	==	string2	+	size2

size2	==	0	&&	text	==	string1	+	size1

text	==	string1	||	text	==	string2	+	size2	||	(	size2	==	0	&&	text	==	string1	+	size1	)

text	==	string1	+	size1

text	==	string1	||	text	==	string2	+	size2	||	(	size2	==	0	&&	text	==	string1	+	size1	)

text	==	string1	+	size1

size1	>=	0	&&	size2	>=	0	&&	pos	>=	0	&&	mstop	>=	0

size1	>=	0	&&	size2	>=	0	&&	pos	>=	0	&&	mstop	>=	0

pos	+	range	>=	0	&&	pos	+	range	<=	size1	+	size2

pos	+	range	>=	0	&&	pos	+	range	<=	size1	+	size2

pos	+	range	>	size1

range	<	pos	-	size1

pos	>=	0	&&	pos	<=	size1	+	size2

pos	>=	0	&&	pos	<=	size1	+	size2

ret	==	-	2

(	pos_effect	!=	0	&&	GetDrawingEffect	(	obj_flags	)	!=	pos_effect	)	||	(	neg_effect	!=	0	&&	GetDrawingEffect	(	obj_flags	)	==	neg_effect	)

(	pos_flags	==	0	||	(	obj_flags	&	pos_flags	)	!=	0	)	&&	(	obj_flags	&	neg_flags	)	==	0
pos_flags	==	0	||	(	obj_flags	&	pos_flags	)	!=	0	&&	(	obj_flags	&	neg_flags	)	==	0
mapfile	==	-	1

mapfile	!=	-	1

read	(	file	,	&	version	,	4	)	!=	4	||	version	>	MAPFILE_VERSION

8	+	4	*	(	abs	(	security	)	%	MAPFILE_TOP_TABLE_SIZE	)
8	+	4	*	abs	(	security	)	%	MAPFILE_TOP_TABLE_SIZE
MouseToRoom	(	&	x	,	&	y	)	&&	!	GraphicsMouseCaptured	(	)

addr	!=	-	1

(	index	+	1	)	%	5
index	+	1	%	5
(	index1	!=	index2	)	||	(	index1	!=	index3	)

!	strcmp	(	ext	+	1	,	extension	)

angle	%	4	==	3

angle	%	4	==	3

(	1	-	iOffset	/	j	)	*	j
1	-	iOffset	/	j	*	j
e1	->	state	==	e2	->	state	&&	e1	->	table	==	e2	->	table

count	++	%	50	==	0

num_planes	*	num_bpp	<	8

1L	<<	(	num_bpp	*	num_planes	)

side0	==	0	&&	side1	==	0

side0	>=	0	&&	side1	>=	0

side0	<=	0	&&	side1	<=	0

(	(	double	)	side0	)	/	(	side0	-	side1	)
(	(	double	)	side0	)	/	side0	-	side1
side	<	-	r

prev	->	cone	.	rightedge	==	node	->	cone	.	leftedge	-	1

prev	->	cone	.	top_a	==	node	->	cone	.	top_a	&&	prev	->	cone	.	top_b	==	node	->	cone	.	top_b	&&	prev	->	cone	.	top_d	==	node	->	cone	.	top_d	&&	prev	->	cone	.	bot_a	==	node	->	cone	.	bot_a	&&	prev	->	cone	.	bot_b	==	node	->	cone	.	bot_b	&&	prev	->	cone	.	bot_d	==	node	->	cone	.	bot_d

DIVUP	(	prev	->	cone	.	top_b	*	col	+	prev	->	cone	.	top_d	,	prev	->	cone	.	top_a	)	==	DIVUP	(	node	->	cone	.	top_b	*	col	+	node	->	cone	.	top_d	,	node	->	cone	.	top_a	)	&&	DIVDOWN	(	prev	->	cone	.	bot_b	*	col	+	prev	->	cone	.	bot_d	,	prev	->	cone	.	bot_a	)	==	DIVDOWN	(	node	->	cone	.	bot_b	*	col	+	node	->	cone	.	bot_d	,	node	->	cone	.	bot_a	)

DIVUP	(	node	->	cone	.	top_b	*	col	+	node	->	cone	.	top_d	,	node	->	cone	.	top_a	)	==	DIVUP	(	prev	->	cone	.	top_b	*	col	+	prev	->	cone	.	top_d	,	prev	->	cone	.	top_a	)	&&	DIVDOWN	(	node	->	cone	.	bot_b	*	col	+	node	->	cone	.	bot_d	,	node	->	cone	.	bot_a	)	==	DIVDOWN	(	prev	->	cone	.	bot_b	*	col	+	prev	->	cone	.	bot_d	,	prev	->	cone	.	bot_a	)

a_topb	*	c0	+	a_topd	+	slack	<=	topa_b	*	c0	+	topa_d

a_topb	*	c1	+	a_topd	+	slack	<=	topa_b	*	c1	+	topa_d

a_topb	*	c1	+	a_topd	+	slack	<=	topa_b	*	c1	+	topa_d

(	num	+	denom	-	1	)	/	denom
num	+	denom	-	1	/	denom
(	num	+	denom	+	1	)	/	denom
num	+	denom	+	1	/	denom
bota_b	*	c0	+	bota_d	<	a_botb	*	c0	+	a_botd

bota_b	*	c1	+	bota_d	<	a_botb	*	c1	+	a_botd

(	num	+	denom	-	1	)	/	denom
num	+	denom	-	1	/	denom
(	num	+	denom	+	1	)	/	denom
num	+	denom	+	1	/	denom
bota_b	*	c1	+	bota_d	<	a_botb	*	c1	+	a_botd

bota_b	*	c0	+	bota_d	+	slack	<=	a_botb	*	c0	+	a_botd

bota_b	*	c1	+	bota_d	+	slack	<=	a_botb	*	c1	+	a_botd

bota_b	*	c1	+	bota_d	+	slack	<=	a_botb	*	c1	+	a_botd

(	num	+	denom	-	1	)	/	denom
num	+	denom	-	1	/	denom
(	num	+	denom	+	1	)	/	denom
num	+	denom	+	1	/	denom
topa_b	*	c0	+	topa_d	>	a_topb	*	c0	+	a_topd

topa_b	*	c1	+	topa_d	>	a_topb	*	c1	+	a_topd

(	num	+	denom	-	1	)	/	denom
num	+	denom	-	1	/	denom
(	num	+	denom	+	1	)	/	denom
num	+	denom	+	1	/	denom
topa_b	*	c1	+	topa_d	>	a_topb	*	c1	+	a_topd

(	left1	*	screen_width	+	screen_width2	)	/	(	left1	+	right1	)
left1	*	screen_width	+	screen_width2	/	(	left1	+	right1	)
(	left1	*	screen_width	+	screen_width2	)	/	(	left1	+	right1	)
left1	*	screen_width	+	screen_width2	/	left1	+	right1
(	left1	*	screen_width	+	screen_width2	)	/	(	left1	+	right1	)
left1	*	screen_width	+	screen_width2	/	(	left1	+	right1	)
(	left0	*	screen_width	+	screen_width2	)	/	(	left0	+	right0	)
(	left0	*	screen_width	+	screen_width2	)	/	left0	+	right0
(	left0	*	screen_width	+	screen_width2	)	/	(	left0	+	right0	)
(	left0	*	screen_width	+	screen_width2	)	/	left0	+	right0
(	left0	*	screen_width	+	screen_width2	)	/	(	left0	+	right0	)
left0	*	screen_width	+	screen_width2	/	left0	+	right0
(	left1	*	screen_width	+	screen_width2	)	/	(	left1	+	right1	)
left1	*	screen_width	+	screen_width2	/	(	left1	+	right1	)
(	left0	*	screen_width	+	screen_width2	)	/	(	left0	+	right0	)
left0	*	screen_width	+	screen_width2	/	(	left0	+	right0	)
(	left0	*	screen_width	+	screen_width2	)	/	(	left0	+	right0	)
left0	*	screen_width	+	screen_width2	/	left0	+	right0
(	left1	*	screen_width	+	screen_width2	)	/	(	left1	+	right1	)
left1	*	screen_width	+	screen_width2	/	left1	+	right1
center_a	*	x0	+	center_b	*	y0

center_a	*	x0	+	center_b	*	y1

center_a	*	x1	+	center_b	*	y0

center_a	*	x1	+	center_b	*	y1

left_a	*	x0	+	left_b	*	y0

left_a	*	x0	+	left_b	*	y1

left_a	*	x1	+	left_b	*	y1

left_a	*	x1	+	left_b	*	y0

l0	<	0	&&	l1	<	0	&&	l2	<	0	&&	l3	<	0

right_a	*	x0	+	right_b	*	y0

right_a	*	x0	+	right_b	*	y1

right_a	*	x1	+	right_b	*	y1

right_a	*	x1	+	right_b	*	y0

r0	<	0	&&	r1	<	0	&&	r2	<	0	&&	r3	<	0

l0	>=	0	&&	l1	>=	0	&&	l2	>=	0	&&	l3	>=	0

r0	>=	0	&&	r1	>=	0	&&	r2	>=	0	&&	r3	>=	0

(	screen_width	*	l0	+	screen_width2	)	/	(	l0	+	r0	)
screen_width	*	l0	+	screen_width2	/	(	l0	+	r0	)
(	screen_width	*	l1	+	screen_width2	)	/	(	l1	+	r1	)
screen_width	*	l1	+	screen_width2	/	l1	+	r1
(	screen_width	*	l2	+	screen_width2	)	/	(	l2	+	r2	)
screen_width	*	l2	+	screen_width2	/	l2	+	r2
(	screen_width	*	l3	+	screen_width2	)	/	(	l3	+	r3	)
screen_width	*	l3	+	screen_width2	/	(	l3	+	r3	)
(	screen_width	*	l0	+	screen_width2	)	/	(	l0	+	r0	)
(	screen_width	*	l0	+	screen_width2	)	/	l0	+	r0
(	screen_width	*	l1	+	screen_width2	)	/	(	l1	+	r1	)
screen_width	*	l1	+	screen_width2	/	(	l1	+	r1	)
(	screen_width	*	l2	+	screen_width2	)	/	(	l2	+	r2	)
screen_width	*	l2	+	screen_width2	/	l2	+	r2
(	screen_width	*	l3	+	screen_width2	)	/	(	l3	+	r3	)
(	screen_width	*	l3	+	screen_width2	)	/	l3	+	r3
a	*	toprow0	-	b	*	col0

a	*	botrow0	-	b	*	col0

i	<	num	-	1

a	+	b	<=	0

(	a	*	screen_width	+	screen_width2	)	/	(	a	+	b	)
a	*	screen_width	+	screen_width2	/	a	+	b
a	+	b	<=	0

(	a	*	screen_width	+	screen_width2	)	/	(	a	+	b	)
a	*	screen_width	+	screen_width2	/	a	+	b
top_b	*	left	+	top_d

top_b	*	right	+	top_d

bot_b	*	left	+	bot_d

bot_b	*	right	+	bot_d

(	top_a	*	row	-	top_d	)	/	top_b
top_a	*	row	-	top_d	/	top_b
(	top_a	*	row	-	top_d	+	top_b	+	1	)	/	top_b
top_a	*	row	-	top_d	+	top_b	+	1	/	top_b
(	bot_a	*	row	-	bot_d	+	bot_b	-	1	)	/	bot_b
bot_a	*	row	-	bot_d	+	bot_b	-	1	/	bot_b
(	bot_a	*	row	-	bot_d	)	/	bot_b
bot_a	*	row	-	bot_d	/	bot_b
minrow	<=	horizon	&&	maxrow	>=	horizon

new_hv	/	(	row	-	horizon	)
new_hv	/	row	-	horizon
viewer_height	>	ceilingheight	-	MIN_HEIGHT_DIFF

viewer_height	<	floorheight	+	MIN_HEIGHT_DIFF

viewer_height	>	ceilingheight	-	MIN_HEIGHT_DIFF

farZ	/	(	farZ	-	nearZ	)
farZ	/	farZ	-	nearZ
(	*	message	)	^	(	server_secure_token	&	0xFF	)

ptr	-	start	!=	len

ptr	-	start	!=	len

rand	(	)	%	2	==	0

50	>	rand	(	)	%	100

1	+	(	rand	(	)	%	6	)

rand	(	)	%	(	height	-	(	length	/	2	)	)
rand	(	)	%	height	-	(	length	/	2	)
length	&&	x	>=	0	&&	x	<	width	&&	y	<	height

2	+	3	*	amount

i	<	height	-	1

i	<	height	-	1

i	>=	0	&&	i	<	26

(	_nAllocated	+	CHUNKSIZE	)	*	sizeof	(	REGEXP	)
_nAllocated	+	CHUNKSIZE	*	sizeof	(	REGEXP	)
i	<	_nAllocated	+	CHUNKSIZE

!	_apExpressions	||	!	_nExpressions

*	p	&&	p	<	string	+	to

p	<	string	+	to

!	*	p	||	p	>=	string	+	to

*	p	&&	p	<	string	+	to

(	*	x	-	xoffset	)	/	scale
*	x	-	xoffset	/	scale
(	*	y	-	yoffset	)	/	scale
*	y	-	yoffset	/	scale
(	*	x	-	xoffsetMiniMap	)	/	scaleMiniMap
*	x	-	xoffsetMiniMap	/	scaleMiniMap
(	*	y	-	yoffsetMiniMap	)	/	scaleMiniMap
*	y	-	yoffsetMiniMap	/	scaleMiniMap
duration	>	10000	||	duration	<	0

duration	>	10000	||	duration	<	0

duration	>	10000	||	duration	<	0

(	i	+	direction	)	%	NUMTABS
i	+	direction	%	NUMTABS
next_index	==	-	1

(	GetPlayerInfo	(	)	->	viewID	==	0	)	||	(	GetPlayerInfo	(	)	->	viewID	==	GetPlayerInfo	(	)	->	id	)

(	GetPlayerInfo	(	)	->	viewID	==	0	)	||	(	GetPlayerInfo	(	)	->	viewID	==	GetPlayerInfo	(	)	->	id	)

(	GetPlayerInfo	(	)	->	viewID	==	0	)	||	(	GetPlayerInfo	(	)	->	viewID	==	GetPlayerInfo	(	)	->	id	)

i	<	reserved_colors	/	2

dx	+	dy	-	(	lessor	>>	1	)
dx	+	dy	-	lessor	>>	1
(	a2	<	0	)	||	(	b2	<	0	)	||	(	norm_size	<=	0	)

(	float	)	a	*	a	+	b	*	b

dx	==	0	&&	dy	==	0

*	ptr1	!=	0	&&	*	ptr2	!=	0

iCurrentTargetIndex	==	-	1

iCurrentTargetIndex	==	-	1

x	==	last_x	&&	y	==	last_y

dx	*	wall_dx	+	dy	*	wall_dy

wall_dx	*	wall_dx	+	wall_dy	*	wall_dy

xOld	+	FloatToInt	(	wall_dx	*	num	/	denom	)

yOld	+	FloatToInt	(	wall_dy	*	num	/	denom	)

a	*	new_x	+	b	*	new_y	+	c

a	*	old_x	+	b	*	old_y	+	c

*	s	&	~	0x1F

(	spaces	<	MAX_SPACES	)	&&	(	coderun	<	MAX_CODERUN	)

index	==	-	1

index	==	-	1

(	f	->	ptr	-	f	->	mem	)	+	num	>	f	->	length	||	f	->	ptr	<	f	->	mem	||	num	<=	0

(	f	->	ptr	-	f	->	mem	)	+	num	>	f	->	length	||	num	<=	0

i	<	height	/	2

numlocals	+	1	>	our_maxlocal

outfile	==	-	1

(	(	k	<<	1	)	^	(	ch	)	)	&	0x3fff
(	k	<<	1	)	^	(	ch	)	&	0x3fff
i	>=	ELEMENT_ITOP	&&	i	<=	ELEMENT_IRIGHT

i	>=	ELEMENT_TOP	&&	i	<=	ELEMENT_RIGHT

cols	>	old_cols	||	rows	>	old_rows

(	num_items	+	cols	-	1	)	/	cols	-	rows
num_items	+	cols	-	1	/	cols	-	rows
(	num_items	+	cols	-	1	)	/	cols	-	rows
num_items	+	cols	-	1	/	cols	-	rows
GetPlayer	(	)	->	viewID	&&	(	GetPlayer	(	)	->	viewID	!=	GetPlayer	(	)	->	id	)

index	==	-	1

*	ptr	!=	0	&&	*	group_name	!=	0

GetPlayer	(	)	->	viewID	&&	(	GetPlayer	(	)	->	viewID	!=	GetPlayer	(	)	->	id	)

GetPlayer	(	)	->	viewID	&&	(	GetPlayer	(	)	->	viewID	!=	GetPlayer	(	)	->	id	)

(	school	<	0	)	||	(	school	>=	num_schools	)

index	!=	-	1

index	==	-	1

nReturned	&&	nReturned	<	nAllocated	-	2

(	_nAllocated	+	CHUNKSIZE	)	*	sizeof	(	VerbAlias	)
_nAllocated	+	CHUNKSIZE	*	sizeof	(	VerbAlias	)
i	<	_nAllocated	+	CHUNKSIZE

num_groups	==	NUM_BUTTONS	+	1

(	(	int	)	crc	^	(	int	)	*	ptr	++	)	&	0xff
(	int	)	crc	^	(	int	)	*	ptr	++	&	0xff
(	(	crc	>>	8	)	&	0xFFFFFF	)	^	temp

i	+	63	<	inputLen

addr	!=	-	1

arg	+	2	>=	argc

string_id	<	0	||	string_id	>=	num_strings

object_id	<	0	||	object_id	>=	num_objects

object_id	<	0	||	object_id	>=	num_objects

object_id	<	0	||	object_id	>=	num_objects

len_data	>	sizeof	(	resource_value	)	-	1

1000	*	(	GetTime	(	)	-	pause_time	)
1000	*	GetTime	(	)	-	pause_time
!	s	||	len	<=	0

i	>=	len_s	-	2

list_id	<	0	||	list_id	>=	num_nodes

current_group	<	0	||	current_group	>=	LEN_CONFIG_TABLE

(	(	head_buffer	+	1	)	%	MAX_BUFFERS	)	!=	tail_buffer
(	head_buffer	+	1	%	MAX_BUFFERS	)	!=	tail_buffer
(	head_buffer	+	1	)	%	MAX_BUFFERS
head_buffer	+	1	%	MAX_BUFFERS
(	tail_buffer	+	1	)	%	MAX_BUFFERS
tail_buffer	+	1	%	MAX_BUFFERS
abs	(	to_row	-	from_row	)	>	1	||	abs	(	to_col	-	from_col	)	>	1

dir_row	==	0	&&	dir_col	==	0

abs	(	to_row	-	from_row	)	>	1	||	abs	(	to_col	-	from_col	)	>	1

dir_row	==	0	&&	dir_col	==	0

(	time	/	(	60	*	60	)	)	%	24

(	time	/	60	)	%	60

now	-	(	now	%	period	)	+	time

i	!=	num_parms	-	1

i	==	message_depth	-	1

i	<	message_depth	-	1

strlen	(	buf	)	>	sizeof	(	buf	)	-	1000

admin_len	>	sizeof	(	admin_cmd	)	-	2

admin_len	>	sizeof	(	admin_cmd	)	-	2

fh	==	-	1

read	(	infile	,	&	roo_version	,	4	)	!=	4	||	roo_version	<	ROO_VERSION

i	!=	num_normal_parms	-	1

!	pTarget	||	!	pSource	||	len	<=	0

len1	&&	len2	&&	toupper	(	*	s1	)	==	toupper	(	*	s2	)

len1	==	0	&&	len2	==	0

len_buf	<	0	||	!	buf

index	!=	-	1

index	==	-	1

(	admin_who_count	%	40	)	==	0

(	thismatch	&	(	sametag	|	difftag	)	)	==	(	matchtype	&	(	sametag	|	difftag	)	)	&&	(	thismatch	&	~	(	sametag	|	difftag	)	)	&	(	matchtype	&	~	(	sametag	|	difftag	)	)
thismatch	&	sametag	|	difftag	==	matchtype	&	sametag	|	difftag	&&	(	thismatch	&	~	sametag	|	difftag	)	&	(	matchtype	&	~	(	sametag	|	difftag	)	)
!	name	||	!	*	name

!	arg_str	||	!	*	arg_str

!	arg_str	||	!	*	arg_str

!	arg_str	||	!	*	arg_str

!	arg_str	||	!	*	arg_str

!	name	||	!	*	name

i	<	size_mess	-	1

index	+	3	>=	file_size

num_classes	>	MAX_CLASSES	-	1

num_messages	>	MAX_HANDLERS	-	1

comment	!=	-	1

i	<	index	-	inst_start

ch	&	(	16	-	1	)

(	pos	-	file_mem	)	+	7	>=	file_size

(	adler	>>	16	)	&	0xffff

adler	|	(	sum2	<<	16	)

adler	|	(	sum2	<<	16	)

adler	|	(	sum2	<<	16	)

(	adler2	&	0xffff	)	+	BASE	-	1
adler2	&	0xffff	+	BASE	-	1
(	(	adler1	>>	16	)	&	0xffff	)	+	(	(	adler2	>>	16	)	&	0xffff	)	+	BASE	-	rem
(	adler1	>>	16	)	&	0xffff	+	(	(	adler2	>>	16	)	&	0xffff	)	+	BASE	-	rem
sum2	>	(	BASE	<<	1	)

sum1	|	(	sum2	<<	16	)

uBackRead	+	BUFREADCOMMENT	>	uMaxBack

(	BUFREADCOMMENT	+	4	)	<	(	uSizeFile	-	uReadPos	)

(	i	--	)	>	0

(	(	*	(	buf	+	i	)	)	==	0x50	)	&&	(	(	*	(	buf	+	i	+	1	)	)	==	0x4b	)	&&	(	(	*	(	buf	+	i	+	2	)	)	==	0x05	)	&&	(	(	*	(	buf	+	i	+	3	)	)	==	0x06	)
(	(	*	buf	+	i	)	==	0x50	)	&&	(	(	*	buf	+	i	+	1	)	==	0x4b	)	&&	(	(	*	buf	+	i	+	2	)	==	0x05	)	&&	(	(	*	buf	+	i	+	3	)	==	0x06	)
next	<	len	&&	got	<	4

extractionpath	&&	*	extractionpath	==	0

fread	(	buf	,	4096	,	1	,	in	)	==	-	1

p	>=	homepath	+	2

(	buf	.	st_mode	&	0111	)	==	0
buf	.	st_mode	&	0111	==	0
4	*	(	MAXNR	+	1	)
4	*	MAXNR	+	1
4	*	(	MAXNR	+	1	)
4	*	MAXNR	+	1
4	*	(	MAXNR	+	1	)
4	*	MAXNR	+	1
4	*	(	MAXNR	+	1	)
4	*	MAXNR	+	1
(	temp	>>	16	)	&	0xff

(	temp	>>	8	)	&	0xff

++	i	==	10

(	temp	>>	16	)	&	0xff

(	temp	>>	8	)	&	0xff

++	i	==	8

(	temp	>>	16	)	&	0xff

(	temp	>>	8	)	&	0xff

++	i	==	7

(	temp	>>	16	)	&	0xff

(	temp	>>	8	)	&	0xff

(	s1	>>	16	)	&	0xff

(	s2	>>	8	)	&	0xff

(	s2	>>	16	)	&	0xff

(	s3	>>	8	)	&	0xff

(	s3	>>	16	)	&	0xff

(	s0	>>	8	)	&	0xff

(	s0	>>	16	)	&	0xff

(	s1	>>	8	)	&	0xff

--	r	==	0

(	t1	>>	16	)	&	0xff

(	t2	>>	8	)	&	0xff

(	t2	>>	16	)	&	0xff

(	t3	>>	8	)	&	0xff

(	t3	>>	16	)	&	0xff

(	t0	>>	8	)	&	0xff

(	t0	>>	16	)	&	0xff

(	t1	>>	8	)	&	0xff

(	t1	>>	16	)	&	0xff

(	t2	>>	8	)	&	0xff

(	t2	>>	16	)	&	0xff

(	t3	>>	8	)	&	0xff

(	t3	>>	16	)	&	0xff

(	t0	>>	8	)	&	0xff

(	t0	>>	16	)	&	0xff

(	t1	>>	8	)	&	0xff

(	s3	>>	16	)	&	0xff

(	s2	>>	8	)	&	0xff

(	s0	>>	16	)	&	0xff

(	s3	>>	8	)	&	0xff

(	s1	>>	16	)	&	0xff

(	s0	>>	8	)	&	0xff

(	s2	>>	16	)	&	0xff

(	s1	>>	8	)	&	0xff

--	r	==	0

(	t3	>>	16	)	&	0xff

(	t2	>>	8	)	&	0xff

(	t0	>>	16	)	&	0xff

(	t3	>>	8	)	&	0xff

(	t1	>>	16	)	&	0xff

(	t0	>>	8	)	&	0xff

(	t2	>>	16	)	&	0xff

(	t1	>>	8	)	&	0xff

(	t3	>>	16	)	&	0xff

(	t2	>>	8	)	&	0xff

(	t0	>>	16	)	&	0xff

(	t3	>>	8	)	&	0xff

(	t1	>>	16	)	&	0xff

(	t0	>>	8	)	&	0xff

(	t2	>>	16	)	&	0xff

(	t1	>>	8	)	&	0xff

keylen	!=	16	&&	keylen	!=	24	&&	keylen	!=	32

IVlen	!=	BLOCK_SIZE	&&	IVlen	!=	0

mode	<	MODE_ECB	||	mode	>	MODE_CTR

segment_size	<	1	||	segment_size	>	BLOCK_SIZE	*	8

(	len	%	BLOCK_SIZE	)	!=	0	&&	(	self	->	mode	!=	MODE_CFB	)	&&	(	self	->	mode	!=	MODE_PGP	)

self	->	mode	==	MODE_CFB	&&	(	len	%	(	self	->	segment_size	/	8	)	!=	0	)
self	->	mode	==	MODE_CFB	&&	(	len	%	self	->	segment_size	/	8	!=	0	)
self	->	segment_size	==	BLOCK_SIZE	*	8

(	self	->	segment_size	%	8	)	==	0

i	<	len	-	BLOCK_SIZE

j	<	len	-	i

(	len	%	BLOCK_SIZE	)	!=	0	&&	(	self	->	mode	!=	MODE_CFB	&&	self	->	mode	!=	MODE_PGP	)

self	->	mode	==	MODE_CFB	&&	(	len	%	(	self	->	segment_size	/	8	)	!=	0	)
self	->	mode	==	MODE_CFB	&&	(	len	%	self	->	segment_size	/	8	!=	0	)
self	->	segment_size	==	BLOCK_SIZE	*	8

(	self	->	segment_size	%	8	)	==	0

i	<	len	-	BLOCK_SIZE

j	<	len	-	i

mode	<	MODE_ECB	||	mode	>	MODE_CTR

self	->	mode	==	MODE_CFB	&&	(	len	%	(	self	->	segment_size	/	8	)	!=	0	)
self	->	mode	==	MODE_CFB	&&	(	len	%	self	->	segment_size	/	8	!=	0	)
(	self	->	segment_size	%	8	)	==	0

j	<	len	-	i

self	->	mode	==	MODE_CFB	&&	(	len	%	(	self	->	segment_size	/	8	)	!=	0	)
self	->	mode	==	MODE_CFB	&&	(	len	%	self	->	segment_size	/	8	!=	0	)
(	self	->	segment_size	%	8	)	==	0

j	<	len	-	i

(	adler	>>	16	)	&	0xffff

adler	|	(	sum2	<<	16	)

adler	|	(	sum2	<<	16	)

adler	|	(	sum2	<<	16	)

(	adler2	&	0xffff	)	+	BASE	-	1
adler2	&	0xffff	+	BASE	-	1
(	(	adler1	>>	16	)	&	0xffff	)	+	(	(	adler2	>>	16	)	&	0xffff	)	+	BASE	-	rem
(	(	adler1	>>	16	)	&	0xffff	)	+	(	adler2	>>	16	)	&	0xffff	+	BASE	-	rem
sum2	>	(	BASE	<<	1	)

sum1	|	(	sum2	<<	16	)

uBackRead	+	BUFREADCOMMENT	>	uMaxBack

(	BUFREADCOMMENT	+	4	)	<	(	uSizeFile	-	uReadPos	)

(	i	--	)	>	0

(	(	*	(	buf	+	i	)	)	==	0x50	)	&&	(	(	*	(	buf	+	i	+	1	)	)	==	0x4b	)	&&	(	(	*	(	buf	+	i	+	2	)	)	==	0x05	)	&&	(	(	*	(	buf	+	i	+	3	)	)	==	0x06	)
(	(	*	buf	+	i	)	==	0x50	)	&&	(	(	*	buf	+	i	+	1	)	==	0x4b	)	&&	(	(	*	buf	+	i	+	2	)	==	0x05	)	&&	(	(	*	buf	+	i	+	3	)	==	0x06	)
next	<	len	&&	got	<	4

(	nchars	+	1	)	*	sizeof	(	char	)
nchars	+	1	*	sizeof	(	char	)
(	buf	.	st_mode	&	0111	)	==	0
buf	.	st_mode	&	0111	==	0
4	*	(	MAXNR	+	1	)
4	*	MAXNR	+	1
4	*	(	MAXNR	+	1	)
4	*	MAXNR	+	1
4	*	(	MAXNR	+	1	)
4	*	MAXNR	+	1
4	*	(	MAXNR	+	1	)
4	*	MAXNR	+	1
(	temp	>>	16	)	&	0xff

(	temp	>>	8	)	&	0xff

++	i	==	10

(	temp	>>	16	)	&	0xff

(	temp	>>	8	)	&	0xff

++	i	==	8

(	temp	>>	16	)	&	0xff

(	temp	>>	8	)	&	0xff

++	i	==	7

(	temp	>>	16	)	&	0xff

(	temp	>>	8	)	&	0xff

(	s1	>>	16	)	&	0xff

(	s2	>>	8	)	&	0xff

(	s2	>>	16	)	&	0xff

(	s3	>>	8	)	&	0xff

(	s3	>>	16	)	&	0xff

(	s0	>>	8	)	&	0xff

(	s0	>>	16	)	&	0xff

(	s1	>>	8	)	&	0xff

--	r	==	0

(	t1	>>	16	)	&	0xff

(	t2	>>	8	)	&	0xff

(	t2	>>	16	)	&	0xff

(	t3	>>	8	)	&	0xff

(	t3	>>	16	)	&	0xff

(	t0	>>	8	)	&	0xff

(	t0	>>	16	)	&	0xff

(	t1	>>	8	)	&	0xff

(	t1	>>	16	)	&	0xff

(	t2	>>	8	)	&	0xff

(	t2	>>	16	)	&	0xff

(	t3	>>	8	)	&	0xff

(	t3	>>	16	)	&	0xff

(	t0	>>	8	)	&	0xff

(	t0	>>	16	)	&	0xff

(	t1	>>	8	)	&	0xff

(	s3	>>	16	)	&	0xff

(	s2	>>	8	)	&	0xff

(	s0	>>	16	)	&	0xff

(	s3	>>	8	)	&	0xff

(	s1	>>	16	)	&	0xff

(	s0	>>	8	)	&	0xff

(	s2	>>	16	)	&	0xff

(	s1	>>	8	)	&	0xff

--	r	==	0

(	t3	>>	16	)	&	0xff

(	t2	>>	8	)	&	0xff

(	t0	>>	16	)	&	0xff

(	t3	>>	8	)	&	0xff

(	t1	>>	16	)	&	0xff

(	t0	>>	8	)	&	0xff

(	t2	>>	16	)	&	0xff

(	t1	>>	8	)	&	0xff

(	t3	>>	16	)	&	0xff

(	t2	>>	8	)	&	0xff

(	t0	>>	16	)	&	0xff

(	t3	>>	8	)	&	0xff

(	t1	>>	16	)	&	0xff

(	t0	>>	8	)	&	0xff

(	t2	>>	16	)	&	0xff

(	t1	>>	8	)	&	0xff

keylen	!=	16	&&	keylen	!=	24	&&	keylen	!=	32

IVlen	!=	BLOCK_SIZE	&&	IVlen	!=	0

mode	<	MODE_ECB	||	mode	>	MODE_CTR

segment_size	<	1	||	segment_size	>	BLOCK_SIZE	*	8

(	len	%	BLOCK_SIZE	)	!=	0	&&	(	self	->	mode	!=	MODE_CFB	)	&&	(	self	->	mode	!=	MODE_PGP	)

self	->	mode	==	MODE_CFB	&&	(	len	%	(	self	->	segment_size	/	8	)	!=	0	)
self	->	mode	==	MODE_CFB	&&	(	len	%	self	->	segment_size	/	8	!=	0	)
self	->	segment_size	==	BLOCK_SIZE	*	8

(	self	->	segment_size	%	8	)	==	0

i	<	len	-	BLOCK_SIZE

j	<	len	-	i

(	len	%	BLOCK_SIZE	)	!=	0	&&	(	self	->	mode	!=	MODE_CFB	&&	self	->	mode	!=	MODE_PGP	)

self	->	mode	==	MODE_CFB	&&	(	len	%	(	self	->	segment_size	/	8	)	!=	0	)
self	->	mode	==	MODE_CFB	&&	(	len	%	self	->	segment_size	/	8	!=	0	)
self	->	segment_size	==	BLOCK_SIZE	*	8

(	self	->	segment_size	%	8	)	==	0

i	<	len	-	BLOCK_SIZE

j	<	len	-	i

mode	<	MODE_ECB	||	mode	>	MODE_CTR

self	->	mode	==	MODE_CFB	&&	(	len	%	(	self	->	segment_size	/	8	)	!=	0	)
self	->	mode	==	MODE_CFB	&&	(	len	%	self	->	segment_size	/	8	!=	0	)
(	self	->	segment_size	%	8	)	==	0

j	<	len	-	i

self	->	mode	==	MODE_CFB	&&	(	len	%	(	self	->	segment_size	/	8	)	!=	0	)
self	->	mode	==	MODE_CFB	&&	(	len	%	self	->	segment_size	/	8	!=	0	)
(	self	->	segment_size	%	8	)	==	0

j	<	len	-	i

(	top	->	size	+	1	)	*	sizeof	(	void	*	)
top	->	size	+	1	*	sizeof	(	void	*	)
(	top	->	size	+	1	)	*	sizeof	(	void	*	)
top	->	size	+	1	*	sizeof	(	void	*	)
sizeof	(	void	*	)	*	(	array	->	size	+	1	)
sizeof	(	void	*	)	*	array	->	size	+	1
sizeof	(	void	*	)	*	(	array	->	size	-	1	)
sizeof	(	void	*	)	*	array	->	size	-	1
sock	->	fd	!=	-	1

sock	->	fd	!=	-	1

buf_len	==	-	1

(	double	)	(	(	double	)	(	KSIZE	+	8	+	1	)	*	count	)	/	1048576.0

(	double	)	(	(	double	)	(	VSIZE	+	4	)	*	count	)	/	1048576.0

(	i	%	10000	)	==	0

(	i	%	10000	)	==	0

(	val	>>	8	)	&	0xff

(	val	>>	16	)	&	0xff

(	val	>>	24	)	&	0xff

(	val	>>	8	)	&	0xff

i	>	0	&&	i	==	meta	->	size

(	m	<	alen	)	&&	(	n	<	blen	)

res	==	-	1

res	==	-	1

res	==	-	1

res	==	-	1

res	==	-	1

munmap	(	mmap	,	sizes	)	==	-	1

pair	->	offset	>	0UL	&&	pair	->	vlen	>	0

res	==	-	1

res	==	-	1

res	==	-	1

idx	->	fd	==	-	1

ret	==	-	1

bak_fd	==	-	1

idx	->	fd	==	-	1

idx	->	fd	==	-	1	||	idx	->	read_fd	==	1

src	<=	last_byte	-	3

dst	-	destination	<	9

(	*	source	&	1	)	==	1
*	source	&	1	==	1
read_master	!=	-	1

read_master	==	1	||	read_master	==	2

read_master	==	0	||	read_master	==	2

cur_color	!=	color	||	(	cur_color	==	color	&&	cur_magnitude	>	magnitude	)

a_year	!=	year	||	a_term	!=	term

(	xo	+	dx	)	/	TILE_SIZE	-	(	xo	/	TILE_SIZE	)
xo	+	dx	/	TILE_SIZE	-	(	xo	/	TILE_SIZE	)
(	yo	+	dy	)	/	TILE_SIZE	-	(	yo	/	TILE_SIZE	)
yo	+	dy	/	TILE_SIZE	-	(	yo	/	TILE_SIZE	)
y	*	width	+	x

(	i	>>	j	)	&	0x01

(	current_char	&	128	)	==	0
current_char	&	128	==	0
(	current_char	&	(	128	+	64	)	)	==	128
current_char	&	(	128	+	64	)	==	128
(	current_char	&	(	128	+	64	+	32	)	)	==	(	128	+	64	)
current_char	&	(	128	+	64	+	32	)	==	(	128	+	64	)
(	current_char	&	(	128	+	64	+	32	+	16	)	)	==	(	128	+	64	+	32	)
current_char	&	(	128	+	64	+	32	+	16	)	==	(	128	+	64	+	32	)
(	current_char	&	(	128	+	64	+	32	+	16	+	8	)	)	==	(	128	+	64	+	32	+	16	)
current_char	&	(	128	+	64	+	32	+	16	+	8	)	==	(	128	+	64	+	32	+	16	)
(	current_char	&	(	128	+	64	+	32	+	16	+	8	+	4	)	)	==	(	128	+	64	+	32	+	16	+	8	)
current_char	&	(	128	+	64	+	32	+	16	+	8	+	4	)	==	(	128	+	64	+	32	+	16	+	8	)
(	current_char	&	(	128	+	64	+	32	+	16	+	8	+	4	+	2	)	)	==	(	128	+	64	+	32	+	16	+	8	+	4	)
current_char	&	(	128	+	64	+	32	+	16	+	8	+	4	+	2	)	==	(	128	+	64	+	32	+	16	+	8	+	4	)
!	strcmp	(	item	->	value	,	value	)	&&	!	strcmp	(	item	->	key	,	name	)

(	*	in	>=	0	)	&&	(	*	in	<	32	)

user_id	>=	0	&&	user_id	<=	max_uid

!	str	||	!	*	str

(	*	in	==	9	)	||	(	*	in	==	10	)	||	(	*	in	==	13	)

(	*	in	>=	0	)	&&	(	*	in	<	32	)

(	*	in	>=	0	)	&&	(	*	in	<	32	)

user_id	>=	0	&&	user_id	<=	max_uid

!	str	||	!	*	str

(	gr_active_fb	+	1	)	&	1

alt	&&	key_code	==	KEY_L

get_allow_toggle_display	(	)	&&	(	key_code	==	KEY_HOMEPAGE	||	key_code	==	KEY_MENU	||	key_code	==	KEY_POWER	||	key_code	==	KEY_END	)
get_allow_toggle_display	(	)	&&	key_code	==	KEY_HOMEPAGE	||	key_code	==	KEY_MENU	||	key_code	==	KEY_POWER	||	key_code	==	KEY_END
kbuf	->	entries	%	settings	.	klog_sampling_rate	!=	0

it	->	refcount	==	0	&&	!	item_is_linked	(	it	)

it	->	atime	>=	(	time_now	(	)	-	ITEM_UPDATE_INTERVAL	)

it	->	atime	>=	(	time_now	(	)	-	ITEM_UPDATE_INTERVAL	)

it	->	exptime	!=	0	&&	it	->	exptime	<=	time_now	(	)

settings	.	oldest_live	!=	0	&&	settings	.	oldest_live	<=	time_now	(	)	&&	it	->	atime	<=	settings	.	oldest_live

datalen	!=	0	&&	(	len	<	size	-	1	)

datalen	!=	0	&&	i	<	16

data	++	,	datalen	--	,	i	++

datalen	!=	0	&&	i	<	16

data	++	,	datalen	--	,	i	++

--	p	->	nfree_item	!=	0

slab	->	utime	>=	(	time_now	(	)	-	SLAB_LRU_UPDATE_INTERVAL	)

ntoken	<	ntoken_max	-	1

ntoken	>=	min	&&	ntoken	<=	max

ntoken	!=	3	&&	ntoken	!=	4

c	->	rcurr	<=	c	->	rbuf	+	c	->	rsize

ptr	-	c	->	rcurr	>	100

(	el	-	c	->	rcurr	)	>	1

(	last_thread	+	1	)	%	settings	.	num_workers
last_thread	+	1	%	settings	.	num_workers
init_count	<	nworkers	+	2

c	==	-	1

uid	!=	0	&&	euid	!=	0

settings	.	slab_size	/	STATS_BUCKET_SIZE	+	1

settings	.	stats_agg_intvl	.	tv_sec	+	1.0	*	settings	.	stats_agg_intvl	.	tv_usec	/	1000000

settings	.	klog_intvl	.	tv_sec	+	1.0	*	settings	.	klog_intvl	.	tv_usec	/	1000000

c	->	rcurr	<=	c	->	rbuf	+	c	->	rsize

m	->	msg_iovlen	>	0	&&	res	>=	m	->	msg_iov	->	iov_len

c	->	iov_used	==	0	||	(	c	->	udp	&&	c	->	iov_used	==	1	)

port	==	-	1

~	(	mask	&	0777	)
~	mask	&	0777
(	min	+	max	)	/	2
min	+	max	/	2
0	<	len	--

0	<	addrlen	--

n	<	0	||	32	<	n

(	(	u_long	)	0xFFFFFFFF	)	<<	(	32	-	n	)

len1	<	len2	||	len1	==	0	||	len2	==	0

0	<	len1	&&	0	<	len2

*	--	tail1	!=	*	--	tail2

!	disabled	&&	!	enable

tcgetattr	(	fd	,	&	otio	)	==	0	&&	(	otio	.	c_lflag	&	ECHO	)

~	(	ECHO	|	ECHOE	|	ECHOK	|	ECHONL	)
~	ECHO	|	ECHOE	|	ECHOK	|	ECHONL
argc	--	,	argv	++

argv	++	,	argc	--

argv	++	,	argc	--

argv	++	,	argc	--

argv	++	,	argc	--

argv	++	,	argc	--

argv	++	,	argc	--

argv	++	,	argc	--

argv	++	,	argc	--

argc	--	,	argv	++

(	relay_method	!=	METHOD_DIRECT	)	&&	(	relay_port	<=	0	)

connect	(	s	,	(	struct	sockaddr	*	)	&	saddr	,	sizeof	(	saddr	)	)	==	SOCKET_ERROR

*	buf	&&	(	(	tmp	-	work	)	<	(	int	)	sizeof	(	work	)	-	5	)

len	==	-	1

len	==	-	1

*	start	&&	(	i	<	max_auth	)

(	socks_version	==	4	)	&&	(	dest_addr	.	sin_addr	.	s_addr	==	0	)

(	src_len	+	2	)	/	3	*	4
src_len	+	2	/	3	*	4
(	data	<<	8	)	|	*	src

0x3F	&	(	data	>>	(	bits	-	6	)	)

proxy_auth_type	==	PROXY_AUTH_BASIC	&&	basic_auth	(	s	)	<	0

i	<	(	sizeof	(	bad_phrase_list	)	/	sizeof	(	char	*	)	)

i	<	(	sizeof	(	bad_phrase_list	)	/	sizeof	(	char	*	)	)

f_local	&&	(	lbuf_len	<	(	int	)	sizeof	(	lbuf	)	)

f_remote	&&	(	rbuf_len	<	(	int	)	sizeof	(	rbuf	)	)

len	==	0	||	(	len	==	-	1	&&	socket_errno	(	)	==	ECONNRESET	)

len	==	-	1

len	==	-	1

len	==	-	1

len	==	-	1

f_local	==	0	&&	f_hold_session

bind	(	sock	,	(	struct	sockaddr	*	)	&	name	,	sizeof	(	name	)	)	<	0

n	==	-	1

relay_method	==	METHOD_SOCKS	&&	socks_resolve	==	RESOLVE_LOCAL	&&	local_resolve	(	dest_host	,	&	dest_addr	)	<	0

(	(	socks_version	==	5	)	&&	(	begin_socks5_relay	(	remote	)	<	0	)	)	||	(	(	socks_version	==	4	)	&&	(	begin_socks4_relay	(	remote	)	<	0	)	)

local_type	==	LOCAL_SOCKET	&&	reason	==	REASON_CLOSED_BY_LOCAL	&&	f_hold_session

argc	!=	3	&&	argc	!=	4

1	<<	(	flags	&	1	)
1	<<	flags	&	1
retval	==	(	char	*	)	-	1

(	p_r	>	0	)	!=	(	gp_r	>	0	)

str	+	1	==	str_end

1	<<	(	flags	&	1	)
1	<<	flags	&	1
(	(	x	&	~	0x5555	)	>>	1	)	+	(	x	&	0x5555	)
(	(	x	&	~	0x5555	)	>>	1	)	+	x	&	0x5555
(	(	x	&	~	0x3333	)	>>	2	)	+	(	x	&	0x3333	)
x	&	~	0x3333	>>	2	+	x	&	0x3333
(	(	x	>>	4	)	+	x	)	&	0x0f0f
(	x	>>	4	+	x	)	&	0x0f0f
(	(	x	>>	8	)	+	x	)	&	0xff
(	x	>>	8	+	x	)	&	0xff
retval	!=	NULL	||	do_allocate	==	0

(	p_r	>	0	)	!=	(	gp_r	>	0	)

yyss	+	yystacksize	-	1	<=	yyssp

yyss	+	yystacksize	-	1	<=	yyssp

yyn	<	0	||	YYLAST	<	yyn

yyn	==	0	||	yyn	==	YYTABLE_NINF

0	<=	yystate	&&	yystate	<=	YYLAST

0	<=	yyn	&&	yyn	<=	YYLAST

p0	==	0	||	p1	==	0

--	argc	>	0

i	+	1	>=	argc

COMPILER	==	-	1

(	time	(	(	time_t	*	)	0	)	-	start	)	<	60

event	.	type	==	PropertyNotify	&&	e	->	window	==	commWindow

(	result	!=	Success	)	||	(	actualFormat	!=	8	)	||	(	actualType	!=	XA_STRING	)

(	p	-	regProp	)	<	numItems

(	*	p	!=	0	)	&&	(	!	isspace	(	*	p	)	)

(	*	p	!=	0	)	&&	(	strcasecmp	(	name	,	p	+	1	)	==	0	)

(	p	-	regProp	)	<	numItems

(	*	p	!=	0	)	&&	(	!	isspace	(	*	p	)	)

(	*	p	!=	0	)	&&	IsSerialName	(	p	+	1	)	&&	(	strncmp	(	name	,	p	+	1	,	strlen	(	name	)	)	==	0	)

(	delete	)	&&	(	returnValue	!=	None	)

(	eventPtr	->	xproperty	.	atom	!=	commProperty	)	||	(	eventPtr	->	xproperty	.	state	!=	PropertyNewValue	)

(	result	!=	Success	)	||	(	actualType	!=	XA_STRING	)	||	(	actualFormat	!=	8	)

(	p	-	propInfo	)	<	numItems

(	p	-	propInfo	)	<	numItems

6	<<	27	<	rand	(	)

!	C	&	!	Z

6	<<	27	<	rand	(	)

!	C	&	!	Z

!	C	&	!	Z

argc	!=	5	&&	argc	!=	7

argc	!=	3	&&	argc	!=	5

argc	!=	2	&&	argc	!=	3

argc	!=	2	&&	argc	!=	3

argc	<	2	||	argc	>	4

argp	&&	!	argn

!	argp	&&	argn

argc	!=	5	&&	argc	!=	7

argc	!=	3	&&	argc	!=	4

argc	!=	4	&&	argc	!=	5

argc	!=	2	&&	argc	!=	3

argc	!=	3	&&	argc	!=	4

argc	!=	2	&&	argc	!=	3

argc	!=	3	&&	argc	!=	4

argc	!=	3	&&	argc	!=	7

argc	!=	2	&&	argc	!=	3

argc	!=	3	&&	argc	!=	5

argc	!=	1	&&	argc	!=	3

argc	!=	2	&&	argc	!=	3

argc	!=	2	&&	argc	!=	3

argc	!=	6	&&	argc	!=	8

argc	!=	1	&&	argc	!=	2

argc	!=	2	&&	argc	!=	3

argc	!=	1	&&	argc	!=	3

argc	!=	5	&&	argc	!=	7

argc	!=	3	&&	argc	!=	5

argc	!=	2	&&	argc	!=	3

argc	!=	2	&&	argc	!=	3

argc	<	2	||	argc	>	4

argp	&&	!	argn

!	argp	&&	argn

argc	!=	5	&&	argc	!=	7

argc	!=	3	&&	argc	!=	4

argc	!=	4	&&	argc	!=	5

argc	!=	2	&&	argc	!=	3

argc	!=	3	&&	argc	!=	4

argc	!=	2	&&	argc	!=	3

argc	!=	3	&&	argc	!=	4

argc	!=	3	&&	argc	!=	7

argc	!=	2	&&	argc	!=	3

argc	!=	3	&&	argc	!=	5

argc	!=	1	&&	argc	!=	3

argc	!=	2	&&	argc	!=	3

argc	!=	2	&&	argc	!=	3

argc	!=	6	&&	argc	!=	8

argc	!=	1	&&	argc	!=	2

argc	!=	2	&&	argc	!=	3

argc	!=	1	&&	argc	!=	3

!	msg	||	!	procname	||	!	str

!	msg	||	!	procname

!	msg	||	!	procname

!	msg	||	!	procname	||	!	str

!	msg	||	!	procname

!	msg	||	!	procname

!	msg	||	!	procname

!	msg	||	!	procname

!	msg	||	!	procname	||	!	str

!	msg	||	!	procname

!	msg	||	!	procname

!	msg	||	!	procname

!	msg	||	!	procname

!	dir	&&	!	fname

dir	&&	strlen	(	dir	)	>	0

fname	&&	strlen	(	fname	)	>	0

fname	&&	strlen	(	fname	)	>	0

(	vbox	->	r2	-	vbox	->	r1	+	1	)	*	(	vbox	->	g2	-	vbox	->	g1	+	1	)	*	(	vbox	->	b2	-	vbox	->	b1	+	1	)
vbox	->	r2	-	vbox	->	r1	+	1	*	(	vbox	->	g2	-	vbox	->	g1	+	1	)	*	(	vbox	->	b2	-	vbox	->	b1	+	1	)
data	<	(	void	*	)	pms	->	baseptr	||	data	>=	(	void	*	)	pms	->	maxptr

c	->	pos	+	n	>=	c	->	max

c	->	max	>	64	*	1024

c	->	pos	+	n	>	c	->	max	-	c	->	writeonly

c	->	pos	+	n	>	c	->	eof

c	->	eof	-	adjust	<	c	->	max

c	->	writeonly	&&	c	->	pos	<	c	->	eof

c	->	writeonly	&&	c	->	pos	<	c	->	eof

(	1	<<	to_do	)	-	1
1	<<	to_do	-	1
TTF_Init	(	)	==	-	1

(	UDISPCTX_TYPE_DIALECT_HANDLING	<<	8	)	+	0
UDISPCTX_TYPE_DIALECT_HANDLING	<<	8	+	0
(	UDISPCTX_TYPE_DIALECT_HANDLING	<<	8	)	+	1
UDISPCTX_TYPE_DIALECT_HANDLING	<<	8	+	1
(	UDISPCTX_TYPE_CAPITALIZATION	<<	8	)	+	0
UDISPCTX_TYPE_CAPITALIZATION	<<	8	+	0
(	UDISPCTX_TYPE_CAPITALIZATION	<<	8	)	+	1
UDISPCTX_TYPE_CAPITALIZATION	<<	8	+	1
(	UDISPCTX_TYPE_CAPITALIZATION	<<	8	)	+	2
UDISPCTX_TYPE_CAPITALIZATION	<<	8	+	2
(	UDISPCTX_TYPE_CAPITALIZATION	<<	8	)	+	3
UDISPCTX_TYPE_CAPITALIZATION	<<	8	+	3
(	UDISPCTX_TYPE_CAPITALIZATION	<<	8	)	+	4
UDISPCTX_TYPE_CAPITALIZATION	<<	8	+	4
(	UDISPCTX_TYPE_DISPLAY_LENGTH	<<	8	)	+	0
UDISPCTX_TYPE_DISPLAY_LENGTH	<<	8	+	0
(	UDISPCTX_TYPE_DISPLAY_LENGTH	<<	8	)	+	1
UDISPCTX_TYPE_DISPLAY_LENGTH	<<	8	+	1
(	UDISPCTX_TYPE_SUBSTITUTE_HANDLING	<<	8	)	+	0
UDISPCTX_TYPE_SUBSTITUTE_HANDLING	<<	8	+	0
(	UDISPCTX_TYPE_SUBSTITUTE_HANDLING	<<	8	)	+	1
UDISPCTX_TYPE_SUBSTITUTE_HANDLING	<<	8	+	1
*	source	>=	0x80	&&	*	source	<	0xC2

!	check_utf8	&&	!	check_null

check_null	&&	*	(	string	+	position	)	==	0
check_null	&&	*	string	+	position	==	0
(	position	+	sequence_length	)	>	length

!	isLegalUTF8	(	string	+	position	,	sequence_length	)

(	millis	%	1000	)	*	1000

PyErr_Occurred	(	)	||	long_value	!=	int_value

length_location	==	-	1

list_type_byte	==	-	1

length_location	==	-	1

type_byte	==	-	1

length_location	==	-	1

(	subtype	==	3	||	subtype	==	4	)	&&	state	->	UUID
subtype	==	3	||	subtype	==	4	&&	state	->	UUID
max	<	pattern_length	+	flags_length

max	<	collection_length	+	12

max	<	8	+	code_length

position	+	name_length	>=	max

cmp_date	(	date	,	min	)	==	-	1

(	!	(	(	(	n	)	+	1900	)	%	400	)	||	(	!	(	(	(	n	)	+	1900	)	%	4	)	&&	(	(	(	n	)	+	1900	)	%	100	)	)	)	!=	0
(	!	(	n	)	+	1900	%	400	||	(	!	(	(	(	n	)	+	1900	)	%	4	)	&&	(	(	(	n	)	+	1900	)	%	100	)	)	)	!=	0
(	!	(	(	(	n	)	+	1900	)	%	400	)	||	(	!	(	(	(	n	)	+	1900	)	%	4	)	&&	(	(	(	n	)	+	1900	)	%	100	)	)	)	!=	0
!	(	(	n	)	+	1900	%	400	)	||	(	!	(	(	(	n	)	+	1900	)	%	4	)	&&	(	(	(	n	)	+	1900	)	%	100	)	)	!=	0
(	!	(	(	(	n	)	+	1900	)	%	400	)	||	(	!	(	(	(	n	)	+	1900	)	%	4	)	&&	(	(	(	n	)	+	1900	)	%	100	)	)	)	!=	0
(	!	(	n	)	+	1900	%	400	||	(	!	(	(	n	)	+	1900	)	%	4	&&	(	(	(	n	)	+	1900	)	%	100	)	)	)	!=	0
(	!	(	(	(	n	)	+	1900	)	%	400	)	||	(	!	(	(	(	n	)	+	1900	)	%	4	)	&&	(	(	(	n	)	+	1900	)	%	100	)	)	)	!=	0
!	(	(	n	)	+	1900	%	400	)	||	(	!	(	n	)	+	1900	%	4	&&	(	(	n	)	+	1900	%	100	)	)	!=	0
month_diff	==	-	11

!	IS_LEAP	(	local_tm	->	tm_year	)	&&	local_tm	->	tm_yday	==	365
!	IS_LEAP	(	local_tm	->	tm_year	)	&&	local_tm	->	tm_yday	==	365
0	<=	date	->	tm_wday	&&	date	->	tm_wday	<=	6

0	<=	date	->	tm_mon	&&	date	->	tm_mon	<=	11

message_start	==	-	1

document_start	==	-	1

length_location	==	-	1

length_location	==	-	1

length_location	==	-	1

length_location	==	-	1

(	argc	<	1	)	&&	!	test_mode

!	quiet	&&	!	do_fork

!	quiet	&&	!	do_fork

interior	&&	(	strlen	(	suffix	)	==	strlen	(	interior	)	)

(	anIMP	>	e	)	&&	(	anIMP	<	e	+	PAGE_SIZE	)

caps	&	(	1	<<	x	)

start	>	real_end	&&	(	start	-	align	)	<	real_end

(	p2	->	properties	==	0	)	||	(	p2	->	properties	->	count	==	0	)

(	p2	->	optional_properties	==	0	)	||	(	p2	->	optional_properties	->	count	==	0	)

x	+	w	/	2	-	nw	/	2

y	+	h	/	2	-	nh	/	2

y	+	fraction	*	(	h	-	slider_h	)
y	+	fraction	*	h	-	slider_h
x	+	fraction	*	(	w	-	slider_w	)
x	+	fraction	*	w	-	slider_w
len	+	1	>	len2

(	(	int	)	(	al_get_time	(	)	/	0.5f	)	)	%	2	==	0

b	==	-	1

len	<	max_width	||	first

y	+	h	/	2	-	height	/	2

x	+	w	/	2

y	+	(	h	-	total_height	)	/	2
y	+	h	-	total_height	/	2
y	+	fraction	*	(	h	-	slider_h	)
y	+	fraction	*	h	-	slider_h
x	+	fraction	*	(	w	-	slider_w	)
x	+	fraction	*	w	-	slider_w
len	+	1	>	len2

(	(	int	)	(	al_get_time	(	)	/	0.5f	)	)	%	2	==	0

i	==	len	-	1

s	!=	-	1

j	+	1	<	ps	->	count

old_time	-	game_time	>	dt

fixed_dt	*	floor	(	(	old_time	-	game_time	)	/	fixed_dt	)
fixed_dt	*	floor	(	old_time	-	game_time	/	fixed_dt	)
old_time	-	game_time	>=	0

al_current_time	(	)	-	start_time	>	fixed_dt

rc	==	-	1

1000000	*	(	t	-	st	->	tv_sec	)
1000000	*	t	-	st	->	tv_sec
st	->	tv_sec	==	0	&&	st	->	tv_usec	==	0

n	==	-	1

n	==	-	1

n	==	-	1

setsid	(	)	==	-	1

fd	==	-	1

close	(	fd	)	==	-	1

n	==	-	1

n	==	-	1

(	version	<	500000	&&	version	>=	440003	)	||	version	>=	500017

version	<	600008	&&	ngx_freebsd_kern_ipc_somaxconn	>	32767

rc	==	-	1

rc	==	-	1

n	==	-	1

rc	==	-	1

rc	==	-	1

n	==	-	1

n	==	-	1

n	==	-	1

rc	==	-	1

rc	==	-	1

free	==	-	1

*	p	++	!=	*	m	++

n	==	-	1

n	==	-	1

conf	->	charset	==	NGX_HTTP_CHARSET_OFF	||	conf	->	source_charset	==	NGX_HTTP_CHARSET_OFF	||	conf	->	charset	==	conf	->	source_charset

conf	->	source_charset	>=	NGX_HTTP_CHARSET_VAR	||	conf	->	charset	>=	NGX_HTTP_CHARSET_VAR

f	->	type	!=	NGX_HTTP_FASTCGI_STDOUT	&&	f	->	type	!=	NGX_HTTP_FASTCGI_STDERR

f	->	type	==	NGX_HTTP_FASTCGI_STDOUT	&&	f	->	length	==	0

f	->	type	==	NGX_HTTP_FASTCGI_STDOUT	&&	f	->	length	==	0

f	->	pos	+	f	->	padding	<	f	->	last

f	->	pos	+	f	->	padding	==	f	->	last

f	->	pos	+	f	->	padding	<	f	->	last

f	->	pos	+	f	->	padding	==	f	->	last

f	->	pos	+	f	->	length	<=	f	->	last

f	->	pos	+	f	->	length	<=	f	->	last

f	->	pos	+	f	->	length	<=	f	->	last

conf	->	upstream	.	busy_buffers_size	>	(	conf	->	upstream	.	bufs	.	num	-	1	)	*	conf	->	upstream	.	bufs	.	size
conf	->	upstream	.	busy_buffers_size	>	conf	->	upstream	.	bufs	.	num	-	1	*	conf	->	upstream	.	bufs	.	size
8192	+	(	1	<<	(	wbits	+	2	)	)	+	(	1	<<	(	memlevel	+	9	)	)
8192	+	1	<<	(	wbits	+	2	)	+	1	<<	(	memlevel	+	9	)
ctx	->	zstream	.	avail_in	||	ctx	->	flush	!=	Z_NO_FLUSH	||	ctx	->	redo

rc	!=	Z_OK	&&	rc	!=	Z_STREAM_END	&&	rc	!=	Z_BUF_ERROR

(	ctx	->	crc32	>>	8	)	&	0xff

(	ctx	->	crc32	>>	16	)	&	0xff

(	ctx	->	crc32	>>	24	)	&	0xff

(	ctx	->	zin	>>	8	)	&	0xff

(	ctx	->	zin	>>	16	)	&	0xff

(	ctx	->	zin	>>	24	)	&	0xff

(	ctx	->	zin	*	1000	/	ctx	->	zout	)	%	10	>	4

conf	->	upstream	.	busy_buffers_size	>	(	conf	->	upstream	.	bufs	.	num	-	1	)	*	conf	->	upstream	.	bufs	.	size
conf	->	upstream	.	busy_buffers_size	>	conf	->	upstream	.	bufs	.	num	-	1	*	conf	->	upstream	.	bufs	.	size
conf	->	upstream	.	busy_buffers_size	>	(	conf	->	upstream	.	bufs	.	num	-	1	)	*	conf	->	upstream	.	bufs	.	size
conf	->	upstream	.	busy_buffers_size	>	conf	->	upstream	.	bufs	.	num	-	1	*	conf	->	upstream	.	bufs	.	size
iphp	->	tries	>	20	||	iphp	->	rrp	.	peers	->	single

++	iphp	->	tries	>=	20

conf	->	before_body	.	len	==	0	&&	conf	->	after_body	.	len	==	0

conf	->	upstream	.	busy_buffers_size	>	(	conf	->	upstream	.	bufs	.	num	-	1	)	*	conf	->	upstream	.	bufs	.	size
conf	->	upstream	.	busy_buffers_size	>	conf	->	upstream	.	bufs	.	num	-	1	*	conf	->	upstream	.	bufs	.	size
ctx	->	zstream	.	avail_in	||	ctx	->	flush	!=	Z_NO_FLUSH	||	ctx	->	redo

rc	!=	Z_OK	&&	rc	!=	Z_STREAM_END	&&	rc	!=	Z_BUF_ERROR

rc	==	Z_STREAM_END	&&	ctx	->	flush	==	Z_FINISH	&&	ctx	->	zstream	.	avail_in	==	0

rc	==	Z_STREAM_END	&&	ctx	->	zstream	.	avail_in	>	0

ctx	->	index	==	-	1

ctx	.	high	.	low	&&	!	ctx	.	binary_include

ctx	.	allow_binary_include	&&	!	ctx	.	outside_entries	&&	ctx	.	entries	>	100000	&&	ctx	.	includes	==	1

ctx	->	angle	!=	90	&&	ctx	->	angle	!=	180	&&	ctx	->	angle	!=	270

transparent	!=	-	1

(	double	)	dx	/	dy	<	(	double	)	ctx	->	max_width	/	ctx	->	max_height

dx	%	2	==	0

dy	%	2	==	0

dy	/	2	+	ay

dx	/	2	-	ax

dy	/	2	-	ay

dx	/	2	+	ax

transparent	!=	-	1	&&	colors

imcf	->	filter	!=	NGX_HTTP_IMAGE_RESIZE	&&	imcf	->	filter	!=	NGX_HTTP_IMAGE_CROP

(	conf	->	no_referer	==	1	||	conf	->	blocked_referer	==	1	)	&&	conf	->	keys	->	keys	.	nelts	==	0	&&	conf	->	keys	->	dns_wc_head	.	nelts	==	0	&&	conf	->	keys	->	dns_wc_tail	.	nelts	==	0
conf	->	no_referer	==	1	||	conf	->	blocked_referer	==	1	&&	conf	->	keys	->	keys	.	nelts	==	0	&&	conf	->	keys	->	dns_wc_head	.	nelts	==	0	&&	conf	->	keys	->	dns_wc_tail	.	nelts	==	0
conf	->	expires_time	==	0	&&	conf	->	expires	!=	NGX_HTTP_EXPIRES_DAILY

hcf	->	expires	==	NGX_HTTP_EXPIRES_DAILY	&&	hcf	->	expires_time	>	24	*	60	*	60

mp4	->	buffer_start	+	mp4	->	buffer_size	>	mp4	->	buffer_end

++	entry	<	end

(	query	->	nan_hi	<<	8	)	+	query	->	nan_lo
query	->	nan_hi	<<	8	+	query	->	nan_lo
rc	==	-	1

free	==	-	1

ngx_ssl_connection_index	==	-	1

ngx_ssl_server_conf_index	==	-	1

ngx_ssl_session_cache_index	==	-	1

ngx_ssl_certificate_index	==	-	1

ngx_ssl_stapling_index	==	-	1

n	!=	1	&&	ERR_peek_error	(	)

rc	==	-	1

rc	==	-	1

rc	==	-	1

ep	==	-	1

ep	==	-	1

close	(	ep	)	==	-	1

signo	==	-	1

signo	==	(	int	)	rtscf	->	signo	||	signo	==	(	int	)	rtscf	->	signo	+	1

ready	==	-	1

rtsig_max	/	(	int	)	rtscf	->	overflow_threshold	<	rtsig_nr

ep	==	-	1

ep	==	-	1

close	(	ep	)	==	-	1

n	==	-	1

dp	==	-	1

dp	==	-	1

close	(	dp	)	==	-	1

ngx_kqueue	==	-	1

ngx_kqueue	==	-	1

close	(	ngx_kqueue	)	==	-	1

ctx	->	addr	.	len	==	0	||	ctx	->	port	.	len	==	0

conf	->	headers	&&	conf	->	header	.	len	==	0

pcapdump_packetlimit	>	0	&&	total_count_packets	+	count_packets	>=	pcapdump_packetlimit

--	pcapdump_sample_value	==	0

rng_randint	(	0	,	pcapdump_sample	-	1	)	==	0

tv	.	tv_sec	-	(	tv	.	tv_sec	%	pcapdump_interval	)

time_lastdump	>	0	&&	pcapdump_interval	>	0

time_lastdump	>	0	&&	pcapdump_interval	>	0

(	(	double	)	(	max	-	min	+	1	)	)	*	(	rand	(	)	/	(	RAND_MAX	+	(	(	double	)	min	)	)	)
(	(	double	)	(	max	-	min	+	1	)	)	*	(	rand	(	)	/	RAND_MAX	+	(	(	double	)	min	)	)
(	(	char	)	scan_fromhex	(	*	tmp	)	)	<<	4	|	(	(	char	)	scan_fromhex	(	*	(	tmp	+	1	)	)	)
(	(	char	)	scan_fromhex	(	*	tmp	)	)	<<	4	|	(	(	char	)	scan_fromhex	(	*	tmp	+	1	)	)
result	*	10	+	c

(	l	<<	4	)	+	c
l	<<	4	+	c
k	==	12	&&	ip6_isv4mapped	(	ip	)

pos0	==	k	&&	len0

suffixlen	+	prefixlen	<=	12

prefixlen	+	suffixlen	==	16

s	==	-	1	&&	errno	==	EINVAL

s	==	-	1

fd	==	-	1

r	==	-	1

s	==	-	1

r	==	-	1

(	(	int	)	(	unsigned	int	)	(	unsigned	char	)	*	s	)	-	(	(	int	)	(	unsigned	int	)	(	unsigned	char	)	*	t	)

(	sum	&	0xffff	)	+	(	sum	>>	16	)
sum	&	0xffff	+	sum	>>	16
rc	==	-	1

rc	==	-	1

rc	==	-	1

rc	==	-	1

timer	->	when	==	-	1

zclock_time	(	)	>=	timer	->	when	&&	timer	->	when	!=	-	1

rc	==	-	1

timer	->	times	&&	--	timer	->	times	==	0

rc	==	-	1

rc	==	-	1

self	->	transmit	&&	zclock_time	(	)	>=	self	->	ping_at

rc	==	-	1

rc	==	-	1

(	!	x	->	red	)	&&	(	root	!=	x	)

(	!	w	->	right	->	red	)	&&	(	!	w	->	left	->	red	)

(	!	w	->	right	->	red	)	&&	(	!	w	->	left	->	red	)

z	->	left	==	nil	||	z	->	right	==	nil

rc	==	-	1

rc	==	-	1

rc	==	-	1

rc	==	-	1

level	==	-	1

(	readptr	-	*	start	)	/	4
readptr	-	*	start	/	4
level	*	4	!=	readptr	-	*	start

rc	==	-	1

more	==	0	||	more	==	1

e1	->	name	&&	e2	->	name	&&	strcmp	(	e1	->	name	,	e2	->	name	)	==	0

(	n	+	alignment	-	1	)	/	alignment
n	+	alignment	-	1	/	alignment
(	(	code	<<	1	)	+	*	s	)	^	0x57954317
(	code	<<	1	+	*	s	)	^	0x57954317
p	-	2	>=	parsed

p	-	2	>=	parsed

p	-	1	>	doctag

(	nargs	+	2	)	*	sizeof	*	argv
nargs	+	2	*	sizeof	*	argv
outputfd	<	0	||	dup2	(	outputfd	,	1	)	<	0	||	errorfd	<	0	||	dup2	(	errorfd	,	2	)	<	0

pid	==	-	1

opt	+	--	i

(	unsigned	char	)	c	==	c	&&	isprint	(	c	)
unsigned	char	)	c	==	c	&&	isprint	(	c	(	unsigned	char	)	c	==	c	&&	isprint	(	c	)
!	l	||	!	l	->	addfilter	(	entry	)

a	->	nelems	+	by	>	a	->	nalloc

warningp	&&	!	warning_message

str	!=	strend	&&	*	str	!=	ch

str	!=	strend	&&	*	str	==	ch

count	--	>	0

b	!=	-	1

b	!=	-	1

b1	!=	-	1	&&	b2	!=	-	1

type_const	(	t	)	||	(	type_tagged	(	t	)	&&	type_tag	(	t	)	->	fields_const	)

t	->	kind	==	tk_primitive	&&	t	->	u	.	primitive	<	tp_first_floating

t	->	kind	==	tk_primitive	&&	t	->	u	.	primitive	<	tp_unknown_int	&&	cval_intcompare	(	t	->	size	,	int_type	->	size	)	<	0

t	->	kind	==	tk_primitive	&&	t	->	u	.	primitive	>=	tp_first_floating	&&	t	->	u	.	primitive	<	tp_unknown_number

t	->	kind	==	tk_primitive	&&	t	->	u	.	primitive	==	tp_char

t	->	kind	==	tk_primitive	&&	t	->	u	.	primitive	==	tp_signed_char

t	->	kind	==	tk_primitive	&&	t	->	u	.	primitive	==	tp_unsigned_char

t	->	kind	==	tk_primitive	&&	t	->	u	.	primitive	==	tp_short

t	->	kind	==	tk_primitive	&&	t	->	u	.	primitive	==	tp_unsigned_short

t	->	kind	==	tk_primitive	&&	t	->	u	.	primitive	==	tp_int

t	->	kind	==	tk_primitive	&&	t	->	u	.	primitive	==	tp_unsigned_int

t	->	kind	==	tk_primitive	&&	t	->	u	.	primitive	==	tp_long

t	->	kind	==	tk_primitive	&&	t	->	u	.	primitive	==	tp_unsigned_long

t	->	kind	==	tk_primitive	&&	t	->	u	.	primitive	==	tp_long_long

t	->	kind	==	tk_primitive	&&	t	->	u	.	primitive	==	tp_unsigned_long_long

t	->	kind	==	tk_primitive	&&	t	->	u	.	primitive	==	tp_unknown_int

t	->	kind	==	tk_primitive	&&	t	->	u	.	primitive	==	tp_float

t	->	kind	==	tk_primitive	&&	t	->	u	.	primitive	==	tp_double

t	->	kind	==	tk_primitive	&&	t	->	u	.	primitive	==	tp_long_double

t	->	kind	==	tk_primitive	&&	t	->	u	.	primitive	==	tp_unknown_number

t	->	kind	==	tk_primitive	&&	(	t	->	u	.	primitive	==	tp_char	||	t	->	u	.	primitive	==	tp_unsigned_char	||	t	->	u	.	primitive	==	tp_signed_char	)
t	->	kind	==	tk_primitive	&&	t	->	u	.	primitive	==	tp_char	||	t	->	u	.	primitive	==	tp_unsigned_char	||	t	->	u	.	primitive	==	tp_signed_char
t	->	kind	==	tk_function	&&	t	->	u	.	fn	.	fkind	==	tkf_c

!	t1	->	u	.	fn	.	oldstyle	&&	!	t2	->	u	.	fn	.	oldstyle

t1	->	qualifiers	==	t2	->	qualifiers	&&	type_equal_unqualified	(	t1	,	t2	)

args1	==	0	&&	args2	==	0

args1	==	0	||	args2	==	0

!	(	t1	->	u	.	fn	.	fkind	==	t2	->	u	.	fn	.	fkind	&&	type_compatible	(	t1	->	u	.	fn	.	returns	,	t2	->	u	.	fn	.	returns	)	)
!	t1	->	u	.	fn	.	fkind	==	t2	->	u	.	fn	.	fkind	&&	type_compatible	(	t1	->	u	.	fn	.	returns	,	t2	->	u	.	fn	.	returns	)
t1	==	error_type	||	t2	==	error_type

pk1	<	tp_first_floating	&&	pk2	<	tp_first_floating

pk1	==	tp_unknown_int	||	pk2	==	tp_unknown_int

!	(	(	pk1	<	tp_char	&&	pk2	>=	tp_char	)	||	(	pk1	>=	tp_char	&&	pk2	<	tp_char	)	)
!	(	pk1	<	tp_char	&&	pk2	>=	tp_char	)	||	(	pk1	>=	tp_char	&&	pk2	<	tp_char	)
(	t1	->	kind	==	tk_primitive	||	t1	->	kind	==	tk_complex	)	&&	(	t2	->	kind	==	tk_primitive	||	t2	->	kind	==	tk_complex	)
t1	->	kind	==	tk_primitive	||	t1	->	kind	==	tk_complex	&&	t2	->	kind	==	tk_primitive	||	t2	->	kind	==	tk_complex
type_network_base_type	(	t1	)	&&	type_network_base_type	(	t2	)	&&	t1	->	basedecl	==	t2	->	basedecl

t	->	kind	==	tk_function	&&	t	->	u	.	fn	.	fkind	==	tkf_command

t	->	kind	==	tk_function	&&	t	->	u	.	fn	.	fkind	==	tkf_event

t	->	kind	==	tk_function	&&	t	->	u	.	fn	.	fkind	==	tkf_task

t	->	kind	==	tk_function	&&	t	->	u	.	fn	.	fkind	==	tkf_generic

t	->	kind	==	tk_function	&&	t	->	u	.	fn	.	fkind	!=	tkf_generic

(	type_hash	(	t	->	u	.	pointsto	)	<<	1	)	^	0x51353157

(	type_hash	(	t	->	u	.	array	.	arrayof	)	<<	1	)	^	0x40142453

(	child	->	kind	==	tk_primitive	||	child	->	kind	==	tk_complex	)	&&	parent	->	u	.	primitive	==	child	->	u	.	primitive
child	->	kind	==	tk_primitive	||	child	->	kind	==	tk_complex	&&	parent	->	u	.	primitive	==	child	->	u	.	primitive
hash	>>	(	8	*	sizeof	(	uint32	)	-	h	->	log2size	)

++	i	>=	h	->	size

h	->	used	>	3	*	h	->	size	/	4

++	i	>=	h	->	size

ep1	->	ep	.	function	==	ep2	->	ep	.	function	&&	ep1	->	ep	.	interface	==	ep2	->	ep	.	interface	&&	ep1	->	ep	.	args_node	==	ep2	->	ep	.	args_node

!	(	current	.	function_decl	||	current	.	env	->	parm_level	)
!	current	.	function_decl	||	current	.	env	->	parm_level
argct	>	0	&&	(	argct	<	2	||	argct	>	3	)
argct	>	0	&&	argct	<	2	||	argct	>	3
!	current	.	function_decl	&&	current	.	env	->	parm_level

stat	(	cpp_save_dir	,	&	dbuf	)	<	0	||	!	S_ISDIR	(	dbuf	.	st_mode	)
(	cpp_save_dir	,	&	dbuf	)	<	0	||	!	S_ISDIR	(	dbuf	.	st_mode	stat	(	cpp_save_dir	,	&	dbuf	)	<	0	||	!	S_ISDIR	(	dbuf	.	st_mode	)
!	strncmp	(	occ	+	1	,	sep	,	lsep	)

ret	!=	4	&&	ret	!=	5

b	<	pos	&&	e	>	pos

rhash	^	(	phash	<<	1	)	^	ihash

ret	==	-	1

ret	==	-	1

ret	!=	-	1

ret	==	-	1

ret	==	-	1

mkdir	(	docdir	,	0755	)	!=	0	&&	errno	!=	EEXIST	&&	errno	!=	ENOMEDIUM

mkdir	(	docdir	,	0755	)	!=	0	&&	errno	!=	EEXIST	&&	errno	!=	ENOMEDIUM

stat	(	fullname	,	&	sbuf	)	==	0	&&	S_ISREG	(	sbuf	.	st_mode	)
(	fullname	,	&	sbuf	)	==	0	&&	S_ISREG	(	sbuf	.	st_mode	stat	(	fullname	,	&	sbuf	)	==	0	&&	S_ISREG	(	sbuf	.	st_mode	)
ncalls	==	0	&&	!	dd_is_empty	(	c	->	generic_calls	)

++	j	<	ncalls

++	j	<	ncalls

i	<	sizeof	fns	/	sizeof	*	fns

!	strncmp	(	arg	+	2	,	name	,	l	)

str	!=	strend	&&	*	str	!=	ch

str	!=	strend	&&	*	str	==	ch

count	--	>	0

b	!=	-	1

b	!=	-	1

b1	!=	-	1	&&	b2	!=	-	1

p	>	address_scan	||	address_scan	==	&	pages_byaddress

p	<	address_scan	||	address_scan	==	&	pages_byaddress

scan	->	pagecount	>=	n	&&	scan	->	pagecount	<	bestn

i	<	pnb	+	p	->	pagecount

--	n	==	0

mem2	+	s2	>=	blk	->	end

mem2	+	s2	<	a	->	page	.	end

(	char	*	)	*	p1	+	s1

p	>	address_scan	||	address_scan	==	&	pages_byaddress

p	<	address_scan	||	address_scan	==	&	pages_byaddress

scan	->	pagecount	>=	n	&&	scan	->	pagecount	<	bestn

i	<	pnb	+	p	->	pagecount

--	n	==	0

scan	->	pagecount	<=	n	||	scan	->	pagecount	<	K

best	->	pagecount	-	n	<	K

mem2	+	s2	>=	blk	->	end

mem2	+	s2	<	a	->	page	.	end

(	char	*	)	*	p1	+	s1

rstart	>=	16	*	64

size	<	BLOCK_SIZE	/	4

syntax	&	RE_NO_BK_PARENS	||	prev_prev_backslash
&	RE_NO_BK_PARENS	||	syntax	&	RE_NO_BK_PARENS	||	prev_prev_backslash
syntax	&	RE_NO_BK_VBAR	||	prev_prev_backslash
&	RE_NO_BK_VBAR	||	syntax	&	RE_NO_BK_VBAR	||	prev_prev_backslash
p	+	1	<	pend

p	==	pend	||	*	p	==	succeed

*	p	++	*	BYTEWIDTH	-	1

1	<<	(	j	%	BYTEWIDTH	)

j	<	(	1	<<	BYTEWIDTH	)

*	p	++	*	BYTEWIDTH	-	1

1	<<	(	j	%	BYTEWIDTH	)

j	<	(	1	<<	BYTEWIDTH	)

j	<	(	1	<<	BYTEWIDTH	)

j	<	(	1	<<	BYTEWIDTH	)

!	(	bufp	->	syntax	&	RE_DOT_NEWLINE	)
!	bufp	->	syntax	&	RE_DOT_NEWLINE
(	re_opcode_t	)	*	p	!=	on_failure_jump	&&	(	re_opcode_t	)	*	p	!=	succeed_n

p	+	j	<	pend

startpos	<	0	||	startpos	>	total_size

fastmap	&&	!	bufp	->	fastmap_accurate

re_compile_fastmap	(	bufp	)	==	-	2

fastmap	&&	startpos	<	total_size	&&	!	bufp	->	can_be_null

startpos	<	size1	&&	startpos	+	range	>=	size1

size1	==	0	||	startpos	>=	size1

range	>=	0	&&	startpos	==	total_size	&&	fastmap	&&	!	bufp	->	can_be_null

val	==	-	2

!	(	regstart	&&	regend	&&	old_regstart	&&	old_regend	&&	reg_info	&&	best_regstart	&&	best_regend	&&	reg_dummy	&&	reg_info_dummy	)
!	regstart	&&	regend	&&	old_regstart	&&	old_regend	&&	reg_info	&&	best_regstart	&&	best_regend	&&	reg_dummy	&&	reg_info_dummy
pos	<	0	||	pos	>	size1	+	size2

size2	==	0	&&	string1	!=	NULL

size1	>	0	&&	pos	<=	size1

!	best_regs_set	||	best_match_p

best_regs_set	&&	!	best_match_p

d	>=	string1	&&	d	<=	end1

regs	&&	!	bufp	->	no_sub

regs	->	start	==	NULL	||	regs	->	end	==	NULL

regs	->	start	==	NULL	||	regs	->	end	==	NULL

*	d	++	!=	(	char	)	*	p	++

!	(	bufp	->	syntax	&	RE_DOT_NEWLINE	)
bufp	->	syntax	&	!	bufp	->	syntax	&	RE_DOT_NEWLINE
(	re_opcode_t	)	*	(	p	-	1	)	==	charset_not
(	re_opcode_t	)	*	p	-	1	==	charset_not
c	<	(	unsigned	)	(	*	p	*	BYTEWIDTH	)

1	+	c	/	BYTEWIDTH

1	<<	(	c	%	BYTEWIDTH	)

just_past_start_mem	==	p	-	1

(	p	+	2	)	<	pend

mcnt	<	0	&&	(	re_opcode_t	)	*	p1	==	on_failure_jump

r	<	(	unsigned	)	*	p	+	(	unsigned	)	*	(	p	+	1	)
r	<	(	unsigned	)	*	p	+	(	unsigned	)	*	p	+	1
mcnt	>	dend2	-	d2

p1	<	pend	&&	(	re_opcode_t	)	*	p1	==	no_op

p1	<	pend	&&	(	re_opcode_t	)	*	p1	==	start_memory

p2	+	2	<	pend	&&	(	(	re_opcode_t	)	*	p2	==	stop_memory	||	(	re_opcode_t	)	*	p2	==	start_memory	)
p2	+	2	<	pend	&&	(	re_opcode_t	)	*	p2	==	stop_memory	||	(	re_opcode_t	)	*	p2	==	start_memory
p2	+	6	<	pend	&&	(	re_opcode_t	)	*	p2	==	dummy_failure_jump

(	re_opcode_t	)	*	p2	==	exactn	||	(	bufp	->	newline_anchor	&&	(	re_opcode_t	)	*	p2	==	endline	)

5	+	c	/	BYTEWIDTH

1	<<	(	c	%	BYTEWIDTH	)

(	re_opcode_t	)	*	p2	==	charset

(	d	)	==	string2	-	1

(	d	)	==	string2	-	1

(	d	)	==	string2	-	1

(	d	)	==	string2	-	1

(	d	)	==	string2	-	1

!	WORDCHAR_P	(	d	-	1	)
!	WORDCHAR_P	(	d	-	1	)
!	AT_STRINGS_BEG	(	d	)	&&	WORDCHAR_P	(	d	-	1	)	&&	(	!	WORDCHAR_P	(	d	)	||	AT_STRINGS_END	(	d	)	)
!	AT_STRINGS_BEG	d	&&	WORDCHAR_P	(	d	-	1	)	&&	!	WORDCHAR_P	(	d	)	||	AT_STRINGS_END	(	d	)
(	d	)	==	string2	-	1

(	d	)	==	string2	-	1

(	is_a_jump_n	&&	(	re_opcode_t	)	*	p1	==	succeed_n	)	||	(	!	is_a_jump_n	&&	(	re_opcode_t	)	*	p1	==	on_failure_jump	)

d	>=	string1	&&	d	<=	end1

!	alt_match_null_string_p	(	p1	,	p1	+	mcnt	-	3	,	reg_info	)

(	re_opcode_t	)	*	p1	!=	on_failure_jump

!	alt_match_null_string_p	(	p1	,	p1	+	mcnt	,	reg_info	)

!	!	(	cflags	&	REG_NOSUB	)
!	!	cflags	&	REG_NOSUB
ret	==	REG_NOERROR	&&	preg	->	fastmap

re_compile_fastmap	(	preg	)	==	-	2

base	==	0	||	base	==	16

any	<	0	||	acc	>	cutoff	||	(	acc	==	cutoff	&&	c	>	cutlim	)

(	STACK_DIR	>	0	&&	hp	->	h	.	deep	>	depth	)	||	(	STACK_DIR	<	0	&&	hp	->	h	.	deep	<	depth	)

base	==	0	||	base	==	16

any	<	0	||	acc	>	cutoff	||	(	acc	==	cutoff	&&	c	>	cutlim	)

1	+	8	*	sizeof	(	long	)

ret	*	10	+	peek

len	>=	(	int	)	ANONYMOUS_NAMESPACE_PREFIX_LEN	+	2	&&	memcmp	(	name	,	ANONYMOUS_NAMESPACE_PREFIX	,	ANONYMOUS_NAMESPACE_PREFIX_LEN	)	==	0

low	+	(	high	-	low	)	/	2
low	+	high	-	low	/	2
id	*	36	+	c

id	*	36	+	c

!	verbose	&&	prefix

dpi	->	len	==	sizeof	(	dpi	->	buf	)	-	1

end	-	p	>	3

c	*	16	+	dig

(	sizeof	(	void	*	)	/	sizeof	(	digit_t	)	)	%	2	!=	0

unlink	(	zto	)	<	0	||	link	(	zfrom	,	zto	)	<	0

dir	!=	0	&&	access	(	dir	,	R_OK	|	W_OK	|	X_OK	)	==	0

fd	==	-	1

(	signo	<	0	)	||	(	signo	>=	sys_nsig	)

(	signo	<	0	)	||	(	signo	>=	num_signal_names	)

(	signo	<=	0	)	||	(	signo	>=	sys_nsig	)

(	argc	+	1	)	*	sizeof	(	char	*	)
argc	+	1	*	sizeof	(	char	*	)
(	maxargc	==	0	)	||	(	argc	>=	(	maxargc	-	1	)	)

ISSPACE	(	*	input	)	&&	!	squote	&&	!	dquote	&&	!	bsquote

++	i	<	*	argcp

fseek	(	f	,	0L	,	SEEK_END	)	==	-	1

pos	==	-	1

fseek	(	f	,	0L	,	SEEK_SET	)	==	-	1

pos	*	sizeof	(	char	)	+	1

status	==	-	1

pid	==	(	pid_t	)	-	1

cpid	<	0	||	cpid	==	pid

(	exponent	==	0	)	!=	(	int_bit	==	0	)

(	unsigned	long	)	top_exp	==	hfmt	->	exp_nan	||	top_exp	==	0

!	mant_bits_set	(	hfmt	,	ufrom	+	8	)

bot_exp	<	top_exp	-	53

bot_exp	>	top_exp	-	53	&&	bot_exp	!=	0

first_bit	==	-	1

first_bit	==	-	1

-	first_bit	<	top_exp	-	53

-	first_bit	>	top_exp	-	53

second_bit	!=	-	1

!	get_field	(	ufrom	,	hfmt	->	byteorder	,	hfmt	->	totalsize	,	hfmt	->	man_start	+	hfmt	->	man_len	-	1	,	1	)

!	mant_bits_set	(	hfmt	,	ufrom	+	8	)

(	total_len	-	start	-	1	)	/	FLOATFORMAT_CHAR_BIT
total_len	-	start	-	1	/	FLOATFORMAT_CHAR_BIT
*	(	data	+	cur_byte	)	>>	lo_bit
*	data	+	cur_byte	>>	lo_bit
(	1	<<	bits	)	-	1
1	<<	bits	-	1
(	shifted	&	mask	)	<<	cur_bitshift
shifted	&	mask	<<	cur_bitshift
exponent	==	0	||	(	unsigned	long	)	exponent	==	fmt	->	exp_nan

special_exponent	&&	exponent	==	0	&&	mant	!=	0

(	total_len	-	start	-	1	)	/	FLOATFORMAT_CHAR_BIT
total_len	-	start	-	1	/	FLOATFORMAT_CHAR_BIT
(	(	1	<<	bits	)	-	1	)	<<	lo_bit
(	1	<<	bits	-	1	)	<<	lo_bit
(	*	byte_ptr	&	~	mask	)	|	(	(	stuff_to_put	<<	lo_bit	)	&	mask	)

dfrom	+	dfrom	==	dfrom

exponent	+	fmt	->	exp_bias	-	1	>	0

!	(	valu	&	1	)
!	valu	&	1
status	==	-	1

--	n	>=	0

(	count	%	10	)	!=	0

i	<	len0	-	2

(	work	->	constructor	&	1	)	||	(	work	->	destructor	&	1	)

!	(	work	->	constructor	&	1	)
!	work	->	constructor	&	1
success	&&	!	func_done

value	!=	-	1

(	value	>	9	||	multidigit_without_leading_underscore	)	&&	!	leave_following_underscore
value	>	9	||	multidigit_without_leading_underscore	&&	!	leave_following_underscore
idx	==	-	1	||	(	work	->	tmpl_argvec	&&	idx	>=	work	->	ntmpl_args	)	||	consume_count_with_underscores	(	mangled	)	==	-	1

tk	==	tk_pointer	||	tk	==	tk_reference

symbol_len	==	-	1

idx	==	-	1	||	(	work	->	tmpl_argvec	&&	idx	>=	work	->	ntmpl_args	)	||	consume_count_with_underscores	(	mangled	)	==	-	1

len	==	-	1

*	args	+	len	==	mangled	+	n

len	==	-	1

*	args	+	len	==	mangled	+	n

len	==	-	1

*	args	+	len	==	mangled	+	n

start_spec_args	&&	(	start_spec_args	-	*	mangled	<	n	)

work	->	temp_start	==	-	1

work	->	temp_start	==	-	1

work	->	temp_start	==	-	1

n	==	-	1

(	work	->	constructor	&	1	)	||	(	work	->	destructor	&	1	)

work	->	temp_start	&&	(	work	->	temp_start	!=	-	1	)

!	success	&&	(	work	->	constructor	==	2	||	work	->	destructor	==	2	)
!	success	&&	work	->	constructor	==	2	||	work	->	destructor	==	2
n	<	0	||	n	>	(	long	)	strlen	(	*	mangled	)

success	&&	(	p	==	*	mangled	)

delta	==	-	1

n	==	-	1

n	==	-	1	||	n	>	(	long	)	strlen	(	*	mangled	)

isfuncname	&&	(	(	work	->	constructor	&	1	)	||	(	work	->	destructor	&	1	)	)
isfuncname	&&	(	work	->	constructor	&	1	)	||	(	work	->	destructor	&	1	)
idx	==	-	1	||	idx	>=	work	->	numk

qualifiers	==	-	1

qualifiers	--	>	0

idx	==	-	1	||	idx	>=	work	->	numk

namelength	==	-	1

success	&&	!	done

!	get_count	(	mangled	,	&	n	)	||	n	>=	work	->	ntypes

n	==	-	1	||	(	int	)	strlen	(	*	mangled	)	<	n

member	&&	!	demangle_nested_args	(	work	,	mangled	,	&	decl	)

!	get_count	(	mangled	,	&	n	)	||	n	>=	work	->	numb

idx	==	-	1	||	(	work	->	tmpl_argvec	&&	idx	>=	work	->	ntmpl_args	)	||	consume_count_with_underscores	(	mangled	)	==	-	1

i	<	(	long	)	sizeof	(	buf	)	-	1	&&	*	*	mangled

(	t	<	0	)	||	(	t	>=	work	->	ntypes	)

work	->	nrepeats	>	0	||	--	r	>=	0

declp	->	p	-	declp	->	b	>=	10

s	->	e	-	s	->	p	<	n

low	+	(	high	-	low	)	/	2
low	+	high	-	low	/	2
(	fstat	(	fd1	,	&	sbuf1	)	==	0	)	&&	(	fstat	(	fd2	,	&	sbuf2	)	==	0	)	&&	(	sbuf1	.	st_dev	==	sbuf2	.	st_dev	)	&&	(	sbuf1	.	st_ino	==	sbuf2	.	st_ino	)

cmp1	<	0	&&	cmp2	<	0

cmp1	>	0	&&	cmp2	>	0

cmp1	<	0	&&	cmp2	>	0

cmp1	>	0	&&	cmp2	<	0

pid	==	0	&&	idx	==	1

pid	+	1	==	idx

obj	->	stderr_pipe	!=	-	1

(	count	-	obj	->	count	)	*	sizeof	(	int	)
count	-	obj	->	count	*	sizeof	(	int	)
i	<	10	*	rand_deg

(	MAX_TYPES	*	(	rptr	-	state	)	)	+	rand_type
(	MAX_TYPES	*	rptr	-	state	)	+	rand_type
(	MAX_TYPES	*	(	rptr	-	state	)	)	+	rand_type
(	MAX_TYPES	*	rptr	-	state	)	+	rand_type
(	MAX_TYPES	*	(	rptr	-	state	)	)	+	rand_type
(	MAX_TYPES	*	rptr	-	state	)	+	rand_type
(	rear	+	rand_sep	)	%	rand_deg
rear	+	rand_sep	%	rand_deg
(	*	fptr	>>	1	)	&	LONG_MAX

(	x	<	0	&&	y	>	0	)	||	(	x	>	0	&&	y	<	0	)

sizeof	(	char	*	)	*	(	num_dirs	+	2	)
sizeof	(	char	*	)	*	num_dirs	+	2
p	-	1	-	q	>	0

*	endp	==	PATH_SEPARATOR	||	*	endp	==	0

prog_num	<=	0	||	i	==	bin_num

sizeof	(	DIR_UP	)	*	(	bin_num	-	common	)
sizeof	(	DIR_UP	)	*	bin_num	-	common
(	errnoval	<	0	)	||	(	errnoval	>=	sys_nerr	)

(	errnoval	<	0	)	||	(	errnoval	>=	num_error_names	)

!	ISDIGIT	(	*	p2	++	)

(	1	<<	BYTEWIDTH	)	/	BYTEWIDTH
1	<<	BYTEWIDTH	/	BYTEWIDTH
p	!=	p1	+	1

p	-	2	>=	pattern

p	-	3	>=	pattern

ch	<	1	<<	BYTEWIDTH

(	is_alnum	&&	ISALNUM	(	ch	)	)	||	(	is_alpha	&&	ISALPHA	(	ch	)	)	||	(	is_blank	&&	ISBLANK	(	ch	)	)	||	(	is_cntrl	&&	ISCNTRL	(	ch	)	)
&&	ISALNUM	(	ch	)	)	||	(	is_alpha	&&	ISALPHA	(	ch	)	)	||	(	is_blank	&&	ISBLANK	(	ch	)	)	||	(	is_cntrl	&&	ISCNTRL	(	ch	)	(	is_alnum	&&	ISALNUM	(	ch	)	)	||	(	is_alpha	&&	ISALPHA	(	ch	)	)	||	(	is_blank	&&	ISBLANK	(	ch	)	)	||	(	is_cntrl	&&	ISCNTRL	(	ch	)	is_alnum	&&	ISALNUM	(	ch	)	)	||	(	is_alpha	&&	ISALPHA	(	ch	)	)	||	(	is_blank	&&	ISBLANK	(	ch	)	)	||	(	is_cntrl	&&	ISCNTRL	(	ch	)	(	is_alnum	&&	ISALNUM	(	ch	)	)	||	(	is_alpha	&&	ISALPHA	(	ch	)	)	||	(	is_blank	&&	ISBLANK	(	ch	)	)	||	(	is_cntrl	&&	ISCNTRL	(	ch	)	)
(	is_digit	&&	ISDIGIT	(	ch	)	)	||	(	is_graph	&&	ISGRAPH	(	ch	)	)	||	(	is_lower	&&	ISLOWER	(	ch	)	)	||	(	is_print	&&	ISPRINT	(	ch	)	)
is_digit	&&	ISDIGIT	(	ch	)	)	||	(	is_graph	&&	ISGRAPH	(	ch	)	)	||	(	is_lower	&&	ISLOWER	(	ch	)	)	||	(	is_print	&&	ISPRINT	(	ch	)	(	is_digit	&&	ISDIGIT	(	ch	)	)	||	(	is_graph	&&	ISGRAPH	(	ch	)	)	||	(	is_lower	&&	ISLOWER	(	ch	)	)	||	(	is_print	&&	ISPRINT	(	ch	)	)
(	is_punct	&&	ISPUNCT	(	ch	)	)	||	(	is_space	&&	ISSPACE	(	ch	)	)	||	(	is_upper	&&	ISUPPER	(	ch	)	)	||	(	is_xdigit	&&	ISXDIGIT	(	ch	)	)
(	ch	)	)	||	(	is_space	&&	ISSPACE	(	ch	)	)	||	(	is_upper	&&	ISUPPER	(	ch	)	)	||	(	is_xdigit	&&	ISXDIGIT	(	ch	)	(	is_punct	&&	ISPUNCT	(	ch	)	)	||	(	is_space	&&	ISSPACE	(	ch	)	)	||	(	is_upper	&&	ISUPPER	(	ch	)	)	||	(	is_xdigit	&&	ISXDIGIT	(	ch	)	is_punct	&&	ISPUNCT	(	ch	)	)	||	(	is_space	&&	ISSPACE	(	ch	)	)	||	(	is_upper	&&	ISUPPER	(	ch	)	)	||	(	is_xdigit	&&	ISXDIGIT	(	ch	)	(	is_punct	&&	ISPUNCT	(	ch	)	)	||	(	is_space	&&	ISSPACE	(	ch	)	)	||	(	is_upper	&&	ISUPPER	(	ch	)	)	||	(	is_xdigit	&&	ISXDIGIT	(	ch	)	&&	ISPUNCT	(	ch	)	)	||	(	is_space	&&	ISSPACE	(	ch	)	)	||	(	is_upper	&&	ISUPPER	(	ch	)	)	||	(	is_xdigit	&&	ISXDIGIT	(	ch	)	(	is_punct	&&	ISPUNCT	(	ch	)	)	||	(	is_space	&&	ISSPACE	(	ch	)	)	||	(	is_upper	&&	ISUPPER	(	ch	)	)	||	(	is_xdigit	&&	ISXDIGIT	(	ch	)	is_punct	&&	ISPUNCT	(	ch	)	)	||	(	is_space	&&	ISSPACE	(	ch	)	)	||	(	is_upper	&&	ISUPPER	(	ch	)	)	||	(	is_xdigit	&&	ISXDIGIT	(	ch	)	(	is_punct	&&	ISPUNCT	(	ch	)	)	||	(	is_space	&&	ISSPACE	(	ch	)	)	||	(	is_upper	&&	ISUPPER	(	ch	)	)	||	(	is_xdigit	&&	ISXDIGIT	(	ch	)	ISPUNCT	(	ch	)	)	||	(	is_space	&&	ISSPACE	(	ch	)	)	||	(	is_upper	&&	ISUPPER	(	ch	)	)	||	(	is_xdigit	&&	ISXDIGIT	(	ch	)	(	is_punct	&&	ISPUNCT	(	ch	)	)	||	(	is_space	&&	ISSPACE	(	ch	)	)	||	(	is_upper	&&	ISUPPER	(	ch	)	)	||	(	is_xdigit	&&	ISXDIGIT	(	ch	)	is_punct	&&	ISPUNCT	(	ch	)	)	||	(	is_space	&&	ISSPACE	(	ch	)	)	||	(	is_upper	&&	ISUPPER	(	ch	)	)	||	(	is_xdigit	&&	ISXDIGIT	(	ch	)	(	is_punct	&&	ISPUNCT	(	ch	)	)	||	(	is_space	&&	ISSPACE	(	ch	)	)	||	(	is_upper	&&	ISUPPER	(	ch	)	)	||	(	is_xdigit	&&	ISXDIGIT	(	ch	)	&&	ISPUNCT	(	ch	)	)	||	(	is_space	&&	ISSPACE	(	ch	)	)	||	(	is_upper	&&	ISUPPER	(	ch	)	)	||	(	is_xdigit	&&	ISXDIGIT	(	ch	)	(	is_punct	&&	ISPUNCT	(	ch	)	)	||	(	is_space	&&	ISSPACE	(	ch	)	)	||	(	is_upper	&&	ISUPPER	(	ch	)	)	||	(	is_xdigit	&&	ISXDIGIT	(	ch	)	is_punct	&&	ISPUNCT	(	ch	)	)	||	(	is_space	&&	ISSPACE	(	ch	)	)	||	(	is_upper	&&	ISUPPER	(	ch	)	)	||	(	is_xdigit	&&	ISXDIGIT	(	ch	)	(	is_punct	&&	ISPUNCT	(	ch	)	)	||	(	is_space	&&	ISSPACE	(	ch	)	)	||	(	is_upper	&&	ISUPPER	(	ch	)	)	||	(	is_xdigit	&&	ISXDIGIT	(	ch	)	)
!	(	0	<=	lower_bound	&&	lower_bound	<=	upper_bound	)
!	0	<=	lower_bound	&&	lower_bound	<=	upper_bound
2	+	4	*	OFFSET_ADDRESS_SIZE	+	(	upper_bound	>	1	)	*	(	2	+	4	*	OFFSET_ADDRESS_SIZE	)
2	+	4	*	OFFSET_ADDRESS_SIZE	+	upper_bound	>	1	*	2	+	4	*	OFFSET_ADDRESS_SIZE
b	+	1	+	2	*	OFFSET_ADDRESS_SIZE	+	(	upper_bound	>	1	)	*	(	1	+	2	*	OFFSET_ADDRESS_SIZE	)
b	+	1	+	2	*	OFFSET_ADDRESS_SIZE	+	(	upper_bound	>	1	)	*	1	+	2	*	OFFSET_ADDRESS_SIZE
1	+	2	*	OFFSET_ADDRESS_SIZE

1	+	2	*	OFFSET_ADDRESS_SIZE

1	+	2	*	OFFSET_ADDRESS_SIZE

laststart	+	2	*	OFFSET_ADDRESS_SIZE	+	1

1	+	2	*	OFFSET_ADDRESS_SIZE

1	+	2	*	OFFSET_ADDRESS_SIZE

end	+	1	+	2	*	OFFSET_ADDRESS_SIZE

p	+	1	<	pend

p	==	pend	||	*	p	==	(	UCHAR_T	)	succeed

*	p	++	*	BYTEWIDTH	-	1

1	<<	(	j	%	BYTEWIDTH	)

j	<	(	1	<<	BYTEWIDTH	)

*	p	++	*	BYTEWIDTH	-	1

1	<<	(	j	%	BYTEWIDTH	)

j	<	(	1	<<	BYTEWIDTH	)

j	<	(	1	<<	BYTEWIDTH	)

j	<	(	1	<<	BYTEWIDTH	)

(	re_opcode_t	)	*	p	!=	on_failure_jump	&&	(	re_opcode_t	)	*	p	!=	succeed_n

p	+	j	<	pend

startpos	<	0	||	startpos	>	total_size

bufp	->	used	>	0	&&	range	>	0

re_compile_fastmap	(	bufp	)	==	-	2

fastmap	&&	startpos	<	total_size	&&	!	bufp	->	can_be_null

startpos	<	size1	&&	startpos	+	range	>=	size1

size1	==	0	||	startpos	>=	size1

range	>=	0	&&	startpos	==	total_size	&&	fastmap	&&	!	bufp	->	can_be_null

val	==	-	2

!	(	regstart	&&	regend	&&	old_regstart	&&	old_regend	&&	reg_info	&&	best_regstart	&&	best_regend	&&	reg_dummy	&&	reg_info_dummy	)
!	regstart	&&	regend	&&	old_regstart	&&	old_regend	&&	reg_info	&&	best_regstart	&&	best_regend	&&	reg_dummy	&&	reg_info_dummy
pos	<	0	||	pos	>	size1	+	size2

size2	==	0	&&	string1	!=	NULL

size1	>	0	&&	pos	<=	size1

!	best_regs_set	||	best_match_p

best_regs_set	&&	!	best_match_p

d	>=	string1	&&	d	<=	end1

regs	->	start	==	NULL	||	regs	->	end	==	NULL

regs	->	start	==	NULL	||	regs	->	end	==	NULL

*	d	++	!=	(	CHAR_T	)	*	p	++

(	re_opcode_t	)	*	(	p	-	1	)	==	charset_not
(	re_opcode_t	)	*	p	-	1	==	charset_not
c	<	(	unsigned	)	(	*	p	*	BYTEWIDTH	)

1	+	c	/	BYTEWIDTH

1	<<	(	c	%	BYTEWIDTH	)

just_past_start_mem	==	p	-	1

(	p	+	2	)	<	pend

mcnt	<	0	&&	(	re_opcode_t	)	*	p1	==	on_failure_jump

r	<	(	unsigned	)	*	p	+	(	unsigned	)	*	(	p	+	1	)
r	<	(	unsigned	)	*	p	+	(	unsigned	)	*	p	+	1
mcnt	>	dend2	-	d2

p1	<	pend	&&	(	re_opcode_t	)	*	p1	==	no_op

p1	<	pend	&&	(	re_opcode_t	)	*	p1	==	start_memory

p2	+	2	<	pend	&&	(	(	re_opcode_t	)	*	p2	==	stop_memory	||	(	re_opcode_t	)	*	p2	==	start_memory	)
p2	+	2	<	pend	&&	(	re_opcode_t	)	*	p2	==	stop_memory	||	(	re_opcode_t	)	*	p2	==	start_memory
p2	+	2	+	2	*	OFFSET_ADDRESS_SIZE	<	pend	&&	(	re_opcode_t	)	*	p2	==	dummy_failure_jump

2	+	2	*	OFFSET_ADDRESS_SIZE

(	re_opcode_t	)	*	p2	==	exactn

bufp	->	newline_anchor	&&	(	re_opcode_t	)	*	p2	==	endline

5	+	c	/	BYTEWIDTH

1	<<	(	c	%	BYTEWIDTH	)

(	re_opcode_t	)	*	p2	==	charset

(	d	)	==	string2	-	1

(	d	)	==	string2	-	1

(	d	)	==	string2	-	1

(	d	)	==	string2	-	1

!	AT_STRINGS_END	(	d	)	&&	WORDCHAR_P	(	d	)	&&	(	AT_STRINGS_BEG	(	d	)	||	!	WORDCHAR_P	(	d	-	1	)	)
!	AT_STRINGS_END	(	d	)	&&	WORDCHAR_P	(	d	)	&&	(	AT_STRINGS_BEG	(	d	)	||	!	WORDCHAR_P	(	d	-	1	)	)
!	AT_STRINGS_BEG	(	d	)	&&	WORDCHAR_P	(	d	-	1	)	&&	(	AT_STRINGS_END	(	d	)	||	!	WORDCHAR_P	(	d	)	)
!	AT_STRINGS_BEG	(	d	)	&&	WORDCHAR_P	(	d	-	1	)	&&	AT_STRINGS_END	(	d	)	||	!	WORDCHAR_P	(	d	)
(	d	)	==	string2	-	1

(	d	)	==	string2	-	1

(	is_a_jump_n	&&	(	re_opcode_t	)	*	p1	==	succeed_n	)	||	(	!	is_a_jump_n	&&	(	re_opcode_t	)	*	p1	==	on_failure_jump	)

d	>=	string1	&&	d	<=	end1

!	PREFIX	(	alt_match_null_string_p	)	(	p1	,	p1	+	mcnt	-	(	1	+	OFFSET_ADDRESS_SIZE	)	,	reg_info	)

(	re_opcode_t	)	*	p1	!=	on_failure_jump

!	PREFIX	(	alt_match_null_string_p	)	(	p1	,	p1	+	mcnt	,	reg_info	)

*	s1	++	!=	*	s2	++

wpid	==	pid	||	wpid	==	-	1

(	mn	+	mx	)	/	2
mn	+	mx	/	2
tbuf	->	len	+	1	>	tbuf	->	asize

!	isdigit	(	*	++	l	)
isdigit	(	*	++	l	!	isdigit	(	*	++	l	)
--	i	>=	0

(	(	hash	*	17	)	&	sizemask	)	|	1

(	index	+	hash2	)	&	sizemask

(	s	*	s	-	x	)	/	(	2	*	s	)
s	*	s	-	x	/	(	2	*	s	)
lex_state	==	ls_fun_close	&&	paren_depth	==	0

lex_state	==	ls_answer	||	lex_state	==	ls_defined_close

lex_state	==	ls_hash	||	lex_state	==	ls_predicate	||	lex_state	==	ls_defined

a	->	len	==	b	->	len	&&	memcmp	(	a	->	text	,	b	->	text	,	a	->	len	)	==	0

m	.	definition_length	!=	ustrlen	(	newdefn	)	||	memcmp	(	namebuf	,	newdefn	,	m	.	definition_length	)	!=	0

first	<	last	&&	i	<	nl	.	n_defs

paren_depth	--	==	0

arg	->	expanded_count	+	1	>=	capacity

i	--	>	0

*	name	&	(	0x7F	>>	ucn_len	)

(	utf32	<<	6	)	|	(	*	++	name	&	0x3F	)

(	*	name	&	~	0x3F	)	!=	0x80
*	name	&	~	0x3F	!=	0x80
(	utf32	>>	(	4	*	j	)	)	&	0xF

flag	>	last	&&	flag	<=	4	&&	(	flag	!=	4	||	last	==	3	)	&&	(	flag	!=	2	||	last	==	0	)
flag	>	last	&&	flag	<=	4	&&	flag	!=	4	||	last	==	3	&&	flag	!=	2	||	last	==	0
ifs	->	next	==	0	&&	ifs	->	mi_cmacro

b	<	(	operator_array	+	ARRAY_SIZE	(	operator_array	)	)

ISDIGIT	(	c	)	||	(	ISXDIGIT	(	c	)	&&	radix	==	16	)

radix	!=	16	&&	float_flag	==	NOT_FLOAT

float_flag	!=	NOT_FLOAT	&&	radix	==	8

2	*	set	->	allocated	+	256

line_delta	<	0	||	(	line_delta	>	10	&&	line_delta	*	map	->	column_bits	>	1000	)	||	(	max_column_hint	>=	(	1U	<<	map	->	column_bits	)	)	||	(	max_column_hint	<=	80	&&	map	->	column_bits	>=	10	)

max_column_hint	>=	(	1U	<<	column_bits	)

mx	-	mn	>	1

(	mn	+	mx	)	/	2
mn	+	mx	/	2
MAIN_FILE_P	(	map	)	||	set	->	last_listed	==	map	->	included_from

file	->	fd	!=	-	1

f	->	buffer	&&	!	f	->	buffer_valid

f	->	buffer	&&	!	f	->	buffer_valid

1	+	(	externc	!=	0	)
1	+	externc	!=	0
file	->	fd	!=	-	1

set	-	alloc	==	len

alloc	+	len	/	2

is_nvspace	(	*	tmp	)	&&	tmp	<	rlimit

!	(	flags	&	DO_SPECIAL	)
!	flags	&	DO_SPECIAL
!	(	flags	&	DO_SPECIAL	)
!	flags	&	DO_SPECIAL
!	(	flags	&	DO_SPECIAL	)
!	flags	&	DO_SPECIAL
!	(	flags	&	DO_SPECIAL	)
!	flags	&	DO_SPECIAL
!	(	flags	&	DO_SPECIAL	)
!	flags	&	DO_SPECIAL
d	->	targets_size	*	2	+	4

d	->	deps_size	*	2	+	8

d	->	vpaths_size	*	2	+	8

colmax	&&	colmax	<	34

colmax	&&	column	>	colmax

colmax	&&	column	>	colmax

ret	!=	-	EAGAIN

!	root	||	!	snum

j	<	hlen	+	16

j	<	klen	+	16

j	<	mlen	+	16

j	<	hlen	+	16

j	<	klen	+	16

j	<	mlen	+	16

j	<	klen	+	16

j	<	mlen	+	16

j	<	hlen	+	16

j	<	hlen	+	16

j	<	klen	+	16

j	<	mlen	+	16

j	<	hlen	+	16

j	<	klen	+	16

j	<	mlen	+	16

j	<	hlen	+	16

j	<	klen	+	16

j	<	mlen	+	16

512	+	(	inlen	<<	3	)
512	+	inlen	<<	3
in	+	inlen	-	(	inlen	%	sizeof	(	u64	)	)

-	!	(	h	&&	m	&&	k	&&	h2	&&	m2	&&	k2	)
-	!	h	&&	m	&&	k	&&	h2	&&	m2	&&	k2
j	<	hlen	+	16

j	<	klen	+	16

j	<	mlen	+	16

j	<	hlen	+	16

j	<	klen	+	16

j	<	mlen	+	16

j	<	klen	+	16

j	<	mlen	+	16

j	<	hlen	+	16

j	<	hlen	+	16

j	<	klen	+	16

j	<	mlen	+	16

j	<	hlen	+	16

j	<	klen	+	16

j	<	mlen	+	16

j	<	hlen	+	16

j	<	klen	+	16

j	<	mlen	+	16

5	*	(	u	>>	2	)
5	*	u	>>	2
(	j	<	16	)	&&	(	j	<	inlen	)

r	==	-	1

(	1	&	(	(	differentbits	-	1	)	>>	8	)	)	-	1
1	&	(	(	differentbits	-	1	)	>>	8	)	-	1
(	1	&	(	(	differentbits	-	1	)	>>	8	)	)	-	1
1	&	(	(	differentbits	-	1	)	>>	8	)	-	1
1	+	(	mlen	/	16	)

i	<	smlen	-	64

i	<	(	1	<<	WINDOWSIZE	)

i	<	(	1	<<	WINDOWSIZE	)

k	<	WINDOWSIZE	-	1

b	<=	6	&&	i	+	b	<	256

i	<	smlen	-	64

b	-	(	(	(	-	bnegative	)	&	b	)	<<	1	)
b	-	(	-	bnegative	)	&	b	<<	1
2	*	i	+	0

2	*	i	+	1

j	<	mlen	+	16

j	<	clen	+	16

j	<	slen	+	16

j	<	nlen	+	16

j	<	klen	+	16

j	<	mlen	+	16

j	<	clen	+	16

j	<	slen	+	16

j	<	nlen	+	16

j	<	klen	+	16

j	<	mlen	+	16

j	<	slen	+	16

j	<	nlen	+	16

j	<	klen	+	16

j	<	clen	+	16

j	<	clen	+	16

j	<	mlen	+	16

j	<	clen	+	16

j	<	nlen	+	16

j	<	klen	+	16

j	<	slen	+	16

19	*	(	u	>>	7	)
19	*	u	>>	7
19	*	(	u	>>	7	)
19	*	u	>>	7
j	<	i	-	j

j	<	i	+	32	-	j

(	i	&	1	)	==	0
i	&	1	==	0
i	/	2	+	16

i	/	2	+	16

(	u	<<	c	)	|	(	u	>>	(	32	-	c	)	)

(	u	<<	c	)	|	(	u	>>	(	32	-	c	)	)

(	u	<<	c	)	|	(	u	>>	(	32	-	c	)	)

(	u	<<	c	)	|	(	u	>>	(	32	-	c	)	)

j	<	mlen	+	16

j	<	mlen	+	16

j	<	clen	+	16

j	<	mlen	+	16

j	<	clen	+	16

j	<	clen	+	16

j	<	clen	+	16

j	<	tlen	+	16

j	<	clen	+	16

j	<	tlen	+	16

j	<	tlen	+	16

j	<	mlen	+	16

j	<	tlen	+	16

j	<	tlen	+	16

j	<	mlen	+	16

j	<	tlen	+	16

(	uint64_t	)	tv	.	tv_sec	*	1000000U	+	(	uint64_t	)	tv	.	tv_usec

access	(	*	device	,	F_OK	|	R_OK	)	==	0

stream	.	initialized	==	0	||	stream	.	pid	!=	pid

stream	.	random_data_source_fd	!=	-	1	&&	close	(	stream	.	random_data_source_fd	)	==	0

-	upper_bound	%	upper_bound

access	(	*	device	,	F_OK	|	R_OK	)	==	0

stream	.	random_data_source_fd	!=	-	1	&&	close	(	stream	.	random_data_source_fd	)	==	0

-	upper_bound	%	upper_bound

j	<	mlen	+	16

j	<	mlen	+	16

j	<	clen	+	16

j	<	mlen	+	16

j	<	clen	+	16

j	<	clen	+	16

j	<	clen	+	16

j	<	tlen	+	16

j	<	clen	+	16

j	<	tlen	+	16

crypto_onetimeauth_poly1305_verify	(	c	+	16	,	c	+	32	,	clen	-	32	,	subkey	)	!=	0

j	<	hlen	+	16

j	<	hlen	+	16

j	<	mlen	+	16

j	<	mlen	+	16

j	<	mlen	+	16

j	<	hlen	+	16

j	<	hlen	+	16

j	<	hlen	+	16

j	<	mlen	+	16

j	<	mlen	+	16

j	<	mlen	+	16

j	<	hlen	+	16

i	%	8	==	7

255	&	(	xi	-	yi	-	borrow	)

xi	<	yi	+	borrow

1	+	(	rand	(	)	%	255	)

1	+	(	rand	(	)	%	255	)

i	%	8	==	7

i	%	8	==	7

i	%	8	==	7

i	%	8	==	7

i	%	8	==	7

1	+	(	rand	(	)	%	255	)

1	+	(	rand	(	)	%	255	)

i	%	8	==	7

i	%	8	==	7

i	%	8	==	7

i	%	8	==	7

i	%	8	==	7

i	%	8	==	7

i	%	8	==	7

i	%	8	==	7

i	%	8	==	7

i	%	8	==	7

i	%	8	==	7

i	%	8	==	7

(	c	&	0x80	)	==	0
c	&	0x80	==	0
(	*	q	&	0x80	)	==	0x80
*	q	&	0x80	==	0x80
q	-	(	unsigned	char	*	)	p	>=	VARINT_MAX

pBuffer	->	nData	+	nAddCapacity	>	pBuffer	->	nCapacity

--	p	->	b	.	nData	-	1

pData	+	nData	>	pData

pData	+	nData	>	pData

nFirstOld	<	nData	||	(	nFirstOld	==	nData	&&	pWriter	->	iType	==	DL_DOCIDS	)

nFirstOld	<	nData	||	(	nFirstOld	==	nData	&&	pWriter	->	iType	==	DL_DOCIDS	)

pWriter	->	iPos	!=	-	1

pWriter	->	iPos	!=	-	1

iColumn	==	-	1	||	plrColumn	(	&	plReader	)	==	iColumn

n	>	1	&&	orderedDLReaderCmp	(	p	,	p	+	1	)	>	0

i	--	>	0

i	--	>	0

!	plrAtEnd	(	&	left	)	||	!	plrAtEnd	(	&	right	)

!	dlrAtEnd	(	&	left	)	||	!	dlrAtEnd	(	&	right	)

!	plrAtEnd	(	&	left	)	&&	!	plrAtEnd	(	&	right	)

(	plrPosition	(	&	right	)	-	plrPosition	(	&	left	)	)	<=	(	nNear	+	1	)

!	plrAtEnd	(	pLeft	)	||	!	plrAtEnd	(	pRight	)

!	plrAtEnd	(	pLeft	)	||	!	plrAtEnd	(	pRight	)

nLeft	==	0	||	nRight	==	0

!	dlrAtEnd	(	&	left	)	&&	!	dlrAtEnd	(	&	right	)

!	dlrAtEnd	(	&	dr1	)	||	!	dlrAtEnd	(	&	dr2	)

!	plrAtEnd	(	&	pr1	)	||	!	plrAtEnd	(	&	pr2	)

nLeft	==	0	||	nRight	==	0

!	dlrAtEnd	(	&	left	)	&&	!	dlrAtEnd	(	&	right	)

!	dlrAtEnd	(	&	left	)	||	!	dlrAtEnd	(	&	right	)

idx	>=	-	1

idx	>=	-	1

idx	==	-	1

p	->	nMatch	+	1	>=	p	->	nAlloc

p	->	nAlloc	*	2	+	10

iCol	>=	0	&&	iCol	<	nColumn	&&	iCol	!=	iColumn

(	prevMatch	&	(	1	<<	i	)	)	==	0
prevMatch	&	(	1	<<	i	)	==	0
i	==	nTerm	-	1

(	iRotor	-	j	)	&	FTS3_ROTOR_MASK

iDir	>	-	2

iDir	==	1	||	iDir	==	-	1

iDir	==	1	||	iDir	==	-	1

(	pMatch	->	iTerm	+	iDir	)	<	0	||	(	pMatch	->	iTerm	+	iDir	)	>=	pQuery	->	nTerms

pMatch	->	iTerm	>=	0	&&	nNear

(	pMatch	->	iTerm	+	nPhrase	)	<	pQuery	->	nTerms

(	iPrevTerm	+	1	)	<	pQuery	->	nTerms

isOk	==	0	&&	jj	<	pSnippet	->	nMatch

p	->	iCol	==	pMatch	->	iCol	&&	(	(	p	->	iTerm	==	iNextTerm	&&	p	->	iToken	>	iEndToken	&&	p	->	iToken	<=	iEndToken	+	nNear	)	||	(	p	->	iTerm	==	iPrevTerm	&&	p	->	iToken	<	iStartToken	&&	p	->	iToken	>=	iStartToken	-	nNear	)	)
p	->	iCol	==	pMatch	->	iCol	&&	(	p	->	iTerm	==	iNextTerm	&&	p	->	iToken	>	iEndToken	&&	p	->	iToken	<=	iEndToken	+	nNear	)	||	(	p	->	iTerm	==	iPrevTerm	&&	p	->	iToken	<	iStartToken	&&	p	->	iToken	>=	iStartToken	-	nNear	)
iColumn	<	0	||	iColumn	>=	nColumn

iBreak	>=	nDoc	-	10

i	<	nMatch	&&	nDesired	>	0

iCol	==	tailCol	&&	iStart	<=	tailOffset	+	20

(	iCol	!=	tailCol	&&	tailCol	>=	0	)	||	iStart	!=	tailOffset

iEnd	>=	nDoc	-	10

c	->	result	.	nData	==	0	||	dlrAtEnd	(	&	c	->	reader	)

pQTerm	->	nPhrase	==	0	||	DL_DEFAULT	!=	DL_DOCIDS

pQTerm	->	nPhrase	==	0	||	DL_DEFAULT	!=	DL_DOCIDS

i	<=	pQTerm	->	nPhrase	&&	left	.	nData	>	0

(	i	+	nPhraseRight	)	<=	pQTerm	->	nPhrase

last_near_offset	>	0	&&	iEnd	<=	last_near_offset

!	inPhrase	&&	pQuery	->	nTerms	>	0	&&	nToken	==	2

!	inPhrase	&&	pQuery	->	nTerms	>	0	&&	!	pQuery	->	nextIsOr	&&	nToken	==	4

(	iBegin	+	6	)	<	nSegment

!	inPhrase	&&	iBegin	>	0

inPhrase	&&	pQuery	->	nTerms	>	firstIndex

idxNum	<=	QUERY_FULLTEXT	+	v	->	nColumn

idxNum	<=	QUERY_FULLTEXT	+	v	->	nColumn

idxCol	==	v	->	nColumn	+	1

pData	+	nData	>	pData

pData	+	nData	>	pData

n	+	iDummy	>	0

n	+	iDummy	>	0

n	+	iDummy	<=	nData

n	+	iDummy	<=	nData

n	+	iDummy	>	0

n	+	iDummy	>	0

n	+	iDummy	<=	nData

n	+	iDummy	<=	nData

block	==	pWriter	->	last	&&	block	->	data	.	nData	<	ROOT_MAX

1	+	n	<=	nData

1	+	n	<=	nData

n	+	nTerm	<=	pReader	->	nData

n	+	nTerm	<=	pReader	->	nData

n	+	nSuffix	<=	pReader	->	nData

n	+	nSuffix	<=	pReader	->	nData

isPrefix	&&	n	==	nTerm

pData	+	nData	>	pData

pData	+	nData	>	pData

n	+	iDummy	>	0

n	+	iDummy	>	0

n	+	iDummy	<	nData

n	+	iDummy	<	nData

n	+	iDummy	>	0

n	+	iDummy	>	0

n	+	iDummy	<=	nData

n	+	iDummy	<=	nData

n	+	iDummy	>	0

n	+	iDummy	>	0

n	+	iDummy	<	nData

n	+	iDummy	<	nData

n	+	iDummy	>	0

n	+	iDummy	>	0

n	+	iDummy	<=	nData

n	+	iDummy	<=	nData

iData	+	nData	<=	pWriter	->	data	.	nData

iData	+	nData	<=	pWriter	->	data	.	nData

pWriter	->	data	.	nData	>	iData	+	1	+	n	+	nStartingTerm

pWriter	->	data	.	nData	>	iData	+	1	+	n	+	nStartingTerm

!	pWriter	->	has_parent	&&	pWriter	->	data	.	nData	<	ROOT_MAX

iDoclistData	>=	n	+	nTerm

iDoclistData	>=	n	+	nTerm

nTerm	+	nActualData	>	STANDALONE_MIN

iTermData	+	nTerm	+	nActualData	>	LEAF_MAX

n	+	pWriter	->	data	.	nData	-	iDoclistData	<	iDoclistData

n	+	pWriter	->	data	.	nData	-	iDoclistData	<	iDoclistData

1	+	n	+	nTerm	<	nData

1	+	n	+	nTerm	<	nData

n	+	nData	<=	pReader	->	nData

n	+	nData	<=	pReader	->	nData

n	+	nSuffix	<	pReader	->	nData

n	+	nSuffix	<	pReader	->	nData

isPrefix	&&	n	==	nTerm

nLr	>	1	&&	leavesReaderCmp	(	pLr	,	pLr	+	1	)	>	0

i	--	>	0

*	pidx	==	(	MERGE_COUNT	-	1	)

i	<	MERGE_COUNT	&&	!	leavesReaderAtEnd	(	lrs	+	i	)

0	!=	leavesReaderTermCmp	(	lrs	,	lrs	+	i	)

i	--	>	0

nLr	>	1	&&	optLeavesReaderCmp	(	pLr	,	pLr	+	1	)	>	0

i	--	>	0

iReader	<	i	&&	pnReaders	<	MERGE_COUNT

pnReaders	--	>	0

i	--	>	0

nReaders	==	0	||	nReaders	==	1

i	--	>	0

(	h	<<	3	)	^	h	^	*	z	++

nKey	--	>	0

(	h	<<	3	)	^	h	^	*	(	z	++	)

(	new_size	&	(	new_size	-	1	)	)	==	0
new_size	&	(	new_size	-	1	)	==	0
(	new_size	&	(	new_size	-	1	)	)	==	0
new_size	&	(	new_size	-	1	)	==	0
priv	->	extraction_queue	||	!	priv	->	failed_extraction_queue

fd	!=	-	1

nice	(	19	)	==	-	1	&&	errno	!=	0

g_hash_table_size	(	update_buffer	.	resources	)	+	g_hash_table_size	(	update_buffer	.	resources_by_id	)	>=	1000

jreader	->	end	-	jreader	->	current	<	8

jwriter	->	journal	==	-	1

set_io_priority_idle	(	)	==	-	1

set_io_priority_best_effort	(	7	)	==	-	1

fd	==	-	1	&&	errno	==	EPERM

fd	==	-	1

nice	(	19	)	==	-	1	&&	errno

setrlimit	(	RLIMIT_AS	,	&	rl	)	==	-	1

setrlimit	(	RLIMIT_DATA	,	&	rl	)	==	-	1

!	priv	->	registered_folders	||	!	priv	->	cached_folders

priv	->	resuming	&&	priv	->	last_time	!=	0

!	priv	->	tasks	||	priv	->	tasks	->	len	==	0

!	dir_data	&&	info

index	>=	0	&&	index	<	data	->	properties	->	len

!	priv	->	stopped	&&	!	priv	->	pending_index_roots

z	->	c	+	1	>=	z	->	l

z	->	c	-	1	<=	z	->	lb

z	->	c	-	1	<=	z	->	lb

z	->	c	-	1	<=	z	->	lb

z	->	c	-	2	<=	z	->	lb

z	->	c	-	3	<=	z	->	lb

z	->	c	-	1	<=	z	->	lb

z	->	c	-	1	<=	z	->	lb

b	>=	0xC0	||	b	<	0x80

b0	<	0xC0	||	c	==	l

b0	<	0xE0	||	c	==	l

(	b0	&	0x1F	)	<<	6	|	(	b1	&	0x3F	)
b0	&	0x1F	<<	6	|	(	b1	&	0x3F	)
b0	<	0x80	||	c	==	lb

b1	>=	0xC0	||	c	==	lb

(	b1	&	0x1F	)	<<	6	|	(	b0	&	0x3F	)
b1	&	0x1F	<<	6	|	(	b0	&	0x3F	)
ch	>	max	||	(	ch	-=	min	)	<	0

0X1	<<	(	ch	&	0X7	)
0X1	<<	ch	&	0X7
ch	>	max	||	(	ch	-=	min	)	<	0

0X1	<<	(	ch	&	0X7	)
0X1	<<	ch	&	0X7
ch	>	max	||	(	ch	-=	min	)	<	0

0X1	<<	(	ch	&	0X7	)
0X1	<<	ch	&	0X7
ch	>	max	||	(	ch	-=	min	)	<	0

0X1	<<	(	ch	&	0X7	)
0X1	<<	ch	&	0X7
ch	>	max	||	(	ch	-=	min	)	<	0

0X1	<<	(	ch	&	0X7	)
0X1	<<	ch	&	0X7
ch	>	max	||	(	ch	-=	min	)	<	0

0X1	<<	(	ch	&	0X7	)
0X1	<<	ch	&	0X7
ch	>	max	||	(	ch	-=	min	)	<	0

0X1	<<	(	ch	&	0X7	)
0X1	<<	ch	&	0X7
ch	>	max	||	(	ch	-=	min	)	<	0

0X1	<<	(	ch	&	0X7	)
0X1	<<	ch	&	0X7
i	+	(	(	j	-	i	)	>>	1	)
i	+	(	j	-	i	)	>>	1
c	+	common	==	l

j	-	i	<=	1

i	+	(	(	j	-	i	)	>>	1	)
i	+	(	j	-	i	)	>>	1
c	-	common	==	lb

j	-	i	<=	1

adjustment	+	len	>	CAPACITY	(	z	->	p	)

category	&	(	CATEGORY_DOCUMENT	|	CATEGORY_IMAGE	|	CATEGORY_AUDIO	|	CATEGORY_FOLDER	|	CATEGORY_VIDEO	|	CATEGORY_ARCHIVE	)
category	&	CATEGORY_DOCUMENT	|	CATEGORY_IMAGE	|	CATEGORY_AUDIO	|	CATEGORY_FOLDER	|	CATEGORY_VIDEO	|	CATEGORY_ARCHIVE
priv	->	first_category_populated	&&	g_slist_length	(	sq	->	results	)	>	0

!	priv	->	query	||	strlen	(	priv	->	query	)	<	1

pd	->	in_body	&&	pd	->	n_bytes_remaining	>	0

header	.	recType	!=	TEXTBYTESATOM_RECORD_TYPE	&&	header	.	recType	!=	TEXTCHARSATOM_RECORD_TYPE

nice	(	19	)	==	-	1

fd	==	-	1

data	->	extracted_count	>	0	||	data	->	failed_count	>	0

priv	->	unhandled_count	==	0	&&	g_hash_table_size	(	priv	->	statistics_data	)	<	1

task	->	cancellable	&&	task	->	signal_id	!=	0

extractor	->	mime	==	EXTRACT_MIME_GUESS	&&	!	gst_tag_list_is_empty	(	extractor	->	tagcache	)

extractor	->	toc	&&	g_list_length	(	extractor	->	toc	->	entry_list	)	>	1

(	(	flags	&	0x80	)	>	0	)	||	(	(	flags	&	0x40	)	>	0	)
(	flags	&	0x80	>	0	)	||	(	flags	&	0x40	>	0	)
(	flags	&	0x20	)	>	0
flags	&	0x20	>	0
(	(	flags	&	0x80	)	>	0	)	||	(	(	flags	&	0x40	)	>	0	)
(	flags	&	0x80	>	0	)	||	(	flags	&	0x40	>	0	)
(	flags	&	0x20	)	>	0
flags	&	0x20	>	0
kill_option	!=	TERM_NONE	&&	terminate_option	!=	TERM_NONE

!	fixture	->	expect_finished	&&	fixture	->	expect_n_results	==	g_list_length	(	fixture	->	ops	)

!	fixture	->	expect_finished	&&	fixture	->	expect_n_results	==	g_list_length	(	fixture	->	ops	)

!	fixture	->	expect_finished	&&	fixture	->	expect_n_results	==	g_list_length	(	fixture	->	ops	)

!	fixture	->	expect_finished	&&	fixture	->	expect_n_results	==	g_list_length	(	fixture	->	ops	)

r	==	-	1

ret	==	0	&&	!	active

client_fd	!=	-	1

setup_sock	(	client_fd	)	==	-	1

check_unix_sockpath	(	sock_name	)	==	-	1

setsockopt	(	listen_sock	,	SOL_SOCKET	,	SO_REUSEADDR	,	&	flag	,	sizeof	(	int	)	)	==	-	1

(	spinner	+	1	)	%	2
spinner	+	1	%	2
pendings	->	size	&&	loop_done	&&	activecnt	>	0

loop_done	==	1	&&	activecnt	>	0

!	silent	&&	interrupted

realloc_pendings	(	)	==	-	1

hex2int	(	c1	)	*	16	+	hex2int	(	c	)

ret	==	-	1

ret	==	-	1

hex2int	(	c1	)	*	16	+	hex2int	(	c	)

ret	==	-	1

ret	==	-	1

ret	==	-	1

ret	==	-	1

ret	==	-	1

ret	==	-	1

ret	==	-	1

ret	==	-	1

size	>=	0	&&	size	<	len

sizehint	>	0	&&	length	>=	sizehint

in_fd	==	-	1

ret	==	-	1

in_fd	==	-	1

in_fd	==	-	1

int_code	<	100	||	int_code	>	999

in_fd	==	-	1

loop	->	changed_fds	!=	-	1

apply_all	&&	cl_off	!=	0

nevents	==	-	1

nevents	==	-	1

expected	==	0	||	actual	==	0

expected	==	0	||	actual	==	0

!	not_flag	&&	d	<=	dlt

not_flag	&&	d	>	dlt

n	<=	0	||	num	+	1	<=	n

i	<	size	-	1

idx	==	-	1

idx	==	-	1

idx	==	-	1

idx	==	-	1

!	(	fp_expected	&&	fp_actual	)
!	fp_expected	&&	fp_actual
!	strncmp	(	ptr_test_file	,	expected	,	strlen	(	ptr_test_file	)	)	||	!	strncmp	(	str_test_file	,	expected	,	strlen	(	str_test_file	)	)	||	!	strncmp	(	mem_test_file	,	expected	,	strlen	(	mem_test_file	)	)

ret_expected	&&	!	ret_actual

!	ret_expected	&&	ret_actual

!	ret_expected	&&	!	ret_actual

!	(	fp_expected	&&	fp_actual	)
!	fp_expected	&&	fp_actual
++	argi	>=	argc

++	argi	>=	argc

d	!=	-	1

(	dlast	<<	2	)	|	(	(	d	&	0x30	)	>>	4	)
(	dlast	<<	2	)	|	(	d	&	0x30	>>	4	)
(	(	dlast	&	0xf	)	<<	4	)	|	(	(	d	&	0x3c	)	>>	2	)
(	dlast	&	0xf	<<	4	)	|	(	d	&	0x3c	>>	2	)
(	(	dlast	&	0x03	)	<<	6	)	|	d
(	dlast	&	0x03	<<	6	)	|	d
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	unsigned	)	i	<=	0xff	||	i	==	-	1

i	==	-	1

req	->	tv_sec	*	1000	+	req	->	tv_nsec	*	1000000

!	fds	||	!	nfds

(	timeout	%	1000	)	*	1000

stat	==	-	1	&&	errno	==	EDEADLOCK

status	==	-	1	&&	errno	==	EINTR

newfd	==	-	1	&&	errno	==	EINTR

flags	==	-	1

!	getsockopt	(	fd	,	level	,	opt	,	(	char	*	)	&	value	,	&	optlen	)

!	setsockopt	(	fd	,	level	,	opt	,	(	char	*	)	&	value	,	optlen	)

!	getsockopt	(	fd	,	level	,	opt	,	(	char	*	)	&	value	,	&	optlen	)

!	setsockopt	(	fd	,	level	,	opt	,	(	char	*	)	&	value	,	optlen	)

!	getsockopt	(	fd	,	level	,	opt	,	(	char	*	)	&	value	,	&	optlen	)

!	setsockopt	(	fd	,	level	,	opt	,	(	char	*	)	&	value	,	optlen	)

res	==	-	1	&&	errno	==	EINTR

res	==	-	1	&&	errno	==	EINTR

fd	==	-	1

spliced	==	-	1	&&	errno	==	EINTR

spliced	==	-	1	&&	errno	==	EINTR

spliced	==	-	1

sent	==	-	1	&&	errno	==	EINTR

readc	==	-	1	&&	errno	==	EINTR

fd	==	-	1	&&	errno	==	EINTR

fd	==	-	1

newfd	==	-	1

stat	==	-	1

newfd	==	-	1

sent	==	-	1	&&	errno	==	EINTR

readc	==	-	1	&&	errno	==	EINTR

len	==	-	1

stat	==	-	1	&&	errno	==	EINTR

stat	==	-	1	&&	errno	==	EINTR

res	==	-	1	&&	errno	==	EINTR

res	==	-	1	&&	errno	==	EINTR

!	uin	||	!	uout	||	!	uerr

i	<	-	1

pid	==	-	1

nval	==	-	1	&&	errno

pid	==	-	1

pidout	==	-	1	&&	errno	==	EINTR

pidout	==	-	1

times	(	&	buf	)	==	-	1

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

i	%	3	==	0

1	<<	(	8	-	i	)

i	%	3	==	1

1	<<	(	8	-	i	)

(	decmode	%	10000	)	/	1000

(	decmode	%	1000	)	/	100

(	decmode	%	100	)	/	10

s	>=	0	&&	s	<=	7	&&	u	>=	0	&&	u	<=	7	&&	g	>=	0	&&	g	<=	7	&&	o	>=	0	&&	o	<=	7

(	s	<<	9	)	+	(	u	<<	6	)	+	(	g	<<	3	)	+	o
s	<<	9	+	(	u	<<	6	)	+	(	g	<<	3	)	+	o
(	mode	&	04100	)	==	04100
mode	&	04100	==	04100
(	mode	&	02010	)	==	02010
mode	&	02010	==	02010
(	mode	&	01001	)	==	01001
mode	&	01001	==	01001
(	mode	&	00007	)	+	(	(	mode	&	00070	)	>>	3	)	*	10	+	(	(	mode	&	00700	)	>>	6	)	*	100	+	(	(	mode	&	07000	)	>>	9	)	*	1000
(	mode	&	00007	)	+	(	mode	&	00070	)	>>	3	*	10	+	(	mode	&	00700	)	>>	6	*	100	+	(	(	mode	&	07000	)	>>	9	)	*	1000
!	globres	->	freed	&&	globres	->	pos	<	globres	->	gl	.	gl_pathc

globres	&&	!	globres	->	freed

getifaddrs	(	&	ifaddr	)	==	-	1

c	->	ifa_data	&&	(	!	c	->	ifa_addr	||	c	->	ifa_addr	->	sa_family	==	AF_PACKET	)
c	->	ifa_data	&&	!	c	->	ifa_addr	||	c	->	ifa_addr	->	sa_family	==	AF_PACKET
(	op	>>	24	)	|	(	(	op	>>	8	)	&	0xff00	)	|	(	(	op	&	0xff00	)	<<	8	)	|	(	op	<<	24	)
(	op	>>	24	)	|	(	(	op	>>	8	)	&	0xff00	)	|	(	op	&	0xff00	<<	8	)	|	(	op	<<	24	)
len	/	2	+	1

sess_resume	&&	!	sess_resume	->	start_server

!	e1	||	!	e2

e1	->	left	.	sym	==	e2	->	left	.	sym	&&	e1	->	right	.	sym	==	e2	->	right	.	sym

dep	->	left	.	sym	==	sym	||	dep	->	right	.	sym	==	sym

sym_has_value	(	sym	)	&&	!	sym_is_choice_value	(	sym	)

!	stat	(	name	,	&	st	)	&&	S_ISDIR	(	st	.	st_mode	)
stat	(	name	,	&	st	)	&&	S_ISDIR	(	st	.	st_mode	!	stat	(	name	,	&	st	)	&&	S_ISDIR	(	st	.	st_mode	)
!	(	sym	->	flags	&	SYMBOL_FORCEWRITE	)
!	sym	->	flags	&	SYMBOL_FORCEWRITE
!	name	||	basename	!=	conf_def_filename

!	valid_stdin	&&	input_mode	==	ask_silent

(	random	(	)	%	cnt	)	+	1

!	child	->	sym	||	!	menu_is_visible	(	child	)

!	--	cnt

input_mode	==	ask_silent	&&	rootEntry	!=	menu

sym_is_changable	(	sym	)	&&	!	sym_has_value	(	sym	)

!	conf_cnt	++

rows	<	19	||	cols	<	80

--	i	>=	0

prop	&&	menu	!=	current_menu

menu_is_visible	(	child	)	&&	child	->	sym	==	def_sym

sym_has_value	(	sym	)	||	!	sym_is_changable	(	sym	)

sym_has_value	(	sym	)	||	!	sym_is_changable	(	sym	)

stat	==	1	||	stat	==	255

ioctl	(	1	,	TIOCGWINSZ	,	&	ws	)	==	-	1

rows	<	19	||	cols	<	80

!	oldval	||	strcmp	(	oldval	,	newval	)

cnt	+	1	>=	size

!	sym_string_valid	(	sym	,	prop	->	expr	->	left	.	sym	->	name	)	||	!	sym_string_valid	(	sym	,	prop	->	expr	->	right	.	sym	->	name	)

menu	->	list	&&	(	!	menu	->	prompt	||	!	menu	->	prompt	->	text	)
menu	->	list	&&	!	menu	->	prompt	||	!	menu	->	prompt	->	text
sym_is_choice	(	sym	)	&&	!	parent	->	prompt

sym	&&	!	sym_is_optional	(	sym	)	&&	parent	->	prompt

prompt_len	<=	width	-	x	*	2

i	<	y	+	height	+	1

(	!	in_paren	)	&&	isalpha	(	c	)	&&	strchr	(	exempt	,	c	)	==	0

(	height	<	item_no	)	&&	(	scroll	+	choice	<	item_no	-	1	)

width	/	2	-	11

(	width	-	list_width	)	/	2	-	1
width	-	list_width	/	2	-	1
(	list_width	-	check_x	)	/	2
list_width	-	check_x	/	2
choice	==	max_choice	-	1

scroll	+	choice	>=	item_no	-	1

i	<	height	-	4

end_reached	&&	!	passed_end

end_reached	&&	!	passed_end

(	(	fpos	-	bytes_read	+	page	-	buf	)	*	100	)	/	file_size
(	fpos	-	bytes_read	+	page	-	buf	*	100	)	/	file_size
width	/	2	-	11

(	width	-	box_width	)	/	2
width	-	box_width	/	2
button	==	-	1

scroll	<	box_width	-	1

key	<	0x100	&&	isprint	(	key	)

input_x	==	box_width	-	1

button	==	-	1

width	/	2	-	10

(	height	<	item_no	)	&&	(	scroll	+	height	<	item_no	)

width	/	2	-	16

(	width	-	menu_width	)	/	2	-	1
width	-	menu_width	/	2	-	1
(	menu_width	-	item_x	)	/	2
menu_width	-	item_x	/	2
choice	>=	item_no	-	max_choice	/	2

choice	-	max_choice	/	2

key	<	256	&&	isalpha	(	key	)

choice	<	2	&&	scroll

(	choice	>	max_choice	-	3	)	&&	(	scroll	+	max_choice	<	item_no	)

scroll	+	max_choice	<	item_no

choice	+	1	<	max_choice

i	>=	argc	-	1

i	>=	argc	-	1	||	cert_index	>=	cert_size

i	>=	argc	-	1

i	>=	argc	-	1

tm_wday	<	0	||	tm_mon	<	0

(	st	.	st_mode	&	S_IFMT	)	==	S_IFDIR
st	.	st_mode	&	S_IFMT	==	S_IFDIR
cn	->	networkdesc	!=	-	1

cn	->	filedesc	!=	-	1

file_exists	==	-	1

cn	->	if_modified_since	!=	-	1	&&	(	cn	->	if_modified_since	==	0	||	cn	->	if_modified_since	>=	stbuf	.	st_mtime	)
cn	->	if_modified_since	!=	-	1	&&	cn	->	if_modified_since	==	0	||	cn	->	if_modified_since	>=	stbuf	.	st_mtime
--	n	!=	0

--	n	!=	0

++	j	<	n

++	j	<=	m

--	i	>=	0

++	j	<	n

++	i	<	t

--	i	>=	0

--	i	!=	0

(	part_exp	-	1	)	/	2
part_exp	-	1	/	2
++	k	>=	length

(	i	%	words	)	==	0

(	words	==	8	)	&&	(	(	i	%	words	)	==	4	)

total_bytes	<	filesize	&&	bytes_read	>	0

ret	<	0	||	error	!=	0

(	im_text	.	uid	!=	im_header	->	uid_to	&&	im_text	.	uid	!=	im_header	->	uid_from	)	||	im_text	.	uid	==	256

mitems	*	2	+	1

F	*	(	id	+	1	)	/	cnt
F	*	id	+	1	/	cnt
sgp	*	spg	>	0.0

sgp	*	spg	<	0.0

l1	==	1	&&	dlt	*	spg	>=	0.0

sgp	*	spg	<	-	0.0

(	(	chr	|	nd	->	byte	)	+	1	)	>>	8
(	chr	|	nd	->	byte	+	1	)	>>	8
byte	&	(	byte	-	1	)

(	(	chr	|	byte	)	+	1	)	>>	8
(	chr	|	byte	+	1	)	>>	8
(	(	chr	|	nd	->	byte	)	+	1	)	>>	8
(	chr	|	nd	->	byte	+	1	)	>>	8
d	<	Y	*	N

i	<	N	*	Y

y	*	N	+	n

d	<	Y	*	N

t	*	N	+	n

t	*	N	+	n

++	scnt	%	1000	==	0

2.0	*	(	Pr	*	Rc	)	/	(	Pr	+	Rc	)
2.0	*	(	Pr	*	Rc	)	/	Pr	+	Rc
s	<	pos	+	count

N	%	4	!=	0

4	-	N	%	4

n	<	N	-	d

n	<	N	-	d

z	<	-	r

e	*	(	1.0	-	e	)
e	*	1.0	-	e
e	*	(	1.0	-	e	)
e	*	1.0	-	e
yp	*	Y	+	y

e	*	(	1.0	-	e	)
e	*	1.0	-	e
yp	*	Y	+	y

i	<	Y	*	Y

i	<	Y	*	Y

d	<	Y	*	Y

U	*	T	+	1

B	*	T	+	1

argc	--	,	argv	++

argc	--	,	argv	++

argc	--	,	argv	++

argc	--	,	argv	++

yp	*	Y	+	y

yp	*	Y	+	y

nl1	*	rho1	+	nl2	*	rho2	/	2.0

len	==	size	-	1

Y	==	0	||	O	==	0

0x3fffffff	&	(	int	)	(	z2	-	z	)

(	p	->	iSeek	+	nRead	)	>	nBlob

(	p	->	iSeek	+	nWrite	)	>	nBlob

n	--	>	0

n	+	100	>	nLine

nLine	*	2	+	100

nSql	>=	n	&&	memcmp	(	pPreStmt	->	zSql	,	zSql	,	n	)	==	0

pDb	->	maxStmt	<=	0	||	discard

zAuth	&&	len	>	0

zBusy	&&	len	>	0

zCommit	&&	len	>	0

objc	<	5	||	objc	>	7

nByte	+	50	+	nCol	*	2

i	+	1	!=	nCol

objc	<	3	||	objc	>	5

objc	!=	(	5	+	isReadonly	)	&&	objc	!=	(	6	+	isReadonly	)

objc	==	(	6	+	isReadonly	)

objc	!=	2	&&	objc	!=	3

zNull	&&	len	>	0

zProgress	&&	len	>	0

zProfile	&&	len	>	0

nTimeout	++	>=	3

zTrace	&&	len	>	0

objc	!=	3	&&	objc	!=	4

pDb	->	nTransaction	==	0	&&	objc	==	4

objc	!=	2	&&	objc	!=	3

i	+	1	<	objc

objc	<	3	||	(	objc	&	1	)	!=	1
objc	<	3	||	objc	&	1	!=	1
(	rc	&	0xff	)	==	rc
rc	&	0xff	==	rc
i	--	,	pItem	++

i	--	,	pItem	++

mask	==	-	1	||	mask	==	0

mask	==	-	1	||	mask	==	0

argc	==	3	||	argc	==	2

argc	==	3	||	argc	==	2

argc	==	1	||	argc	==	2

argc	==	1	||	argc	==	2

c2	!=	0	&&	c2	!=	c

c2	!=	0	&&	c2	!=	c

c	>=	prior_c	&&	c	<=	c2

c2	==	0	||	(	seen	^	invert	)	==	0
c2	==	0	||	seen	^	invert	==	0
esc	==	c	&&	!	prevEscape

sqlite3Utf8CharLen	(	(	char	*	)	zEsc	,	-	1	)	!=	1

(	i	*	2	)	+	2

(	i	*	2	)	+	3

(	nBlob	*	2	)	+	2

(	nBlob	*	2	)	+	3

(	c	>>	4	)	&	0xf

(	p	->	approx	|	p	->	overflow	)	==	0
p	->	approx	|	p	->	overflow	==	0
(	s1	&	s2	&	~	s3	)	|	(	~	s1	&	~	s2	&	s3	)

(	max	&&	cmp	<	0	)	||	(	!	max	&&	cmp	>	0	)

argc	==	1	||	argc	==	2

argc	==	1	||	argc	==	2

(	char	*	)	&	likeInfoAlt	==	(	char	*	)	&	likeInfoAlt	.	matchAll

(	char	*	)	&	likeInfoAlt	==	(	char	*	)	&	likeInfoAlt	.	matchAll

(	nSize	&	~	3	)	==	0
nSize	&	~	3	==	0
surplus	==	maxLocal	+	1

cellOffset	+	2	*	nCell

pc	<	iCellFirst	||	pc	>	iCellLast

pc	>=	iCellFirst	&&	pc	<=	iCellLast

cbrk	<	iCellFirst	||	pc	+	size	>	usableSize

cbrk	+	size	<=	usableSize	&&	cbrk	>=	iCellFirst

cbrk	+	size	==	usableSize

pc	+	size	==	usableSize

nByte	<	usableSize	-	8

gap	+	2	==	top

gap	+	1	==	top

gap	+	2	<=	top

gap	+	2	+	nByte	==	top

gap	+	2	+	nByte	>	top

gap	+	nByte	<=	top

pbegin	<	addr	+	4

pbegin	>	addr	||	pbegin	==	0

pbegin	+	psize	+	3	>=	pnext	&&	pnext	>	0

isMemdb	==	0	&&	zFilename

zFilename	&&	!	isMemdb

nReserve	>=	-	1	&&	nReserve	<=	255

nReserve	>=	0	&&	nReserve	<=	255

(	pageSize	&	7	)	==	0
pageSize	&	7	==	0
(	pageSize	&	7	)	==	0
pageSize	&	7	==	0
wrFlag	==	0	||	wrFlag	==	1

lwr	==	upr	+	1

cellOffset	+	2	*	i

idx	>=	end	+	2

(	i	--	)	==	0

(	nMaxCells	+	3	)	&	~	3

i	<	nOld	-	1	&&	!	leafData

k	>	NB	+	1

i	<	k	-	1

i	<	nNew	-	1	||	j	==	nCell

nOverflow	>	0	||	iOverflow	<	i

(	--	nOverflow	)	>	0

idx	>=	0	&&	idx	<=	15

idx	>=	1	&&	idx	<=	15

pc	<=	usableSize	-	4

i	<=	usableSize	-	4

i	+	size	<=	usableSize

j	==	0	||	j	>	i	+	size

j	<=	usableSize	-	4

(	*	cnt	)	++	>=	16

N	>=	(	int	)	sizeof	(	zSpaces	)	-	1

width	*	10	+	c

width	>	etBUFSIZE	-	10

precision	*	10	+	c

useExtended	||	(	infop	->	flags	&	FLAG_INTERN	)	==	0
useExtended	||	infop	->	flags	&	FLAG_INTERN	==	0
precision	>	etBUFSIZE	-	40	&&	(	infop	->	flags	&	FLAG_STRING	)	==	0
precision	>	etBUFSIZE	-	40	&&	infop	->	flags	&	FLAG_STRING	==	0
flag_zeropad	&&	precision	<	width	-	(	prefix	!=	0	)
flag_zeropad	&&	precision	<	width	-	prefix	!=	0
width	-	(	prefix	!=	0	)
width	-	prefix	!=	0
x	*	2	+	1

precision	>	etBUFSIZE	/	2	-	10

xtype	==	etGENERIC	&&	precision	>	0

exp	<	-	4	||	exp	>	precision

precision	--	,	e2	++

(	precision	--	)	>	0

flag_exp	||	xtype	==	etEXP

flag_zeropad	&&	!	flag_leftjustify	&&	length	<	width

i	++	,	k	--

!	isnull	&&	xtype	==	etSQLESCAPE2

i	+	1	+	needQuote	*	2

z	!=	0	||	N	==	0

N	==	0	||	NEVER	(	z	==	0	)

0x3fffffff	&	(	int	)	(	z2	-	z	)

z	++	,	nDigits	++	,	d	--

(	e	*	esign	)	+	d

sign	<	0	&&	nDigits

e	>	307	&&	e	<	342

c	!=	0	||	(	i	==	0	&&	zStart	==	zNum	)	||	i	>	19

j	--	,	i	++

op	>	0	&&	op	<	0xff

iDb	==	0	||	iDb	>=	2

isNew	==	1	||	isNew	==	0

sz	==	0	||	cnt	==	0

padFlag	&&	allSpaces	(	(	(	char	*	)	pKey1	)	+	n	,	nKey1	-	n	)	&&	allSpaces	(	(	(	char	*	)	pKey2	)	+	n	,	nKey2	-	n	)

(	count	+	1	)	*	1000	>	timeout
count	+	1	*	1000	>	timeout
p	->	nRow	==	0	&&	argv	!=	0

p	->	nData	+	need	>	p	->	nAlloc

p	->	nAlloc	*	2	+	need

i	--	,	a	++

k	--	,	pTerm	++

(	pTerm	->	wtFlags	&	(	TERM_DYNAMIC	|	TERM_ORINFO	|	TERM_ANDINFO	)	)	==	0
pTerm	->	wtFlags	&	TERM_DYNAMIC	|	TERM_ORINFO	|	TERM_ANDINFO	==	0
j	<	2	&&	!	okToChngToIN

i	--	,	pOrTerm	++

pOrTerm	->	wtFlags	&	(	TERM_COPIED	|	TERM_VIRTUAL	)
pOrTerm	->	wtFlags	&	TERM_COPIED	|	TERM_VIRTUAL
i	>=	0	&&	okToChngToIN

i	--	,	pOrTerm	++

affRight	!=	0	&&	affRight	!=	affLeft

i	--	,	pOrTerm	++

(	pOrTerm	->	wtFlags	&	TERM_OR_OK	)	==	0
pOrTerm	->	wtFlags	&	TERM_OR_OK	==	0
(	pTerm	->	eOperator	&	(	pTerm	->	eOperator	-	1	)	)	==	0
pTerm	->	eOperator	&	(	pTerm	->	eOperator	-	1	)	==	0
pTerm	->	eOperator	&	(	WO_IN	|	WO_ISNULL	)
pTerm	->	eOperator	&	WO_IN	|	WO_ISNULL
(	pTerm	->	eOperator	&	(	pTerm	->	eOperator	-	1	)	)	==	0
pTerm	->	eOperator	&	(	pTerm	->	eOperator	-	1	)	==	0
pTerm	->	eOperator	&	(	WO_IN	|	WO_ISNULL	)
pTerm	->	eOperator	&	WO_IN	|	WO_ISNULL
~	(	WHERE_ROWID_EQ	|	WHERE_ROWID_RANGE	)
~	WHERE_ROWID_EQ	|	WHERE_ROWID_RANGE
~	(	WHERE_COLUMN_IN	|	WHERE_COLUMN_EQ	|	WHERE_COLUMN_NULL	|	WHERE_COLUMN_RANGE	)
~	WHERE_COLUMN_IN	|	WHERE_COLUMN_EQ	|	WHERE_COLUMN_NULL	|	WHERE_COLUMN_RANGE
pCost	->	plan	.	u	.	pIdx	==	0	||	(	pCost	->	plan	.	wsFlags	&	WHERE_ROWID_EQ	)	==	0
pCost	->	plan	.	u	.	pIdx	==	0	||	pCost	->	plan	.	wsFlags	&	WHERE_ROWID_EQ	==	0
pSrc	->	pIndex	==	0	||	pCost	->	plan	.	u	.	pIdx	==	0	||	pCost	->	plan	.	u	.	pIdx	==	pSrc	->	pIndex

(	--	pOther	->	nChild	)	==	0

(	pTerm	->	wtFlags	&	TERM_CODED	)	==	0
pTerm	->	wtFlags	&	TERM_CODED	==	0
r1	!=	regBase	+	j

(	pTerm	->	eOperator	&	(	WO_ISNULL	|	WO_IN	)	)	==	0
(	pTerm	->	eOperator	&	WO_ISNULL	|	WO_IN	)	==	0
pRangeStart	||	nEq	>	0

(	start_constraints	<<	2	)	+	(	startEq	<<	1	)	+	bRev
start_constraints	<<	2	+	startEq	<<	1	+	bRev
(	pRangeEnd	||	nEq	)	*	(	1	+	bRev	)
(	pRangeEnd	||	nEq	)	*	1	+	bRev
(	pTerm	->	wtFlags	&	TERM_ORINFO	)	!=	0
pTerm	->	wtFlags	&	TERM_ORINFO	!=	0
pOrTerm	->	leftCursor	==	iCur	||	pOrTerm	->	eOperator	==	WO_AND

ii	==	pOrWc	->	nTerm	-	1

bRev	==	0	||	bRev	==	1

j	--	,	pTerm	++

pTerm	->	wtFlags	&	(	TERM_VIRTUAL	|	TERM_CODED	)
pTerm	->	wtFlags	&	TERM_VIRTUAL	|	TERM_CODED
pTerm	->	wtFlags	&	(	TERM_VIRTUAL	|	TERM_CODED	)
pTerm	->	wtFlags	&	TERM_VIRTUAL	|	TERM_CODED
pWC	->	vmask	==	0	&&	pMaskSet	->	n	==	0

isOptimal	>=	0	&&	bestJ	<	0

(	nTabList	-	iFrom	)	>	1	||	isOptimal

j	!=	iFrom	&&	doNotReorder

(	bestPlan	.	plan	.	wsFlags	&	WHERE_ORDERBY	)	!=	0
bestPlan	.	plan	.	wsFlags	&	WHERE_ORDERBY	!=	0
(	bestPlan	.	plan	.	wsFlags	&	WHERE_INDEXED	)	==	0
bestPlan	.	plan	.	wsFlags	&	WHERE_INDEXED	==	0
N	<	n	&&	N	>=	0

!	paiCol	||	*	paiCol	==	0

(	regOld	==	0	)	!=	(	regNew	==	0	)

!	aff1	&&	!	aff2

aff1	==	0	||	aff2	==	0

i	--	,	pItem	++

rRhsHasNull	==	0	||	destIfFalse	==	destIfNull

iCol	>=	-	1	&&	iCol	<	32768

i	--	,	pItem	++

iReg	!=	target	+	i

jumpIfTrue	==	0	&&	jumpIfNull	==	0	&&	regFree1	==	0

jumpIfTrue	==	0	&&	jumpIfNull	==	0	&&	regFree1	!=	0

jumpIfTrue	==	0	&&	jumpIfNull	!=	0	&&	regFree1	==	0

jumpIfTrue	==	0	&&	jumpIfNull	!=	0	&&	regFree1	!=	0

jumpIfTrue	!=	0	&&	jumpIfNull	==	0	&&	regFree1	==	0

jumpIfTrue	!=	0	&&	jumpIfNull	==	0	&&	regFree1	!=	0

jumpIfTrue	!=	0	&&	jumpIfNull	!=	0	&&	regFree1	==	0

jumpIfTrue	!=	0	&&	jumpIfNull	!=	0	&&	regFree1	!=	0

isPrepareV2	==	1	||	isPrepareV2	==	0

op	>	0	&&	op	<	0xff

isExplain	&&	nMem	<	10

n	--	>	0

(	8	-	(	SQLITE_PTR_TO_INT	(	pSpace	)	&	7	)	)	&	7
(	8	-	SQLITE_PTR_TO_INT	(	pSpace	)	&	7	)	&	7
pA	->	pRight	==	0	||	pA	->	v	<=	pA	->	pRight	->	v

pB	->	pRight	==	0	||	pB	->	v	<=	pB	->	pRight	->	v

pA	->	pRight	==	0	||	pA	->	v	<=	pA	->	pRight	->	v

pB	==	0	||	pB	->	pRight	==	0	||	pB	->	v	<=	pB	->	pRight	->	v

pPager	->	tempFile	==	0	||	pPager	->	state	>=	PAGER_EXCLUSIVE

pPager	->	tempFile	==	0	||	pPager	->	changeCountDone

!	pPager	->	exclusiveMode	||	sqlite3IsMemJournal	(	pPager	->	sjfd	)

(	isMainJrnl	&	~	1	)	==	0
isMainJrnl	&	~	1	==	0
(	isSavepnt	&	~	1	)	==	0
isSavepnt	&	~	1	==	0
pPager	->	state	==	PAGER_RESERVED	||	pPager	->	state	>=	PAGER_EXCLUSIVE

pPager	->	state	>=	PAGER_EXCLUSIVE	&&	isOpen	(	pPager	->	fd	)

level	==	1	||	pPager	->	tempFile

level	==	3	&&	!	pPager	->	tempFile

nReserve	>=	0	&&	nReserve	<	1000

pPager	->	state	>=	PAGER_SHARED	||	pPager	->	dbSizeValid	==	0

pPager	->	state	>=	PAGER_SHARED	||	pPager	->	dbModified	==	0

(	pPager	->	state	>=	locktype	)	||	(	pPager	->	state	==	PAGER_UNLOCK	&&	locktype	==	PAGER_SHARED	)	||	(	pPager	->	state	==	PAGER_RESERVED	&&	locktype	==	PAGER_EXCLUSIVE	)

!	pPager	->	aSavepoint	&&	!	pPager	->	pInJournal

!	isOpen	(	pPager	->	jfd	)	&&	!	isOpen	(	pPager	->	sjfd	)

pPager	->	state	>=	PAGER_SHARED	&&	!	MEMDB

pPager	->	state	==	PAGER_UNLOCK	||	isErrorReset

(	pPager	->	state	==	PAGER_SHARED	)	||	(	pPager	->	exclusiveMode	&&	pPager	->	state	>	PAGER_SHARED	)

pPager	->	pBackup	||	sqlite3PcachePagecount	(	pPager	->	pPCache	)	>	0

pPager	->	exclusiveMode	||	pPager	->	state	==	PAGER_SHARED

(	sqlite3PcacheRefCount	(	pPager	->	pPCache	)	==	0	)	&&	(	!	pPager	->	exclusiveMode	||	pPager	->	journalOff	>	0	)
(	sqlite3PcacheRefCount	(	pPager	->	pPCache	)	==	0	)	&&	!	pPager	->	exclusiveMode	||	pPager	->	journalOff	>	0
!	MEMDB	&&	!	pPager	->	tempFile

!	pPager	->	journalStarted	&&	!	pPager	->	noSync

!	MEMDB	&&	pPager	->	noSync	==	0

!	pPager	->	changeCountDone	&&	pPager	->	dbSize	>	0

!	pPager	->	tempFile	&&	isOpen	(	pPager	->	fd	)

pPager	->	state	!=	PAGER_SYNCED	&&	pPager	->	dbModified

!	pPager	->	noSync	&&	!	noSync

pPager	->	state	==	PAGER_SYNCED	||	MEMDB	||	!	pPager	->	dbModified

!	pPager	->	dbModified	||	!	isOpen	(	pPager	->	jfd	)

nSavepoint	>	nCurrent	&&	pPager	->	useJournal

(	nSavepoint	-	nCurrent	)	*	sizeof	(	PagerSavepoint	)
nSavepoint	-	nCurrent	*	sizeof	(	PagerSavepoint	)
pPager	->	noSync	==	0	&&	!	MEMDB

eMode	>=	0	&&	!	pPager	->	tempFile

(	isTemp	&	1	)	==	isTemp
isTemp	&	1	==	isTemp
autoInc	==	0	||	autoInc	==	1

iDestroyed	==	0	||	iTab	<	iDestroyed

isDeferred	==	0	||	isDeferred	==	1

(	*	pnAlloc	)	*	2	+	initSize

i	<	iStart	+	nExtra

pItem	->	notIndexed	==	0	&&	pItem	->	zIndex	==	0

(	4	*	n	+	sz	-	1	)	/	sz
4	*	n	+	sz	-	1	/	sz
n	<=	0	||	n	>=	0x7fffff00

(	n	&	0x7fffffff	)	==	n
n	&	0x7fffffff	==	n
n	<	0	||	iOffset	<	0	||	(	iOffset	+	n	)	>	p	->	nByte

nBytes	==	mxLen	+	1

val	*	10	+	*	zDate

val	<	min	||	val	>	max	||	(	nextC	!=	0	&&	nextC	!=	*	zDate	)

sgn	*	(	nMn	+	nHr	*	60	)
sgn	*	nMn	+	nHr	*	60
2	-	A	+	(	A	/	4	)

36525	*	(	Y	+	4716	)	/	100
36525	*	Y	+	4716	/	100
306001	*	(	M	+	1	)	/	10000
306001	*	M	+	1	/	10000
(	p	->	iJD	+	43200000	)	/	86400000
p	->	iJD	+	43200000	/	86400000
(	Z	-	1867216.25	)	/	36524.25
Z	-	1867216.25	/	36524.25
Z	+	1	+	A	-	(	A	/	4	)

(	B	-	122.1	)	/	365.25
B	-	122.1	/	365.25
(	B	-	D	)	/	30.6001
B	-	D	/	30.6001
(	p	->	iJD	+	43200000	)	%	86400000
p	->	iJD	+	43200000	%	86400000
s	-	p	->	m	*	60

x	.	Y	<	1971	||	x	.	Y	>=	2038

n	<	ArraySize	(	zBuf	)	-	1

n	>	10	||	n	<	3

(	p	->	M	-	1	)	/	12
p	->	M	-	1	/	12
(	p	->	M	-	12	)	/	12
p	->	M	-	12	/	12
0	==	p	->	pSrc	||	0	==	p	->	pDest

nSrcPgsz	!=	nDestPgsz	&&	sqlite3PagerIsMemdb	(	sqlite3BtreePager	(	p	->	pDest	)	)

(	nSrcPage	+	ratio	-	1	)	/	ratio
nSrcPage	+	ratio	-	1	/	ratio
cnt	==	0	&&	cntTab	==	1	&&	sqlite3IsRowid	(	zCol	)

yyTraceFILE	&&	pParser	->	yyidx	>=	0

i	<	0	||	i	>=	YY_ACTTAB_COUNT

i	>=	0	&&	i	<	YY_ACTTAB_COUNT

yyTraceFILE	&&	yypParser	->	yyidx	>	0

yyTraceFILE	&&	yyruleno	>=	0

yyact	==	YYNSTATE	+	YYNRULE	+	1

yyact	<	YYNSTATE	+	YYNRULE

yymajor	!=	YYNOCODE	&&	yypParser	->	yyidx	>=	0

i	--	,	pItem	++

mxSelect	&&	cnt	>	mxSelect

k	--	,	pItem	++

k	--	,	pItem	++

(	sz	+	7	)	/	8	+	1
sz	+	7	/	8	+	1
pBitvec	==	0	||	pV	==	0	||	pTmpSpace	==	0

(	sz	+	7	)	/	8	+	1
sz	+	7	/	8	+	1
(	i	&	0x7fffffff	)	%	sz
i	&	0x7fffffff	%	sz
(	op	&	1	)	!=	0
op	&	1	!=	0
NEVER	(	iDb	<	0	)	||	iDb	==	1

nIn	*	2	+	3

j	<	(	argc	-	1	)

n	<=	(	nIn	-	i	)	&&	0	==	strncmp	(	z	,	zCopy	,	n	)

(	nOut	+	nCopy	)	>	nMalloc

16	+	(	nOut	+	nCopy	)	*	2
16	+	nOut	+	nCopy	*	2
nMalloc	>=	(	nOut	+	nCopy	)

nMalloc	>=	(	nOut	+	nCopy	)

n	+	100	>	nLine

nLine	*	2	+	100

0x3fffffff	&	(	int	)	(	z2	-	z	)

nSep	==	1	||	memcmp	(	z	,	p	->	separator	,	nSep	)	==	0

p	->	echoOn	&&	p	->	cnt	==	0	&&	p	->	pStmt

p	->	cnt	++	>	0

p	->	cnt	++	==	0

i	==	nArg	-	1

i	==	nArg	-	1

i	==	nArg	-	1

p	->	cnt	++	==	0	&&	p	->	showHeader

i	==	nArg	-	1

i	<	nArg	-	1

p	->	cnt	++	==	0	&&	p	->	showHeader

p	->	cnt	++	==	0	&&	p	->	showHeader

p	->	cnt	++	==	0	&&	p	->	showHeader

i	<	nArg	-	1

i	<	nArg	-	1

!	isalpha	(	(	unsigned	char	)	*	zName	)
isalpha	(	(	unsigned	char	)	*	zName	!	isalpha	(	(	unsigned	char	)	*	zName	)
(	zCsr	-	zIn	)	==	len

(	zCsr	-	zIn	)	==	len

3	*	nCol	*	sizeof	(	const	char	*	)	+	1

n	>	2	&&	n	<	10

n	>	2	&&	n	<	16

n	>	2	&&	n	<	7

eType	==	GENFKEY_ERROR	&&	!	p	->	isIgnoreErrors

p	->	nErr	==	0	&&	(	(	eType	==	GENFKEY_CREATETRIGGER	)	||	(	eType	==	GENFKEY_DROPTRIGGER	&&	!	p	->	isNoDrop	)	)
p	->	nErr	==	0	&&	(	eType	==	GENFKEY_CREATETRIGGER	)	||	(	eType	==	GENFKEY_DROPTRIGGER	&&	!	p	->	isNoDrop	)
nByte	+	20	+	nCol	*	2

i	+	1	!=	nCol

nArg	==	2	||	nArg	==	3

nTimeout	++	>=	3

80	/	(	maxlen	+	2	)
80	/	maxlen	+	2
(	nRow	+	nPrintCol	-	1	)	/	nPrintCol
nRow	+	nPrintCol	-	1	/	nPrintCol
j	<	nArg	&&	j	<	ArraySize	(	p	->	colWidth	)

errCnt	==	0	||	!	bail_on_error	||	(	in	==	0	&&	stdin_is_interactive	)

in	!=	0	||	!	stdin_is_interactive

i	<	argc	-	1

pCache	->	nRef	==	0	&&	pCache	->	pDirty	==	0

createFlag	==	1	||	createFlag	==	0

!	pCache	->	pCache	&&	createFlag

1	+	(	!	pCache	->	bPurgeable	||	!	pCache	->	pDirty	)
1	+	!	pCache	->	bPurgeable	||	!	pCache	->	pDirty
i	<	N_SORT_BUCKET	-	1

i	==	N_SORT_BUCKET	-	1

(	rc	&	0xff	)	==	rc
rc	&	0xff	==	rc
pCache	->	bPurgeable	||	createFlag	!=	1

pPage	&&	pPage	->	iKey	!=	iKey

pPage	||	createFlag	==	0

pCache	->	nPage	>=	pCache	->	nHash	&&	pcache1ResizeHash	(	pCache	)

pPage	&&	iKey	>	pCache	->	iMaxKey

pPage	->	pLruPrev	==	0	&&	pPage	->	pLruNext	==	0

(	*	zIn	&	0xc0	)	==	0x80
*	zIn	&	0xc0	==	0x80
(	c	<<	6	)	+	(	0x3f	&	*	(	zIn	++	)	)
(	c	<<	6	)	+	0x3f	&	*	(	zIn	++	)
c	<	0x80	||	(	c	&	0xFFFFF800	)	==	0xD800	||	(	c	&	0xFFFFFFFE	)	==	0xFFFE
c	<	0x80	||	(	c	&	0xFFFFF800	)	==	0xD800	||	c	&	0xFFFFFFFE	==	0xFFFE
eAuto	>=	0	&&	eAuto	<=	2

zRight	==	0	||	!	sqlite3GetInt32	(	zRight	,	&	iLimit	)	||	iLimit	<=	0

*	zSql	&&	*	zSql	!=	c

0	==	InterlockedDecrement	(	(	long	*	)	&	(	b	->	nCurrentBarrierHeight	)	)

result	!=	0	&&	result	!=	EBUSY

rwl	->	nExclusiveAccessCount	>	0	||	rwl	->	nSharedAccessCount	>	rwl	->	nCompletedSharedAccessCount

result	!=	0	&&	result	!=	EBUSY

result	!=	0	&&	result	!=	EBUSY

result	!=	0	&&	result	!=	EBUSY

result	==	0	&&	rwl	->	nCompletedSharedAccessCount	<	0

result	!=	0	&&	result	!=	EBUSY

result	==	0	&&	rwl	->	nCompletedSharedAccessCount	<	0

++	rwl	->	nCompletedSharedAccessCount	==	0

result	!=	0	&&	result	!=	EBUSY

result	!=	0	&&	result	!=	EBUSY

detachstate	!=	PTHREAD_CREATE_JOINABLE	&&	detachstate	!=	PTHREAD_CREATE_DETACHED

result	!=	0	&&	result	!=	EBUSY

prio	<	sched_get_priority_min	(	policy	)	||	prio	>	sched_get_priority_max	(	policy	)

mx	->	kind	==	PTHREAD_MUTEX_RECURSIVE	&&	pthread_equal	(	mx	->	ownerThread	,	pthread_self	(	)	)

0	==	result	&&	0	!=	sig

result	!=	0	&&	result	!=	EBUSY

interval	->	tv_sec	==	0L	&&	interval	->	tv_nsec	==	0L

detachstate	!=	PTHREAD_CREATE_JOINABLE	&&	detachstate	!=	PTHREAD_CREATE_DETACHED

rwl	->	nExclusiveAccessCount	>	0	||	rwl	->	nSharedAccessCount	>	rwl	->	nCompletedSharedAccessCount

mx	->	kind	!=	PTHREAD_MUTEX_RECURSIVE	||	1	==	mx	->	recursive_count

mx	->	kind	!=	PTHREAD_MUTEX_RECURSIVE	||	0	==	--	mx	->	recursive_count

mx	->	kind	==	PTHREAD_MUTEX_RECURSIVE	&&	pthread_equal	(	mx	->	ownerThread	,	pthread_self	(	)	)

mx	->	kind	!=	PTHREAD_MUTEX_RECURSIVE	||	1	==	mx	->	recursive_count

priority	<	sched_get_priority_min	(	SCHED_OTHER	)	||	priority	>	sched_get_priority_max	(	SCHED_OTHER	)

interval	->	tv_sec	==	0L	&&	interval	->	tv_nsec	==	0L

result	!=	0	&&	result	!=	EBUSY

result	!=	0	&&	result	!=	EBUSY

result	==	0	&&	rwl	->	nCompletedSharedAccessCount	<	0

priority	<	sched_get_priority_min	(	SCHED_OTHER	)	||	priority	>	sched_get_priority_max	(	SCHED_OTHER	)

prio	<	sched_get_priority_min	(	policy	)	||	prio	>	sched_get_priority_max	(	policy	)

0	==	result	&&	0	!=	sig

mx	->	kind	!=	PTHREAD_MUTEX_RECURSIVE	||	0	==	--	mx	->	recursive_count

0	==	InterlockedDecrement	(	(	long	*	)	&	(	b	->	nCurrentBarrierHeight	)	)

t1	.	p	==	t2	.	p	&&	t1	.	x	==	t2	.	x

++	rwl	->	nCompletedSharedAccessCount	==	0

result	!=	0	&&	result	!=	EBUSY

result	==	0	&&	rwl	->	nCompletedSharedAccessCount	<	0

0	==	result	&&	0	!=	sig

mx	->	kind	!=	PTHREAD_MUTEX_RECURSIVE	||	1	==	mx	->	recursive_count

mx	->	kind	!=	PTHREAD_MUTEX_RECURSIVE	||	0	==	--	mx	->	recursive_count

mx	->	kind	==	PTHREAD_MUTEX_RECURSIVE	&&	pthread_equal	(	mx	->	ownerThread	,	pthread_self	(	)	)

interval	->	tv_sec	==	0L	&&	interval	->	tv_nsec	==	0L

(	ptw32_features	&	feature_mask	)	==	feature_mask
ptw32_features	&	feature_mask	==	feature_mask
rwl	->	nExclusiveAccessCount	>	0	||	rwl	->	nSharedAccessCount	>	rwl	->	nCompletedSharedAccessCount

result	!=	0	&&	result	!=	EBUSY

result	!=	0	&&	result	!=	EBUSY

result	!=	0	&&	result	!=	EBUSY

result	==	0	&&	rwl	->	nCompletedSharedAccessCount	<	0

result	!=	0	&&	result	!=	EBUSY

result	==	0	&&	rwl	->	nCompletedSharedAccessCount	<	0

++	rwl	->	nCompletedSharedAccessCount	==	0

result	!=	0	&&	result	!=	EBUSY

result	!=	0	&&	result	!=	EBUSY

priority	<	sched_get_priority_min	(	SCHED_OTHER	)	||	priority	>	sched_get_priority_max	(	SCHED_OTHER	)

prio	<	sched_get_priority_min	(	policy	)	||	prio	>	sched_get_priority_max	(	policy	)

sourceLen	+	(	sourceLen	>>	12	)	+	(	sourceLen	>>	14	)	+	(	sourceLen	>>	25	)	+	13
sourceLen	+	sourceLen	>>	12	+	(	sourceLen	>>	14	)	+	(	sourceLen	>>	25	)	+	13
--	len	>	0

err	==	Z_NEED_DICT	||	(	err	==	Z_BUF_ERROR	&&	stream	.	avail_in	==	0	)

next	<	len	&&	got	<	4

length	--	>	0

(	flags	&	match_cbegroup	)	!=	0
flags	&	match_cbegroup	!=	0
rrc	!=	MATCH_NOMATCH	&&	rrc	!=	MATCH_THEN

rrc	!=	MATCH_NOMATCH	&&	rrc	!=	MATCH_THEN

rrc	!=	MATCH_NOMATCH	&&	rrc	!=	MATCH_THEN

rrc	!=	MATCH_NOMATCH	&&	rrc	!=	MATCH_THEN

(	flags	&	match_condassert	)	!=	0
flags	&	match_condassert	!=	0
rrc	!=	MATCH_NOMATCH	&&	rrc	!=	MATCH_THEN

(	flags	&	match_condassert	)	!=	0
flags	&	match_condassert	!=	0
rrc	!=	MATCH_NOMATCH	&&	rrc	!=	MATCH_THEN

rrc	!=	MATCH_NOMATCH	&&	rrc	!=	MATCH_THEN

c	==	0x09	||	c	==	0x20	||	c	==	0xa0

c	!=	0x09	&&	c	!=	0x20	&&	c	!=	0xa0

c	==	0x0a	||	c	==	0x0b	||	c	==	0x0c	||	c	==	0x0d	||	c	==	0x85

c	!=	0x0a	&&	c	!=	0x0b	&&	c	!=	0x0c	&&	c	!=	0x0d	&&	c	!=	0x85

(	(	value	&	0x00ff	)	<<	8	)	|	(	(	value	&	0xff00	)	>>	8	)
(	value	&	0x00ff	<<	8	)	|	(	value	&	0xff00	>>	8	)
(	(	value	&	0x000000ff	)	<<	24	)	|	(	(	value	&	0x0000ff00	)	<<	8	)	|	(	(	value	&	0x00ff0000	)	>>	8	)	|	(	(	value	&	0xff000000	)	>>	24	)
(	(	value	&	0x000000ff	)	<<	24	)	|	(	(	value	&	0x0000ff00	)	<<	8	)	|	(	value	&	0x00ff0000	>>	8	)	|	(	(	value	&	0xff000000	)	>>	24	)
sourceLen	+	(	sourceLen	>>	12	)	+	(	sourceLen	>>	14	)	+	(	sourceLen	>>	25	)	+	13
sourceLen	+	(	sourceLen	>>	12	)	+	(	sourceLen	>>	14	)	+	sourceLen	>>	25	+	13
--	len	>	0

*	s	++	!=	0

c	<	10	||	c	<=	bracount

(	c	<<	4	)	+	cc
c	<<	4	+	cc
c	*	16	+	cc

min	<	0	||	min	>	65535

max	<	0	||	max	>	65535

1	<<	(	0x09	%	8	)

1	<<	(	0x20	%	8	)

1	<<	(	0xa0	%	8	)

1	<<	(	0x0a	%	8	)

1	<<	(	0x0b	%	8	)

1	<<	(	0x0c	%	8	)

1	<<	(	0x0d	%	8	)

1	<<	(	0x85	%	8	)

repeat_max	==	-	1

repeat_max	==	-	1

repeat_min	==	0	&&	repeat_max	==	-	1

repeat_min	==	1	&&	repeat_max	==	-	1

repeat_min	==	0	&&	repeat_max	==	1

repeat_max	==	-	1

repeat_max	==	-	1

(	repeat_min	-	1	)	*	length_prevgroup
repeat_min	-	1	*	length_prevgroup
(	options	|	set	)	&	(	~	unset	)
options	|	set	&	(	~	unset	)
subfirstbyte	>=	0	&&	subreqbyte	<	0

mclength	==	1	||	req_caseopt	==	0

firstbyte	>=	0	&&	firstbyte	!=	branchfirstbyte

firstbyte	<	0	&&	branchfirstbyte	>=	0	&&	branchreqbyte	<	0

next	<	len	&&	got	<	4

(	c	&	~	0x20	)	-	7
c	&	~	0x20	-	7
!	(	c	&	0xF0	)
!	c	&	0xF0
!	(	c	&	0xF0	)
!	c	&	0xF0
(	*	val	<<	4	)	|	c

(	codepoint	>>	6	)	|	0xC0

(	codepoint	&	0x3F	)	|	0x80

(	codepoint	>>	12	)	|	0xE0

(	(	codepoint	>>	6	)	&	0x3F	)	|	0x80

(	codepoint	&	0x3F	)	|	0x80

(	codepoint	>>	18	)	|	0xF0

(	(	codepoint	>>	12	)	&	0x3F	)	|	0x80

(	(	codepoint	>>	6	)	&	0x3F	)	|	0x80

(	codepoint	&	0x3F	)	|	0x80

(	codepoint	&	0xFC00	)	==	0xD800
codepoint	&	0xFC00	==	0xD800
(	(	codepoint	&	0x3F	)	<<	10	)	|	(	(	(	(	codepoint	>>	6	)	&	0xF	)	+	1	)	<<	16	)	|	(	surrogate	&	0x3FF	)
(	codepoint	&	0x3F	<<	10	)	|	(	(	(	codepoint	>>	6	)	&	0xF	+	1	)	<<	16	)	|	(	surrogate	&	0x3FF	)
(	*	s	>>	5	)	==	0x6

!	(	(	*	s	>>	6	)	==	0x2	)
!	(	*	s	>>	6	)	==	0x2
(	*	s	>>	4	)	==	0x0e

!	(	(	*	s	>>	6	)	==	0x2	)
!	(	*	s	>>	6	)	==	0x2
!	(	(	*	s	>>	6	)	==	0x2	)
!	(	*	s	>>	6	)	==	0x2
(	*	s	>>	3	)	==	0x1e

!	(	(	*	s	>>	6	)	==	0x2	)
!	(	*	s	>>	6	)	==	0x2
!	(	(	*	s	>>	6	)	==	0x2	)
!	(	*	s	>>	6	)	==	0x2
!	(	(	*	s	>>	6	)	==	0x2	)
!	(	*	s	>>	6	)	==	0x2
(	curChar	>>	5	)	==	0x6

(	curChar	>>	4	)	==	0x0e

(	curChar	>>	6	)	==	0x2

(	curChar	>>	3	)	==	0x1e

(	curChar	>>	6	)	==	0x2

(	curChar	>>	6	)	==	0x2

pos	<	number	+	length

(	i	==	LLONG_MIN	||	i	==	LLONG_MAX	)	&&	errno	==	ERANGE
==	LLONG_MIN	||	i	==	LLONG_MAX	&&	errno	==	i	==	LLONG_MIN	||	i	==	LLONG_MAX	&&	errno	==	ERANGE
(	d	==	HUGE_VAL	||	d	==	-	HUGE_VAL	)	&&	errno	==	ERANGE
d	==	HUGE_VAL	||	d	==	-	HUGE_VAL	&&	errno	==	ERANGE
!	(	1	<=	pos	&&	pos	<=	e	)
!	1	<=	pos	&&	pos	<=	e
u	-	l	==	1

(	l	+	u	)	/	2
l	+	u	/	2
u	-	l	==	2

i	-	l	<	u	-	i

pfrom	<=	from	&&	from	<=	pto	+	1

l	<	0	||	l	>=	ms	->	level

*	(	p	++	)	==	L_ESC

++	p	<	ec

p	+	2	<	ec

*	p	==	0	||	*	(	p	+	1	)	==	0
*	p	==	0	||	*	p	+	1	==	0
++	s	<	ms	->	src_end

--	cont	==	0

s	<	ms	->	src_end	&&	singlematch	(	uchar	(	*	s	)	,	p	,	ep	)

s	<	ms	->	src_end	&&	singlematch	(	uchar	(	*	s	)	,	p	,	ep	)

ms	->	level	==	0	&&	s

s1	++	<	ms	.	src_end	&&	!	anchor

e	&&	e	>	src

*	++	strfrmt	==	L_ESC

nargs	--	&&	success

*	size	>=	limit	/	2

level	>	LEVELS1	&&	firstpart

--	nexeccalls	==	0

script	==	0	&&	!	has_e	&&	!	has_v

sep	==	-	1

!	bl	->	isbreakable	||	!	bl	->	upval

(	x	+	1	)	>>	1

(	(	e	+	1	)	<<	3	)	|	(	cast_int	(	x	)	-	8	)

(	x	>>	3	)	&	31

(	(	x	&	7	)	+	8	)	<<	(	e	-	1	)
(	x	&	7	+	8	)	<<	(	e	-	1	)
4	*	sizeof	(	void	*	)	+	8

twotoi	/	2	<	*	narray

a	>	twotoi	/	2

*	narray	/	2	<=	na	&&	na	<=	*	narray

j	-	i	>	1

(	i	+	j	)	/	2
i	+	j	/	2
j	-	i	>	1

(	i	+	j	)	/	2
i	+	j	/	2
tn	&&	(	strcmp	(	tn	,	type	)	==	0	)

(	look	->	n	+	1	)	*	sizeof	(	*	look	->	linearmap	)
look	->	n	+	1	*	sizeof	(	*	look	->	linearmap	)
bytes	==	0	&&	errno

result	==	-	1

result	==	-	1

lastflag	&&	!	firstflag

(	lastblock	+	thisblock	)	>>	2

samples	>	(	bytes_req	/	(	2	*	channels	)	)

(	val	&	0x7fe00000L	)	>>	VQ_FMAN
val	&	0x7fe00000L	>>	VQ_FMAN
!	(	mant	&	0x40000000	)
!	mant	&	0x40000000
(	bytes	+	(	WORD_ALIGN	-	1	)	)	&	~	(	WORD_ALIGN	-	1	)
(	bytes	+	WORD_ALIGN	-	1	)	&	~	(	WORD_ALIGN	-	1	)
(	entry	>>	15	)	&	0x7fff

hi	-	lo	>	1

(	hi	-	lo	)	>>	1

p	&	(	test	-	1	)

p	&	(	-	test	)

entry	==	-	1

entry	==	-	1

entry	==	-	1

entry	==	-	1

i	<	offset	+	n

entry	==	-	1

i	<	offset	+	n

entry	==	-	1

j	<	n	/	2

j	<	maxclass	+	1

i	<	n	-	2

j	<	i	+	2

x	>	lx	&&	x	<	currentx

x	<	hx	&&	x	>	currentx

ady	*	(	x	-	x0	)
ady	*	x	-	x0
++	x	<	n

-	(	(	val	+	1	)	>>	1	)
-	(	val	+	1	)	>>	1
n	/	4	-	ln	/	4

leftbegin	+	ln	/	2

n	/	2	+	n	/	4	-	rn	/	4

rightbegin	+	rn	/	2

--	stages	>	0

(	x	&	0x0f0	)	>>	4
x	&	0x0f0	>>	4
!	(	n	&	(	1	<<	shift	)	)
!	n	&	(	1	<<	shift	)
(	partvals	+	partitions_per_word	-	1	)	/	partitions_per_word
partvals	+	partitions_per_word	-	1	/	partitions_per_word
temp	==	-	1

k	<	partitions_per_word	&&	i	<	partvals

(	partvals	+	partitions_per_word	-	1	)	/	partitions_per_word
partvals	+	partitions_per_word	-	1	/	partitions_per_word
temp	==	-	1

k	<	partitions_per_word	&&	i	<	partvals

len	<	-	1

len	<	-	1

position	==	-	1

size	-	len	<	50

size	-	len	>	4

size	-	len	<	50

size	-	len	>	4

size	-	len	<	50

size	-	len	>	4

value	^	(	(	value	<<	5	)	+	(	value	>>	3	)	+	(	unsigned	long	)	ch	)
value	^	(	value	<<	5	+	value	>>	3	+	(	unsigned	long	)	ch	)
value	^	(	(	value	<<	5	)	+	(	value	>>	3	)	+	(	unsigned	long	)	ch	)
value	^	(	value	<<	5	+	(	value	>>	3	)	+	(	unsigned	long	)	ch	)
value	^	(	(	value	<<	5	)	+	(	value	>>	3	)	+	(	unsigned	long	)	ch	)
value	^	(	(	value	<<	5	)	+	value	>>	3	+	(	unsigned	long	)	ch	)
value	^	(	(	value	<<	5	)	+	(	value	>>	3	)	+	(	unsigned	long	)	ch	)
value	^	(	value	<<	5	+	value	>>	3	+	(	unsigned	long	)	ch	)
(	value	<<	5	)	+	(	value	>>	3	)
value	<<	5	+	(	value	>>	3	)
value	^	(	(	value	<<	5	)	+	(	value	>>	3	)	+	(	unsigned	long	)	ch	)
value	^	(	value	<<	5	+	value	>>	3	+	(	unsigned	long	)	ch	)
value	^	(	(	value	<<	5	)	+	(	value	>>	3	)	+	(	unsigned	long	)	ch	)
value	^	(	value	<<	5	+	value	>>	3	+	(	unsigned	long	)	ch	)
(	value	<<	5	)	+	(	value	>>	3	)
(	value	<<	5	)	+	value	>>	3
value	^	(	(	value	<<	5	)	+	(	value	>>	3	)	+	(	unsigned	long	)	ch	)
value	^	(	value	<<	5	+	value	>>	3	+	(	unsigned	long	)	ch	)
value	^	(	(	value	<<	5	)	+	(	value	>>	3	)	+	(	unsigned	long	)	ch	)
value	^	(	value	<<	5	+	value	>>	3	+	(	unsigned	long	)	ch	)
(	value	<<	5	)	+	(	value	>>	3	)
value	<<	5	+	(	value	>>	3	)
value	^	(	(	value	<<	5	)	+	(	value	>>	3	)	+	(	unsigned	long	)	ch	)
value	^	(	value	<<	5	+	(	value	>>	3	)	+	(	unsigned	long	)	ch	)
size	>	8	*	2048

tmp	!=	0	||	--	len	==	0

pool	->	end	-	pool	->	free	>	namelen

size	<	4	*	namelen

pool	->	end	-	pool	->	free	>	namelen	+	plen	+	1

size	<	4	*	(	namelen	+	plen	+	1	)
size	<	4	*	namelen	+	plen	+	1
4	*	(	namelen	+	plen	+	1	)
4	*	namelen	+	plen	+	1
size	>	8	*	2048

(	insert	->	okey	==	okey	)	&&	(	insert	->	len	==	len	)

(	tmp	->	okey	==	skey	)	&&	(	tmp	->	len	==	len	)

(	insert	->	okey	==	okey	)	&&	(	insert	->	len	==	len	)

(	tmp	->	okey	==	skey	)	&&	(	tmp	->	len	==	len	)

!	ISA_DIGIT	(	cur	+	1	)
!	ISA_DIGIT	(	cur	+	1	)
!	ISA_DIGIT	(	cur	+	2	)
!	ISA_DIGIT	(	cur	+	2	)
len	+	3	>=	max

len	+	3	>=	max

len	+	3	>=	max

len	+	3	>=	max

len	+	10	>=	max

len	+	3	>=	max

len	+	3	>=	max

len	+	3	>=	max

len	+	3	>=	max

len	+	3	>=	max

len	+	1	>=	max

len	+	1	>=	max

len	+	3	>=	max

len	+	3	>=	max

len	+	3	>=	max

len	+	3	>=	max

segp	==	cur	+	3

len	-	out	<=	3

(	l	<=	0	)	||	(	l	>	20	)

(	in	<	inend	)	&&	(	out	-	outstart	+	5	<	*	outlen	)

in	<	inend	&&	out	<	outend	-	1

(	(	(	*	in	)	>>	6	)	&	0x1F	)	|	0xC0

(	(	*	in	)	&	0x3F	)	|	0x80

instop	-	in	>	outend	-	out

in	<	instop	&&	*	in	<	0x80

in	<	inend	&&	out	<	outend	&&	*	in	<	0x80

(	*	inlenb	%	2	)	==	1

(	in	<	inend	)	&&	(	out	-	outstart	+	5	<	*	outlen	)

c	|	(	(	(	unsigned	int	)	*	tmp	)	<<	8	)

(	c	&	0xFC00	)	==	0xD800
c	&	0xFC00	==	0xD800
d	|	(	(	(	unsigned	int	)	*	tmp	)	<<	8	)

(	d	&	0xFC00	)	==	0xDC00
d	&	0xFC00	==	0xDC00
(	(	c	>>	6	)	&	0x1F	)	|	0xC0

(	(	c	>>	12	)	&	0x0F	)	|	0xE0

(	(	c	>>	18	)	&	0x07	)	|	0xF0

(	(	c	>>	bits	)	&	0x3F	)	|	0x80

(	*	inlenb	%	2	)	==	1

c	|	(	unsigned	int	)	*	tmp

(	c	&	0xFC00	)	==	0xD800
c	&	0xFC00	==	0xD800
d	|	(	unsigned	int	)	*	tmp

(	d	&	0xFC00	)	==	0xDC00
d	&	0xFC00	==	0xDC00
(	(	c	>>	6	)	&	0x1F	)	|	0xC0

(	(	c	>>	12	)	&	0x0F	)	|	0xE0

(	(	c	>>	18	)	&	0x07	)	|	0xF0

(	(	c	>>	bits	)	&	0x3F	)	|	0x80

sizeof	(	xmlCharEncodingAlias	)	*	(	xmlCharEncodingAliasesNb	-	i	)
sizeof	(	xmlCharEncodingAlias	)	*	xmlCharEncodingAliasesNb	-	i
toconv	*	2	>=	written

ret	==	-	3

ret	==	-	1

toconv	*	2	>=	written

ret	==	-	3

toconv	*	4	>=	written

ret	==	-	1

ret	==	-	2

(	myversion	/	10000	)	!=	(	version	/	10000	)

(	myversion	/	100	)	<	(	version	/	100	)

(	c	&	0xe0	)	==	0xe0
c	&	0xe0	==	0xe0
(	c	&	0xf0	)	==	0xf0
c	&	0xf0	==	0xf0
(	c	&	0xf8	)	!=	0xf0
c	&	0xf8	!=	0xf0
(	(	val	>	0xd7ff	)	&&	(	val	<	0xe000	)	)	||	(	(	val	>	0xfffd	)	&&	(	val	<	0x10000	)	)	||	(	val	>=	0x110000	)

(	(	c	&	0x40	)	==	0	)	||	(	c	==	0xC0	)
(	c	&	0x40	==	0	)	||	(	c	==	0xC0	)
(	c	&	0xe0	)	==	0xe0
c	&	0xe0	==	0xe0
(	c	&	0xf0	)	==	0xf0
c	&	0xf0	==	0xf0
(	c	&	0xf8	)	!=	0xf0
c	&	0xf8	!=	0xf0
(	c	&	0xe0	)	==	0xe0
c	&	0xe0	==	0xe0
(	c	&	0xf0	)	==	0xf0
c	&	0xf0	==	0xf0
lower	<=	upper	&&	!	found

lower	+	(	upper	-	lower	)	/	2
lower	+	upper	-	lower	/	2
(	l	==	1	)	||	(	!	IS_CHAR	(	val	)	)

(	low	+	high	)	/	2
low	+	high	/	2
(	low	+	high	)	/	2
low	+	high	/	2
ptr	==	(	void	*	)	-	1

(	len	<=	MINLEN	)	&&	(	len	!=	4	)

(	ras	.	max_ex	+	63	)	>>	6

(	ras	.	max_ey	+	63	)	>>	6

!	ras	.	invalid	&&	(	ras	.	area	|	ras	.	cover	)

ex	!=	ras	.	ex	||	ey	!=	ras	.	ey

(	unsigned	)	ey	>=	(	unsigned	)	ras	.	count_ey	||	ex	>=	ras	.	count_ex

(	fx1	+	fx2	)	*	delta
fx1	+	fx2	*	delta
(	ONE_PIXEL	-	fx1	)	*	(	y2	-	y1	)
ONE_PIXEL	-	fx1	*	y2	-	y1
fx1	*	(	y2	-	y1	)
fx1	*	y2	-	y1
(	fx1	+	first	)	*	delta
fx1	+	first	*	delta
(	fx2	+	ONE_PIXEL	-	first	)	*	delta
fx2	+	ONE_PIXEL	-	first	*	delta
min	>=	ras	.	max_ey	||	max	<	ras	.	min_ey

(	ras	.	x	-	SUBPIXELS	(	ex	)	)	<<	1
(	ras	.	x	-	SUBPIXELS	(	ex	)	)	<<	1
(	ONE_PIXEL	-	fy1	)	*	dx
ONE_PIXEL	-	fy1	*	dx
dx	>	ONE_PIXEL	/	6
dx	>	ONE_PIXEL	/	6
(	c	+	d	)	/	2
c	+	d	/	2
(	c	+	d	)	/	2
c	+	d	/	2
236	*	dx_	+	97	*	dy_

97	*	dx_	+	236	*	dy_

dy	*	dx1	-	dx	*	dy1

dy	*	dx2	-	dx	*	dy2

area	>>	(	PIXEL_BITS	*	2	+	1	-	8	)

(	ras	.	max_ey	-	ras	.	min_ey	)	/	ras	.	band_size
ras	.	max_ey	-	ras	.	min_ey	/	ras	.	band_size
n	==	num_bands	-	1	||	max	>	max_y

bottom	+	(	(	top	-	bottom	)	>>	1	)
bottom	+	(	top	-	bottom	)	>>	1
bottom	-	top	>=	ras	.	band_size

pool_base	&&	pool_size	>=	(	long	)	sizeof	(	TWorker	)	+	2048

pool_base	+	(	(	sizeof	(	TWorker	)	+	sizeof	(	TCell	)	-	1	)	&	~	(	sizeof	(	TCell	)	-	1	)	)
pool_base	+	(	sizeof	(	TWorker	)	+	sizeof	(	TCell	)	-	1	)	&	~	(	sizeof	(	TCell	)	-	1	)
(	long	)	(	(	pool_base	+	pool_size	)	-	(	char	*	)	rast	->	buffer	)	&	~	(	sizeof	(	TCell	)	-	1	)
(	long	)	(	(	pool_base	+	pool_size	)	-	(	char	*	)	rast	->	buffer	)	&	~	sizeof	(	TCell	)	-	1
(	ras	.	max_ex	+	63	)	>>	6

(	ras	.	max_ey	+	63	)	>>	6

!	ras	.	invalid	&&	(	ras	.	area	|	ras	.	cover	)

ex	!=	ras	.	ex	||	ey	!=	ras	.	ey

(	unsigned	)	ey	>=	(	unsigned	)	ras	.	count_ey	||	ex	>=	ras	.	count_ex

(	fx1	+	fx2	)	*	delta
fx1	+	fx2	*	delta
(	ONE_PIXEL	-	fx1	)	*	(	y2	-	y1	)
ONE_PIXEL	-	fx1	*	y2	-	y1
fx1	*	(	y2	-	y1	)
fx1	*	y2	-	y1
(	fx1	+	first	)	*	delta
fx1	+	first	*	delta
(	fx2	+	ONE_PIXEL	-	first	)	*	delta
fx2	+	ONE_PIXEL	-	first	*	delta
min	>=	ras	.	max_ey	||	max	<	ras	.	min_ey

(	ras	.	x	-	SUBPIXELS	(	ex	)	)	<<	1
(	ras	.	x	-	SUBPIXELS	(	ex	)	)	<<	1
(	ONE_PIXEL	-	fy1	)	*	dx
(	ONE_PIXEL	-	fy1	)	*	dx
dx	>	ONE_PIXEL	/	6
dx	>	ONE_PIXEL	/	6
(	c	+	d	)	/	2
c	+	d	/	2
(	c	+	d	)	/	2
c	+	d	/	2
236	*	dx_	+	97	*	dy_

97	*	dx_	+	236	*	dy_

dy	*	dx1	-	dx	*	dy1

dy	*	dx2	-	dx	*	dy2

area	>>	(	PIXEL_BITS	*	2	+	1	-	8	)

(	ras	.	max_ey	-	ras	.	min_ey	)	/	ras	.	band_size
ras	.	max_ey	-	ras	.	min_ey	/	ras	.	band_size
n	==	num_bands	-	1	||	max	>	max_y

bottom	+	(	(	top	-	bottom	)	>>	1	)
bottom	+	(	top	-	bottom	)	>>	1
bottom	-	top	>=	ras	.	band_size

pool_base	&&	pool_size	>=	(	long	)	sizeof	(	TWorker	)	+	2048

pool_base	+	(	(	sizeof	(	TWorker	)	+	sizeof	(	TCell	)	-	1	)	&	~	(	sizeof	(	TCell	)	-	1	)	)
pool_base	+	(	sizeof	(	TWorker	)	+	sizeof	(	TCell	)	-	1	)	&	~	sizeof	(	TCell	)	-	1
(	long	)	(	(	pool_base	+	pool_size	)	-	(	char	*	)	rast	->	buffer	)	&	~	(	sizeof	(	TCell	)	-	1	)
(	long	)	(	(	pool_base	+	pool_size	)	-	(	char	*	)	rast	->	buffer	)	&	~	sizeof	(	TCell	)	-	1
3	*	MaxBezier	+	1

n	>	1	&&	p

Insert_Y_Turn	(	RAS_VARS	bottom	)	||	Insert_Y_Turn	(	RAS_VARS	top	+	1	)

(	a	+	b	)	/	2
a	+	b	/	2
(	a	+	b	)	/	2
a	+	b	/	2
(	c	+	d	+	1	)	>>	1

(	a	+	c	+	1	)	>>	1

(	b	+	c	+	1	)	>>	1

(	a	+	b	+	1	)	>>	1

(	c	+	d	+	1	)	>>	1

(	a	+	c	+	1	)	>>	1

(	b	+	c	+	1	)	>>	1

(	a	+	b	+	1	)	>>	1

Dy	<=	0	||	y2	<	miny	||	y1	>	maxy

(	ras	.	precision	*	Dx	)	%	Dy

(	ras	.	precision	*	-	Dx	)	%	Dy

fresh	&&	!	ras	.	fresh

y2	<	miny	||	y1	>	maxy

(	top	+	TRUNC	(	e2	-	e	)	+	1	)	>=	ras	.	maxBuff
(	top	+	TRUNC	(	e2	-	e	)	+	1	)	>=	ras	.	maxBuff
arc	>=	start_arc	&&	e	<=	e2

y2	-	y1	>=	ras	.	precision_step

fresh	&&	!	ras	.	fresh

y2	<	ymin	||	y2	>	ymax

ymin2	<	ymin1	||	ymax2	>	ymax1

(	ras	.	gProfile	->	flags	&	Flow_Up	)	==	(	ras	.	cProfile	->	flags	&	Flow_Up	)
(	ras	.	gProfile	->	flags	&	Flow_Up	)	==	ras	.	cProfile	->	flags	&	Flow_Up
-	*	min	*	pitch

(	ras	.	target	.	rows	-	1	)	*	pitch
ras	.	target	.	rows	-	1	*	pitch
e2	>=	0	&&	e1	<	ras	.	bWidth

0xFF	>>	(	e1	&	7	)
0xFF	>>	e1	&	7
~	(	0x7F	>>	(	e2	&	7	)	)
~	0x7F	>>	(	e2	&	7	)
e1	==	e2	+	ras	.	precision

e1	>=	0	&&	e1	<	ras	.	bWidth

e1	>=	0	&&	e1	<	ras	.	bWidth

0x80	>>	(	y	&	7	)
0x80	>>	y	&	7
e1	>=	0	&&	e1	<	ras	.	target	.	rows

(	ras	.	target	.	rows	-	1	)	*	ras	.	target	.	pitch
ras	.	target	.	rows	-	1	*	ras	.	target	.	pitch
e1	==	e2	+	ras	.	precision

0x80	>>	(	y	&	7	)
0x80	>>	y	&	7
(	ras	.	target	.	rows	-	1	)	*	ras	.	target	.	pitch
ras	.	target	.	rows	-	1	*	ras	.	target	.	pitch
e1	>=	0	&&	e1	<	ras	.	target	.	rows	&&	*	bits	&	f1

0x80	>>	(	y	&	7	)
0x80	>>	y	&	7
e1	>=	0	&&	e1	<	ras	.	target	.	rows

(	ras	.	target	.	rows	-	1	)	*	ras	.	target	.	pitch
ras	.	target	.	rows	-	1	*	ras	.	target	.	pitch
-	ras	.	numTurns	--

x2	-	x1	<=	ras	.	precision	&&	e1	!=	x1	&&	e2	!=	x2

e1	>	e2	||	e2	==	e1	+	ras	.	precision

(	i	+	j	)	/	2
i	+	j	/	2
3	*	MaxBezier	+	1

n	>	1	&&	p

Insert_Y_Turn	(	RAS_VARS	bottom	)	||	Insert_Y_Turn	(	RAS_VARS	top	+	1	)

(	a	+	b	)	/	2
a	+	b	/	2
(	a	+	b	)	/	2
a	+	b	/	2
(	c	+	d	+	1	)	>>	1

(	a	+	c	+	1	)	>>	1

(	b	+	c	+	1	)	>>	1

(	a	+	b	+	1	)	>>	1

(	c	+	d	+	1	)	>>	1

(	a	+	c	+	1	)	>>	1

(	b	+	c	+	1	)	>>	1

(	a	+	b	+	1	)	>>	1

Dy	<=	0	||	y2	<	miny	||	y1	>	maxy

(	ras	.	precision	*	Dx	)	%	Dy

(	ras	.	precision	*	-	Dx	)	%	Dy

fresh	&&	!	ras	.	fresh

y2	<	miny	||	y1	>	maxy

(	top	+	TRUNC	(	e2	-	e	)	+	1	)	>=	ras	.	maxBuff
(	top	+	TRUNC	(	e2	-	e	)	+	1	)	>=	ras	.	maxBuff
arc	>=	start_arc	&&	e	<=	e2

y2	-	y1	>=	ras	.	precision_step

fresh	&&	!	ras	.	fresh

y2	<	ymin	||	y2	>	ymax

ymin2	<	ymin1	||	ymax2	>	ymax1

(	ras	.	gProfile	->	flags	&	Flow_Up	)	==	(	ras	.	cProfile	->	flags	&	Flow_Up	)
ras	.	gProfile	->	flags	&	Flow_Up	==	ras	.	cProfile	->	flags	&	Flow_Up
-	*	min	*	pitch

(	ras	.	target	.	rows	-	1	)	*	pitch
ras	.	target	.	rows	-	1	*	pitch
e2	>=	0	&&	e1	<	ras	.	bWidth

0xFF	>>	(	e1	&	7	)
0xFF	>>	e1	&	7
~	(	0x7F	>>	(	e2	&	7	)	)
~	(	0x7F	>>	e2	&	7	)
e1	==	e2	+	ras	.	precision

e1	>=	0	&&	e1	<	ras	.	bWidth

e1	>=	0	&&	e1	<	ras	.	bWidth

0x80	>>	(	y	&	7	)
0x80	>>	y	&	7
e1	>=	0	&&	e1	<	ras	.	target	.	rows

(	ras	.	target	.	rows	-	1	)	*	ras	.	target	.	pitch
ras	.	target	.	rows	-	1	*	ras	.	target	.	pitch
e1	==	e2	+	ras	.	precision

0x80	>>	(	y	&	7	)
0x80	>>	y	&	7
(	ras	.	target	.	rows	-	1	)	*	ras	.	target	.	pitch
ras	.	target	.	rows	-	1	*	ras	.	target	.	pitch
e1	>=	0	&&	e1	<	ras	.	target	.	rows	&&	*	bits	&	f1

0x80	>>	(	y	&	7	)
0x80	>>	y	&	7
e1	>=	0	&&	e1	<	ras	.	target	.	rows

(	ras	.	target	.	rows	-	1	)	*	ras	.	target	.	pitch
ras	.	target	.	rows	-	1	*	ras	.	target	.	pitch
-	ras	.	numTurns	--

x2	-	x1	<=	ras	.	precision	&&	e1	!=	x1	&&	e2	!=	x2

e1	>	e2	||	e2	==	e1	+	ras	.	precision

(	i	+	j	)	/	2
i	+	j	/	2
cur	->	encoding_id	==	encoding_id	||	cur	->	encoding_id	==	-	1

cur	->	encoding_id	==	encoding_id	||	cur	->	encoding_id	==	-	1

i	<	(	int	)	sizeof	(	str	)	&&	i	>	0

(	State	->	Mod	.	Index	+	1	)	%	State	->	Mod	.	Range
State	->	Mod	.	Index	+	1	%	State	->	Mod	.	Range
-	2.0	*	M_PI	*	Fc_lo	/	bs2b	->	srate

G_lo	*	(	1.0	-	x	)
G_lo	*	1.0	-	x
-	2.0	*	M_PI	*	Fc_hi	/	bs2b	->	srate

1.0	-	G_hi	*	(	1.0	-	x	)
1.0	-	G_hi	*	1.0	-	x
1.0	/	(	1.0	-	G_hi	+	G_lo	)
1.0	/	1.0	-	G_hi	+	G_lo
!	sep	||	confkey	==	sep

(	curBlock	->	entryCount	+	1	)	*	sizeof	(	ConfigEntry	)
curBlock	->	entryCount	+	1	*	sizeof	(	ConfigEntry	)
(	ring	->	read_pos	-	ring	->	write_pos	+	ring	->	length	)	%	ring	->	length
ring	->	read_pos	-	ring	->	write_pos	+	ring	->	length	%	ring	->	length
!	synchsafe_to_long	(	buf	+	2	,	length	)
!	synchsafe_to_long	(	buf	+	2	,	length	)
tagpos	<	length	-	10

!	bytes_to_long	(	tagdata	+	pos	,	framesize	)
!	bytes_to_long	(	tagdata	+	pos	,	framesize	)
fflags	&	(	BAD_FFLAGS	|	COMPR_FFLAG	|	ENCR_FFLAG	)
fflags	&	BAD_FFLAGS	|	COMPR_FFLAG	|	ENCR_FFLAG
(	flags	&	UNSYNC_FLAG	)	||	(	fflags	&	UNSYNC_FFLAG	)

ipos	<	pos	+	framesize

(	flags	&	UNSYNC_FLAG	)	||	(	fflags	&	UNSYNC_FFLAG	)

bom_endian	==	-	1

-	2.0	/	3.0

-	4.0	/	5.0

-	2.0	/	5.0

-	8.0	/	9.0

-	4.0	/	9.0

-	2.0	/	9.0

i	--	,	alloc1	+=	(	1	<<	step	)

i	--	,	alloc1	+=	(	1	<<	step	)

i	--	,	alloc1	+=	(	1	<<	step	)

i	++	,	alloc1	+=	(	1	<<	step	)

i	++	,	alloc1	+=	(	1	<<	step	)

(	*	bdf	++	)	>>	1

(	*	bdf	++	)	>>	1

(	*	bdf	++	)	>>	1

k	+	j	*	6	+	i	*	36

i	|	(	j	<<	3	)	|	(	k	<<	6	)	|	(	3	<<	12	)

k	+	j	*	4	+	i	*	16

i	|	(	j	<<	3	)	|	(	k	<<	6	)	|	(	4	<<	12	)

j	+	i	*	3

i	|	(	j	<<	3	)	|	(	5	<<	12	)

i	|	(	j	<<	3	)	|	(	2	<<	12	)	|	(	1	<<	15	)

l	+	k	*	4	+	j	*	16	+	i	*	80

i	|	(	j	<<	3	)	|	(	k	<<	6	)	|	(	l	<<	9	)	|	(	0	<<	12	)

k	+	j	*	4	+	i	*	20

i	|	(	j	<<	3	)	|	(	k	<<	6	)	|	(	1	<<	12	)

(	gr_info	->	block_type	==	2	)	&&	(	!	gr_info	->	mixed_block_flag	)

r0c	+	r1c	+	2	>	22

(	num0	+	num1	)	*	18
num0	+	num1	*	18
(	num0	+	num1	)	*	10	+	num0
num0	+	num1	*	10	+	num0
!	(	scfsi	&	0x8	)
!	scfsi	&	0x8
!	(	scfsi	&	0x4	)
!	scfsi	&	0x4
!	(	scfsi	&	0x2	)
!	scfsi	&	0x2
!	(	scfsi	&	0x1	)
!	scfsi	&	0x1
(	slen	>>	15	)	&	0x1

(	slen	>>	12	)	&	0x7

(	n	<<	1	)	+	1
n	<<	1	+	1
(	(	576	>>	1	)	-	bv	)	>>	1
(	576	>>	1	-	bv	)	>>	1
x	==	15	&&	h	->	linbits

(	(	unsigned	long	)	mask	)	>>	(	BITSHIFT	+	8	-	h	->	linbits	)
(	(	unsigned	long	)	mask	)	>>	(	BITSHIFT	+	8	-	h	->	linbits	)
y	==	15	&&	h	->	linbits

(	(	unsigned	long	)	mask	)	>>	(	BITSHIFT	+	8	-	h	->	linbits	)
(	(	unsigned	long	)	mask	)	>>	(	BITSHIFT	+	8	-	h	->	linbits	)
l3	&&	(	part2remain	+	num	>	0	)

part2remain	+	num	<=	0

!	(	i	&	1	)
!	i	&	1
a	&	(	0x8	>>	i	)

part2remain	+	num	<=	0

*	m	++	==	0

x	==	15	&&	h	->	linbits

(	(	unsigned	long	)	mask	)	>>	(	BITSHIFT	+	8	-	h	->	linbits	)
(	(	unsigned	long	)	mask	)	>>	(	BITSHIFT	+	8	-	h	->	linbits	)
y	==	15	&&	h	->	linbits

(	(	unsigned	long	)	mask	)	>>	(	BITSHIFT	+	8	-	h	->	linbits	)
(	(	unsigned	long	)	mask	)	>>	(	BITSHIFT	+	8	-	h	->	linbits	)
l3	&&	(	part2remain	+	num	>	0	)

part2remain	+	num	<=	0

!	(	i	&	1	)
!	i	&	1
a	&	(	0x8	>>	i	)

part2remain	+	num	<=	0

lsf	+	(	gr_info	->	scalefac_compress	&	lsf	)
lsf	+	gr_info	->	scalefac_compress	&	lsf
sfb	*	3	+	lwin	-	gr_info	->	mixed_block_flag

11	*	3	+	lwin	-	gr_info	->	mixed_block_flag

sb	--	,	idx	++

sb	--	,	idx	++

sb	--	,	idx	++

(	head	&	0xffe00000	)	!=	0xffe00000
head	&	0xffe00000	!=	0xffe00000
!	(	(	head	>>	17	)	&	3	)
!	(	head	>>	17	)	&	3
(	(	head	>>	12	)	&	0xf	)	==	0xf
(	head	>>	12	)	&	0xf	==	0xf
(	(	head	>>	10	)	&	0x3	)	==	0x3
(	head	>>	10	)	&	0x3	==	0x3
!	head_check	(	nexthead	)	||	(	nexthead	&	HDRCMPMASK	)	!=	(	newhead	&	HDRCMPMASK	)
!	head_check	(	nexthead	)	||	(	nexthead	&	HDRCMPMASK	)	!=	newhead	&	HDRCMPMASK
(	newhead	&	(	unsigned	long	)	0xffffff00	)	==	(	unsigned	long	)	0x49443300
newhead	&	(	unsigned	long	)	0xffffff00	==	(	unsigned	long	)	0x49443300
limit	>=	0	&&	try	>=	limit

limit	>=	0	&&	try	>=	limit

head	&	(	1	<<	20	)

head	&	(	1	<<	19	)

6	+	(	(	head	>>	10	)	&	0x3	)
6	+	(	head	>>	10	)	&	0x3
(	(	head	>>	10	)	&	0x3	)	+	(	lsf	*	3	)
(	head	>>	10	)	&	0x3	+	(	lsf	*	3	)
newhead	&	(	1	<<	20	)

(	(	newhead	>>	10	)	&	0x3	)	==	0x3
(	newhead	>>	10	)	&	0x3	==	0x3
(	ch	<	0xC2	)	||	(	ch	>	0xFD	)

(	*	s	++	&	0xC0	)	!=	0x80
*	s	++	&	0xC0	!=	0x80
!	force	&&	is_utf8	(	src	)

pos	>=	bc	->	fileoff	&&	pos	-	bc	->	fileoff	<	bc	->	size

i	%	32	==	31

i	%	64	==	63

i	++	,	j	--	,	idx	+=	32

i	%	32	==	31

i	%	64	==	63

127	-	(	int	)	(	log	(	1.0	-	255.0	*	(	double	)	i	*	mul	/	32768.0	)	*	m	)

255	-	(	int	)	(	log	(	1.0	+	255.0	*	(	double	)	i	*	mul	/	32768.0	)	*	m	)

start	+	num_to_check	>	8

num	!=	-	1

num	!=	-	1

num	!=	-	1

(	ptime	->	month	-	1	)	%	12
ptime	->	month	-	1	%	12
png_ptr	->	chunk_list	+	png_ptr	->	num_chunk_list	*	5	-	5

bit_depth	!=	1	&&	bit_depth	!=	2	&&	bit_depth	!=	4	&&	bit_depth	!=	8	&&	bit_depth	!=	16

color_type	<	0	||	color_type	==	1	||	color_type	==	5	||	color_type	>	6

(	(	color_type	==	PNG_COLOR_TYPE_PALETTE	)	&&	bit_depth	>	8	)	||	(	(	color_type	==	PNG_COLOR_TYPE_RGB	||	color_type	==	PNG_COLOR_TYPE_GRAY_ALPHA	||	color_type	==	PNG_COLOR_TYPE_RGB_ALPHA	)	&&	bit_depth	<	8	)
(	color_type	==	PNG_COLOR_TYPE_PALETTE	)	&&	bit_depth	>	8	)	||	(	(	color_type	==	PNG_COLOR_TYPE_RGB	||	color_type	==	PNG_COLOR_TYPE_GRAY_ALPHA	||	color_type	==	PNG_COLOR_TYPE_RGB_ALPHA	)	&&	bit_depth	<	8	(	(	color_type	==	PNG_COLOR_TYPE_PALETTE	)	&&	bit_depth	>	8	)	||	(	(	color_type	==	PNG_COLOR_TYPE_RGB	||	color_type	==	PNG_COLOR_TYPE_GRAY_ALPHA	||	color_type	==	PNG_COLOR_TYPE_RGB_ALPHA	)	&&	bit_depth	<	8	)
red	<	0	||	green	<	0

red	+	green	<	100000L

!	(	color_type	&	PNG_COLOR_MASK_COLOR	)
!	color_type	&	PNG_COLOR_MASK_COLOR
(	color_type	==	PNG_COLOR_TYPE_PALETTE	&&	png_ptr	->	num_trans	!=	0	)	&&	(	fabs	(	png_ptr	->	screen_gamma	*	png_ptr	->	gamma	-	1.0	)	<	PNG_GAMMA_THRESHOLD	)
==	PNG_COLOR_TYPE_PALETTE	&&	png_ptr	->	num_trans	!=	0	)	&&	(	fabs	(	png_ptr	->	screen_gamma	*	png_ptr	->	gamma	-	1.0	)	<	PNG_GAMMA_THRESHOLD	(	color_type	==	PNG_COLOR_TYPE_PALETTE	&&	png_ptr	->	num_trans	!=	0	)	&&	(	fabs	(	png_ptr	->	screen_gamma	*	png_ptr	->	gamma	-	1.0	)	<	PNG_GAMMA_THRESHOLD	color_type	==	PNG_COLOR_TYPE_PALETTE	&&	png_ptr	->	num_trans	!=	0	)	&&	(	fabs	(	png_ptr	->	screen_gamma	*	png_ptr	->	gamma	-	1.0	)	<	PNG_GAMMA_THRESHOLD	(	color_type	==	PNG_COLOR_TYPE_PALETTE	&&	png_ptr	->	num_trans	!=	0	)	&&	(	fabs	(	png_ptr	->	screen_gamma	*	png_ptr	->	gamma	-	1.0	)	<	PNG_GAMMA_THRESHOLD	)
fabs	(	gs	-	1.0	)	<	PNG_GAMMA_THRESHOLD
(	gs	-	1.0	)	<	fabs	(	gs	-	1.0	)	<	PNG_GAMMA_THRESHOLD
(	png_ptr	->	background	.	red	!=	png_ptr	->	background	.	green	)	||	(	png_ptr	->	background	.	red	!=	png_ptr	->	background	.	blue	)	||	(	png_ptr	->	background	.	red	!=	png_ptr	->	background	.	gray	)

sr	<	0	||	sr	>	8

sg	<	0	||	sg	>	8

sb	<	0	||	sb	>	8

!	(	row_info	->	color_type	&	PNG_COLOR_MASK_COLOR	)
!	row_info	->	color_type	&	PNG_COLOR_MASK_COLOR
row	+	(	row_info	->	rowbytes	<<	1	)	-	1
row	+	row_info	->	rowbytes	<<	1	-	1
row_info	->	color_type	==	PNG_COLOR_TYPE_RGB	&&	trans_value

shift	<	(	16	-	PNG_MAX_GAMMA_8	)

1	<<	(	8	-	shift	)

(	(	double	)	i	+	0.5	)	/	256.0
(	double	)	i	+	0.5	/	256.0
!	(	png_ptr	->	mode	&	PNG_HAVE_IHDR	)
!	png_ptr	->	mode	&	PNG_HAVE_IHDR
png_ptr	->	color_type	==	PNG_COLOR_TYPE_PALETTE	&&	!	(	png_ptr	->	mode	&	PNG_HAVE_PLTE	)
->	color_type	==	PNG_COLOR_TYPE_PALETTE	&&	!	png_ptr	->	mode	&	png_ptr	->	color_type	==	PNG_COLOR_TYPE_PALETTE	&&	!	png_ptr	->	mode	&	PNG_HAVE_PLTE
!	(	png_ptr	->	mode	&	PNG_HAVE_IHDR	)
!	png_ptr	->	mode	&	PNG_HAVE_IHDR
png_ptr	->	color_type	==	PNG_COLOR_TYPE_PALETTE	&&	!	(	png_ptr	->	mode	&	PNG_HAVE_PLTE	)
->	color_type	==	PNG_COLOR_TYPE_PALETTE	&&	!	png_ptr	->	mode	&	png_ptr	->	color_type	==	PNG_COLOR_TYPE_PALETTE	&&	!	png_ptr	->	mode	&	PNG_HAVE_PLTE
png_ptr	->	row_number	==	0	&&	png_ptr	->	pass	==	0

(	png_ptr	->	row_number	&	0x07	)	||	png_ptr	->	width	<	5

(	png_ptr	->	row_number	&	0x07	)	!=	4
png_ptr	->	row_number	&	0x07	!=	4
(	png_ptr	->	row_number	&	3	)	||	png_ptr	->	width	<	3

(	png_ptr	->	row_number	&	3	)	!=	2
png_ptr	->	row_number	&	3	!=	2
(	png_ptr	->	row_number	&	1	)	||	png_ptr	->	width	<	2

!	(	png_ptr	->	row_number	&	1	)
!	png_ptr	->	row_number	&	1
(	png_ptr	->	mng_features_permitted	&	PNG_FLAG_MNG_FILTER_64	)	&&	(	png_ptr	->	filter_type	==	PNG_INTRAPIXEL_DIFFERENCING	)

1	<<	(	8	-	png_ptr	->	gamma_shift	)

1	<<	(	8	-	png_ptr	->	gamma_shift	)

1	<<	(	8	-	png_ptr	->	gamma_shift	)

(	png_ptr	->	bit_depth	<	8	)	||	(	png_ptr	->	color_type	==	PNG_COLOR_TYPE_PALETTE	)	||	(	png_get_valid	(	png_ptr	,	info_ptr	,	PNG_INFO_tRNS	)	)
png_ptr	->	bit_depth	<	8	)	||	(	png_ptr	->	color_type	==	PNG_COLOR_TYPE_PALETTE	)	||	(	png_get_valid	(	png_ptr	,	info_ptr	,	PNG_INFO_tRNS	)	(	png_ptr	->	bit_depth	<	8	)	||	(	png_ptr	->	color_type	==	PNG_COLOR_TYPE_PALETTE	)	||	(	png_get_valid	(	png_ptr	,	info_ptr	,	PNG_INFO_tRNS	)	)
(	transforms	&	PNG_TRANSFORM_SHIFT	)	&&	png_get_valid	(	png_ptr	,	info_ptr	,	PNG_INFO_sBIT	)

png_ptr	->	color_type	==	PNG_COLOR_TYPE_GRAY	&&	png_ptr	->	bit_depth	>=	8

row_info	->	color_type	==	PNG_COLOR_TYPE_GRAY_ALPHA	&&	row_info	->	bit_depth	==	8

row_info	->	color_type	==	PNG_COLOR_TYPE_GRAY_ALPHA	&&	row_info	->	bit_depth	==	16

row_info	->	color_type	==	0	||	row_info	->	color_type	==	3

!	(	(	color_type	==	PNG_COLOR_TYPE_GRAY	&&	(	int	)	trans_values	->	gray	>	sample_max	)	||	(	color_type	==	PNG_COLOR_TYPE_RGB	&&	(	(	int	)	trans_values	->	red	>	sample_max	||	(	int	)	trans_values	->	green	>	sample_max	||	(	int	)	trans_values	->	blue	>	sample_max	)	)	)
!	(	(	color_type	==	PNG_COLOR_TYPE_GRAY	&&	(	int	)	trans_values	->	gray	>	sample_max	)	||	(	color_type	==	PNG_COLOR_TYPE_RGB	&&	(	int	)	trans_values	->	red	>	sample_max	||	(	int	)	trans_values	->	green	>	sample_max	||	(	int	)	trans_values	->	blue	>	sample_max	)	)
!	multiple	&&	argc	==	3	+	verbose

(	!	multiple	&&	argc	>	3	+	verbose	)	||	(	multiple	&&	argc	<	2	)

i	==	0	||	verbose	==	1	||	ierror	!=	0

verbose	==	1	||	i	==	2

verbose	==	0	&&	i	!=	2

(	c	&	0xf0	)	>>	4
c	&	0xf0	>>	4
png_ptr	->	push_length	+	4	>	png_ptr	->	buffer_size

png_ptr	->	push_length	+	4	>	png_ptr	->	buffer_size

png_ptr	->	push_length	+	4	>	png_ptr	->	buffer_size

!	(	png_ptr	->	mode	&	PNG_HAVE_IHDR	)
!	png_ptr	->	mode	&	PNG_HAVE_IHDR
png_ptr	->	color_type	==	PNG_COLOR_TYPE_PALETTE	&&	!	(	png_ptr	->	mode	&	PNG_HAVE_PLTE	)
png_ptr	->	color_type	==	PNG_COLOR_TYPE_PALETTE	&&	!	png_ptr	->	mode	&	PNG_HAVE_PLTE
png_ptr	->	push_length	+	4	>	png_ptr	->	buffer_size

!	(	png_ptr	->	mode	&	PNG_HAVE_IHDR	)
!	png_ptr	->	mode	&	PNG_HAVE_IHDR
png_ptr	->	color_type	==	PNG_COLOR_TYPE_PALETTE	&&	!	(	png_ptr	->	mode	&	PNG_HAVE_PLTE	)
->	color_type	==	PNG_COLOR_TYPE_PALETTE	&&	!	png_ptr	->	mode	&	png_ptr	->	color_type	==	PNG_COLOR_TYPE_PALETTE	&&	!	png_ptr	->	mode	&	PNG_HAVE_PLTE
png_ptr	->	push_length	+	4	>	png_ptr	->	buffer_size

png_ptr	->	push_length	+	4	>	png_ptr	->	buffer_size

png_ptr	->	push_length	+	4	>	png_ptr	->	buffer_size

png_ptr	->	push_length	+	4	>	png_ptr	->	buffer_size

png_ptr	->	push_length	+	4	>	png_ptr	->	buffer_size

png_ptr	->	push_length	+	4	>	png_ptr	->	buffer_size

png_ptr	->	push_length	+	4	>	png_ptr	->	buffer_size

png_ptr	->	push_length	+	4	>	png_ptr	->	buffer_size

png_ptr	->	push_length	+	4	>	png_ptr	->	buffer_size

png_ptr	->	push_length	+	4	>	png_ptr	->	buffer_size

png_ptr	->	push_length	+	4	>	png_ptr	->	buffer_size

png_ptr	->	push_length	+	4	>	png_ptr	->	buffer_size

png_ptr	->	push_length	+	4	>	png_ptr	->	buffer_size

png_ptr	->	push_length	+	4	>	png_ptr	->	buffer_size

png_ptr	->	push_length	+	4	>	png_ptr	->	buffer_size

png_ptr	->	push_length	+	4	>	png_ptr	->	buffer_size

png_ptr	->	push_length	+	4	>	png_ptr	->	buffer_size

png_ptr	->	push_length	+	4	>	png_ptr	->	buffer_size

png_ptr	->	save_buffer_size	+	png_ptr	->	current_buffer_size	>	png_ptr	->	save_buffer_max

!	(	png_ptr	->	zstream	.	avail_out	>	0	)
!	png_ptr	->	zstream	.	avail_out	>	0
png_ptr	->	row_number	>=	png_ptr	->	num_rows	||	png_ptr	->	pass	>	6

png_ptr	->	row_number	>=	png_ptr	->	num_rows	||	png_ptr	->	pass	>	6

i	<	8	&&	png_ptr	->	pass	==	0

i	<	4	&&	png_ptr	->	pass	==	2

png_ptr	->	pass	==	4	&&	png_ptr	->	height	<=	4

i	<	2	&&	png_ptr	->	pass	==	4

png_ptr	->	pass	==	6	&&	png_ptr	->	height	<=	4

i	<	8	&&	png_ptr	->	pass	==	1

i	<	4	&&	png_ptr	->	pass	==	2

i	<	4	&&	png_ptr	->	pass	==	2

i	<	4	&&	png_ptr	->	pass	==	2

i	<	2	&&	png_ptr	->	pass	==	4

i	<	4	&&	png_ptr	->	pass	==	3

i	<	2	&&	png_ptr	->	pass	==	4

i	<	2	&&	png_ptr	->	pass	==	4

i	<	2	&&	png_ptr	->	pass	==	4

i	<	2	&&	png_ptr	->	pass	==	5

(	png_ptr	->	pass	==	1	&&	png_ptr	->	width	<	5	)	||	(	png_ptr	->	pass	==	3	&&	png_ptr	->	width	<	3	)	||	(	png_ptr	->	pass	==	5	&&	png_ptr	->	width	<	2	)

png_ptr	->	iwidth	==	0	||	png_ptr	->	num_rows	==	0

output	!=	0	&&	output_size	>	count

(	PNG_USER_CHUNK_MALLOC_MAX	>	0	)	&&	prefix_size	+	expanded_size	>=	PNG_USER_CHUNK_MALLOC_MAX	-	1
PNG_USER_CHUNK_MALLOC_MAX	>	0	&&	prefix_size	+	expanded_size	>=	PNG_USER_CHUNK_MALLOC_MAX	-	1
!	(	png_ptr	->	mode	&	PNG_HAVE_IHDR	)
!	png_ptr	->	mode	&	PNG_HAVE_IHDR
!	(	png_ptr	->	color_type	&	PNG_COLOR_MASK_COLOR	)
!	png_ptr	->	color_type	&	PNG_COLOR_MASK_COLOR
!	(	png_ptr	->	mode	&	PNG_HAVE_IHDR	)
!	png_ptr	->	mode	&	PNG_HAVE_IHDR
!	(	png_ptr	->	mode	&	PNG_HAVE_IHDR	)
!	png_ptr	->	mode	&	PNG_HAVE_IHDR
!	(	png_ptr	->	mode	&	PNG_HAVE_IHDR	)
!	png_ptr	->	mode	&	PNG_HAVE_IHDR
!	(	png_ptr	->	mode	&	PNG_HAVE_IHDR	)
!	png_ptr	->	mode	&	PNG_HAVE_IHDR
!	(	png_ptr	->	mode	&	PNG_HAVE_IHDR	)
!	png_ptr	->	mode	&	PNG_HAVE_IHDR
--	png_ptr	->	user_chunk_cache_max	==	1

!	(	png_ptr	->	mode	&	PNG_HAVE_IHDR	)
!	png_ptr	->	mode	&	PNG_HAVE_IHDR
entry_start	>	(	png_bytep	)	png_ptr	->	chunkdata	+	slength	-	2

!	(	png_ptr	->	mode	&	PNG_HAVE_IHDR	)
!	png_ptr	->	mode	&	PNG_HAVE_IHDR
!	(	png_ptr	->	mode	&	PNG_HAVE_PLTE	)
!	png_ptr	->	mode	&	PNG_HAVE_PLTE
!	(	png_ptr	->	mode	&	PNG_HAVE_IHDR	)
!	png_ptr	->	mode	&	PNG_HAVE_IHDR
png_ptr	->	color_type	==	PNG_COLOR_TYPE_PALETTE	&&	!	(	png_ptr	->	mode	&	PNG_HAVE_PLTE	)
->	color_type	==	PNG_COLOR_TYPE_PALETTE	&&	!	png_ptr	->	mode	&	png_ptr	->	color_type	==	PNG_COLOR_TYPE_PALETTE	&&	!	png_ptr	->	mode	&	PNG_HAVE_PLTE
!	(	png_ptr	->	color_type	&	PNG_COLOR_MASK_COLOR	)
!	png_ptr	->	color_type	&	PNG_COLOR_MASK_COLOR
!	(	png_ptr	->	mode	&	PNG_HAVE_IHDR	)
!	png_ptr	->	mode	&	PNG_HAVE_IHDR
!	(	png_ptr	->	mode	&	PNG_HAVE_PLTE	)
!	png_ptr	->	mode	&	PNG_HAVE_PLTE
num	!=	(	unsigned	int	)	png_ptr	->	num_palette	||	num	>	(	unsigned	int	)	PNG_MAX_PALETTE_LENGTH

!	(	png_ptr	->	mode	&	PNG_HAVE_IHDR	)
!	png_ptr	->	mode	&	PNG_HAVE_IHDR
!	(	png_ptr	->	mode	&	PNG_HAVE_IHDR	)
!	png_ptr	->	mode	&	PNG_HAVE_IHDR
!	(	png_ptr	->	mode	&	PNG_HAVE_IHDR	)
!	png_ptr	->	mode	&	PNG_HAVE_IHDR
endptr	<=	buf	+	12

!	(	png_ptr	->	mode	&	PNG_HAVE_IHDR	)
!	png_ptr	->	mode	&	PNG_HAVE_IHDR
png_ptr	->	chunkdata	+	slength	<	ep

png_ptr	->	chunkdata	+	slength	<	ep

!	(	png_ptr	->	mode	&	PNG_HAVE_IHDR	)
!	png_ptr	->	mode	&	PNG_HAVE_IHDR
--	png_ptr	->	user_chunk_cache_max	==	1

!	(	png_ptr	->	mode	&	PNG_HAVE_IHDR	)
!	png_ptr	->	mode	&	PNG_HAVE_IHDR
text	!=	key	+	slength

--	png_ptr	->	user_chunk_cache_max	==	1

!	(	png_ptr	->	mode	&	PNG_HAVE_IHDR	)
!	png_ptr	->	mode	&	PNG_HAVE_IHDR
--	png_ptr	->	user_chunk_cache_max	==	1

!	(	png_ptr	->	mode	&	PNG_HAVE_IHDR	)
!	png_ptr	->	mode	&	PNG_HAVE_IHDR
--	png_ptr	->	user_chunk_cache_max	==	1

row	+	(	png_size_t	)	(	(	row_info	->	width	-	1	)	>>	3	)

(	row_info	->	width	+	7	)	&	0x07

7	-	(	int	)	(	(	row_info	->	width	+	7	)	&	0x07	)

(	(	row_info	->	width	+	3	)	&	0x03	)	<<	1
(	row_info	->	width	+	3	)	&	0x03	<<	1
(	3	-	(	(	row_info	->	width	+	3	)	&	0x03	)	)	<<	1
(	3	-	(	row_info	->	width	+	3	)	&	0x03	)	<<	1
row	+	(	png_size_t	)	(	(	row_info	->	width	-	1	)	>>	1	)

(	(	row_info	->	width	+	1	)	&	0x01	)	<<	2
(	row_info	->	width	+	1	)	&	0x01	<<	2
(	1	-	(	(	row_info	->	width	+	1	)	&	0x01	)	)	<<	2
(	1	-	(	row_info	->	width	+	1	)	&	0x01	)	<<	2
row	+	(	png_size_t	)	(	row_info	->	width	-	1	)	*	pixel_bytes

!	(	png_ptr	->	zstream	.	avail_out	)	||	png_ptr	->	zstream	.	avail_in	||	png_ptr	->	idat_size

PNG_ROWBYTES	(	max_pixel_depth	,	row_bytes	)	+	1	+	(	(	max_pixel_depth	+	7	)	>>	3	)
PNG_ROWBYTES	(	max_pixel_depth	,	row_bytes	)	+	1	+	(	max_pixel_depth	+	7	)	>>	3
row_bytes	+	64	>	png_ptr	->	old_big_row_buf_size

row_bytes	+	1	>	png_ptr	->	old_prev_row_size

info_ptr	->	num_palette	==	0	||	info_ptr	->	num_palette	>	PNG_MAX_PALETTE_LENGTH

num_palette	<	0	||	num_palette	>	PNG_MAX_PALETTE_LENGTH

info_ptr	->	num_text	+	num_text	>	info_ptr	->	max_text

num_trans	>	0	&&	num_trans	<=	PNG_MAX_PALETTE_LENGTH

(	info_ptr	->	color_type	==	PNG_COLOR_TYPE_GRAY	&&	(	int	)	trans_values	->	gray	>	sample_max	)	||	(	info_ptr	->	color_type	==	PNG_COLOR_TYPE_RGB	&&	(	(	int	)	trans_values	->	red	>	sample_max	||	(	int	)	trans_values	->	green	>	sample_max	||	(	int	)	trans_values	->	blue	>	sample_max	)	)
(	info_ptr	->	color_type	==	PNG_COLOR_TYPE_GRAY	&&	(	int	)	trans_values	->	gray	>	sample_max	)	||	(	info_ptr	->	color_type	==	PNG_COLOR_TYPE_RGB	&&	(	int	)	trans_values	->	red	>	sample_max	||	(	int	)	trans_values	->	green	>	sample_max	||	(	int	)	trans_values	->	blue	>	sample_max	)
new_list	+	5	*	old_num_chunks

bit_depth	!=	8	&&	bit_depth	!=	16

bit_depth	!=	8	&&	bit_depth	!=	16

bit_depth	!=	8	&&	bit_depth	!=	16

interlace_type	!=	PNG_INTERLACE_NONE	&&	interlace_type	!=	PNG_INTERLACE_ADAM7

png_ptr	->	color_type	==	PNG_COLOR_TYPE_PALETTE	||	png_ptr	->	bit_depth	<	8
->	color_type	==	PNG_COLOR_TYPE_PALETTE	||	png_ptr	->	bit_depth	<	png_ptr	->	color_type	==	PNG_COLOR_TYPE_PALETTE	||	png_ptr	->	bit_depth	<	8
!	(	png_ptr	->	color_type	&	PNG_COLOR_MASK_COLOR	)
!	png_ptr	->	color_type	&	PNG_COLOR_MASK_COLOR
(	z_cmf	&	0x0f	)	==	8	&&	(	z_cmf	&	0xf0	)	<=	0x70
z_cmf	&	0x0f	==	8	&&	z_cmf	&	0xf0	<=	0x70
length	>=	2	&&	png_ptr	->	height	<	16384	&&	png_ptr	->	width	<	16384

1	<<	(	z_cinfo	+	7	)

(	z_cmf	&	0x0f	)	|	(	z_cinfo	<<	4	)

(	(	*	(	(	png_bytep	)	profile	)	)	<<	24	)	|	(	(	*	(	(	png_bytep	)	profile	+	1	)	)	<<	16	)	|	(	(	*	(	(	png_bytep	)	profile	+	2	)	)	<<	8	)	|	(	(	*	(	(	png_bytep	)	profile	+	3	)	)	)
(	(	*	(	(	png_bytep	)	profile	)	)	<<	24	)	|	(	(	*	(	png_bytep	)	profile	+	1	)	<<	16	)	|	(	(	*	(	(	png_bytep	)	profile	+	2	)	)	<<	8	)	|	(	(	*	(	(	png_bytep	)	profile	+	3	)	)	)
sbit	->	gray	==	0	||	sbit	->	gray	>	png_ptr	->	usr_bit_depth

sbit	->	alpha	==	0	||	sbit	->	alpha	>	png_ptr	->	usr_bit_depth

num_trans	<=	0	||	num_trans	>	(	int	)	png_ptr	->	num_palette

tran	->	gray	>=	(	1	<<	png_ptr	->	bit_depth	)

png_ptr	->	num_palette	||	(	!	(	png_ptr	->	mng_features_permitted	&	PNG_FLAG_MNG_EMPTY_PLTE	)	)
png_ptr	->	num_palette	||	(	!	png_ptr	->	mng_features_permitted	&	PNG_FLAG_MNG_EMPTY_PLTE	)
back	->	gray	>=	(	1	<<	png_ptr	->	bit_depth	)

i	==	nparams	-	1

mod_time	->	month	>	12	||	mod_time	->	month	<	1	||	mod_time	->	day	>	31	||	mod_time	->	day	<	1	||	mod_time	->	hour	>	23	||	mod_time	->	second	>	60

PNG_ROWBYTES	(	png_ptr	->	usr_channels	*	png_ptr	->	usr_bit_depth	,	png_ptr	->	width	)	+	1

png_ptr	->	do_filter	&	(	PNG_FILTER_AVG	|	PNG_FILTER_UP	|	PNG_FILTER_PAETH	)
png_ptr	->	do_filter	&	PNG_FILTER_AVG	|	PNG_FILTER_UP	|	PNG_FILTER_PAETH
png_ptr	->	usr_width	==	0	||	png_ptr	->	num_rows	==	0

(	png_size_t	)	(	PNG_ROWBYTES	(	png_ptr	->	usr_channels	*	png_ptr	->	usr_bit_depth	,	png_ptr	->	width	)	)	+	1

png_ptr	->	flush_dist	>	0	&&	png_ptr	->	flush_rows	>=	png_ptr	->	flush_dist

png_ptr	->	row_number	==	0	&&	png_ptr	->	pass	==	0

(	png_ptr	->	row_number	&	0x07	)	||	png_ptr	->	width	<	5

(	png_ptr	->	row_number	&	0x07	)	!=	4
png_ptr	->	row_number	&	0x07	!=	4
(	png_ptr	->	row_number	&	0x03	)	||	png_ptr	->	width	<	3

(	png_ptr	->	row_number	&	0x03	)	!=	2
png_ptr	->	row_number	&	0x03	!=	2
(	png_ptr	->	row_number	&	0x01	)	||	png_ptr	->	width	<	2

!	(	png_ptr	->	row_number	&	0x01	)
!	png_ptr	->	row_number	&	0x01
(	png_ptr	->	mng_features_permitted	&	PNG_FLAG_MNG_FILTER_64	)	&&	(	png_ptr	->	filter_type	==	PNG_INTRAPIXEL_DIFFERENCING	)

(	png_ptr	->	mng_features_permitted	&	PNG_FLAG_MNG_FILTER_64	)	&&	(	method	==	PNG_INTRAPIXEL_DIFFERENCING	)

filters	&	(	PNG_ALL_FILTERS	|	0x07	)
filters	&	PNG_ALL_FILTERS	|	0x07
(	transforms	&	PNG_TRANSFORM_SHIFT	)	&&	(	info_ptr	->	valid	&	PNG_INFO_sBIT	)

info_ptr	->	phys_unit_type	!=	PNG_RESOLUTION_METER	||	info_ptr	->	x_pixels_per_unit	!=	info_ptr	->	y_pixels_per_unit

encodingName	&&	!	protocolEncodingName

which_tbl	<	0	||	which_tbl	>=	NUM_QUANT_TBLS

force_baseline	&&	temp	>	255L

200	-	quality	*	2

nsymbols	<	1	||	nsymbols	>	256

cinfo	->	num_components	<	1	||	cinfo	->	num_components	>	MAX_COMPONENTS

ncomps	==	3	&&	cinfo	->	jpeg_color_space	==	JCS_YCbCr

2	+	4	*	ncomps

ncomps	==	3	&&	cinfo	->	jpeg_color_space	==	JCS_YCbCr

rgroup	*	(	M	+	4	)
rgroup	*	M	+	4
i	<	rgroup	*	(	M	+	2	)
i	<	rgroup	*	M	+	2
i	<	rgroup	*	2

rgroup	*	(	M	-	2	)	+	i
rgroup	*	M	-	2	+	i
rgroup	*	M	+	i

rgroup	*	M	+	i

rgroup	*	(	M	-	2	)	+	i
rgroup	*	M	-	2	+	i
rgroup	*	(	M	+	1	)	+	i
rgroup	*	M	+	1	+	i
rgroup	*	(	M	+	1	)	+	i
rgroup	*	M	+	1	+	i
rgroup	*	(	M	+	2	)	+	i
rgroup	*	M	+	2	+	i
rgroup	*	(	M	+	2	)	+	i
rgroup	*	M	+	2	+	i
(	rows_left	-	1	)	/	rgroup	+	1
rows_left	-	1	/	rgroup	+	1
i	<	rgroup	*	2

++	(	*	histp	)	<=	0

boxp	->	colorcount	>	maxc	&&	boxp	->	volume	>	0

*	histp	++	!=	0

*	histp	++	!=	0

*	histp	++	!=	0

*	histp	++	!=	0

(	(	c0max	-	c0min	)	<<	C0_SHIFT	)	*	C0_SCALE
(	c0max	-	c0min	)	<<	C0_SHIFT	*	C0_SCALE
(	(	c1max	-	c1min	)	<<	C1_SHIFT	)	*	C1_SCALE
(	(	c1max	-	c1min	)	<<	C1_SHIFT	)	*	C1_SCALE
(	(	c2max	-	c2min	)	<<	C2_SHIFT	)	*	C2_SCALE
(	(	c2max	-	c2min	)	<<	C2_SHIFT	)	*	C2_SCALE
dist0	*	dist0	+	dist1	*	dist1	+	dist2	*	dist2

numboxes	*	2	<=	desired_colors

(	(	b1	->	c0max	-	b1	->	c0min	)	<<	C0_SHIFT	)	*	C0_SCALE
(	b1	->	c0max	-	b1	->	c0min	)	<<	C0_SHIFT	*	C0_SCALE
(	(	b1	->	c1max	-	b1	->	c1min	)	<<	C1_SHIFT	)	*	C1_SCALE
(	b1	->	c1max	-	b1	->	c1min	)	<<	C1_SHIFT	*	C1_SCALE
(	(	b1	->	c2max	-	b1	->	c2min	)	<<	C2_SHIFT	)	*	C2_SCALE
(	b1	->	c2max	-	b1	->	c2min	)	<<	C2_SHIFT	*	C2_SCALE
(	b1	->	c0max	+	b1	->	c0min	)	/	2
b1	->	c0max	+	b1	->	c0min	/	2
(	b1	->	c1max	+	b1	->	c1min	)	/	2
b1	->	c1max	+	b1	->	c1min	/	2
(	b1	->	c2max	+	b1	->	c2min	)	/	2
b1	->	c2max	+	b1	->	c2min	/	2
(	(	c0	<<	C0_SHIFT	)	+	(	(	1	<<	C0_SHIFT	)	>>	1	)	)	*	count
c0	<<	C0_SHIFT	+	(	1	<<	C0_SHIFT	)	>>	1	*	count
(	(	c1	<<	C1_SHIFT	)	+	(	(	1	<<	C1_SHIFT	)	>>	1	)	)	*	count
(	(	c1	<<	C1_SHIFT	)	+	(	1	<<	C1_SHIFT	)	>>	1	)	*	count
(	(	c2	<<	C2_SHIFT	)	+	(	(	1	<<	C2_SHIFT	)	>>	1	)	)	*	count
(	c2	<<	C2_SHIFT	+	(	(	1	<<	C2_SHIFT	)	>>	1	)	)	*	count
(	c0total	+	(	total	>>	1	)	)	/	total
c0total	+	total	>>	1	/	total
(	c1total	+	(	total	>>	1	)	)	/	total
c1total	+	total	>>	1	/	total
(	c2total	+	(	total	>>	1	)	)	/	total
(	c2total	+	total	>>	1	)	/	total
minc0	+	(	(	1	<<	BOX_C0_SHIFT	)	-	(	1	<<	C0_SHIFT	)	)
minc0	+	(	1	<<	BOX_C0_SHIFT	-	(	1	<<	C0_SHIFT	)	)
(	minc0	+	maxc0	)	>>	1

minc1	+	(	(	1	<<	BOX_C1_SHIFT	)	-	(	1	<<	C1_SHIFT	)	)
minc1	+	(	1	<<	BOX_C1_SHIFT	-	1	<<	C1_SHIFT	)
(	minc1	+	maxc1	)	>>	1

minc2	+	(	(	1	<<	BOX_C2_SHIFT	)	-	(	1	<<	C2_SHIFT	)	)
minc2	+	(	(	1	<<	BOX_C2_SHIFT	)	-	(	1	<<	C2_SHIFT	)	)
(	minc2	+	maxc2	)	>>	1

(	x	-	minc0	)	*	C0_SCALE
x	-	minc0	*	C0_SCALE
(	x	-	maxc0	)	*	C0_SCALE
x	-	maxc0	*	C0_SCALE
(	x	-	maxc0	)	*	C0_SCALE
x	-	maxc0	*	C0_SCALE
(	x	-	minc0	)	*	C0_SCALE
x	-	minc0	*	C0_SCALE
(	x	-	maxc0	)	*	C0_SCALE
x	-	maxc0	*	C0_SCALE
(	x	-	minc0	)	*	C0_SCALE
x	-	minc0	*	C0_SCALE
(	x	-	minc1	)	*	C1_SCALE
x	-	minc1	*	C1_SCALE
(	x	-	maxc1	)	*	C1_SCALE
x	-	maxc1	*	C1_SCALE
(	x	-	maxc1	)	*	C1_SCALE
x	-	maxc1	*	C1_SCALE
(	x	-	minc1	)	*	C1_SCALE
x	-	minc1	*	C1_SCALE
(	x	-	maxc1	)	*	C1_SCALE
x	-	maxc1	*	C1_SCALE
(	x	-	minc1	)	*	C1_SCALE
x	-	minc1	*	C1_SCALE
(	x	-	minc2	)	*	C2_SCALE
x	-	minc2	*	C2_SCALE
(	x	-	maxc2	)	*	C2_SCALE
x	-	maxc2	*	C2_SCALE
(	x	-	maxc2	)	*	C2_SCALE
x	-	maxc2	*	C2_SCALE
(	x	-	minc2	)	*	C2_SCALE
x	-	minc2	*	C2_SCALE
(	x	-	maxc2	)	*	C2_SCALE
x	-	maxc2	*	C2_SCALE
(	x	-	minc2	)	*	C2_SCALE
x	-	minc2	*	C2_SCALE
inc0	*	(	2	*	STEP_C0	)	+	STEP_C0	*	STEP_C0
inc0	*	(	2	*	STEP_C0	)	+	STEP_C0	*	STEP_C0
inc1	*	(	2	*	STEP_C1	)	+	STEP_C1	*	STEP_C1
inc1	*	(	2	*	STEP_C1	)	+	STEP_C1	*	STEP_C1
inc2	*	(	2	*	STEP_C2	)	+	STEP_C2	*	STEP_C2
inc2	*	(	2	*	STEP_C2	)	+	STEP_C2	*	STEP_C2
(	c0	<<	BOX_C0_SHIFT	)	+	(	(	1	<<	C0_SHIFT	)	>>	1	)
c0	<<	BOX_C0_SHIFT	+	(	1	<<	C0_SHIFT	)	>>	1
(	c1	<<	BOX_C1_SHIFT	)	+	(	(	1	<<	C1_SHIFT	)	>>	1	)
(	c1	<<	BOX_C1_SHIFT	)	+	(	1	<<	C1_SHIFT	)	>>	1
(	c2	<<	BOX_C2_SHIFT	)	+	(	(	1	<<	C2_SHIFT	)	>>	1	)
c2	<<	BOX_C2_SHIFT	+	(	(	1	<<	C2_SHIFT	)	>>	1	)
(	width	-	1	)	*	3
width	-	1	*	3
cquantize	->	fserrors	+	(	width	+	1	)	*	3
cquantize	->	fserrors	+	width	+	1	*	3
in	<	STEPSIZE	*	3
in	<	STEPSIZE	*	3
(	(	unsigned	int	)	GETJOCTET	(	*	next_input_byte	++	)	)	<<	8

(	(	unsigned	int	)	GETJOCTET	(	*	next_input_byte	++	)	)	<<	8

(	(	unsigned	int	)	GETJOCTET	(	*	next_input_byte	++	)	)	<<	8

cinfo	->	image_height	<=	0	||	cinfo	->	image_width	<=	0	||	cinfo	->	num_components	<=	0

length	!=	(	cinfo	->	num_components	*	3	)

(	c	>>	4	)	&	15

(	(	unsigned	int	)	GETJOCTET	(	*	next_input_byte	++	)	)	<<	8

length	!=	(	n	*	2	+	6	)	||	n	<	1	||	n	>	MAX_COMPS_IN_SCAN

(	c	>>	4	)	&	15

(	c	>>	4	)	&	15

(	(	unsigned	int	)	GETJOCTET	(	*	next_input_byte	++	)	)	<<	8

index	<	0	||	index	>=	(	2	*	NUM_ARITH_TBLS	)

(	(	unsigned	int	)	GETJOCTET	(	*	next_input_byte	++	)	)	<<	8

count	>	256	||	(	(	INT32	)	count	)	>	length

index	<	0	||	index	>=	NUM_HUFF_TBLS

(	(	unsigned	int	)	GETJOCTET	(	*	next_input_byte	++	)	)	<<	8

(	(	unsigned	int	)	GETJOCTET	(	*	next_input_byte	++	)	)	<<	8

(	(	unsigned	int	)	GETJOCTET	(	*	next_input_byte	++	)	)	<<	8

(	(	unsigned	int	)	GETJOCTET	(	*	next_input_byte	++	)	)	<<	8

(	(	unsigned	int	)	GETJOCTET	(	*	next_input_byte	++	)	)	<<	8

(	(	unsigned	int	)	GETJOCTET	(	*	next_input_byte	++	)	)	<<	8

(	(	unsigned	int	)	GETJOCTET	(	*	next_input_byte	++	)	)	<<	8

c	!=	0xFF	||	c2	!=	(	int	)	M_SOI

cinfo	->	unread_marker	==	(	(	int	)	M_RST0	+	cinfo	->	marker	->	next_restart_num	)

(	cinfo	->	marker	->	next_restart_num	+	1	)	&	7

marker	<	(	int	)	M_RST0	||	marker	>	(	int	)	M_RST7

marker	==	(	(	int	)	M_RST0	+	(	(	desired	+	1	)	&	7	)	)	||	marker	==	(	(	int	)	M_RST0	+	(	(	desired	+	2	)	&	7	)	)
marker	==	(	(	int	)	M_RST0	+	(	(	desired	+	1	)	&	7	)	)	||	marker	==	(	(	int	)	M_RST0	+	(	desired	+	2	)	&	7	)
marker	==	(	(	int	)	M_RST0	+	(	(	desired	-	1	)	&	7	)	)	||	marker	==	(	(	int	)	M_RST0	+	(	(	desired	-	2	)	&	7	)	)
marker	==	(	(	int	)	M_RST0	+	(	(	desired	-	1	)	&	7	)	)	||	marker	==	(	(	int	)	M_RST0	+	(	desired	-	2	)	&	7	)
marker_code	==	(	int	)	M_APP0	&&	length_limit	<	APP0_DATA_LEN

marker_code	==	(	int	)	M_APP14	&&	length_limit	<	APP14_DATA_LEN

marker_code	==	(	int	)	M_APP0	||	marker_code	==	(	int	)	M_APP14

marker_code	>=	(	int	)	M_APP0	&&	marker_code	<=	(	int	)	M_APP15

marker_code	>=	(	int	)	M_APP0	&&	marker_code	<=	(	int	)	M_APP15

cinfo	->	Ss	!=	0	||	cinfo	->	Se	!=	DCTSIZE2	-	1	||	cinfo	->	Ah	!=	0	||	cinfo	->	Al	!=	0

tblno	<	0	||	tblno	>=	NUM_HUFF_TBLS

i	<	0	||	p	+	i	>	256

(	(	INT32	)	code	)	>=	(	(	(	INT32	)	1	)	<<	si	)

sym	<	0	||	sym	>	15

(	(	-	1	)	<<	1	)	+	1
(	-	1	)	<<	1	+	1
(	(	-	1	)	<<	2	)	+	1
(	-	1	)	<<	2	+	1
(	(	-	1	)	<<	3	)	+	1
(	-	1	)	<<	3	+	1
(	(	-	1	)	<<	4	)	+	1
(	-	1	)	<<	4	+	1
(	(	-	1	)	<<	5	)	+	1
(	-	1	)	<<	5	+	1
(	(	-	1	)	<<	6	)	+	1
(	-	1	)	<<	6	+	1
(	(	-	1	)	<<	7	)	+	1
(	-	1	)	<<	7	+	1
(	(	-	1	)	<<	8	)	+	1
(	-	1	)	<<	8	+	1
(	(	-	1	)	<<	9	)	+	1
(	-	1	)	<<	9	+	1
(	(	-	1	)	<<	10	)	+	1
(	-	1	)	<<	10	+	1
(	(	-	1	)	<<	11	)	+	1
(	-	1	)	<<	11	+	1
(	(	-	1	)	<<	12	)	+	1
(	-	1	)	<<	12	+	1
(	(	-	1	)	<<	13	)	+	1
(	-	1	)	<<	13	+	1
(	(	-	1	)	<<	14	)	+	1
(	-	1	)	<<	14	+	1
(	(	-	1	)	<<	15	)	+	1
(	-	1	)	<<	15	+	1
tbl	<	0	||	tbl	>=	NUM_HUFF_TBLS

(	(	(	INT32	)	1	)	<<	size	)	-	1
(	(	INT32	)	1	)	<<	size	-	1
(	put_buffer	>>	16	)	&	0xFF

r	>	15	&&	k	<=	EOB

r	>	0	||	BR	>	0

entropy	->	EOBRUN	==	0x7FFF	||	entropy	->	BE	>	(	MAX_CORR_BITS	-	DCTSIZE2	+	1	)

cinfo	->	input_iMCU_row	<	(	cinfo	->	total_iMCU_rows	-	1	)

cinfo	->	input_iMCU_row	<	last_iMCU_row	||	yoffset	+	yindex	<	compptr	->	last_row_height

++	(	cinfo	->	input_iMCU_row	)	<	cinfo	->	total_iMCU_rows

++	(	cinfo	->	input_iMCU_row	)	<	cinfo	->	total_iMCU_rows

cinfo	->	input_scan_number	<	cinfo	->	output_scan_number	||	(	cinfo	->	input_scan_number	==	cinfo	->	output_scan_number	&&	cinfo	->	input_iMCU_row	<=	cinfo	->	output_iMCU_row	)

++	(	cinfo	->	output_iMCU_row	)	<	cinfo	->	total_iMCU_rows

cinfo	->	input_scan_number	<=	cinfo	->	output_scan_number	&&	!	cinfo	->	inputctl	->	eoi_reached

cinfo	->	input_iMCU_row	>	cinfo	->	output_iMCU_row	+	delta

(	cinfo	->	output_iMCU_row	-	1	)	*	compptr	->	v_samp_factor
cinfo	->	output_iMCU_row	-	1	*	compptr	->	v_samp_factor
coef	->	coef_bits_latch	+	(	ci	*	SAVED_COEFS	)

first_row	&&	block_row	==	0

last_row	&&	block_row	==	block_rows	-	1

36	*	Q00	*	(	DC4	-	DC6	)
36	*	Q00	*	DC4	-	DC6
(	(	Q01	<<	7	)	+	num	)	/	(	Q01	<<	8	)
(	Q01	<<	7	+	num	)	/	Q01	<<	8
Al	>	0	&&	pred	>=	(	1	<<	Al	)

(	1	<<	Al	)	-	1
1	<<	Al	-	1
(	(	Q01	<<	7	)	-	num	)	/	(	Q01	<<	8	)
(	Q01	<<	7	)	-	num	/	Q01	<<	8
Al	>	0	&&	pred	>=	(	1	<<	Al	)

(	1	<<	Al	)	-	1
1	<<	Al	-	1
36	*	Q00	*	(	DC2	-	DC8	)
36	*	Q00	*	DC2	-	DC8
(	(	Q10	<<	7	)	+	num	)	/	(	Q10	<<	8	)
(	Q10	<<	7	)	+	num	/	Q10	<<	8
Al	>	0	&&	pred	>=	(	1	<<	Al	)

(	1	<<	Al	)	-	1
1	<<	Al	-	1
(	(	Q10	<<	7	)	-	num	)	/	(	Q10	<<	8	)
Q10	<<	7	-	num	/	(	Q10	<<	8	)
Al	>	0	&&	pred	>=	(	1	<<	Al	)

(	1	<<	Al	)	-	1
1	<<	Al	-	1
9	*	Q00	*	(	DC2	+	DC8	-	2	*	DC5	)
9	*	Q00	*	DC2	+	DC8	-	2	*	DC5
(	(	Q20	<<	7	)	+	num	)	/	(	Q20	<<	8	)
(	Q20	<<	7	)	+	num	/	(	Q20	<<	8	)
Al	>	0	&&	pred	>=	(	1	<<	Al	)

(	1	<<	Al	)	-	1
1	<<	Al	-	1
(	(	Q20	<<	7	)	-	num	)	/	(	Q20	<<	8	)
(	Q20	<<	7	)	-	num	/	(	Q20	<<	8	)
Al	>	0	&&	pred	>=	(	1	<<	Al	)

(	1	<<	Al	)	-	1
1	<<	Al	-	1
5	*	Q00	*	(	DC1	-	DC3	-	DC7	+	DC9	)
5	*	Q00	*	DC1	-	DC3	-	DC7	+	DC9
(	(	Q11	<<	7	)	+	num	)	/	(	Q11	<<	8	)
(	Q11	<<	7	)	+	num	/	(	Q11	<<	8	)
Al	>	0	&&	pred	>=	(	1	<<	Al	)

(	1	<<	Al	)	-	1
1	<<	Al	-	1
(	(	Q11	<<	7	)	-	num	)	/	(	Q11	<<	8	)
Q11	<<	7	-	num	/	Q11	<<	8
Al	>	0	&&	pred	>=	(	1	<<	Al	)

(	1	<<	Al	)	-	1
1	<<	Al	-	1
9	*	Q00	*	(	DC4	+	DC6	-	2	*	DC5	)
9	*	Q00	*	DC4	+	DC6	-	2	*	DC5
(	(	Q02	<<	7	)	+	num	)	/	(	Q02	<<	8	)
Q02	<<	7	+	num	/	Q02	<<	8
Al	>	0	&&	pred	>=	(	1	<<	Al	)

(	1	<<	Al	)	-	1
1	<<	Al	-	1
(	(	Q02	<<	7	)	-	num	)	/	(	Q02	<<	8	)
(	Q02	<<	7	-	num	)	/	(	Q02	<<	8	)
Al	>	0	&&	pred	>=	(	1	<<	Al	)

(	1	<<	Al	)	-	1
1	<<	Al	-	1
++	(	cinfo	->	output_iMCU_row	)	<	cinfo	->	total_iMCU_rows

(	tmp12	+	tmp13	)	*	(	(	FAST_FLOAT	)	0.707106781	)
tmp12	+	tmp13	*	(	(	FAST_FLOAT	)	0.707106781	)
(	tmp10	-	tmp12	)	*	(	(	FAST_FLOAT	)	0.382683433	)
tmp10	-	tmp12	*	(	(	FAST_FLOAT	)	0.382683433	)
(	(	FAST_FLOAT	)	0.541196100	)	*	tmp10	+	z5

(	(	FAST_FLOAT	)	1.306562965	)	*	tmp12	+	z5

(	tmp12	+	tmp13	)	*	(	(	FAST_FLOAT	)	0.707106781	)
tmp12	+	tmp13	*	(	(	FAST_FLOAT	)	0.707106781	)
(	tmp10	-	tmp12	)	*	(	(	FAST_FLOAT	)	0.382683433	)
tmp10	-	tmp12	*	(	(	FAST_FLOAT	)	0.382683433	)
(	(	FAST_FLOAT	)	0.541196100	)	*	tmp10	+	z5

(	(	FAST_FLOAT	)	1.306562965	)	*	tmp12	+	z5

(	long	)	cinfo	->	image_height	>	(	long	)	JPEG_MAX_DIMENSION	||	(	long	)	cinfo	->	image_width	>	(	long	)	JPEG_MAX_DIMENSION

compptr	->	h_samp_factor	<=	0	||	compptr	->	h_samp_factor	>	MAX_SAMP_FACTOR	||	compptr	->	v_samp_factor	<=	0	||	compptr	->	v_samp_factor	>	MAX_SAMP_FACTOR

cinfo	->	comps_in_scan	<	cinfo	->	num_components	||	cinfo	->	progressive_mode

cinfo	->	comps_in_scan	<=	0	||	cinfo	->	comps_in_scan	>	MAX_COMPS_IN_SCAN

cinfo	->	blocks_in_MCU	+	mcublks	>	D_MAX_BLOCKS_IN_MCU

mcublks	--	>	0

pool_id	<	0	||	pool_id	>=	JPOOL_NUMPOOLS

pool_id	<	0	||	pool_id	>=	JPOOL_NUMPOOLS

start_row	<	ptr	->	cur_start_row	||	end_row	>	ptr	->	cur_start_row	+	ptr	->	rows_in_mem

start_row	<	ptr	->	cur_start_row	||	end_row	>	ptr	->	cur_start_row	+	ptr	->	rows_in_mem

pool_id	<	0	||	pool_id	>=	JPOOL_NUMPOOLS

(	tmp1	-	tmp3	)	*	(	(	FAST_FLOAT	)	1.414213562	)	-	tmp13
tmp1	-	tmp3	*	(	(	FAST_FLOAT	)	1.414213562	)	-	tmp13
(	z11	-	z13	)	*	(	(	FAST_FLOAT	)	1.414213562	)
z11	-	z13	*	(	(	FAST_FLOAT	)	1.414213562	)
(	z10	+	z12	)	*	(	(	FAST_FLOAT	)	1.847759065	)
z10	+	z12	*	(	(	FAST_FLOAT	)	1.847759065	)
(	(	FAST_FLOAT	)	1.082392200	)	*	z12	-	z5

(	(	FAST_FLOAT	)	-	2.613125930	)	*	z10	+	z5

(	z11	-	z13	)	*	(	(	FAST_FLOAT	)	1.414213562	)
z11	-	z13	*	(	(	FAST_FLOAT	)	1.414213562	)
(	z10	+	z12	)	*	(	(	FAST_FLOAT	)	1.847759065	)
z10	+	z12	*	(	(	FAST_FLOAT	)	1.847759065	)
(	(	FAST_FLOAT	)	1.082392200	)	*	z12	-	z5

(	(	FAST_FLOAT	)	-	2.613125930	)	*	z10	+	z5

*	in_row_ctr	<	in_rows_avail	&&	*	out_row_group_ctr	<	out_row_groups_avail

prep	->	rows_to_go	==	0	&&	prep	->	next_buf_row	<	cinfo	->	max_v_samp_factor

prep	->	rows_to_go	==	0	&&	*	out_row_group_ctr	<	out_row_groups_avail

2	*	rgroup_height	+	i

4	*	rgroup_height	+	i

dctbl	<	0	||	dctbl	>=	NUM_HUFF_TBLS

actbl	<	0	||	actbl	>=	NUM_HUFF_TBLS

tblno	<	0	||	tblno	>=	NUM_HUFF_TBLS

i	<	0	||	p	+	i	>	256

(	(	INT32	)	code	)	>=	(	(	(	INT32	)	1	)	<<	si	)

(	-	FIX	(	0.16874	)	)	*	i
(	-	FIX	(	0.16874	)	)	*	i
(	-	FIX	(	0.33126	)	)	*	i
(	-	FIX	(	0.33126	)	)	*	i
(	-	FIX	(	0.41869	)	)	*	i
(	-	FIX	(	0.41869	)	)	*	i
(	-	FIX	(	0.08131	)	)	*	i
(	-	FIX	(	0.08131	)	)	*	i
--	num_rows	>=	0

--	num_rows	>=	0

--	num_rows	>=	0

--	num_rows	>=	0

(	(	(	const	char	*	)	p	-	(	const	char	*	)	0	)	&	3	)	==	0
(	(	const	char	*	)	p	-	(	const	char	*	)	0	)	&	3	==	0
(	(	n	)	>>	16	)	&	0xFF

(	(	n	)	>>	8	)	&	0xFF

(	(	n	)	>>	8	)	&	0xFF

(	(	n	)	>>	16	)	&	0xFF

(	(	n	)	>>	16	)	&	0xFF

(	(	n	)	>>	8	)	&	0xFF

--	col4	!=	0

1	==	num_rows	&&	3	==	nc	&&	num_cols	>	0

col4	>	0	&&	ptr_is_quad	(	inptr	)	&&	ptr_is_quad	(	outptr0	)	&&	ptr_is_quad	(	outptr1	)	&&	ptr_is_quad	(	outptr2	)

--	col	!=	0

--	num_rows	>=	0

cinfo	->	in_color_space	==	JCS_RGB	&&	RGB_PIXELSIZE	==	3

cinfo	->	jpeg_color_space	!=	cinfo	->	in_color_space	||	cinfo	->	num_components	!=	cinfo	->	input_components

(	x	)	*	(	1L	<<	SCALEBITS	)	+	0.5
(	x	)	*	1L	<<	SCALEBITS	+	0.5
(	INT32	)	1	<<	(	SCALEBITS	-	1	)
(	INT32	)	1	<<	SCALEBITS	-	1
(	x	)	*	(	1L	<<	SCALEBITS	)	+	0.5
(	x	)	*	1L	<<	SCALEBITS	+	0.5
(	INT32	)	1	<<	(	SCALEBITS	-	1	)
(	INT32	)	1	<<	SCALEBITS	-	1
(	-	FIX	(	0.71414	)	)	*	x
(	-	FIX	(	0.71414	)	)	*	x
(	-	FIX	(	0.34414	)	)	*	x	+	ONE_HALF
(	-	FIX	(	0.34414	)	)	*	x	+	ONE_HALF
--	num_rows	>=	0

--	num_rows	>=	0

--	num_rows	>=	0

--	num_rows	>=	0

cinfo	->	jpeg_color_space	==	JCS_GRAYSCALE	||	cinfo	->	jpeg_color_space	==	JCS_YCbCr

cinfo	->	jpeg_color_space	==	JCS_RGB	&&	RGB_PIXELSIZE	==	3

ctr	==	DCTSIZE	-	4

ctr	==	DCTSIZE	-	2	||	ctr	==	DCTSIZE	-	4	||	ctr	==	DCTSIZE	-	6

z1	<<	(	CONST_BITS	+	2	)

dstinfo	->	num_components	<	1	||	dstinfo	->	num_components	>	MAX_COMPONENTS

coef	->	iMCU_row_num	<	(	cinfo	->	total_iMCU_rows	-	1	)

coef	->	iMCU_row_num	<	last_iMCU_row	||	yindex	+	yoffset	<	compptr	->	last_row_height

cinfo	->	num_scans	>	1	||	cinfo	->	optimize_coding

cinfo	->	jpeg_color_space	!=	JCS_YCbCr	||	cinfo	->	num_components	!=	3	||	cinfo	->	out_color_space	!=	JCS_RGB	||	cinfo	->	out_color_components	!=	RGB_PIXELSIZE

cinfo	->	scale_num	*	8	<=	cinfo	->	scale_denom

cinfo	->	scale_num	*	4	<=	cinfo	->	scale_denom

cinfo	->	scale_num	*	2	<=	cinfo	->	scale_denom

ssize	<	DCTSIZE	&&	(	compptr	->	h_samp_factor	*	ssize	*	2	<=	cinfo	->	max_h_samp_factor	*	cinfo	->	min_DCT_scaled_size	)	&&	(	compptr	->	v_samp_factor	*	ssize	*	2	<=	cinfo	->	max_v_samp_factor	*	cinfo	->	min_DCT_scaled_size	)

i	<	2	*	(	MAXJSAMPLE	+	1	)
i	<	2	*	MAXJSAMPLE	+	1
!	cinfo	->	quantize_colors	||	!	cinfo	->	buffered_image

2	+	3	*	cinfo	->	num_components

cinfo	->	buffered_image	&&	!	cinfo	->	inputctl	->	eoi_reached

(	invalue	*	3	+	GETJSAMPLE	(	*	inptr	)	+	2	)	>>	2

(	invalue	+	GETJSAMPLE	(	*	inptr	)	+	2	)	>>	2

(	thiscolsum	*	4	+	8	)	>>	4

(	thiscolsum	*	3	+	nextcolsum	+	7	)	>>	4

(	thiscolsum	*	3	+	lastcolsum	+	8	)	>>	4

(	thiscolsum	*	3	+	nextcolsum	+	7	)	>>	4

(	thiscolsum	*	3	+	lastcolsum	+	8	)	>>	4

(	thiscolsum	*	4	+	7	)	>>	4

cinfo	->	do_fancy_upsampling	&&	cinfo	->	min_DCT_scaled_size	>	1

h_in_group	==	h_out_group	&&	v_in_group	==	v_out_group

h_in_group	*	2	==	h_out_group	&&	v_in_group	==	v_out_group

do_fancy	&&	compptr	->	downsampled_width	>	2

h_in_group	*	2	==	h_out_group	&&	v_in_group	*	2	==	v_out_group

do_fancy	&&	compptr	->	downsampled_width	>	2

(	h_out_group	%	h_in_group	)	==	0	&&	(	v_out_group	%	v_in_group	)	==	0

--	dest	->	free_in_buffer	==	0

(	value	>>	8	)	&	0xFF

index	+	(	prec	<<	4	)
index	+	prec	<<	4
length	*	2	+	2

3	*	cinfo	->	num_components	+	2	+	5	+	1

(	long	)	cinfo	->	image_height	>	65535L	||	(	long	)	cinfo	->	image_width	>	65535L

(	compptr	->	h_samp_factor	<<	4	)	+	compptr	->	v_samp_factor
compptr	->	h_samp_factor	<<	4	+	compptr	->	v_samp_factor
2	*	cinfo	->	comps_in_scan	+	2	+	1	+	3

cinfo	->	Ah	!=	0	&&	!	cinfo	->	arith_code

(	td	<<	4	)	+	ta
td	<<	4	+	ta
(	cinfo	->	Ah	<<	4	)	+	cinfo	->	Al
cinfo	->	Ah	<<	4	+	cinfo	->	Al
cinfo	->	arith_code	||	cinfo	->	progressive_mode	||	cinfo	->	data_precision	!=	8

compptr	->	dc_tbl_no	>	1	||	compptr	->	ac_tbl_no	>	1

cinfo	->	Ss	>	cinfo	->	Se	||	cinfo	->	Se	>=	DCTSIZE2

cinfo	->	Al	!=	cinfo	->	Ah	-	1

(	(	-	1	)	<<	1	)	+	1
(	-	1	)	<<	1	+	1
(	(	-	1	)	<<	2	)	+	1
(	-	1	)	<<	2	+	1
(	(	-	1	)	<<	3	)	+	1
(	-	1	)	<<	3	+	1
(	(	-	1	)	<<	4	)	+	1
(	-	1	)	<<	4	+	1
(	(	-	1	)	<<	5	)	+	1
(	-	1	)	<<	5	+	1
(	(	-	1	)	<<	6	)	+	1
(	-	1	)	<<	6	+	1
(	(	-	1	)	<<	7	)	+	1
(	-	1	)	<<	7	+	1
(	(	-	1	)	<<	8	)	+	1
(	-	1	)	<<	8	+	1
(	(	-	1	)	<<	9	)	+	1
(	-	1	)	<<	9	+	1
(	(	-	1	)	<<	10	)	+	1
(	-	1	)	<<	10	+	1
(	(	-	1	)	<<	11	)	+	1
(	-	1	)	<<	11	+	1
(	(	-	1	)	<<	12	)	+	1
(	-	1	)	<<	12	+	1
(	(	-	1	)	<<	13	)	+	1
(	-	1	)	<<	13	+	1
(	(	-	1	)	<<	14	)	+	1
(	-	1	)	<<	14	+	1
(	(	-	1	)	<<	15	)	+	1
(	-	1	)	<<	15	+	1
(	-	1	)	<<	cinfo	->	Al

(	*	thiscoef	&	p1	)	==	0
*	thiscoef	&	p1	==	0
--	r	<	0

(	*	thiscoef	&	p1	)	==	0
*	thiscoef	&	p1	==	0
(	(	INT32	)	j	*	MAXJSAMPLE	+	maxj	/	2	)	/	maxj
(	INT32	)	j	*	MAXJSAMPLE	+	maxj	/	2	/	maxj
(	(	INT32	)	(	2	*	j	+	1	)	*	MAXJSAMPLE	+	maxj	)	/	(	2	*	maxj	)
(	INT32	)	(	2	*	j	+	1	)	*	MAXJSAMPLE	+	maxj	/	(	2	*	maxj	)
2	*	ODITHER_CELLS	*	(	(	INT32	)	(	ncolors	-	1	)	)
2	*	ODITHER_CELLS	*	(	(	INT32	)	(	ncolors	-	1	)	)
-	(	(	-	num	)	/	den	)
-	(	-	num	)	/	den
(	col_index	+	1	)	&	ODITHER_MASK

(	row_index	+	1	)	&	ODITHER_MASK

(	col_index	+	1	)	&	ODITHER_MASK

(	row_index	+	1	)	&	ODITHER_MASK

(	width	-	1	)	*	nc
width	-	1	*	nc
cinfo	->	desired_number_of_colors	>	(	MAXJSAMPLE	+	1	)
cinfo	->	desired_number_of_colors	>	MAXJSAMPLE	+	1
coef	->	iMCU_row_num	<	(	cinfo	->	total_iMCU_rows	-	1	)

coef	->	iMCU_row_num	<	last_iMCU_row	||	yoffset	+	yindex	<	compptr	->	last_row_height

cinfo	->	image_height	<=	0	||	cinfo	->	image_width	<=	0	||	cinfo	->	num_components	<=	0	||	cinfo	->	input_components	<=	0

(	long	)	cinfo	->	image_height	>	(	long	)	JPEG_MAX_DIMENSION	||	(	long	)	cinfo	->	image_width	>	(	long	)	JPEG_MAX_DIMENSION

compptr	->	h_samp_factor	<=	0	||	compptr	->	h_samp_factor	>	MAX_SAMP_FACTOR	||	compptr	->	v_samp_factor	<=	0	||	compptr	->	v_samp_factor	>	MAX_SAMP_FACTOR

scanptr	->	Ss	!=	0	||	scanptr	->	Se	!=	DCTSIZE2	-	1

ncomps	<=	0	||	ncomps	>	MAX_COMPS_IN_SCAN

thisi	<	0	||	thisi	>=	cinfo	->	num_components

Ss	<	0	||	Ss	>=	DCTSIZE2	||	Se	<	Ss	||	Se	>=	DCTSIZE2	||	Ah	<	0	||	Ah	>	MAX_AH_AL	||	Al	<	0	||	Al	>	MAX_AH_AL

Al	!=	Ah	-	1

Ss	!=	0	||	Se	!=	DCTSIZE2	-	1	||	Ah	!=	0	||	Al	!=	0

cinfo	->	comps_in_scan	<=	0	||	cinfo	->	comps_in_scan	>	MAX_COMPS_IN_SCAN

cinfo	->	blocks_in_MCU	+	mcublks	>	C_MAX_BLOCKS_IN_MCU

mcublks	--	>	0

cinfo	->	Ss	!=	0	||	cinfo	->	Ah	==	0	||	cinfo	->	arith_code

master	->	pass_number	==	master	->	total_passes	-	1

cid0	==	1	&&	cid1	==	2	&&	cid2	==	3

cid0	==	82	&&	cid1	==	71	&&	cid2	==	66

cinfo	->	global_state	!=	DSTATE_START	&&	cinfo	->	global_state	!=	DSTATE_INHEADER

cinfo	->	global_state	<	DSTATE_START	||	cinfo	->	global_state	>	DSTATE_STOPPING

cinfo	->	global_state	<	DSTATE_READY	||	cinfo	->	global_state	>	DSTATE_STOPPING

(	cinfo	->	global_state	==	DSTATE_SCANNING	||	cinfo	->	global_state	==	DSTATE_RAW_OK	)	&&	!	cinfo	->	buffered_image
cinfo	->	global_state	==	DSTATE_SCANNING	||	cinfo	->	global_state	==	DSTATE_RAW_OK	&&	!	cinfo	->	buffered_image
(	a	+	b	-	1L	)	/	b
a	+	b	-	1L	/	b
a	-	(	a	%	b	)

(	outvalue	+	numpix2	)	/	numpix
outvalue	+	numpix2	/	numpix
16384	-	cinfo	->	smoothing_factor	*	80

membersum	*	memberscale	+	neighsum	*	neighscale

(	membersum	+	32768	)	>>	16

membersum	*	memberscale	+	neighsum	*	neighscale

(	membersum	+	32768	)	>>	16

membersum	*	memberscale	+	neighsum	*	neighscale

(	membersum	+	32768	)	>>	16

65536L	-	cinfo	->	smoothing_factor	*	512L

membersum	*	memberscale	+	neighsum	*	neighscale

(	membersum	+	32768	)	>>	16

membersum	*	memberscale	+	neighsum	*	neighscale

(	membersum	+	32768	)	>>	16

membersum	*	memberscale	+	neighsum	*	neighscale

(	membersum	+	32768	)	>>	16

compptr	->	h_samp_factor	==	cinfo	->	max_h_samp_factor	&&	compptr	->	v_samp_factor	==	cinfo	->	max_v_samp_factor

compptr	->	h_samp_factor	*	2	==	cinfo	->	max_h_samp_factor	&&	compptr	->	v_samp_factor	==	cinfo	->	max_v_samp_factor

compptr	->	h_samp_factor	*	2	==	cinfo	->	max_h_samp_factor	&&	compptr	->	v_samp_factor	*	2	==	cinfo	->	max_v_samp_factor

(	cinfo	->	max_h_samp_factor	%	compptr	->	h_samp_factor	)	==	0	&&	(	cinfo	->	max_v_samp_factor	%	compptr	->	v_samp_factor	)	==	0

cinfo	->	smoothing_factor	&&	!	smoothok

cinfo	->	global_state	==	CSTATE_SCANNING	||	cinfo	->	global_state	==	CSTATE_RAW_OK

cinfo	->	next_scanline	!=	0	||	(	cinfo	->	global_state	!=	CSTATE_SCANNING	&&	cinfo	->	global_state	!=	CSTATE_RAW_OK	&&	cinfo	->	global_state	!=	CSTATE_WRCOEFS	)

cinfo	->	next_scanline	!=	0	||	(	cinfo	->	global_state	!=	CSTATE_SCANNING	&&	cinfo	->	global_state	!=	CSTATE_RAW_OK	&&	cinfo	->	global_state	!=	CSTATE_WRCOEFS	)

++	cinfo	->	progress	->	pass_counter	>=	cinfo	->	progress	->	pass_limit

(	cinfo	->	global_state	==	DSTATE_STOPPING	||	cinfo	->	global_state	==	DSTATE_BUFIMAGE	)	&&	cinfo	->	buffered_image
cinfo	->	global_state	==	DSTATE_STOPPING	||	cinfo	->	global_state	==	DSTATE_BUFIMAGE	&&	cinfo	->	buffered_image
2	+	3	*	cinfo	->	num_components

++	cinfo	->	progress	->	pass_counter	>=	cinfo	->	progress	->	pass_limit

cinfo	->	global_state	!=	DSTATE_BUFIMAGE	&&	cinfo	->	global_state	!=	DSTATE_PRESCAN

cinfo	->	inputctl	->	eoi_reached	&&	scan_number	>	cinfo	->	input_scan_number

(	cinfo	->	global_state	==	DSTATE_SCANNING	||	cinfo	->	global_state	==	DSTATE_RAW_OK	)	&&	cinfo	->	buffered_image
cinfo	->	global_state	==	DSTATE_SCANNING	||	cinfo	->	global_state	==	DSTATE_RAW_OK	&&	cinfo	->	buffered_image
cinfo	->	input_scan_number	<=	cinfo	->	output_scan_number	&&	!	cinfo	->	inputctl	->	eoi_reached

err	->	num_warnings	==	0	||	err	->	trace_level	>=	3

msg_code	>	0	&&	msg_code	<=	err	->	last_jpeg_message

(	z2	+	z3	)	<<	CONST_BITS

(	z2	-	z3	)	<<	CONST_BITS

(	x	)	*	(	1L	<<	SCALEBITS	)	+	0.5
(	x	)	*	1L	<<	SCALEBITS	+	0.5
(	INT32	)	1	<<	(	SCALEBITS	-	1	)
(	INT32	)	1	<<	SCALEBITS	-	1
(	x	)	*	(	1L	<<	SCALEBITS	)	+	0.5
(	x	)	*	1L	<<	SCALEBITS	+	0.5
(	INT32	)	1	<<	(	SCALEBITS	-	1	)
(	INT32	)	1	<<	SCALEBITS	-	1
(	-	FIX	(	0.71414	)	)	*	x
(	-	FIX	(	0.71414	)	)	*	x
(	-	FIX	(	0.34414	)	)	*	x	+	ONE_HALF
(	-	FIX	(	0.34414	)	)	*	x	+	ONE_HALF
in_row_group_ctr	*	2	+	1

(	width	>	256	)	||	(	height	>	512	)

(	width	>	256	)	||	(	height	>	512	)

top	+	(	y	*	swidth	)

bottom	-	(	y	*	swidth	)

(	i	&	1	)	==	0
i	&	1	==	0
(	length	+	1	)	>>	1

top	+	(	y	*	swidth	)

bottom	-	(	y	*	swidth	)

(	i	&	1	)	==	0
i	&	1	==	0
create	&&	i	<	max_devices

(	sum	>>	16	)	+	(	sum	&	0xFFFF	)
sum	>>	16	+	sum	&	0xFFFF
i	<	len	+	padd

(	sum	&	0xFFFF	)	+	(	sum	>>	16	)
(	sum	&	0xFFFF	)	+	sum	>>	16
(	(	void	*	)	rest	-	(	void	*	)	buffer	)	+	datalen	>	ETH_FRAME_LEN

send_result	==	-	1

send_result	-	8	-	14	-	20	<	0

~	(	IGNBRK	|	BRKINT	|	PARMRK	|	ISTRIP	|	INLCR	|	IGNCR	|	ICRNL	|	IXON	)
~	IGNBRK	|	BRKINT	|	PARMRK	|	ISTRIP	|	INLCR	|	IGNCR	|	ICRNL	|	IXON
~	(	ECHO	|	ECHONL	|	ICANON	|	ISIG	|	IEXTEN	)
~	ECHO	|	ECHONL	|	ICANON	|	ISIG	|	IEXTEN
~	(	CSIZE	|	PARENB	)
~	CSIZE	|	PARENB
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

conn	->	state	==	STATE_ACTIVE	&&	conn	->	ptsfd	>	0

conn	->	state	==	STATE_ACTIVE	&&	conn	->	slavefd	>	0

utentp	->	ut_pid	==	conn	->	pid	&&	utentp	->	ut_id

curconn	->	ptsfd	==	-	1	||	grantpt	(	curconn	->	ptsfd	)	==	-	1	||	unlockpt	(	curconn	->	ptsfd	)	==	-	1

curconn	->	slavefd	==	-	1

(	setgid	(	user	->	pw_gid	)	!=	0	)	||	(	setuid	(	user	->	pw_uid	)	!=	0	)

stat	(	_PATH_NOLOGIN	,	&	sb	)	==	0	&&	getuid	(	)	!=	0

curconn	->	state	==	STATE_ACTIVE	&&	curconn	->	ptsfd	!=	-	1

curconn	->	state	==	STATE_ACTIVE	&&	(	got_width_packet	||	got_height_packet	)
curconn	->	state	==	STATE_ACTIVE	&&	got_width_packet	||	got_height_packet
time	(	0	)	-	curconn	->	lastdata	>	9

bind	(	insockfd	,	(	struct	sockaddr	*	)	&	si_me	,	sizeof	(	si_me	)	)	==	-	1

bind	(	mndpsockfd	,	(	struct	sockaddr	*	)	&	si_me_mndp	,	sizeof	(	si_me_mndp	)	)	==	-	1

offset	+	nbytes	>	64

offset	+	copy	<	64

setuid	(	0	)	!=	-	1

is_a_tty	&&	get_terminal_size	(	&	width	,	&	height	)	!=	-	1

get_terminal_size	(	&	width	,	&	height	)	!=	-	1

c	==	-	1

argc	-	optind	<	1	||	print_help

setsockopt	(	insockfd	,	SOL_SOCKET	,	SO_BROADCAST	,	&	optval	,	sizeof	(	optval	)	)	==	-	1

1024	+	(	rand	(	)	%	1024	)

bind	(	insockfd	,	(	struct	sockaddr	*	)	&	si_me	,	sizeof	(	si_me	)	)	==	-	1

keepalive_counter	++	==	10

bind	(	sock	,	(	struct	sockaddr	*	)	&	si_me	,	sizeof	(	si_me	)	)	==	-	1

setsockopt	(	sock	,	SOL_SOCKET	,	SO_BROADCAST	,	&	optval	,	sizeof	(	optval	)	)	==	-	1

packet	->	uptime	%	86400	/	3600

tod1	->	tv_sec	*	1000000	+	tod1	->	tv_usec

tod2	->	tv_sec	*	1000000	+	tod2	->	tv_usec

c	==	-	1

fastmode	&&	(	send_packets	==	0	||	send_packets	>	100	)
fastmode	&&	send_packets	==	0	||	send_packets	>	100
argc	-	optind	<	1	||	print_help

ping_size	>	ETH_FRAME_LEN	-	42

bind	(	insockfd	,	(	struct	sockaddr	*	)	&	si_me	,	sizeof	(	si_me	)	)	==	-	1

i	<	send_packets	||	send_packets	==	0

p	<	data	+	packet_len

p	+	len	>	data	+	packet_len

bind	(	sock	,	(	struct	sockaddr	*	)	&	si_me	,	sizeof	(	si_me	)	)	==	-	1

colons	==	0	&&	dashs	==	5

(	nr	<	0	)	&&	(	(	errno	==	EAGAIN	)	||	(	errno	==	EINTR	)	)
(	nr	<	0	)	&&	errno	==	EAGAIN	||	errno	==	EINTR
(	nr	<	0	)	&&	(	(	errno	==	EAGAIN	)	||	(	errno	==	EINTR	)	)
(	nr	<	0	)	&&	(	errno	==	EAGAIN	)	||	errno	==	EINTR
(	nr	<	0	)	&&	(	(	errno	==	EAGAIN	)	||	(	errno	==	EINTR	)	)
(	nr	<	0	)	&&	(	errno	==	EAGAIN	||	errno	==	EINTR	)
ch	==	MBT_QUOTE_FIELD_DELIM	||	ch	==	MBT_QUOTE_MESSAGE_END

end	.	tv_sec	-	start	.	tv_sec	>	2

!	field	||	field_state_empty	(	field	)

!	field	||	field_state_empty	(	field	)

!	field	||	field_state_empty	(	field	)

!	field	||	field_state_empty	(	field	)

!	field	||	field_state_empty	(	field	)

!	field	||	field_state_empty	(	field	)

!	field	||	field_state_empty	(	field	)

!	field	||	field_state_empty	(	field	)

!	field	||	field_state_empty	(	field	)

!	field	||	field_state_empty	(	field	)

!	field	||	field_state_empty	(	field	)

!	field	||	field_state_empty	(	field	)

!	field	||	field_state_empty	(	field	)

!	field	||	field_state_empty	(	field	)

!	field	||	field_state_empty	(	field	)

!	field	||	field_state_empty	(	field	)

!	field	||	field_state_empty	(	field	)

!	field	||	field_state_empty	(	field	)

!	msg	||	*	next

!	msg	||	*	next

!	field	||	field_state_empty	(	field	)

!	field	||	field_state_empty	(	field	)

!	field	||	field_state_empty	(	field	)

fcntl	(	sockfd	,	F_SETFL	,	fcntl	(	sockfd	,	F_GETFL	)	|	O_NONBLOCK	)	<	0

bind	(	sockfd	,	(	const	struct	sockaddr	*	)	&	sa	,	sizeof	(	struct	sockaddr_in	)	)	<	0

setsockopt	(	sockfd	,	IPPROTO_IP	,	IP_ADD_MEMBERSHIP	,	(	char	*	)	&	group	,	sizeof	(	group	)	)	<	0

setsockopt	(	sockfd	,	IPPROTO_IP	,	IP_ADD_SOURCE_MEMBERSHIP	,	(	char	*	)	&	group_src	,	sizeof	(	group_src	)	)	<	0

exp	>	63	||	exp	<	-	63

exp	>	63	||	exp	<	-	63

field	->	decimal_value	.	exp	+	exp	>	63	||	field	->	decimal_value	.	exp	+	exp	<	-	63

exp	>	63	||	exp	<	-	63

preamble	->	nr_bytes	&&	!	preamble	->	is_valid

field	->	int_value	!=	field	->	int_previous	+	1

field	->	uint_value	!=	field	->	uint_previous	+	1

(	field	->	decimal_value	.	exp	!=	field	->	decimal_previous	.	exp	)	||	(	field	->	decimal_value	.	mnt	!=	field	->	decimal_previous	.	mnt	)

buffer_size	(	buffer	)	+	offset	<	self	->	body_length	+	7

bind	(	sockfd	,	(	const	struct	sockaddr	*	)	&	sa	,	sizeof	(	struct	sockaddr_in	)	)	<	0

1000000	*	(	after	.	tv_sec	-	before	.	tv_sec	)	+	(	after	.	tv_nsec	-	before	.	tv_nsec	)	/	1000
1000000	*	after	.	tv_sec	-	before	.	tv_sec	+	after	.	tv_nsec	-	before	.	tv_nsec	/	1000
*	start	==	0x00	||	*	start	==	0x0A

*	end	!=	0x00	&&	*	end	!=	0x01	&&	*	end	!=	0x0A

*	end	==	0x00	||	*	end	==	0x0A

expected	->	body_length	&&	expected	->	body_length	!=	actual	->	body_length

expected	->	msg_seq_num	&&	expected	->	msg_seq_num	!=	actual	->	msg_seq_num

msg	->	begin_string	&&	len	<	size

msg	->	body_length	&&	len	<	size

msg	->	msg_type	&&	len	<	size

msg	->	sender_comp_id	&&	len	<	size

msg	->	target_comp_id	&&	len	<	size

msg	->	msg_seq_num	&&	len	<	size

i	<	msg	->	nr_fields	&&	len	<	size

!	port	||	!	proto	||	!	filename	||	!	host

!	port	||	!	proto	||	!	filename

bind	(	sockfd	,	(	const	struct	sockaddr	*	)	&	sa	,	sizeof	(	struct	sockaddr_in	)	)	<	0

!	config	||	!	template

!	elem	||	!	msg

!	port	||	!	proto	||	!	filename	||	!	xml

bind	(	sockfd	,	(	const	struct	sockaddr	*	)	&	sa	,	sizeof	(	struct	sockaddr_in	)	)	<	0

!	port	||	!	proto	||	!	filename	||	!	host	||	!	xml

connect	(	sockfd	,	(	const	struct	sockaddr	*	)	&	sa	,	sizeof	(	struct	sockaddr_in	)	)	<	0

fcntl	(	sockfd	,	F_SETFL	,	fcntl	(	sockfd	,	F_GETFL	)	|	O_NONBLOCK	)	<	0

bind	(	sockfd	,	(	const	struct	sockaddr	*	)	&	sa	,	sizeof	(	struct	sockaddr_in	)	)	<	0

setsockopt	(	sockfd	,	IPPROTO_IP	,	IP_ADD_MEMBERSHIP	,	(	char	*	)	&	group	,	sizeof	(	group	)	)	<	0

setsockopt	(	sockfd	,	IPPROTO_IP	,	IP_ADD_SOURCE_MEMBERSHIP	,	(	char	*	)	&	group_src	,	sizeof	(	group_src	)	)	<	0

!	ip	||	!	port	||	!	lip	||	!	output

(	!	ip	||	!	port	||	!	lip	||	!	xml	)	&&	!	input
!	ip	||	!	port	||	!	lip	||	!	xml	&&	!	input
renderWidth	!=	w	||	renderHeight	!=	h

(	BUFFER_SIZE_SAMPLES	*	bitdepth	*	nchannels	)	>>	3

dest	==	0	||	dest	==	1

dest	==	0	||	dest	==	1

n	<	(	(	samplerate	*	5	)	/	BUFFER_SIZE_SAMPLES	)

inc	>>	16	<	512

(	0.3922f	+	7	*	0.5f	)	/	8
0.3922f	+	7	*	0.5f	/	8
(	0.1176f	+	7	*	0.5f	)	/	8
0.1176f	+	7	*	0.5f	/	8
(	0.5882f	+	7	*	0.5f	)	/	8
0.5882f	+	7	*	0.5f	/	8
3.0f	/	(	maxx	-	minx	+	maxy	-	miny	+	maxz	-	minz	)
3.0f	/	maxx	-	minx	+	maxy	-	miny	+	maxz	-	minz
(	*	v	-	cx	)	*	scale
*	v	-	cx	*	scale
(	*	v	-	cy	)	*	scale
*	v	-	cy	*	scale
(	*	v	-	cz	)	*	scale
*	v	-	cz	*	scale
1.0f	/	sqrtf	(	x	*	x	+	y	*	y	+	z	*	z	)

mat	->	texture	==	-	1

(	float	*	)	m	->	data	+	3	*	MAX_VERTICES

(	float	*	)	m	->	data	+	(	3	+	2	)	*	MAX_VERTICES
(	float	*	)	m	->	data	+	3	+	2	*	MAX_VERTICES
(	float	*	)	m	->	data	+	(	3	+	2	+	3	)	*	MAX_VERTICES
(	float	*	)	m	->	data	+	3	+	2	+	3	*	MAX_VERTICES
end	-	line	<	valid

end	-	line	<	valid

(	pf	-	qf	)	/	3
pf	-	qf	/	3
(	pf	-	qf	)	/	3
pf	-	qf	/	3
i	<	poly	-	1

2	*	i	+	0

2	*	i	+	1

2	*	(	i	+	1	)	+	0
2	*	i	+	1	+	0
2	*	(	i	+	1	)	+	1
2	*	i	+	1	+	1
i	<	poly	-	1

2	*	i	+	0

2	*	i	+	1

2	*	(	i	+	1	)	+	0
2	*	i	+	1	+	0
2	*	(	i	+	1	)	+	1
2	*	i	+	1	+	1
i	<	poly	-	1

3	*	i	+	0

3	*	i	+	1

3	*	i	+	2

3	*	(	i	+	1	)	+	0
3	*	i	+	1	+	0
3	*	(	i	+	1	)	+	1
3	*	i	+	1	+	1
3	*	(	i	+	1	)	+	2
3	*	i	+	1	+	2
end	-	line	>	valid

(	pv	-	qv	)	/	3
pv	-	qv	/	3
(	pn	-	qn	)	/	3
pn	-	qn	/	3
(	float	*	)	m	->	data	+	3	*	MAX_VERTICES

(	float	*	)	m	->	data	+	(	3	+	2	)	*	MAX_VERTICES
(	float	*	)	m	->	data	+	3	+	2	*	MAX_VERTICES
(	float	*	)	m	->	data	+	(	3	+	2	+	3	)	*	MAX_VERTICES
(	float	*	)	m	->	data	+	3	+	2	+	3	*	MAX_VERTICES
sizeof	*	m	+	sizeof	(	float	)	*	(	3	+	2	+	3	)	*	MAX_VERTICES
sizeof	*	m	+	sizeof	(	float	)	*	3	+	2	+	3	*	MAX_VERTICES
sizeof	*	m	+	sizeof	(	float	)	*	(	3	+	2	+	3	)	*	MAX_VERTICES
sizeof	*	m	+	sizeof	(	float	)	*	3	+	2	+	3	*	MAX_VERTICES
strlen	(	modelname	)	+	5	<=	sizeof	modelname_obj

i	<	m	->	num_materials	-	1

qf	+	3	*	offset	+	0

qf	+	3	*	offset	+	1

qf	+	3	*	offset	+	2

qf	+	3	*	offset	+	0

qf	+	3	*	offset	+	1

qf	+	3	*	offset	+	2

y	+	PITCH	*	HEIGHT16
y	+	PITCH	*	HEIGHT16
u	+	(	PITCH	>>	1	)	*	(	HEIGHT16	>>	1	)
u	+	(	PITCH	>>	1	)	*	HEIGHT16	>>	1
j	<	HEIGHT	/	2

y	+	2	*	j	*	PITCH
y	+	2	*	j	*	PITCH
u	+	j	*	(	PITCH	>>	1	)
u	+	j	*	PITCH	>>	1
v	+	j	*	(	PITCH	>>	1	)
v	+	j	*	PITCH	>>	1
i	<	WIDTH	/	2

(	(	(	i	+	frame	)	>>	4	)	^	(	(	j	+	frame	)	>>	4	)	)	&	15
(	(	i	+	frame	)	>>	4	)	^	(	(	j	+	frame	)	>>	4	)	&	15
0x80	+	z	*	0x8

0x00	+	z	*	0x10

0x80	+	z	*	0x30

++	str	<	e

ret	==	-	2

(	last_tag	&	0x1	)	||	(	last_tag	&	0x2	)

(	last_tag	&	0x1	)	||	(	last_tag	&	0x2	)

!	(	last_tag	&	0x1	)
!	last_tag	&	0x1
!	(	last_tag	&	0x2	)
!	last_tag	&	0x2
!	(	last_tag	&	0x2	)
!	last_tag	&	0x2
++	contours	,	--	contours_count

text_length	&&	i	==	text_length

text_length	&&	i	==	text_length

(	size	+	7	)	/	8
size	+	7	/	8
*	byte	|	1	<<	bit

*	byte	&	~	(	1	<<	bit	)
*	byte	&	~	1	<<	bit
*	byte	&	(	1	<<	bit	)

jump_pos2	!=	-	1

jump_pos2	!=	-	1

(	gr_active_fb	+	1	)	&	1

alt	&&	key_code	==	KEY_L

get_allow_toggle_display	(	)	&&	(	key_code	==	KEY_MENU	||	key_code	==	KEY_END	)
get_allow_toggle_display	(	)	&&	key_code	==	KEY_MENU	||	key_code	==	KEY_END
get_allow_toggle_display	(	)	&&	(	key_code	==	KEY_MENU	||	key_code	==	KEY_POWER	||	key_code	==	KEY_END	)
get_allow_toggle_display	(	)	&&	key_code	==	KEY_MENU	||	key_code	==	KEY_POWER	||	key_code	==	KEY_END
amt	==	-	1

(	(	77	*	(	(	color	>>	16	)	&	0x00ff	)	)	+	(	150	*	(	(	color	>>	8	)	&	0x00ff	)	)	+	(	29	*	(	color	&	0x00ff	)	)	)	>>	8
(	(	77	*	(	color	>>	16	)	&	0x00ff	)	+	(	150	*	(	color	>>	8	)	&	0x00ff	)	+	(	29	*	color	&	0x00ff	)	)	>>	8
(	char	*	)	*	pfree	+	(	(	LIST_ALLOC	-	1	)	*	size	)
(	char	*	)	*	pfree	+	(	LIST_ALLOC	-	1	*	size	)
d1	->	hdr	->	ph_sec	==	d2	->	hdr	->	ph_sec	&&	d1	->	hdr	->	ph_usec	<	d2	->	hdr	->	ph_usec

d1	->	hdr	->	ph_sec	==	d2	->	hdr	->	ph_sec	&&	d1	->	hdr	->	ph_usec	==	d2	->	hdr	->	ph_usec

hdr	->	ph_mask	&&	(	!	(	spl_debug_subsystem	&	hdr	->	ph_subsys	)	||	(	!	(	spl_debug_mask	&	hdr	->	ph_mask	)	)	)
hdr	->	ph_mask	&&	!	(	spl_debug_subsystem	&	hdr	->	ph_subsys	)	||	(	!	spl_debug_mask	&	hdr	->	ph_mask	)
argc	>	3	||	argc	<	2

fdin	==	-	1

fdout	==	-	1

sub_num	==	-	1

test_num	==	-	1

splatctl_fd	!=	-	1

close	(	splatctl_fd	)	==	-	1

splatctl_fd	==	-	1

splatctl_fd	!=	-	1

close	(	splatctl_fd	)	==	-	1

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

!	err	&&	gctx	->	cryptlen

!	err	&&	req	->	assoclen

~	(	crypto_tfm_ctx_alignment	(	)	-	1	)
~	crypto_tfm_ctx_alignment	(	)	-	1
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

walk	->	offset	>=	walk	->	sg	->	offset	+	walk	->	sg	->	length

!	(	walk	->	flags	&	BLKCIPHER_WALK_PHYS	)
!	walk	->	flags	&	BLKCIPHER_WALK_PHYS
!	(	walk	->	flags	&	BLKCIPHER_WALK_SLOW	)
!	walk	->	flags	&	BLKCIPHER_WALK_SLOW
aligned_bsize	*	3	-	(	alignmask	+	1	)	+	(	alignmask	&	~	(	crypto_tfm_ctx_alignment	(	)	-	1	)	)
aligned_bsize	*	3	-	(	alignmask	+	1	)	+	alignmask	&	~	crypto_tfm_ctx_alignment	(	)	-	1
~	(	BLKCIPHER_WALK_SLOW	|	BLKCIPHER_WALK_COPY	|	BLKCIPHER_WALK_DIFF	)
~	BLKCIPHER_WALK_SLOW	|	BLKCIPHER_WALK_COPY	|	BLKCIPHER_WALK_DIFF
!	scatterwalk_aligned	(	&	walk	->	in	,	alignmask	)	||	!	scatterwalk_aligned	(	&	walk	->	out	,	alignmask	)

aligned_bs	*	2	+	ivsize	+	max	(	aligned_bs	,	ivsize	)	-	(	alignmask	+	1	)

alignmask	&	~	(	crypto_tfm_ctx_alignment	(	)	-	1	)
alignmask	&	~	crypto_tfm_ctx_alignment	(	)	-	1
keylen	<	cipher	->	min_keysize	||	keylen	>	cipher	->	max_keysize

count	>	(	GROUP_STR_SIZE	-	GROUP_STR_REDZONE	)

count	>	(	GROUP_STR_SIZE	-	GROUP_STR_REDZONE	)

atomic_read	(	&	cv	.	cv_condvar	.	cv_waiters	)	>	(	count	-	i	)

atomic_read	(	&	cv	.	cv_condvar	.	cv_waiters	)	==	(	count	-	i	)

(	atomic_read	(	&	cv	.	cv_condvar	.	cv_waiters	)	>	0	)	||	mutex_owner	(	&	cv	.	cv_mtx	)

atomic_read	(	&	cv	.	cv_condvar	.	cv_waiters	)	>	(	count	-	i	)

atomic_read	(	&	cv	.	cv_condvar	.	cv_waiters	)	==	(	count	-	i	)

atomic_read	(	&	cv	.	cv_condvar	.	cv_waiters	)	>	(	count	-	i	)

atomic_read	(	&	cv	.	cv_condvar	.	cv_waiters	)	==	(	count	-	i	)

n	*	(	n	-	1	)
n	*	n	-	1
n	*	(	n	-	1	)
n	*	n	-	1
n	*	(	n	-	1	)
n	*	n	-	1
n	*	(	n	-	1	)
n	*	n	-	1
(	i	*	2	)	+	1

i	*	2	+	1

i	*	2	+	1

tq_id	->	id	<	SPLAT_TASKQ_ORDER_MAX	+	1

(	i	%	3	)	==	0

!	(	i	%	3	)
!	i	%	3
rc	&&	!	tp	->	tp_rc

i	<	SPLAT_ATOMIC_INIT_VALUE	/	10

(	i	%	(	SPLAT_ATOMIC_INIT_VALUE	/	100	)	)	==	0
(	i	%	SPLAT_ATOMIC_INIT_VALUE	/	100	)	==	0
!	rc	&&	splat_linux_shrinker_size	!=	0

kcp	->	kcp_size	-	(	sizeof	*	kcd	)

kcp	->	kcp_size	-	(	sizeof	*	kcd	)

count	>	0	&&	!	list_empty	(	&	kct	->	kct_list	)

kcp	->	kcp_kct_count	==	-	1

(	--	kcp	->	kcp_kct_count	)	==	0

!	rc	&&	kcp	->	kcp_rc

kcp	->	kcp_cache	->	skc_slab_total	>	(	slabs	>>	2	)

(	i	%	10000	)	==	0

f	==	(	struct	_buf	*	)	-	1

f	==	(	struct	_buf	*	)	-	1

src	+	(	i	*	1024	)

rwp	->	rw_waiters	<	count	-	1

rwp	->	rw_waiters	!=	count	-	1

rwp	->	rw_holders	<	count	-	1

rwp	->	rw_holders	!=	count	-	1

rwp	->	rw_holders	>	0	||	rwp	->	rw_waiters	>	0

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

~	(	crypto_tfm_ctx_alignment	(	)	-	1	)
~	crypto_tfm_ctx_alignment	(	)	-	1
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

walk	->	offset	>=	walk	->	sg	->	offset	+	walk	->	sg	->	length

!	(	walk	->	flags	&	BLKCIPHER_WALK_PHYS	)
!	walk	->	flags	&	BLKCIPHER_WALK_PHYS
!	(	walk	->	flags	&	BLKCIPHER_WALK_SLOW	)
!	walk	->	flags	&	BLKCIPHER_WALK_SLOW
aligned_bsize	*	3	-	(	alignmask	+	1	)	+	(	alignmask	&	~	(	crypto_tfm_ctx_alignment	(	)	-	1	)	)
aligned_bsize	*	3	-	(	alignmask	+	1	)	+	alignmask	&	~	crypto_tfm_ctx_alignment	(	)	-	1
~	(	BLKCIPHER_WALK_SLOW	|	BLKCIPHER_WALK_COPY	|	BLKCIPHER_WALK_DIFF	)
~	BLKCIPHER_WALK_SLOW	|	BLKCIPHER_WALK_COPY	|	BLKCIPHER_WALK_DIFF
!	scatterwalk_aligned	(	&	walk	->	in	,	alignmask	)	||	!	scatterwalk_aligned	(	&	walk	->	out	,	alignmask	)

aligned_bs	*	2	+	ivsize	+	max	(	aligned_bs	,	ivsize	)	-	(	alignmask	+	1	)

alignmask	&	~	(	crypto_tfm_ctx_alignment	(	)	-	1	)
alignmask	&	~	crypto_tfm_ctx_alignment	(	)	-	1
keylen	<	cipher	->	min_keysize	||	keylen	>	cipher	->	max_keysize

bfp	->	l_start	>=	0	&&	bfp	->	l_len	>	0

!	htfm	||	IS_ERR	(	htfm	)

htfm	||	!	IS_ERR	(	htfm	)

sizeof	(	tsd_hash_bin_t	)	*	(	1	<<	table	->	ht_bits	)
sizeof	(	tsd_hash_bin_t	)	*	1	<<	table	->	ht_bits
size	--	>=	0

i	*	16	+	j	>=	l

i	*	16	+	j

(	left	+	right	)	/	2
left	+	right	/	2
file	==	(	struct	_buf	*	)	-	1

current	.	tv_sec	+	current	.	tv_usec	/	1000000.0

current	.	ru_utime	.	tv_sec	+	current	.	ru_utime	.	tv_usec	/	1000000.0

current	.	ru_stime	.	tv_sec	+	current	.	ru_stime	.	tv_usec	/	1000000.0

i	<	index	+	narg

i	<	index	+	narg

(	double	)	tv	.	tv_sec	+	(	double	)	(	tv	.	tv_usec	)	/	1000000.0

(	double	)	tv	.	tv_sec	+	(	double	)	(	tv	.	tv_usec	)	/	1000000.0

sb	->	buffer	&&	sb	->	len	+	n	>	sb	->	maxlen

sb	->	len	+	n	>	nlen

strncmp	(	s	+	1	,	suffix	,	sl	)	==	0

self	->	storage	->	size	/	2	>	missingSpace

self	->	storage	->	size	+	(	self	->	storage	->	size	/	2	)

mfself	->	position	+	n	<=	mfself	->	size

nByteWritten	>	-	1

mfself	->	position	+	n	<=	mfself	->	size

nByteWritten	>	-	1

i	<	mfself	->	size	-	mfself	->	position

x	*	(	A1	+	x	*	(	A2	+	x	*	(	A3	+	x	*	A4	)	)	)
x	*	(	A1	+	x	*	(	A2	+	x	*	A3	+	x	*	A4	)	)
total	-	pos	==	0

total	-	pos	<=	1

nInputRows	>=	nKernelRows	&&	nInputCols	>=	nKernelCols

nInputRows	>=	nKernelRows	&&	nInputCols	>=	nKernelCols

nInputDepth	>=	nKernelDepth	&&	nInputRows	>=	nKernelRows	&&	nInputCols	>=	nKernelCols

--	left	==	0

(	y	<<	7	)	&	0x9d2c5680UL

(	y	<<	15	)	&	0xefc60000UL

--	left	==	0

(	y	<<	7	)	&	0x9d2c5680UL

(	y	<<	15	)	&	0xefc60000UL

__uniform__	(	)	*	(	b	-	a	)	+	a
__uniform__	(	)	*	b	-	a	+	a
-	1.	/	lambda	*	log	(	1	-	__uniform__	(	)	)

zm	/	sqrt	(	zs	+	zm	)

zs	/	zm	+	1

p	>	0	&&	p	<	1

(	int	)	(	log	(	1	-	__uniform__	(	)	)	/	log	(	p	)	)	+	1

p	>=	0	&&	p	<=	1

!	(	1	<=	pos	&&	pos	<=	e	)
!	1	<=	pos	&&	pos	<=	e
u	-	l	==	1

(	l	+	u	)	/	2
l	+	u	/	2
u	-	l	==	2

i	-	l	<	u	-	i

pfrom	<=	from	&&	from	<=	pto	+	1

l	<	0	||	l	>=	ms	->	level

*	(	p	++	)	==	L_ESC

++	p	<	ec

p	+	2	<	ec

*	p	==	0	||	*	(	p	+	1	)	==	0
*	p	==	0	||	*	p	+	1	==	0
++	s	<	ms	->	src_end

--	cont	==	0

s	<	ms	->	src_end	&&	singlematch	(	uchar	(	*	s	)	,	p	,	ep	)

s	<	ms	->	src_end	&&	singlematch	(	uchar	(	*	s	)	,	p	,	ep	)

ms	->	level	==	0	&&	s

s1	++	<	ms	.	src_end	&&	!	anchor

e	&&	e	>	src

*	++	strfrmt	==	L_ESC

i	==	argc	&&	(	listing	||	!	dumping	)
i	==	argc	&&	listing	||	!	dumping
version	==	argc	-	1

2	*	n	+	1

nargs	--	&&	success

*	size	>=	limit	/	2

level	>	LEVELS1	&&	firstpart

--	nexeccalls	==	0

script	==	0	&&	!	has_e	&&	!	has_v

sep	==	-	1

sb	->	buffer	&&	sb	->	len	+	n	>	sb	->	maxlen

sb	->	len	+	n	>	nlen

sb	.	buffer	&&	!	cwd

cwd	||	errno	!=	ERANGE

&	sb	.	buffer	&&	sb	.	len	>	0

sb	.	buffer	&&	sb	.	len	>	0

sb	.	buffer	&&	sb	.	len	>	0

!	(	p	&&	*	p	)
!	p	&&	*	p
sb	.	buffer	&&	stat	(	sb	.	buffer	,	&	sbuf	)	>=	0	&&	S_ISREG	(	sbuf	.	st_mode	)
.	buffer	&&	stat	(	sb	.	buffer	,	&	sbuf	)	>=	0	&&	S_ISREG	(	sbuf	.	st_mode	sb	.	buffer	&&	stat	(	sb	.	buffer	,	&	sbuf	)	>=	0	&&	S_ISREG	(	sbuf	.	st_mode	)
sb	.	buffer	&&	lstat	(	sb	.	buffer	,	&	sbuf	)	>=	0	&&	S_ISLNK	(	sbuf	.	st_mode	)
.	buffer	&&	lstat	(	sb	.	buffer	,	&	sbuf	)	>=	0	&&	S_ISLNK	(	sbuf	.	st_mode	sb	.	buffer	&&	lstat	(	sb	.	buffer	,	&	sbuf	)	>=	0	&&	S_ISLNK	(	sbuf	.	st_mode	)
sb	.	buffer	&&	sb	.	len	>	0

sb	.	buffer	&&	sb	.	len	>	0

sb	.	buffer	&&	sb	.	len	>	0

sb	.	buffer	&&	sb	.	len	>	0

sb	.	buffer	&&	sb	.	len	>	0

sb	.	buffer	&&	sb	.	len	>	0

!	bl	->	isbreakable	||	!	bl	->	upval

(	x	+	1	)	>>	1

(	(	e	+	1	)	<<	3	)	|	(	cast_int	(	x	)	-	8	)

(	x	>>	3	)	&	31

(	(	x	&	7	)	+	8	)	<<	(	e	-	1	)
(	x	&	7	+	8	)	<<	(	e	-	1	)
4	*	sizeof	(	void	*	)	+	8

twotoi	/	2	<	*	narray

a	>	twotoi	/	2

*	narray	/	2	<=	na	&&	na	<=	*	narray

j	-	i	>	1

(	i	+	j	)	/	2
i	+	j	/	2
j	-	i	>	1

(	i	+	j	)	/	2
i	+	j	/	2
x	-	lj_vm_floor	(	x	/	y	)	*	y

stat	!=	-	1

(	NSMALLBINS	+	1	)	*	2
NSMALLBINS	+	1	*	2
addr	>=	sp	->	base	&&	addr	<	sp	->	base	+	sp	->	size

(	char	*	)	sp	>=	ss	->	base	&&	(	char	*	)	sp	<	ss	->	base	+	ss	->	size

sp	!=	0	&&	tbase	!=	sp	->	base	+	sp	->	size

sp	!=	0	&&	segment_holds	(	sp	,	m	->	top	)

rt	!=	0	&&	rt	!=	t

t	==	0	&&	v	==	0

(	smallbits	&	0x3U	)	!=	0
smallbits	&	0x3U	!=	0
~	smallbits	&	1

(	smallbits	<<	idx	)	&	left_bits	(	idx2bit	(	idx	)	)
(	smallbits	<<	idx	)	&	left_bits	(	idx2bit	(	idx	)	)
*	(	p	++	)	==	L_ESC

(	cl	&	0xc0	)	==	0x40
cl	&	0xc0	==	0x40
++	p	<	ec

p	+	2	<	ec

--	cont	==	0

matchbracketclass	(	uchar	(	previous	)	,	p	,	ep	-	1	)	||	!	matchbracketclass	(	uchar	(	*	s	)	,	p	,	ep	-	1	)

e	&&	e	>	src

sep	==	-	1

!	(	flags	&	FLAGS_NOENV	)
!	flags	&	FLAGS_NOENV
script	==	0	&&	!	(	flags	&	(	FLAGS_EXEC	|	FLAGS_VERSION	)	)
script	==	0	&&	!	(	flags	&	FLAGS_EXEC	|	FLAGS_VERSION	)
e	->	k	==	VVOID	||	e	->	k	==	VJMP

!	expr_isnumk_nojump	(	e1	)	||	!	expr_isnumk_nojump	(	e2	)
!	expr_isnumk_nojump	(	e1	)	||	!	expr_isnumk_nojump	(	e2	)
e1	->	k	==	VNONRELOC	&&	e1	->	u	.	s	.	info	>=	fs	->	nactvar

e2	->	k	==	VNONRELOC	&&	e2	->	u	.	s	.	info	>=	fs	->	nactvar

opr	==	OPR_EQ	||	opr	==	OPR_NE

e1	->	k	==	VNONRELOC	&&	e1	->	u	.	s	.	info	>=	fs	->	nactvar

e2	->	k	==	VNONRELOC	&&	e2	->	u	.	s	.	info	>=	fs	->	nactvar

op	==	OPR_EQ	||	op	==	OPR_NE

e1	->	u	.	s	.	info	==	bc_b	(	*	bcptr	(	fs	,	e2	)	)	-	1

op	==	OPR_NE	||	op	==	OPR_EQ	||	op	==	OPR_LT	||	op	==	OPR_GE	||	op	==	OPR_LE	||	op	==	OPR_GT

e	->	k	==	VKNIL	||	e	->	k	==	VKFALSE

e	->	k	==	VLOCAL	||	e	->	k	==	VUPVAL

!	(	bl	->	flags	&	FSCOPE_GOLA	)
!	bl	->	flags	&	FSCOPE_GOLA
key	.	k	==	VKSTR	||	expr_isk_nojump	(	&	val	)
key	.	k	==	VKSTR	||	expr_isk_nojump	(	&	val	)
!	(	bl2	.	flags	&	FSCOPE_UPVAL	)
!	bl2	.	flags	&	FSCOPE_UPVAL
x	-	lj_vm_floor	(	x	/	y	)	*	y

sep	==	-	1

e	->	k	==	VVOID	||	e	->	k	==	VJMP

!	expr_isnumk_nojump	(	e1	)	||	!	expr_isnumk_nojump	(	e2	)
!	expr_isnumk_nojump	(	e1	)	||	!	expr_isnumk_nojump	(	e2	)
e1	->	k	==	VNONRELOC	&&	e1	->	u	.	s	.	info	>=	fs	->	nactvar

e2	->	k	==	VNONRELOC	&&	e2	->	u	.	s	.	info	>=	fs	->	nactvar

opr	==	OPR_EQ	||	opr	==	OPR_NE

e1	->	k	==	VNONRELOC	&&	e1	->	u	.	s	.	info	>=	fs	->	nactvar

e2	->	k	==	VNONRELOC	&&	e2	->	u	.	s	.	info	>=	fs	->	nactvar

op	==	OPR_EQ	||	op	==	OPR_NE

e1	->	u	.	s	.	info	==	bc_b	(	*	bcptr	(	fs	,	e2	)	)	-	1

op	==	OPR_NE	||	op	==	OPR_EQ	||	op	==	OPR_LT	||	op	==	OPR_GE	||	op	==	OPR_LE	||	op	==	OPR_GT

e	->	k	==	VKNIL	||	e	->	k	==	VKFALSE

e	->	k	==	VLOCAL	||	e	->	k	==	VUPVAL

!	(	bl	->	flags	&	FSCOPE_GOLA	)
!	bl	->	flags	&	FSCOPE_GOLA
key	.	k	==	VKSTR	||	expr_isk_nojump	(	&	val	)
key	.	k	==	VKSTR	||	expr_isk_nojump	(	&	val	)
!	(	bl2	.	flags	&	FSCOPE_UPVAL	)
!	bl2	.	flags	&	FSCOPE_UPVAL
(	NSMALLBINS	+	1	)	*	2
NSMALLBINS	+	1	*	2
addr	>=	sp	->	base	&&	addr	<	sp	->	base	+	sp	->	size

(	char	*	)	sp	>=	ss	->	base	&&	(	char	*	)	sp	<	ss	->	base	+	ss	->	size

sp	!=	0	&&	tbase	!=	sp	->	base	+	sp	->	size

sp	!=	0	&&	segment_holds	(	sp	,	m	->	top	)

rt	!=	0	&&	rt	!=	t

t	==	0	&&	v	==	0

(	smallbits	&	0x3U	)	!=	0
smallbits	&	0x3U	!=	0
~	smallbits	&	1

(	smallbits	<<	idx	)	&	left_bits	(	idx2bit	(	idx	)	)
(	smallbits	<<	idx	)	&	left_bits	(	idx2bit	(	idx	)	)
stat	!=	-	1

*	(	p	++	)	==	L_ESC

(	cl	&	0xc0	)	==	0x40
cl	&	0xc0	==	0x40
++	p	<	ec

p	+	2	<	ec

--	cont	==	0

matchbracketclass	(	uchar	(	previous	)	,	p	,	ep	-	1	)	||	!	matchbracketclass	(	uchar	(	*	s	)	,	p	,	ep	-	1	)

e	&&	e	>	src

stat	!=	-	1

nargs	--	&&	ok

sb	->	buffer	&&	sb	->	len	+	n	>	sb	->	maxlen

sb	->	len	+	n	>	nlen

sb	.	buffer	&&	!	cwd

cwd	||	errno	!=	ERANGE

&	sb	.	buffer	&&	sb	.	len	>	0

sb	.	buffer	&&	sb	.	len	>	0

sb	.	buffer	&&	sb	.	len	>	0

!	(	p	&&	*	p	)
!	p	&&	*	p
sb	.	buffer	&&	stat	(	sb	.	buffer	,	&	sbuf	)	>=	0	&&	S_ISREG	(	sbuf	.	st_mode	)
.	buffer	&&	stat	(	sb	.	buffer	,	&	sbuf	)	>=	0	&&	S_ISREG	(	sbuf	.	st_mode	sb	.	buffer	&&	stat	(	sb	.	buffer	,	&	sbuf	)	>=	0	&&	S_ISREG	(	sbuf	.	st_mode	)
sb	.	buffer	&&	lstat	(	sb	.	buffer	,	&	sbuf	)	>=	0	&&	S_ISLNK	(	sbuf	.	st_mode	)
.	buffer	&&	lstat	(	sb	.	buffer	,	&	sbuf	)	>=	0	&&	S_ISLNK	(	sbuf	.	st_mode	sb	.	buffer	&&	lstat	(	sb	.	buffer	,	&	sbuf	)	>=	0	&&	S_ISLNK	(	sbuf	.	st_mode	)
sb	.	buffer	&&	sb	.	len	>	0

sb	.	buffer	&&	sb	.	len	>	0

sb	.	buffer	&&	sb	.	len	>	0

sb	.	buffer	&&	sb	.	len	>	0

sb	.	buffer	&&	sb	.	len	>	0

sb	.	buffer	&&	sb	.	len	>	0

(	iof	->	type	&	IOFILE_TYPE_MASK	)	==	IOFILE_TYPE_FILE
iof	->	type	&	IOFILE_TYPE_MASK	==	IOFILE_TYPE_FILE
(	iof	->	type	&	IOFILE_TYPE_MASK	)	==	IOFILE_TYPE_PIPE
iof	->	type	&	IOFILE_TYPE_MASK	==	IOFILE_TYPE_PIPE
stat	!=	-	1

(	iof	->	type	&	IOFILE_TYPE_MASK	)	==	IOFILE_TYPE_STDF
iof	->	type	&	IOFILE_TYPE_MASK	==	IOFILE_TYPE_STDF
nargs	--	&&	ok

strlen	(	p	)	>	sizeof	(	funcname	)	-	1

--	lvl	==	0

*	size	>=	limit	/	2

(	x	+	1	)	>>	1

(	(	e	+	1	)	<<	3	)	|	(	cast_int	(	x	)	-	8	)

(	x	>>	3	)	&	31

(	(	x	&	7	)	+	8	)	<<	(	e	-	1	)
(	x	&	7	+	8	)	<<	(	e	-	1	)
4	*	sizeof	(	void	*	)	+	8

sizeof	(	TValue	)	*	(	(	n	)	-	1	)
sizeof	(	TValue	)	*	(	n	)	-	1
sizeof	(	TValue	*	)	*	(	(	n	)	-	1	)
sizeof	(	TValue	*	)	*	(	n	)	-	1
inuse	+	1	<	20000

L	->	top	>	base	+	p	->	numparams

i	!=	0	&&	firstResult	<	L	->	top

i	--	>	0

++	L	->	nCcalls	>=	200

L	->	nCcalls	>=	(	200	+	(	200	>>	3	)	)
L	->	nCcalls	>=	(	200	+	200	>>	3	)
(	s	)	&	(	(	size	)	-	1	)

(	s	)	&	(	(	size	)	-	1	)

i	<	cast_int	(	sizeof	(	lua_Number	)	/	sizeof	(	int	)	)

0	<	i	&&	i	<=	t	->	sizearray

luaO_rawequalObj	(	key2tval	(	n	)	,	key	)	||	(	ttype	(	gkey	(	n	)	)	==	(	8	+	3	)	&&	iscollectable	(	key	)	&&	gcvalue	(	gkey	(	n	)	)	==	gcvalue	(	key	)	)

twotoi	/	2	<	*	narray

a	>	twotoi	/	2

0	<	k	&&	k	<=	(	1	<<	(	32	-	2	)	)

lg	<=	(	32	-	2	)

lsize	>	(	32	-	2	)

i	<=	(	32	-	2	)

t	->	lastfree	--	>	t	->	node

!	ttisnil	(	gval	(	mp	)	)	||	mp	==	(	&	dummynode_	)
!	ttisnil	(	gval	(	mp	)	)	||	mp	==	(	&	dummynode_	)
j	-	i	>	1

(	i	+	j	)	/	2
i	+	j	/	2
j	-	i	>	1

(	i	+	j	)	/	2
i	+	j	/	2
~	(	bitmask	(	2	)	|	bit2mask	(	0	,	1	)	)
~	bitmask	(	2	)	|	bit2mask	(	0	,	1	)
!	(	iswhite	(	curr	)	||	all	)	||	isfinalized	(	gco2u	(	curr	)	)
!	iswhite	(	curr	)	||	all	||	isfinalized	(	gco2u	(	curr	)	)
~	(	bitmask	(	3	)	|	bitmask	(	4	)	)
~	bitmask	(	3	)	|	bitmask	(	4	)
(	weakkey	<<	3	)	|	(	weakvalue	<<	4	)

4	*	ci_used	<	L	->	size_ci	&&	2	*	8	<	L	->	size_ci

4	*	s_used	<	L	->	stacksize	&&	2	*	(	(	2	*	20	)	+	5	)	<	L	->	stacksize
4	*	s_used	<	L	->	stacksize	&&	2	*	(	2	*	20	)	+	5	<	L	->	stacksize
sizeof	(	TValue	)	*	(	(	n	)	-	1	)
sizeof	(	TValue	)	*	(	n	)	-	1
sizeof	(	TValue	*	)	*	(	(	n	)	-	1	)
sizeof	(	TValue	*	)	*	(	n	)	-	1
sizeof	(	lua_State	)	+	sizeof	(	TValue	)	*	th	->	stacksize	+	sizeof	(	CallInfo	)	*	th	->	size_ci

sizeof	(	Proto	)	+	sizeof	(	Instruction	)	*	p	->	sizecode	+	sizeof	(	Proto	*	)	*	p	->	sizep	+	sizeof	(	TValue	)	*	p	->	sizek	+	sizeof	(	int	)	*	p	->	sizelineinfo	+	sizeof	(	LocVar	)	*	p	->	sizelocvars	+	sizeof	(	TString	*	)	*	p	->	sizeupvalues

!	iskey	&&	isfinalized	(	uvalue	(	o	)	)

!	ttisnil	(	gval	(	n	)	)	&&	(	iscleared	(	key2tval	(	n	)	,	1	)	||	iscleared	(	gval	(	n	)	,	0	)	)
!	ttisnil	(	gval	(	n	)	)	&&	iscleared	(	key2tval	(	n	)	,	1	)	||	iscleared	(	gval	(	n	)	,	0	)
(	curr	->	gch	.	marked	^	bit2mask	(	0	,	1	)	)	&	deadmask
curr	->	gch	.	marked	^	bit2mask	(	0	,	1	)	&	deadmask
~	(	bitmask	(	2	)	|	bit2mask	(	0	,	1	)	)
~	bitmask	(	2	)	|	bit2mask	(	0	,	1	)
g	->	strt	.	nuse	<	cast	(	lu_int32	,	g	->	strt	.	size	/	4	)	&&	g	->	strt	.	size	>	32	*	2

~	(	bitmask	(	2	)	|	bit2mask	(	0	,	1	)	)
~	bitmask	(	2	)	|	bit2mask	(	0	,	1	)
i	<	(	8	+	1	)

(	(	(	lu_mem	)	(	~	(	lu_mem	)	0	)	-	2	)	-	1	)	/	2
(	(	lu_mem	)	(	~	(	lu_mem	)	0	)	-	2	)	-	1	/	2
~	(	bitmask	(	2	)	|	bit2mask	(	0	,	1	)	)
~	bitmask	(	2	)	|	bit2mask	(	0	,	1	)
~	(	bitmask	(	2	)	|	bit2mask	(	0	,	1	)	)
~	bitmask	(	2	)	|	bit2mask	(	0	,	1	)
(	2	*	20	)	+	5

level	>	0	&&	ci	>	L	->	base_ci

level	==	0	&&	ci	>	L	->	base_ci

b	->	n	+	1	>	b	->	buffsize

i	<	(	cast	(	int	,	TK_WHILE	-	257	+	1	)	)

++	i	<	3	&&	isdigit	(	ls	->	current	)
i	<	3	&&	isdigit	(	ls	->	current	++	i	<	3	&&	isdigit	(	ls	->	current	)
!	currIsNewline	(	ls	)	&&	ls	->	current	!=	(	-	1	)
!	currIsNewline	(	ls	)	&&	ls	->	current	!=	(	-	1	)
sep	==	-	1

e	->	k	==	VKNUM	&&	e	->	t	==	(	-	1	)	&&	e	->	f	==	(	-	1	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	i	)	>>	(	0	+	6	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	i	)	>>	(	(	(	0	+	6	)	+	8	)	+	9	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
pfrom	<=	from	&&	from	<=	pto	+	1

from	+	n	-	1	>	pto

abs	(	offset	)	>	(	(	(	1	<<	(	9	+	9	)	)	-	1	)	>>	1	)
abs	(	offset	)	>	(	(	1	<<	(	9	+	9	)	-	1	)	>>	1	)
(	b	)	+	(	(	(	1	<<	(	9	+	9	)	)	-	1	)	>>	1	)
(	b	)	+	(	(	1	<<	(	9	+	9	)	)	-	1	)	>>	1
(	i	)	>>	(	(	0	+	6	)	+	8	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
offset	==	(	-	1	)

pc	>=	1	&&	testTMode	(	GET_OPCODE	(	*	(	pi	-	1	)	)	)
pc	>=	1	&&	testTMode	(	GET_OPCODE	(	*	pi	-	1	)	)
list	!=	(	-	1	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
reg	!=	(	(	1	<<	8	)	-	1	)	&&	reg	!=	GETARG_B	(	*	i	)
reg	!=	(	1	<<	8	-	1	)	&&	reg	!=	GETARG_B	(	*	i	)
(	i	)	>>	(	(	(	0	+	6	)	+	8	)	+	9	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	i	)	>>	(	(	0	+	6	)	+	8	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
list	!=	(	-	1	)

(	1	<<	8	)	-	1
1	<<	8	-	1
list	!=	(	-	1	)

(	1	<<	8	)	-	1
1	<<	8	-	1
(	1	<<	8	)	-	1
1	<<	8	-	1
l2	==	(	-	1	)

*	l1	==	(	-	1	)

!	ISK	(	reg	)	&&	reg	>=	fs	->	nactvar
!	ISK	(	reg	)	&&	reg	>=	fs	->	nactvar
(	i	)	>>	(	0	+	6	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
fs	->	nk	<=	(	(	1	<<	(	9	-	1	)	)	-	1	)
fs	->	nk	<=	(	1	<<	(	9	-	1	)	-	1	)
e	->	u	.	s	.	info	<=	(	(	1	<<	(	9	-	1	)	)	-	1	)
e	->	u	.	s	.	info	<=	(	1	<<	(	9	-	1	)	-	1	)
(	i	)	>>	(	0	+	6	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	i	)	>>	(	(	(	0	+	6	)	+	8	)	+	9	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	1	<<	8	)	-	1
1	<<	8	-	1
!	isnumeral	(	e1	)	||	!	isnumeral	(	e2	)

op	!=	OP_UNM	&&	op	!=	OP_LEN

cond	==	0	&&	op	!=	OP_EQ

e2	->	k	==	VRELOCABLE	&&	GET_OPCODE	(	getcode	(	fs	,	e2	)	)	==	OP_CONCAT
e2	->	k	==	VRELOCABLE	&&	GET_OPCODE	(	getcode	(	fs	,	e2	)	)	==	OP_CONCAT
(	nelems	-	1	)	/	50	+	1
nelems	-	1	/	50	+	1
tostore	==	(	-	1	)

c	<=	(	(	1	<<	9	)	-	1	)
c	<=	(	1	<<	9	-	1	)
ls	->	t	.	token	==	TK_NAME	||	ls	->	t	.	token	==	TK_STRING

bl	&&	bl	->	nactvar	>	level

(	1	<<	8	)	-	1
1	<<	8	-	1
++	ls	->	L	->	nCcalls	>	200

fs	->	nactvar	-	(	f	->	is_vararg	&	1	)
fs	->	nactvar	-	f	->	is_vararg	&	1
VLOCAL	<=	lh	->	v	.	k	&&	lh	->	v	.	k	<=	VINDEXED

bl	&&	!	bl	->	isbreakable

e	.	k	==	VCALL	&&	nret	==	1

!	islast	&&	!	block_follow	(	ls	->	t	.	token	)

!	(	ttisstring	(	top	-	2	)	||	ttisnumber	(	top	-	2	)	)	||	!	tostring	(	L	,	top	-	1	)
!	ttisstring	(	top	-	2	)	||	ttisnumber	(	top	-	2	)	||	!	tostring	(	L	,	top	-	1	)
!	call_binTM	(	L	,	top	-	2	,	top	-	1	,	top	-	2	,	TM_CONCAT	)

n	<	total	&&	tostring	(	L	,	top	-	n	-	1	)
n	<	total	&&	tostring	(	L	,	top	-	n	-	1	)
(	a	)	-	floor	(	(	a	)	/	(	b	)	)	*	(	b	)

(	i	)	>>	(	0	+	6	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	i	)	>>	(	(	(	0	+	6	)	+	8	)	+	9	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	i	)	>>	(	(	0	+	6	)	+	8	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	i	)	>>	(	(	(	0	+	6	)	+	8	)	+	9	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	i	)	>>	(	(	0	+	6	)	+	8	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	i	)	>>	(	(	(	0	+	6	)	+	8	)	+	9	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	i	)	>>	(	(	(	0	+	6	)	+	8	)	+	9	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	i	)	>>	(	(	0	+	6	)	+	8	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	i	)	>>	(	(	(	0	+	6	)	+	8	)	+	9	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	x	)	&	(	1	<<	(	9	-	1	)	)
(	x	)	&	(	1	<<	(	9	-	1	)	)
(	int	)	(	r	)	&	~	(	1	<<	(	9	-	1	)	)
(	int	)	(	r	)	&	~	1	<<	(	9	-	1	)
(	i	)	>>	(	(	0	+	6	)	+	8	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	i	)	>>	(	(	0	+	6	)	+	8	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	i	)	>>	(	(	(	0	+	6	)	+	8	)	+	9	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	x	)	&	(	1	<<	(	9	-	1	)	)
(	x	)	&	(	1	<<	(	9	-	1	)	)
(	int	)	(	r	)	&	~	(	1	<<	(	9	-	1	)	)
(	int	)	(	r	)	&	~	1	<<	(	9	-	1	)
(	i	)	>>	(	(	(	0	+	6	)	+	8	)	+	9	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	x	)	&	(	1	<<	(	9	-	1	)	)
(	x	)	&	(	1	<<	(	9	-	1	)	)
(	int	)	(	r	)	&	~	(	1	<<	(	9	-	1	)	)
(	int	)	(	r	)	&	~	1	<<	(	9	-	1	)
(	i	)	>>	(	(	0	+	6	)	+	8	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	i	)	>>	(	(	(	0	+	6	)	+	8	)	+	9	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	i	)	>>	(	(	0	+	6	)	+	8	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	i	)	>>	(	(	(	0	+	6	)	+	8	)	+	9	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	x	)	&	(	1	<<	(	9	-	1	)	)
(	x	)	&	(	1	<<	(	9	-	1	)	)
(	int	)	(	r	)	&	~	(	1	<<	(	9	-	1	)	)
(	int	)	(	r	)	&	~	1	<<	(	9	-	1	)
(	i	)	>>	(	(	0	+	6	)	+	8	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	x	)	&	(	1	<<	(	9	-	1	)	)
(	x	)	&	(	1	<<	(	9	-	1	)	)
(	int	)	(	r	)	&	~	(	1	<<	(	9	-	1	)	)
(	int	)	(	r	)	&	~	1	<<	(	9	-	1	)
(	i	)	>>	(	(	(	0	+	6	)	+	8	)	+	9	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	x	)	&	(	1	<<	(	9	-	1	)	)
(	x	)	&	(	1	<<	(	9	-	1	)	)
(	int	)	(	r	)	&	~	(	1	<<	(	9	-	1	)	)
(	int	)	(	r	)	&	~	1	<<	(	9	-	1	)
(	i	)	>>	(	(	0	+	6	)	+	8	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	x	)	&	(	1	<<	(	9	-	1	)	)
(	x	)	&	(	1	<<	(	9	-	1	)	)
(	int	)	(	r	)	&	~	(	1	<<	(	9	-	1	)	)
(	int	)	(	r	)	&	~	(	1	<<	(	9	-	1	)	)
(	i	)	>>	(	(	(	0	+	6	)	+	8	)	+	9	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	x	)	&	(	1	<<	(	9	-	1	)	)
(	x	)	&	(	1	<<	(	9	-	1	)	)
(	int	)	(	r	)	&	~	(	1	<<	(	9	-	1	)	)
(	int	)	(	r	)	&	~	1	<<	(	9	-	1	)
(	i	)	>>	(	(	0	+	6	)	+	8	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	x	)	&	(	1	<<	(	9	-	1	)	)
(	x	)	&	(	1	<<	(	9	-	1	)	)
(	int	)	(	r	)	&	~	(	1	<<	(	9	-	1	)	)
(	int	)	(	r	)	&	~	1	<<	(	9	-	1	)
(	i	)	>>	(	(	(	0	+	6	)	+	8	)	+	9	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	x	)	&	(	1	<<	(	9	-	1	)	)
(	x	)	&	(	1	<<	(	9	-	1	)	)
(	int	)	(	r	)	&	~	(	1	<<	(	9	-	1	)	)
(	int	)	(	r	)	&	~	1	<<	(	9	-	1	)
(	i	)	>>	(	(	0	+	6	)	+	8	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	x	)	&	(	1	<<	(	9	-	1	)	)
(	x	)	&	(	1	<<	(	9	-	1	)	)
(	int	)	(	r	)	&	~	(	1	<<	(	9	-	1	)	)
(	int	)	(	r	)	&	~	1	<<	(	9	-	1	)
(	i	)	>>	(	(	(	0	+	6	)	+	8	)	+	9	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	x	)	&	(	1	<<	(	9	-	1	)	)
(	x	)	&	(	1	<<	(	9	-	1	)	)
(	int	)	(	r	)	&	~	(	1	<<	(	9	-	1	)	)
(	int	)	(	r	)	&	~	1	<<	(	9	-	1	)
(	i	)	>>	(	(	0	+	6	)	+	8	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	x	)	&	(	1	<<	(	9	-	1	)	)
(	x	)	&	(	1	<<	(	9	-	1	)	)
(	int	)	(	r	)	&	~	(	1	<<	(	9	-	1	)	)
(	int	)	(	r	)	&	~	(	1	<<	(	9	-	1	)	)
(	i	)	>>	(	(	(	0	+	6	)	+	8	)	+	9	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	x	)	&	(	1	<<	(	9	-	1	)	)
(	x	)	&	(	1	<<	(	9	-	1	)	)
(	int	)	(	r	)	&	~	(	1	<<	(	9	-	1	)	)
(	int	)	(	r	)	&	~	1	<<	(	9	-	1	)
(	i	)	>>	(	(	0	+	6	)	+	8	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	a	)	-	floor	(	(	a	)	/	(	b	)	)	*	(	b	)

(	x	)	&	(	1	<<	(	9	-	1	)	)
(	x	)	&	(	1	<<	(	9	-	1	)	)
(	int	)	(	r	)	&	~	(	1	<<	(	9	-	1	)	)
(	int	)	(	r	)	&	~	1	<<	(	9	-	1	)
(	i	)	>>	(	(	(	0	+	6	)	+	8	)	+	9	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	x	)	&	(	1	<<	(	9	-	1	)	)
(	x	)	&	(	1	<<	(	9	-	1	)	)
(	int	)	(	r	)	&	~	(	1	<<	(	9	-	1	)	)
(	int	)	(	r	)	&	~	1	<<	(	9	-	1	)
(	i	)	>>	(	(	0	+	6	)	+	8	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	i	)	>>	(	(	(	0	+	6	)	+	8	)	+	9	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	i	)	>>	(	(	(	0	+	6	)	+	8	)	+	9	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	i	)	>>	(	(	(	0	+	6	)	+	8	)	+	9	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	i	)	>>	(	(	(	0	+	6	)	+	8	)	+	9	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	i	)	>>	(	(	(	0	+	6	)	+	8	)	+	9	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	i	)	>>	(	(	(	0	+	6	)	+	8	)	+	9	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	i	)	>>	(	(	0	+	6	)	+	8	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	i	)	>>	(	0	+	6	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	i	)	>>	(	(	0	+	6	)	+	8	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	(	1	<<	(	9	+	9	)	)	-	1	)	>>	1
(	1	<<	(	9	+	9	)	-	1	)	>>	1
(	x	)	&	(	1	<<	(	9	-	1	)	)
(	x	)	&	(	1	<<	(	9	-	1	)	)
(	int	)	(	r	)	&	~	(	1	<<	(	9	-	1	)	)
(	int	)	(	r	)	&	~	(	1	<<	(	9	-	1	)	)
(	i	)	>>	(	(	(	0	+	6	)	+	8	)	+	9	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	x	)	&	(	1	<<	(	9	-	1	)	)
(	x	)	&	(	1	<<	(	9	-	1	)	)
(	int	)	(	r	)	&	~	(	1	<<	(	9	-	1	)	)
(	int	)	(	r	)	&	~	1	<<	(	9	-	1	)
(	i	)	>>	(	(	0	+	6	)	+	8	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	i	)	>>	(	0	+	6	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	i	)	>>	(	(	0	+	6	)	+	8	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	(	1	<<	(	9	+	9	)	)	-	1	)	>>	1
(	1	<<	(	9	+	9	)	-	1	)	>>	1
(	x	)	&	(	1	<<	(	9	-	1	)	)
(	x	)	&	(	1	<<	(	9	-	1	)	)
(	int	)	(	r	)	&	~	(	1	<<	(	9	-	1	)	)
(	int	)	(	r	)	&	~	1	<<	(	9	-	1	)
(	i	)	>>	(	(	(	0	+	6	)	+	8	)	+	9	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	x	)	&	(	1	<<	(	9	-	1	)	)
(	x	)	&	(	1	<<	(	9	-	1	)	)
(	int	)	(	r	)	&	~	(	1	<<	(	9	-	1	)	)
(	int	)	(	r	)	&	~	1	<<	(	9	-	1	)
(	i	)	>>	(	(	0	+	6	)	+	8	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	i	)	>>	(	0	+	6	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	i	)	>>	(	(	0	+	6	)	+	8	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	(	1	<<	(	9	+	9	)	)	-	1	)	>>	1
(	1	<<	(	9	+	9	)	-	1	)	>>	1
(	x	)	&	(	1	<<	(	9	-	1	)	)
(	x	)	&	(	1	<<	(	9	-	1	)	)
(	int	)	(	r	)	&	~	(	1	<<	(	9	-	1	)	)
(	int	)	(	r	)	&	~	(	1	<<	(	9	-	1	)	)
(	i	)	>>	(	(	(	0	+	6	)	+	8	)	+	9	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	x	)	&	(	1	<<	(	9	-	1	)	)
(	x	)	&	(	1	<<	(	9	-	1	)	)
(	int	)	(	r	)	&	~	(	1	<<	(	9	-	1	)	)
(	int	)	(	r	)	&	~	1	<<	(	9	-	1	)
(	i	)	>>	(	(	0	+	6	)	+	8	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	i	)	>>	(	0	+	6	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	i	)	>>	(	(	0	+	6	)	+	8	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	(	1	<<	(	9	+	9	)	)	-	1	)	>>	1
(	1	<<	(	9	+	9	)	-	1	)	>>	1
(	i	)	>>	(	(	0	+	6	)	+	8	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	i	)	>>	(	(	0	+	6	)	+	8	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	(	1	<<	(	9	+	9	)	)	-	1	)	>>	1
(	1	<<	(	9	+	9	)	-	1	)	>>	1
(	i	)	>>	(	(	(	0	+	6	)	+	8	)	+	9	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	i	)	>>	(	(	0	+	6	)	+	8	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	i	)	>>	(	(	0	+	6	)	+	8	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	(	1	<<	(	9	+	9	)	)	-	1	)	>>	1
(	1	<<	(	9	+	9	)	-	1	)	>>	1
(	i	)	>>	(	(	(	0	+	6	)	+	8	)	+	9	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	i	)	>>	(	(	0	+	6	)	+	8	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	i	)	>>	(	(	(	0	+	6	)	+	8	)	+	9	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
pfunc	+	aux	<	L	->	top

(	i	)	>>	(	(	(	0	+	6	)	+	8	)	+	9	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
--	nexeccalls	==	0

(	i	)	>>	(	(	0	+	6	)	+	8	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	(	1	<<	(	9	+	9	)	)	-	1	)	>>	1
(	1	<<	(	9	+	9	)	-	1	)	>>	1
(	i	)	>>	(	(	0	+	6	)	+	8	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	(	1	<<	(	9	+	9	)	)	-	1	)	>>	1
(	1	<<	(	9	+	9	)	-	1	)	>>	1
(	i	)	>>	(	(	0	+	6	)	+	8	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	i	)	>>	(	0	+	6	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	i	)	>>	(	(	0	+	6	)	+	8	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	(	1	<<	(	9	+	9	)	)	-	1	)	>>	1
(	1	<<	(	9	+	9	)	-	1	)	>>	1
(	i	)	>>	(	(	(	0	+	6	)	+	8	)	+	9	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	i	)	>>	(	(	0	+	6	)	+	8	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	(	c	-	1	)	*	50	)	+	n
(	c	-	1	*	50	)	+	n
(	i	)	>>	(	(	0	+	6	)	+	8	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	i	)	>>	(	(	(	0	+	6	)	+	8	)	+	9	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	i	)	>>	(	(	(	0	+	6	)	+	8	)	+	9	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
(	i	)	>>	(	(	(	0	+	6	)	+	8	)	+	9	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
b	==	(	-	1	)

(	char	*	)	L	->	stack_last	-	(	char	*	)	L	->	top	<=	(	n	)	*	(	int	)	sizeof	(	TValue	)

(	i	)	>>	(	0	+	6	)

~	(	(	~	(	Instruction	)	0	)	<<	n	)
~	(	~	(	Instruction	)	0	)	<<	n
idx	>	(	-	10000	)

size	>	8000	||	(	L	->	top	-	L	->	base	+	size	)	>	8000

L	->	ci	->	top	<	L	->	top	+	size

L	->	top	<	L	->	base	+	idx

++	p	<	L	->	top

idx	==	(	-	10001	)	&&	L	->	ci	==	L	->	base_ci

idx	==	(	-	10001	)

idx	<	(	-	10002	)

t	==	(	-	1	)

t	==	4	||	t	==	3

o1	==	(	&	luaO_nilobject_	)	||	o2	==	(	&	luaO_nilobject_	)

o1	==	(	&	luaO_nilobject_	)	||	o2	==	(	&	luaO_nilobject_	)

!	lua_isnil	(	L	,	-	1	)
!	lua_isnil	(	L	,	-	1	)
lua_type	(	L	,	narg	)	==	(	-	1	)

d	==	0	&&	!	lua_isnumber	(	L	,	narg	)

d	==	0	&&	!	lua_isnumber	(	L	,	narg	)

!	lua_istable	(	L	,	-	1	)
!	lua_istable	(	L	,	-	1	)
!	lua_istable	(	L	,	-	1	)
!	lua_istable	(	L	,	-	1	)
2	<=	base	&&	base	<=	36

lua_isstring	(	L	,	1	)	&&	level	>	0

t	==	0	||	t	==	5

lua_isnumber	(	L	,	1	)	&&	lua_tonumber	(	L	,	1	)	==	0

lua_iscfunction	(	L	,	-	2	)	||	lua_setfenv	(	L	,	-	2	)	==	0

n	<=	0	||	!	lua_checkstack	(	L	,	n	)

i	++	<	e

!	(	1	<=	pos	&&	pos	<=	e	)
!	1	<=	pos	&&	pos	<=	e
!	lua_isstring	(	L	,	-	1	)

u	-	l	==	1

(	l	+	u	)	/	2
l	+	u	/	2
u	-	l	==	2

lua_rawgeti	(	L	,	1	,	++	i	)	,	sort_comp	(	L	,	-	1	,	-	2	)

lua_rawgeti	(	L	,	1	,	--	j	)	,	sort_comp	(	L	,	-	3	,	-	1	)

i	-	l	<	u	-	i

nargs	--	&&	success

l	<	0	||	l	>=	ms	->	level

++	p	<	ec

p	+	2	<	ec

*	p	==	0	||	*	(	p	+	1	)	==	0
*	p	==	0	||	*	p	+	1	==	0
++	s	<	ms	->	src_end

--	cont	==	0

s	<	ms	->	src_end	&&	singlematch	(	uchar	(	*	s	)	,	p	,	ep	)

s	<	ms	->	src_end	&&	singlematch	(	uchar	(	*	s	)	,	p	,	ep	)

ms	->	level	==	0	&&	s

s1	++	<	ms	.	src_end	&&	!	anchor

!	lua_toboolean	(	L	,	-	1	)

!	lua_isstring	(	L	,	-	1	)

tr	==	3	||	tr	==	4	||	tr	==	6	||	tr	==	5

e	&&	e	>	src

++	arg	>	top

bn	.	n	==	0.0	&&	!	lua_isnumber	(	L	,	idx	)

(	b	<<	n	)	|	(	b	>>	(	32	-	n	)	)

(	b	>>	n	)	|	(	b	<<	(	32	-	n	)	)

(	b	>>	24	)	|	(	(	b	>>	8	)	&	0xff00	)	|	(	(	b	&	0xff00	)	<<	8	)	|	(	b	<<	24	)
(	b	>>	24	)	|	(	(	b	>>	8	)	&	0xff00	)	|	(	b	&	0xff00	<<	8	)	|	(	b	<<	24	)
--	i	>=	0

nBlockPerGrid	<=	(	65355L	*	65355L	)

(	nBlockPerRow	*	nBlockPerColumn	)	<	nBlockPerGrid

(	nInputFrame	-	kW	)	/	dW	+	1
nInputFrame	-	kW	/	dW	+	1
(	kW	-	1	)	/	dW	+	1
kW	-	1	/	dW	+	1
(	nInputFrame	-	k	*	dW	-	kW	)	/	inputFrameStride	+	1
nInputFrame	-	k	*	dW	-	kW	/	inputFrameStride	+	1
(	kW	-	1	)	/	dW	+	1
kW	-	1	/	dW	+	1
(	nInputFrame	-	k	*	dW	-	kW	)	/	inputFrameStride	+	1
nInputFrame	-	k	*	dW	-	kW	/	inputFrameStride	+	1
(	kW	-	1	)	/	dW	+	1
kW	-	1	/	dW	+	1
(	nInputFrame	-	k	*	dW	-	kW	)	/	inputFrameStride	+	1
nInputFrame	-	k	*	dW	-	kW	/	inputFrameStride	+	1
(	nInputFrame	-	kW	)	/	dW	+	1
nInputFrame	-	kW	/	dW	+	1
(	niframe	-	kW	)	/	dW	+	1
niframe	-	kW	/	dW	+	1
(	inputWidth	-	kW	)	/	dW	+	1
inputWidth	-	kW	/	dW	+	1
(	inputHeight	-	kH	)	/	dH	+	1
inputHeight	-	kH	/	dH	+	1
(	inputWidth	-	1	)	*	dW	+	kW
inputWidth	-	1	*	dW	+	kW
(	inputHeight	-	1	)	*	dH	+	kH
inputHeight	-	1	*	dH	+	kH
(	inputWidth	-	kW	)	/	dW	+	1
inputWidth	-	kW	/	dW	+	1
(	inputHeight	-	kH	)	/	dH	+	1
inputHeight	-	kH	/	dH	+	1
(	inputWidth	-	kW	)	/	dW	+	1
inputWidth	-	kW	/	dW	+	1
(	inputHeight	-	kH	)	/	dH	+	1
inputHeight	-	kH	/	dH	+	1
(	inputWidth	-	kW	)	/	dW	+	1
inputWidth	-	kW	/	dW	+	1
(	inputHeight	-	kH	)	/	dH	+	1
inputHeight	-	kH	/	dH	+	1
(	iheight	-	kH	)	/	dH	+	1
iheight	-	kH	/	dH	+	1
(	iwidth	-	kW	)	/	dW	+	1
iwidth	-	kW	/	dW	+	1
(	inputDepth	-	kT	)	/	dT	+	1
inputDepth	-	kT	/	dT	+	1
(	inputWidth	-	kW	)	/	dW	+	1
inputWidth	-	kW	/	dW	+	1
(	inputHeight	-	kH	)	/	dH	+	1
inputHeight	-	kH	/	dH	+	1
connect	(	s	,	(	struct	sockaddr	*	)	&	server	,	sizeof	(	server	)	)	==	-	1

(	sum	+	read_size	+	1	)	>	(	BUF_LEN	*	cnt	)

a	&	(	~	0xFF	)

(	~	a	)	>>	31

(	a	+	0x80U	)	&	~	0xFF

(	a	>>	31	)	^	0x7F

a	&	(	~	0xFFFF	)

(	~	a	)	>>	31

(	a	+	0x8000U	)	&	~	0xFFFF

(	a	>>	31	)	^	0x7FFF

(	a	+	0x80000000u	)	&	~	UINT64_C	(	0xFFFFFFFF	)

(	a	>>	63	)	^	0x7FFFFFFF

(	(	unsigned	)	a	+	(	1	<<	p	)	)	&	~	(	(	2	<<	p	)	-	1	)
(	(	unsigned	)	a	+	1	<<	p	)	&	~	2	<<	p	-	1
(	a	>>	31	)	^	(	(	1	<<	p	)	-	1	)
(	a	>>	31	)	^	(	1	<<	p	-	1	)
a	&	~	(	(	1	<<	p	)	-	1	)
a	&	~	(	1	<<	p	)	-	1
(	~	a	)	>>	31	&	(	(	1	<<	p	)	-	1	)
(	~	a	)	>>	31	&	(	1	<<	p	-	1	)
a	&	(	(	1U	<<	p	)	-	1	)
a	&	(	1U	<<	p	-	1	)
(	x	-	1U	)	<<	1

(	x	>>	1	)	&	0x55555555

(	x	&	0x33333333	)	+	(	(	x	>>	2	)	&	0x33333333	)
x	&	0x33333333	+	(	x	>>	2	)	&	0x33333333
(	x	+	(	x	>>	4	)	)	&	0x0F0F0F0F
(	x	+	x	>>	4	)	&	0x0F0F0F0F
(	x	+	(	x	>>	16	)	)	&	0x3F
(	x	+	x	>>	16	)	&	0x3F
a	.	num	*	(	int64_t	)	b	.	den	-	b	.	num	*	(	int64_t	)	a	.	den

(	int	)	(	(	tmp	^	a	.	den	^	b	.	den	)	>>	63	)	|	1
(	int	)	(	tmp	^	a	.	den	^	b	.	den	>>	63	)	|	1
(	a	.	num	>>	31	)	-	(	b	.	num	>>	31	)
a	.	num	>>	31	-	(	b	.	num	>>	31	)
av_q2d	(	input_codec_context	->	time_base	)	*	input_codec_context	->	ticks_per_frame	>	av_q2d	(	input_stream	->	time_base	)	&&	av_q2d	(	input_stream	->	time_base	)	<	1.0	/	1000

(	playlist	->	first	+	playlist	->	count	-	1	)	%	playlist	->	bufferCapacity
playlist	->	first	+	playlist	->	count	-	1	%	playlist	->	bufferCapacity
(	playlist	->	first	+	i	)	%	playlist	->	bufferCapacity
playlist	->	first	+	i	%	playlist	->	bufferCapacity
stream	->	size	&&	stream	->	head	->	timeStamp	<	earliestTimeStamp

argc	<	6	||	argc	>	8

target_segment_duration	==	-	HUGE_VAL

sizeof	(	char	)	*	(	strlen	(	output_prefix	)	+	15	)
sizeof	(	char	)	*	strlen	(	output_prefix	)	+	15
i	<	ic	->	nb_streams	&&	(	video_index	<	0	||	audio_index	<	0	)
i	<	ic	->	nb_streams	&&	video_index	<	0	||	audio_index	<	0
packet	.	stream_index	!=	video_index	&&	packet	.	stream_index	!=	audio_index

countPackets	(	streamLace	)	<	50	&&	!	decode_done

segment_time	-	prev_segment_time	+	segment_duration_error_tolerance	>	target_segment_duration	+	extra_duration_needed

!	decode_done	||	countPackets	(	streamLace	)	>	0

(	array_used	==	0	)	&&	(	count	<=	array_len	)

log_level	==	-	1

optind	>	argc	-	2

optind	<	argc	-	3

optind	==	argc	-	2

optind	==	argc	-	3

n	<	1	||	n	>	2

allow_suffix	&&	(	n	<	1	||	n	>	2	)
allow_suffix	&&	n	<	1	||	n	>	2
!	allow_suffix	&&	(	n	!=	1	)

log_level	==	-	1

log_level	==	-	1

optind	!=	argc	-	2

(	action	!=	ACTION_NONE	)	&&	(	action	!=	ACTION_LIST	)

(	action	!=	ACTION_NONE	)	&&	(	action	!=	ACTION_RESTORE	)

log_level	==	-	1

optind	!=	argc	-	1

action_mask	&	(	ACTION_MASK_SCAN	|	ACTION_MASK_HANDLE_EVENTS	)
action_mask	&	ACTION_MASK_SCAN	|	ACTION_MASK_HANDLE_EVENTS
iolen	==	-	1

options	.	log_level	==	-	1

action_mask	&	(	ACTION_MASK_SCAN	|	ACTION_MASK_HANDLE_EVENTS	)
action_mask	&	ACTION_MASK_SCAN	|	ACTION_MASK_HANDLE_EVENTS
!	NOHEADER	(	flags	)	&&	header
!	NOHEADER	(	flags	)	&&	header
topsize	==	-	1

toppurge	==	-	1

toprmdir	==	-	1

topuser	==	-	1

log_level	==	-	1

!	activity	&&	!	fs_info	&&	!	user_info	&&	!	group_info	&&	!	topsize	&&	!	toppurge	&&	!	topuser	&&	!	dump_all	&&	!	dump_user	&&	!	dump_group	&&	!	class_info

log_level	==	-	1

log_level	==	-	1

rc	==	-	ENODEV

rc	==	-	EAGAIN

(	*	size	+	7	)	&	~	7

index_found	==	-	1

rc	==	-	EHOSTDOWN

(	errno	==	ENOENT	)	||	(	errno	==	ESTALE	)
errno	==	ENOENT	||	errno	==	ESTALE
(	rc	!=	0	)	&&	(	rc	!=	ENOENT	)

(	rc	!=	0	)	&&	(	rc	!=	ENOENT	)

(	rc	!=	0	)	&&	(	rc	!=	ENOENT	)

(	rc	!=	0	)	&&	(	rc	!=	ENOENT	)

!	buf	||	!	mntout

strlen	(	mntin	->	mnt_fsname	)	+	1	+	strlen	(	mntin	->	mnt_dir	)	+	1	+	strlen	(	mntin	->	mnt_type	)	+	1	+	strlen	(	mntin	->	mnt_opts	)	+	1	>	buflen

(	(	unsigned	int	)	duration	%	DAY	)	/	HOUR
(	(	unsigned	int	)	duration	%	DAY	)	/	HOUR
(	(	unsigned	int	)	duration	%	HOUR	)	/	MINUTE
(	(	unsigned	int	)	duration	%	HOUR	)	/	MINUTE
(	a	*	b	)	!=	0

fstat	(	fileno	(	p_log	->	f_log	)	,	&	filestat	)	!=	-	1

(	p_log	->	log_type	==	RBH_LOG_STDIO	)	||	(	p_log	->	log_type	==	RBH_LOG_REGFILE	)

stat	(	logname	,	&	filestat	)	==	-	1

fstat	(	fileno	(	p_log	->	f_log	)	,	&	filestat	)	!=	-	1

now	-	last_time_test	>	TIME_TEST_FILE

would_print	>=	MAX_LINE_LEN	-	written

would_print	>=	MAX_LINE_LEN	-	written

1024	+	1024	*	alert_types	+	2	*	mail_size

alert_name	&&	!	EMPTY_STRING	(	alert_name	)

(	rc	!=	0	)	&&	(	rc	!=	ENOENT	)

(	rc	!=	0	)	&&	(	rc	!=	ENOENT	)

(	rc	!=	0	)	&&	(	rc	!=	ENOENT	)

(	rc	!=	0	)	&&	(	rc	!=	ENOENT	)

(	rc	!=	0	)	&&	(	rc	!=	ENOENT	)

(	rc	!=	0	)	&&	(	rc	!=	ENOENT	)

(	rc	!=	0	)	&&	(	rc	!=	ENOENT	)

(	rc	!=	0	)	&&	(	rc	!=	ENOENT	)

(	rc	!=	0	)	&&	(	rc	!=	ENOENT	)

(	nb_options	!=	1	)	||	!	options

(	nb_options	!=	2	)	||	!	options

(	rc	!=	0	)	&&	(	rc	!=	ENOENT	)

(	rc	!=	0	)	&&	(	rc	!=	ENOENT	)

default_index	!=	-	1

(	rc	!=	0	)	&&	(	rc	!=	ENOENT	)

(	rc	!=	0	)	&&	(	rc	!=	ENOENT	)

(	rc	!=	0	)	&&	(	rc	!=	ENOENT	)

rc	==	-	EINTR

(	(	yy_start	)	-	1	)	/	2
(	yy_start	)	-	1	/	2
(	yy_c_buf_p	)	-	(	yytext_ptr	)	-	YY_MORE_ADJ	==	1

(	yy_n_chars	)	+	number_to_move	+	(	(	yy_n_chars	)	>>	1	)
(	yy_n_chars	)	+	number_to_move	+	(	yy_n_chars	)	>>	1
!	config_struct	->	syntax_tree	||	!	(	*	config_struct	->	syntax_tree	)

!	(	YYPACT_NINF	<	yyn	&&	yyn	<=	YYLAST	)
!	YYPACT_NINF	<	yyn	&&	yyn	<=	YYLAST
sizeof	yyunexpected	+	sizeof	yyexpecting	-	1	+	(	(	YYERROR_VERBOSE_ARGS_MAXIMUM	-	2	)	*	(	sizeof	yyor	-	1	)	)
sizeof	yyunexpected	+	sizeof	yyexpecting	-	1	+	(	YYERROR_VERBOSE_ARGS_MAXIMUM	-	2	*	sizeof	yyor	-	1	)
yyss	+	yystacksize	-	1	<=	yyssp

yyss	+	yystacksize	-	1	<=	yyssp

yyn	<	0	||	YYLAST	<	yyn

yyn	==	0	||	yyn	==	YYTABLE_NINF

0	<=	yystate	&&	yystate	<=	YYLAST

yymsg_alloc	<	yysize	&&	yymsg_alloc	<	YYSTACK_ALLOC_MAXIMUM

!	(	yysize	<=	yyalloc	&&	yyalloc	<=	YYSTACK_ALLOC_MAXIMUM	)
!	yysize	<=	yyalloc	&&	yyalloc	<=	YYSTACK_ALLOC_MAXIMUM
0	<	yysize	&&	yysize	<=	yymsg_alloc

0	<=	yyn	&&	yyn	<=	YYLAST

yychar	!=	YYEOF	&&	yychar	!=	YYEMPTY

!	extra_args_tab	||	!	nb_extra_args

*	target	==	-	1

!	extra_args_tab	||	!	nb_extra_args

timeval	==	-	1

!	extra_args_tab	||	!	nb_extra_args

sizeval	==	(	unsigned	long	long	)	-	1

!	extra_args_tab	||	!	nb_extra_args

!	extra_args_tab	||	!	nb_extra_args

!	extra_args_tab	||	!	nb_extra_args

!	extra_args_tab	||	!	nb_extra_args

i	%	10000	==	0

i	/	(	t2	-	t1	)
i	/	t2	-	t1
i	/	(	t2	-	t1	)
i	/	t2	-	t1
i	%	1000	==	0

i	/	(	t2	-	t1	)
i	/	t2	-	t1
(	val	<<	5	)	-	val
val	<<	5	-	val
(	terminate_flag	==	BREAK	)	||	(	(	terminate_flag	==	FLUSH	)	&&	is_empty	)

(	rc_status_need	!=	0	)	&&	(	rc_status_need	!=	-	ENOTSUP	)

rc_status_need	==	-	ENOTSUP

rc	==	-	ENOTSUP

(	double	)	total	/	(	0.0	+	ID_HASH_SIZE	)
(	double	)	total	/	0.0	+	ID_HASH_SIZE
i	<	p_iter	->	result_count	-	p_iter	->	profile_count	-	p_iter	->	ratio_count

(	filter_main	==	0	)	&&	(	filter_annex	==	0	)	&&	(	filter_stripe_items	==	0	)	&&	(	filter_stripe_info	==	0	)

(	rc	!=	0	)	&&	(	rc	!=	ENOENT	)

(	nb_options	!=	1	)	||	!	options

(	rc	!=	0	)	&&	(	rc	!=	ENOENT	)

(	rc	!=	0	)	&&	(	rc	!=	ENOENT	)

(	rc	!=	0	)	&&	(	rc	!=	ENOENT	)

(	rc	!=	0	)	&&	(	rc	!=	ENOENT	)

filter_main	+	filter_annex	+	filter_stripe_info	+	filter_stripe_units	==	0

filter_main	&&	!	(	filter_annex	||	filter_stripe_info	||	filter_stripe_units	)
filter_main	&&	!	filter_annex	||	filter_stripe_info	||	filter_stripe_units
filter_annex	&&	!	(	filter_main	||	filter_stripe_info	||	filter_stripe_units	)
filter_annex	&&	!	filter_main	||	filter_stripe_info	||	filter_stripe_units
filter_stripe_info	&&	!	(	filter_main	||	filter_annex	||	filter_stripe_units	)
filter_stripe_info	&&	!	filter_main	||	filter_annex	||	filter_stripe_units
filter_stripe_units	&&	!	(	filter_main	||	filter_annex	||	filter_stripe_info	)
filter_stripe_units	&&	!	filter_main	||	filter_annex	||	filter_stripe_info
filter_main	+	filter_annex	+	filter_stripe_info	+	filter_stripe_items	==	0

filter_main	&&	!	(	filter_annex	||	filter_stripe_info	||	filter_stripe_items	)
filter_main	&&	!	filter_annex	||	filter_stripe_info	||	filter_stripe_items
filter_annex	&&	!	(	filter_main	||	filter_stripe_info	||	filter_stripe_items	)
filter_annex	&&	!	filter_main	||	filter_stripe_info	||	filter_stripe_items
filter_stripe_items	&&	!	(	filter_main	||	filter_annex	||	filter_stripe_info	)
filter_stripe_items	&&	!	filter_main	||	filter_annex	||	filter_stripe_info
filter_stripe_info	&&	!	(	filter_main	||	filter_annex	||	filter_stripe_items	)
filter_stripe_info	&&	!	filter_main	||	filter_annex	||	filter_stripe_items
filter_main	&&	filter_annex	&&	!	(	filter_stripe_items	||	filter_stripe_info	)
filter_main	&&	filter_annex	&&	!	filter_stripe_items	||	filter_stripe_info
filter_annex	&&	!	filter_main

filter_main	&&	!	filter_annex

!	annex_attrs	&&	!	filter_annex

i	<	rows	+	1

1	+	i	*	cols

rc	!=	0	||	index	<	0

rc	!=	0	||	index	<	0	||	is_read_only_field	(	index	)

p_statfs	->	f_blocks	+	p_statfs	->	f_bavail	-	p_statfs	->	f_bfree	<=	0

100.0	*	(	(	double	)	p_statfs	->	f_blocks	-	(	double	)	p_statfs	->	f_bfree	)	/	(	(	double	)	total_user_blocks	)
100.0	*	(	double	)	p_statfs	->	f_blocks	-	(	double	)	p_statfs	->	f_bfree	/	(	(	double	)	total_user_blocks	)
(	p_statfs	->	f_blocks	-	p_statfs	->	f_bfree	)	*	p_statfs	->	f_bsize
p_statfs	->	f_blocks	-	p_statfs	->	f_bfree	*	p_statfs	->	f_bsize
p_statfs	->	f_blocks	-	p_statfs	->	f_bfree	<=	block_target

trigger_check_thread_id	!=	(	(	pthread_t	)	-	1	)

(	nb_in_queue	!=	0	)	||	(	nb_purge_pending	!=	0	)

(	nb_in_queue	!=	0	)	||	(	nb_purge_pending	!=	0	)

(	submitted_amount	+	purged_amount	<	target	)	||	(	target_type	==	TGT_ALL	)

(	!	end_of_list	)	&&	(	(	purged_amount	<	target	)	||	(	target_type	==	TGT_ALL	)	)
(	!	end_of_list	)	&&	(	purged_amount	<	target	)	||	(	target_type	==	TGT_ALL	)
(	entry_md	.	st_ino	!=	p_item	->	entry_id	.	inode	)	||	(	get_fskey	(	)	!=	p_item	->	entry_id	.	fs_key	)

update_fileclass	==	-	1

(	rc_hp	!=	0	)	&&	(	rc_hp	!=	ENOENT	)

(	rc_hv	!=	0	)	&&	(	rc_hv	!=	ENOENT	)

(	rc_hc	!=	0	)	&&	(	rc_hc	!=	ENOENT	)

(	rc_lp	!=	0	)	&&	(	rc_lp	!=	ENOENT	)

(	rc_lv	!=	0	)	&&	(	rc_lv	!=	ENOENT	)

(	rc_lc	!=	0	)	&&	(	rc_lc	!=	ENOENT	)

(	high_count	>	0	)	||	(	low_count	>	0	)

(	high_count	>	0	)	||	(	low_count	>	0	)

(	rc	!=	0	)	&&	(	rc	!=	ENOENT	)

(	rc	!=	0	)	&&	(	rc	!=	ENOENT	)

(	rc	!=	0	)	&&	(	rc	!=	ENOENT	)

(	rc	!=	0	)	&&	(	rc	!=	ENOENT	)

(	rc	!=	0	)	&&	(	rc	!=	ENOENT	)

(	rc	!=	0	)	&&	(	rc	!=	ENOENT	)

(	nb_in_queue	!=	0	)	||	(	nb_rmdir_pending	!=	0	)

(	nb_in_queue	!=	0	)	||	(	nb_rmdir_pending	!=	0	)

(	nb_in_queue	!=	0	)	||	(	nb_rmdir_pending	!=	0	)

(	nb_in_queue	!=	0	)	||	(	nb_rmdir_pending	!=	0	)

(	rc	!=	0	)	&&	(	rc	!=	ENOENT	)

(	rc	!=	0	)	&&	(	rc	!=	ENOENT	)

(	rc	!=	0	)	&&	(	rc	!=	ENOENT	)

main_thread_id	!=	(	(	pthread_t	)	-	1	)

(	nb_in_queue	!=	0	)	||	(	nb_migr_pending	!=	0	)

(	nb_in_queue	!=	0	)	||	(	nb_migr_pending	!=	0	)

nb_submitted	%	1000	==	0

first_eligible	&&	migration_info	.	migr_count	==	0

update_fileclass	==	-	1

(	rc	!=	0	)	&&	(	rc	!=	ENOENT	)

(	rc	!=	0	)	&&	(	rc	!=	ENOENT	)

(	rc	!=	0	)	&&	(	rc	!=	ENOENT	)

(	rc	!=	0	)	&&	(	rc	!=	ENOENT	)

(	rc	!=	0	)	&&	(	rc	!=	ENOENT	)

(	rc	!=	0	)	&&	(	rc	!=	ENOENT	)

(	rc	!=	0	)	&&	(	rc	!=	ENOENT	)

(	rc	!=	0	)	&&	(	rc	!=	ENOENT	)

(	rc	!=	0	)	&&	(	rc	!=	ENOENT	)

(	rc	!=	0	)	&&	(	rc	!=	ENOENT	)

(	rc	!=	0	)	&&	(	rc	!=	ENOENT	)

(	nb_in_queue	!=	0	)	||	(	nb_hsm_rm_pending	!=	0	)

(	nb_in_queue	!=	0	)	||	(	nb_hsm_rm_pending	!=	0	)

rc	==	-	ENOENT

rc	==	-	EINVAL

(	rc	!=	0	)	&&	(	rc	!=	ENOENT	)

(	rc	!=	0	)	&&	(	rc	!=	ENOENT	)

(	rc	!=	0	)	&&	(	rc	!=	ENOENT	)

(	rc	!=	0	)	&&	(	rc	!=	ENOENT	)

backend_path	&&	!	EMPTY_STRING	(	backend_path	)

(	rc	!=	0	)	&&	(	rc	!=	ENOENT	)

(	rc	!=	0	)	&&	(	rc	!=	ENOENT	)

(	rc	!=	0	)	&&	(	rc	!=	ENOENT	)

(	rc	!=	0	)	&&	(	rc	!=	ENOENT	)

(	rc	!=	0	)	&&	(	rc	!=	ENOENT	)

(	rc	!=	0	)	&&	(	rc	!=	ENOENT	)

(	rc	!=	0	)	&&	(	rc	!=	ENOENT	)

(	rc	!=	0	)	&&	(	rc	!=	ENOENT	)

(	rc	!=	0	)	&&	(	rc	!=	ENOENT	)

(	rc	!=	0	)	&&	(	rc	!=	ENOENT	)

(	count	>	0	)	||	scan_complete

fstatat	(	parentfd	,	entry_name	,	&	inode	,	AT_SYMLINK_NOFOLLOW	)	==	-	1

diff	.	tv_sec	-	(	p_info	->	last_processing_time	.	tv_sec	*	nb_entries	)

(	(	1000000	*	rest	)	+	diff	.	tv_usec	)	/	nb_entries
(	1000000	*	rest	)	+	diff	.	tv_usec	/	nb_entries
loc_scan_complete	&&	!	loc_scan_running	&&	(	now	-	loc_last_scan_time	>=	scan_interval	)

3	!=	ArgC	&&	4	!=	ArgC

(	crc_dnp	&	0xff00	)	>>	8
crc_dnp	&	0xff00	>>	8
(	crc_dnp	&	0x00ff	)	<<	8
crc_dnp	&	0x00ff	<<	8
(	crc_sick	&	0xff00	)	>>	8
crc_sick	&	0xff00	>>	8
(	crc_sick	&	0x00ff	)	<<	8
crc_sick	&	0x00ff	<<	8
(	crc_kermit	&	0xff00	)	>>	8
crc_kermit	&	0xff00	>>	8
(	crc_kermit	&	0x00ff	)	<<	8
crc_kermit	&	0x00ff	<<	8
!	do_ascii	&&	!	do_hex

(	crc	>>	8	)	^	short_c

(	0x00ff	&	(	unsigned	short	)	prev_byte	)	<<	8
0x00ff	&	(	unsigned	short	)	prev_byte	<<	8
(	crc	<<	1	)	^	P_SICK

(	crc	^	c	)	&	0x0001
crc	^	c	&	0x0001
(	crc	>>	1	)	^	P_16

(	crc	^	c	)	&	0x0001
crc	^	c	&	0x0001
(	crc	>>	1	)	^	P_KERMIT

(	crc	^	c	)	&	0x0001
crc	^	c	&	0x0001
(	crc	>>	1	)	^	P_DNP

(	crc	>>	1	)	^	P_32

(	crc	^	c	)	&	0x8000
crc	^	c	&	0x8000
(	crc	<<	1	)	^	P_CCITT

createNexaString	(	*	(	argv	+	3	)	,	*	(	argv	+	4	)	,	*	(	argv	+	5	)	,	txStr	,	0	)	==	0
createNexaString	(	*	(	argv	+	3	)	,	*	argv	+	4	,	*	(	argv	+	5	)	,	txStr	,	0	)	==	0
createNexaString	(	*	(	argv	+	3	)	,	*	(	argv	+	4	)	,	*	(	argv	+	5	)	,	txStr	,	1	)	==	0
createNexaString	(	*	argv	+	3	,	*	argv	+	4	,	*	argv	+	5	,	txStr	,	1	)	==	0
createSartanoString	(	*	(	argv	+	3	)	,	*	(	argv	+	4	)	,	txStr	)	==	0
createSartanoString	(	*	argv	+	3	,	*	argv	+	4	,	txStr	)	==	0
createIkeaString	(	*	(	argv	+	3	)	,	*	(	argv	+	4	)	,	*	(	argv	+	5	)	,	*	(	argv	+	6	)	,	txStr	)	==	0
createIkeaString	(	*	(	argv	+	3	)	,	*	argv	+	4	,	*	(	argv	+	5	)	,	*	(	argv	+	6	)	,	txStr	)	==	0
createRisingSunString	(	*	(	argv	+	3	)	,	*	(	argv	+	4	)	,	*	(	argv	+	5	)	,	txStr	)	==	0
createRisingSunString	(	*	argv	+	3	,	*	(	argv	+	4	)	,	*	(	argv	+	5	)	,	txStr	)	==	0
createEverFlourishString	(	*	(	argv	+	3	)	,	*	(	argv	+	4	)	,	txStr	)	==	0
createEverFlourishString	(	*	argv	+	3	,	*	argv	+	4	,	txStr	)	==	0
(	houseCode	<	0	)	||	(	houseCode	>	15	)

waveman	&&	on_offCode	==	0

(	bitmask	&	txCode	)	==	0
bitmask	&	txCode	==	0
(	strlen	(	pChannelStr	)	!=	10	)	||	(	on_offCode	<	0	)	||	(	on_offCode	>	1	)

(	channelCode	<=	0	)	||	(	channelCode	>	10	)	||	(	systemCode	<	0	)	||	(	systemCode	>	15	)	||	(	Level	<	0	)	||	(	Level	>	10	)	||	(	DimStyle	<	0	)	||	(	DimStyle	>	1	)

1	<<	(	9	-	channelCode	)

(	systemCode	<<	10	)	|	rawChannelCode

(	intCode	>>	i	)	&	1

i	%	2	==	0

checksum1	%	2	==	0

checksum2	%	2	==	0

(	intCode	>>	i	)	&	1

i	%	2	==	0

checksum1	%	2	==	0

checksum2	%	2	==	0

(	code	<	1	)	||	(	code	>	4	)	||	(	unit	<	1	)	||	(	unit	>	4	)	||	(	on_offCode	<	0	)	||	(	on_offCode	>	1	)

(	x	&	0x3	)	==	3
x	&	0x3	==	3
(	unit	<	0	)	||	(	unit	>	0xffff	)	||	(	level	<	0	)	||	(	level	>	15	)

(	unit	>>	i	)	&	0x01

(	check	>>	i	)	&	0x01

(	level	>>	i	)	&	0x01

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

tv	.	tv_sec	<	lasttv	.	tv_sec	||	(	tv	.	tv_sec	==	lasttv	.	tv_sec	&&	tv	.	tv_usec	<	lasttv	.	tv_usec	)

deltv	*	1000000	+	tv	.	tv_usec	-	lasttv	.	tv_usec

opt	!=	-	1

(	rxValue	&	0x7FFF	)	==	0x7FFF
rxValue	&	0x7FFF	==	0x7FFF
(	houseCode	<	0	)	||	(	houseCode	>	15	)

waveman	&&	on_offCode	==	0

(	bitmask	&	txCode	)	==	0
bitmask	&	txCode	==	0
(	strlen	(	pChannelStr	)	!=	10	)	||	(	on_offCode	<	0	)	||	(	on_offCode	>	1	)

(	strlen	(	pChannelStr	)	!=	10	)	||	(	on_offCode	<	0	)	||	(	on_offCode	>	1	)

setvec	==	0	||	tmpset	==	0

setcnt	>=	maxsetvec	||	lp	>=	maxsetvec

npfile	>=	MAX_PFILE	-	1

npfile	>=	MAX_PFILE	-	1

rr	-	buf	+	1	>	bufsize

c	==	EOF	&&	rr	==	buf

c	==	EOF	&&	rr	==	buf

*	r	!=	sep	&&	*	r	!=	rtest

*	r	++	==	0

been_here	++	>	2

n	==	-	1

n	<	-	1

ep	==	s	||	r	==	HUGE_VAL	||	errno	==	ERANGE

bp	-	buf	>=	sz

bp	-	buf	>=	sz

infunc	&&	isarg	(	buf	)	>=	0

--	bracecnt	<	0

--	brackcnt	<	0

--	parencnt	<	0

8	*	n	+	input	(	)

8	*	n	+	input	(	)

px	-	xbuf	<	100	-	2

(	low	+	high	)	/	2
low	+	high	/	2
n	!=	-	1

ep	>=	ebuf	+	sizeof	ebuf

yysptr	>=	yysbuf	+	sizeof	(	yysbuf	)

--	ep	<	ebuf

paircnt	++	>=	PA2NUM

*	s	+	31	*	hashval

i	<	l	>>	1

i	<	l	>>	1

-	(	i	-	33	)	/	10.
-	i	-	33	/	10.
ncall	+	ndef	>	NARGS

fp	>=	frame	+	nframe

n	+	1	>	fp	->	nargs

n	>	k	-	m

n	%	2	==	0

*	s	++	==	0

pb	>	buf	+	bufsz

pb	>	buf	+	bufsz

pb	>	buf	+	bufsz

pb	>	buf	+	bufsz

pb	<	buf	+	bufsz

!	(	source	&&	dest	)
!	source	&&	dest
chdir	(	d	)	==	-	1

root	&&	(	strcmp	(	root	,	cwd	)	==	0	)

!	isspace	(	peek	(	i	+	1	)	)
isspace	(	peek	(	i	+	1	)	!	isspace	(	peek	(	i	+	1	)	)
(	stat	(	source	,	&	sourceinfo	)	==	0	)	&&	S_ISDIR	(	sourceinfo	.	st_mode	)
stat	(	source	,	&	sourceinfo	)	==	0	)	&&	S_ISDIR	(	sourceinfo	.	st_mode	(	stat	(	source	,	&	sourceinfo	)	==	0	)	&&	S_ISDIR	(	sourceinfo	.	st_mode	)
size	--	>	0

size	--	>	0

p	&&	(	p	!=	&	list	)

dashes	+	equals	+	underscores	+	stars	+	tildes	+	backticks	>	1

(	i	==	tag	->	size	)	&&	!	isalnum	(	c	)
i	==	tag	->	size	)	&&	!	isalnum	(	c	(	i	==	tag	->	size	)	&&	!	isalnum	(	c	)
++	i	<	last

toplevel	||	(	blocks	>	1	)

pandoc	!=	EOF	&&	pandoc	<	3

(	c	!=	EOF	)	&&	isalnum	(	c	)
c	!=	EOF	)	&&	isalnum	(	c	(	c	!=	EOF	)	&&	isalnum	(	c	)
size	--	>	0

size	--	>	0

(	size	>=	p	->	nlen	)	&&	strncasecmp	(	text	,	p	->	name	,	p	->	nlen	)	==	0

len	--	>	0

++	i	,	--	size

++	p	,	--	size

--	size	,	++	p

++	p	,	--	size

pandoc	!=	EOF	&&	pandoc	<	3

!	(	c	&	0x40	)
!	c	&	0x40
(	fhtype	&	1	)	!=	0
fhtype	&	1	!=	0
len	*	4	<	MDKI_FID_LEN_WITH_HASH	(	fidlen	)

nd	!=	myndp	||	error	!=	0

c1	&&	c1	==	c2

(	*	cp	&	0x80	)	!=	0
*	cp	&	0x80	!=	0
hmsuffix	&&	(	STRCMP	(	hmnm	,	hmsuffix	)	==	0	)

hmvers	&&	(	STRCMP	(	hmnm	,	hmvers	)	==	0	)

*	nm	++	!=	*	hmnm	++

hmsuffix	&&	(	STRCMP	(	hmnm	,	hmsuffix	)	==	0	)

ep	->	valid	&&	MVFS_UIO_OFFSET	(	uiop	)	==	ep	->	offset	&&	uiop	->	uio_resid	>=	ep	->	size

num	%	i	==	0

!	error	&&	!	MFS_VIDINRANGE	(	num	)

MVFS_IS_INVALID_OFFSET	(	MVFS_UIO_OFFSET	(	uiop	)	)	||	uiop	->	uio_resid	<=	KDIRENT_RECLEN	(	0	)

(	mdb_crash	!=	0	)	&&	(	--	mdb_crash	==	0	)

!	error	&&	*	nnp

(	flags	&	MFS_DTMMOD	)	!=	0
flags	&	MFS_DTMMOD	!=	0
(	flags	&	MFS_VOBMOD	)	!=	0
flags	&	MFS_VOBMOD	!=	0
(	flags	&	MFS_EXPMOD	)	!=	0
flags	&	MFS_EXPMOD	!=	0
(	flags	&	MFS_DOMOD	)	!=	0
flags	&	MFS_DOMOD	!=	0
!	expmod	||	vobmod

!	error	&&	file_created

!	newnode	&&	(	modflags	!=	0	)

--	cvpcnt	>=	0

!	(	mnp	->	mn_vob	.	cleartext	.	rwerr	||	mnp	->	mn_vob	.	cleartext	.	purge_nm	||	mnp	->	mn_vob	.	cleartext	.	purge_cvp	)
!	mnp	->	mn_vob	.	cleartext	.	rwerr	||	mnp	->	mn_vob	.	cleartext	.	purge_nm	||	mnp	->	mn_vob	.	cleartext	.	purge_cvp
MDKI_CTIME	(	)	+	3600	+	(	mnp	->	mn_hdr	.	mnum	&	0xff	)
MDKI_CTIME	(	)	+	3600	+	mnp	->	mn_hdr	.	mnum	&	0xff
MDKI_CTIME	(	)	+	3600	+	(	mnp	->	mn_hdr	.	mnum	&	0xff	)
MDKI_CTIME	(	)	+	3600	+	mnp	->	mn_hdr	.	mnum	&	0xff
wcount	--	>	0

count	--	>	0

(	slp	!=	slistp	->	slb_head	)	&&	(	slp	->	slb_freecount	!=	0	)

slp	->	slb_freecount	==	slp	->	slb_eltcount	&&	slistp	->	slb_tot_freecount	>	slp	->	slb_freecount

slistp	->	slb_head	!=	slp	&&	slistp	->	slb_head	->	slb_freecount	==	0

(	largeinit	>=	0	)	&&	(	largeinit	<=	2	)

!	error	&&	status	!=	0

!	error	&&	status	==	0

err	!=	0	&&	isviewroot

uid	!=	-	1

gid	!=	-	1

cpio	->	option_numeric_uid_gid	&&	!	cpio	->	option_list

(	archive_position_uncompressed	(	cpio	->	archive	)	+	511	)	/	512
archive_position_uncompressed	(	cpio	->	archive	)	+	511	/	512
!	archive_entry_size_is_set	(	entry	)	||	archive_entry_size	(	entry	)	>	0

(	archive_position_uncompressed	(	a	)	+	511	)	/	512
archive_position_uncompressed	(	a	)	+	511	/	512
(	archive_position_uncompressed	(	a	)	+	511	)	/	512
archive_position_uncompressed	(	a	)	+	511	/	512
abs	(	mtime	-	now	)	>	(	365	/	2	)	*	86400

(	archive_position_uncompressed	(	cpio	->	archive	)	+	511	)	/	512
archive_position_uncompressed	(	cpio	->	archive	)	+	511	/	512
c	>=	32	&&	c	<	127

c	>=	32	&&	c	<	127

n1	==	0	&&	n2	==	0

n	==	s	&&	memcmp	(	buff	,	contents	,	s	)	==	0

s	*	2	+	128

expected_failure	==	0	&&	actual_failure	==	0

filet	<	now	-	10	||	filet	>	now	+	1

filet	!=	t	||	filet_nsec	!=	nsec

mt	==	0	&&	mt_nsec	==	0	&&	at	==	0	&&	at_nsec	==	0

mt	==	0	&&	mt_nsec	==	0

at	==	0	&&	at_nsec	==	0

!	keep_temp_files	&&	assertChdir	(	tmpdir	)

start	<	0	||	end	>=	limit	||	start	>	end

!	assert	(	r	==	0	)

*	l	++	==	i

(	(	(	64	*	GB	-	1	)	%	671088649	)	==	268434537	)	&&	(	(	(	TB	-	(	64	*	GB	-	1	)	+	255	)	%	1792151290	)	==	305159546	)
(	(	64	*	GB	-	1	%	671088649	)	==	268434537	)	&&	(	(	(	TB	-	(	64	*	GB	-	1	)	+	255	)	%	1792151290	)	==	305159546	)
p	==	end	-	1

(	rangeStart	<=	c	)	&&	(	c	<=	rangeEnd	)

!	pm_list	(	p	+	1	,	end	,	*	s	,	flags	)

(	ocode	<<	bit_offset	)	&	0xff

state	->	bit_offset	==	state	->	code_len	*	8

clear_flg	||	state	->	first_free	>	state	->	cur_maxcode

state	->	bit_offset	<	state	->	code_len	*	8

(	state	->	bit_offset	%	8	+	7	)	/	8
state	->	bit_offset	%	8	+	7	/	8
(	c	<<	16	)	+	state	->	cur_code
c	<<	16	+	state	->	cur_code
(	c	<<	HSHIFT	)	^	state	->	cur_code

char_cnt	--	>	0

char_cnt	--	>	0

char_cnt	--	>	0

char_cnt	--	>	0

parent	==	(	struct	archive_rb_node	*	)	(	void	*	)	&	rbt	->	rbt_root

file	->	size	==	0	&&	file	->	dir

(	zip	->	total_number_entry	-	zip	->	total_number_empty_entry	)	==	1

zip	->	temp_fd	==	-	1

zip	->	total_number_nonempty_entry	>	1	&&	coders	->	codec	!=	_7Z_COPY

2	+	zip	->	total_number_entry	*	8

2	+	(	(	zip	->	total_number_entry	+	7	)	>>	3	)
2	+	(	zip	->	total_number_entry	+	7	)	>>	3
(	zip	->	total_number_entry	+	7	)	>>	3

(	zip	->	total_number_empty_entry	+	7	)	>>	3

2	+	zip	->	total_number_entry	*	4

lastrm	->	avail_in	==	0	&&	action	==	ARCHIVE_Z_FINISH

(	h	<<	4	)	+	*	p	++
h	<<	4	+	*	p	++
!	S_ISREG	(	mine	->	st_mode	)	&&	!	S_ISCHR	(	mine	->	st_mode	)	&&	!	S_ISBLK	(	mine	->	st_mode	)

sp	->	offset	==	0	&&	sp	->	length	>=	archive_entry_size	(	entry	)

i	>	0	&&	digit	==	0

1	+	3	*	sizeof	(	int	)

len	+	digits	>=	next_ten

(	unsigned	int	)	archive_entry_gid	(	entry_main	)	>=	(	1	<<	18	)

(	unsigned	int	)	archive_entry_uid	(	entry_main	)	>=	(	1	<<	18	)

rdevmajor	>=	(	1	<<	18	)

rdevminor	>=	(	1	<<	18	)

!	need_extension	&&	(	(	archive_entry_mtime	(	entry_main	)	<	0	)	||	(	archive_entry_mtime	(	entry_main	)	>=	0x7fffffff	)	)
!	need_extension	&&	(	archive_entry_mtime	(	entry_main	)	<	0	)	||	(	archive_entry_mtime	(	entry_main	)	>=	0x7fffffff	)
!	need_extension	&&	archive_entry_xattr_count	(	entry_original	)	>	0

!	need_extension	&&	sparse_count	>	0

filename_end	>	src	+	1

filename	<	filename_end	-	1

p	>	src	+	1

p	==	src	+	1

p	>	src	+	1

*	s	<	33	||	*	s	>	126

*	s	<	33	||	*	s	>	126

0x0f	&	(	*	s	>>	4	)

(	v	>>	18	)	&	0x3f

(	v	>>	12	)	&	0x3f

(	v	>>	6	)	&	0x3f

(	v	>>	18	)	&	0x3f

(	v	>>	12	)	&	0x3f

(	v	>>	18	)	&	0x3f

(	v	>>	12	)	&	0x3f

(	v	>>	6	)	&	0x3f

len	--	>	0

s	--	>	0

len	--	>	0

len	--	>	0

s	--	>	0

len	--	>	0

!	archive_entry_size_is_set	(	entry	)	||	archive_entry_size	(	entry	)	<	0

strlen	(	p	)	<	strlen	(	shar	->	last_dir	)	&&	strncmp	(	p	,	shar	->	last_dir	,	strlen	(	p	)	)	==	0

0x3f	&	(	t	>>	18	)

0x3f	&	(	t	>>	18	)

0x3f	&	(	t	>>	12	)

0x3f	&	(	t	>>	12	)

0x3f	&	(	t	>>	6	)

0x3f	&	(	t	>>	6	)

cf	->	xfer_align	==	-	1

cf	->	max_xfer_size	!=	-	1

t	->	entry_eof	||	t	->	entry_remaining_bytes	<=	0

t	->	current_sparse	->	length	==	0	&&	!	t	->	entry_eof

t	->	sparse_count	+	1	>	t	->	sparse_list_size

t	->	visit_type	!=	TREE_REGULAR	||	!	t	->	descend

t	->	depth	>	0	&&	(	t	->	flags	&	onWorkingDir	)	==	0
t	->	depth	>	0	&&	t	->	flags	&	onWorkingDir	==	0
!	(	t	->	flags	&	hasStat	)
!	t	->	flags	&	hasStat
!	(	t	->	flags	&	hasLstat	)
!	t	->	flags	&	hasLstat
(	t	->	flags	&	hasStat	)	&&	(	!	S_ISDIR	(	tree_current_stat	(	t	)	->	st_mode	)	)

-	1	==	archive_write_get_bytes_in_last_block	(	a	)

(	bid	>	best_bid	)	||	(	best_bid_slot	<	0	)

!	(	sc	->	flag	&	(	SCONV_NORMALIZATION_D	|	SCONV_NORMALIZATION_C	)	)
!	sc	->	flag	&	(	SCONV_NORMALIZATION_D	|	SCONV_NORMALIZATION_C	)
(	sc	->	flag	&	(	SCONV_BEST_EFFORT	|	SCONV_FROM_UTF16BE	)	)	==	(	SCONV_BEST_EFFORT	|	SCONV_FROM_UTF16BE	)
sc	->	flag	&	SCONV_BEST_EFFORT	|	SCONV_FROM_UTF16BE	==	SCONV_BEST_EFFORT	|	SCONV_FROM_UTF16BE
(	sc	->	flag	&	(	SCONV_BEST_EFFORT	|	SCONV_FROM_UTF16LE	)	)	==	(	SCONV_BEST_EFFORT	|	SCONV_FROM_UTF16LE	)
sc	->	flag	&	SCONV_BEST_EFFORT	|	SCONV_FROM_UTF16LE	==	SCONV_BEST_EFFORT	|	SCONV_FROM_UTF16LE
!	(	sc	->	flag	&	(	SCONV_NORMALIZATION_D	|	SCONV_NORMALIZATION_C	)	)
!	sc	->	flag	&	SCONV_NORMALIZATION_D	|	SCONV_NORMALIZATION_C
(	sc	->	flag	&	SCONV_BEST_EFFORT	)	||	sc	->	same

strcmp	(	fc	,	tc	)	==	0	||	(	sc	->	from_cp	!=	-	1	&&	sc	->	from_cp	==	sc	->	to_cp	)

(	flag	&	SCONV_FROM_CHARSET	)	&&	(	flag	&	(	SCONV_FROM_UTF16	|	SCONV_FROM_UTF8	)	)
(	flag	&	SCONV_FROM_CHARSET	)	&&	(	flag	&	SCONV_FROM_UTF16	|	SCONV_FROM_UTF8	)
(	sc	->	flag	&	SCONV_UTF8_LIBARCHIVE_2	)	==	0
sc	->	flag	&	SCONV_UTF8_LIBARCHIVE_2	==	0
*	inp	<	0	&&	(	sc	->	flag	&	SCONV_TO_UTF8	)

ch	==	0xc0	||	ch	==	0xc1

ch	>=	0xf5	&&	ch	<=	0xf7

ch	>=	0xf8	&&	ch	<=	0xfb

ch	==	0xfc	||	ch	==	0xfd

p	+	(	s	-	ss	)	>	endp

(	t	+	b	)	/	2
t	+	b	/	2
n	==	spair	||	always_replace

n2	==	spair	||	always_replace

0	<=	VIndex	&&	VIndex	<	HC_VCOUNT

0	<	TIndex	&&	TIndex	<	HC_TCOUNT

j	+	1	<	ucx_size

ucx_size	>	0	&&	i	==	ucx_size	&&	nx	>	0	&&	cx	==	cl

n	==	-	1

parent	->	offset	+	parent	->	size	>	iso9660	->	volume_size

*	p	!=	0	&&	p	<	b	&&	p	+	*	p	<=	b

*	(	p	+	DR_name_len_offset	)	==	1
*	p	+	DR_name_len_offset	==	1
*	(	p	+	DR_name_len_offset	)	==	1
*	p	+	DR_name_len_offset	==	1
iso9660	->	seenJoliet	&&	vd	->	location	>	iso9660	->	joliet	.	location

vd	==	&	(	iso9660	->	primary	)	&&	iso9660	->	seenRockridge	&&	iso9660	->	seenJoliet

vd	==	&	(	iso9660	->	primary	)	&&	!	iso9660	->	seenRockridge	&&	iso9660	->	seenJoliet

file	->	offset	+	file	->	size	>	iso9660	->	volume_size

file	->	number	!=	-	1	&&	file	->	number	==	iso9660	->	previous_number

(	flags	&	0x02	)	==	0
flags	&	0x02	==	0
(	flags	&	0x02	)	!=	0
flags	&	0x02	!=	0
file	->	cl_offset	==	file	->	offset	||	parent	->	rr_moved

p	+	4	<=	end

version	==	1	&&	data_length	==	24

version	==	1	&&	data_length	==	8

version	==	1	&&	data_length	==	16

(	hole	-	1	)	/	2
hole	-	1	/	2
(	flag	&	1	)	&&	data_length	>=	17

(	flag	&	2	)	&&	data_length	>=	17

(	flag	&	4	)	&&	data_length	>=	17

(	flag	&	8	)	&&	data_length	>=	17

(	flag	&	1	)	&&	data_length	>=	7

(	flag	&	2	)	&&	data_length	>=	7

(	flag	&	4	)	&&	data_length	>=	7

(	flag	&	8	)	&&	data_length	>=	7

!	file	->	symlink_continues	||	file	->	symlink	.	length	<	1

file	->	number	==	-	1

file	->	number	==	-	1

(	hole	-	1	)	/	2
hole	-	1	/	2
256	*	toi	(	v	+	1	,	n	-	1	)

offset	>	-	48	&&	offset	<	52

(	offset	%	4	)	*	15

offset	>	-	48	&&	offset	<	52

(	offset	%	4	)	*	15

t	->	tm_sec	+	t	->	tm_min	*	60	+	t	->	tm_hour	*	3600	+	t	->	tm_yday	*	86400	+	(	t	->	tm_year	-	70	)	*	31536000	+	(	(	t	->	tm_year	-	69	)	/	4	)	*	86400	-	(	(	t	->	tm_year	-	1	)	/	100	)	*	86400	+	(	(	t	->	tm_year	+	299	)	/	400	)	*	86400
t	->	tm_sec	+	t	->	tm_min	*	60	+	t	->	tm_hour	*	3600	+	t	->	tm_yday	*	86400	+	t	->	tm_year	-	70	*	31536000	+	(	t	->	tm_year	-	69	/	4	)	*	86400	-	(	t	->	tm_year	-	1	/	100	)	*	86400	+	(	t	->	tm_year	+	299	/	400	)	*	86400
!	archive_entry_size_is_set	(	entry	)	||	archive_entry_size	(	entry	)	>	0

p	+	8	<	q

archive_le16dec	(	p	+	CFFOLDER_typeCompress	)	&	0x0F

archive_le16dec	(	p	+	CFFOLDER_typeCompress	)	>>	8

hd	->	cabinet	!=	0	||	hd	->	flags	&	(	PREV_CABINET	|	NEXT_CABINET	)
hd	->	cabinet	!=	0	||	hd	->	flags	&	PREV_CABINET	|	NEXT_CABINET
--	u32num	>=	0

cfdata	->	compressed_size	==	0	||	cfdata	->	compressed_size	>	(	0x8000	+	6144	)

(	cab	->	entry_cffolder	->	cfdata_index	<	cab	->	entry_cffolder	->	cfdata_count	)	&&	cfdata	->	uncompressed_size	!=	0x8000

cab	->	entry_cffolder	->	comptype	==	COMPTYPE_NONE	&&	cfdata	->	compressed_size	!=	cfdata	->	uncompressed_size

cfdata	->	uncompressed_avail	==	0	&&	cfdata	->	read_offset	>	0

(	cab	->	entry_cffolder	->	cfdata_index	-	1	)	*	0x8000
cab	->	entry_cffolder	->	cfdata_index	-	1	*	0x8000
cfdata	->	uncompressed_avail	==	0	&&	(	cab	->	entry_cffolder	->	comptype	==	COMPTYPE_NONE	||	cab	->	entry_cffile	->	folder	==	iFoldCONTINUED_PREV_AND_NEXT	||	cab	->	entry_cffile	->	folder	==	iFoldCONTINUED_FROM_PREV	)
cfdata	->	uncompressed_avail	==	0	&&	cab	->	entry_cffolder	->	comptype	==	COMPTYPE_NONE	||	cab	->	entry_cffile	->	folder	==	iFoldCONTINUED_PREV_AND_NEXT	||	cab	->	entry_cffile	->	folder	==	iFoldCONTINUED_FROM_PREV
value	>=	-	cp	&&	value	<	(	long	)	ds	->	translation_size

(	br	->	cache_buffer	<<	16	)	|	archive_le16dec	(	strm	->	next_in	)

br	->	have_odd	&&	n	>=	16	&&	strm	->	avail_in	>	0

ds	->	rbytes_avail	<	4	&&	ds	->	br	.	have_odd

l	>	ds	->	w_size	-	ds	->	w_pos

--	l	>=	0

(	ds	->	w_pos	+	ll	)	&	ds	->	w_mask

!	lzx_br_read_ahead	(	strm	,	br	,	3	*	ds	->	at	.	len_size	)
!	lzx_br_read_ahead	(	strm	,	br	,	3	*	ds	->	at	.	len_size	)
(	w_pos	+	1	)	&	w_mask

block_type	==	ALIGNED_OFFSET_BLOCK	&&	offset_bits	>=	3

!	lzx_br_read_ahead	(	strm	,	&	bre	,	offbits	+	at_max_bits	)
!	lzx_br_read_ahead	(	strm	,	&	bre	,	offbits	+	at_max_bits	)
(	w_pos	-	copy_pos	)	&	w_mask

l	>	w_size	-	copy_pos

l	>	w_size	-	w_pos

outp	+	l	>=	endp

l	>=	8	&&	(	(	copy_pos	+	l	<	w_pos	)	||	(	w_pos	+	l	<	copy_pos	)	)
l	>=	8	&&	(	copy_pos	+	l	<	w_pos	)	||	(	w_pos	+	l	<	copy_pos	)
(	copy_pos	+	l	)	&	w_mask

(	w_pos	+	l	)	&	w_mask

i	+	same	>	end

i	+	same	>	end

i	+	same	>	end

1	<<	(	tbl_bits	-	HTBL_BITS	+	4	)

(	ptn	&	0xffff	)	!=	0	||	maxbits	>	hf	->	tbl_bits
ptn	&	0xffff	!=	0	||	maxbits	>	hf	->	tbl_bits
--	extlen	>	0

extlen	--	<=	0	||	c	>=	hf	->	tree_used

rbits	&	(	1U	<<	extlen	)

c	==	35	||	c	==	61	||	c	==	92

c	>=	33	&&	c	<=	47

c	>=	58	&&	c	<=	64

c	>=	91	&&	c	<=	96

c	>=	123	&&	c	<=	126

c	/	8	%	8

r	-	s	>	INDENTNAMELEN

i	<	(	INDENTNAMELEN	+	1	)

i	<	(	INDENTNAMELEN	+	1	)

r	-	s	<=	MAXLINELEN	-	3	-	INDENTNAMELEN

i	<	(	INDENTNAMELEN	+	1	)

i	<	(	INDENTNAMELEN	+	1	)

oldkeys	&	(	F_UNAME	|	F_UID	)
oldkeys	&	F_UNAME	|	F_UID
~	(	F_UNAME	|	F_UID	)
~	F_UNAME	|	F_UID
oldkeys	&	(	F_GNAME	|	F_GID	)
oldkeys	&	F_GNAME	|	F_GID
~	(	F_GNAME	|	F_GID	)
~	F_GNAME	|	F_GID
(	oldkeys	&	F_FLAGS	)	!=	0
oldkeys	&	F_FLAGS	!=	0
ac	->	m_entry	->	fflags_set	==	mtree	->	set	.	fflags_set	&&	ac	->	m_entry	->	fflags_clear	==	mtree	->	set	.	fflags_clear

(	keys	&	effkeys	&	F_TYPE	)	!=	0
keys	&	effkeys	&	F_TYPE	!=	0
(	keys	&	effkeys	&	F_UNAME	)	!=	0
keys	&	effkeys	&	F_UNAME	!=	0
(	keys	&	effkeys	&	F_UID	)	!=	0
keys	&	effkeys	&	F_UID	!=	0
(	keys	&	effkeys	&	F_GNAME	)	!=	0
keys	&	effkeys	&	F_GNAME	!=	0
(	keys	&	effkeys	&	F_GID	)	!=	0
keys	&	effkeys	&	F_GID	!=	0
(	keys	&	effkeys	&	F_MODE	)	!=	0
keys	&	effkeys	&	F_MODE	!=	0
(	keys	&	effkeys	&	F_FLAGS	)	!=	0
keys	&	effkeys	&	F_FLAGS	!=	0
*	top	==	ac	||	ac	->	prev	->	count	>=	ac	->	count

keys	&	(	F_UNAME	|	F_UID	)
keys	&	F_UNAME	|	F_UID
keys	&	(	F_GNAME	|	F_GID	)
keys	&	F_GNAME	|	F_GID
ac	->	m_entry	->	fflags_set	==	me	->	fflags_set	&&	ac	->	m_entry	->	fflags_clear	==	me	->	fflags_clear

(	mtree	->	set	.	keys	&	(	F_GNAME	|	F_GID	)	)	!=	0	&&	mtree	->	set	.	gid	==	me	->	gid
mtree	->	set	.	keys	&	F_GNAME	|	F_GID	!=	0	&&	mtree	->	set	.	gid	==	me	->	gid
~	(	F_GNAME	|	F_GID	)
~	F_GNAME	|	F_GID
(	mtree	->	set	.	keys	&	(	F_UNAME	|	F_UID	)	)	!=	0	&&	mtree	->	set	.	uid	==	me	->	uid
(	mtree	->	set	.	keys	&	F_UNAME	|	F_UID	)	!=	0	&&	mtree	->	set	.	uid	==	me	->	uid
~	(	F_UNAME	|	F_UID	)
~	F_UNAME	|	F_UID
mtree	->	set	.	fflags_set	==	me	->	fflags_set	&&	mtree	->	set	.	fflags_clear	==	me	->	fflags_clear

(	mtree	->	set	.	keys	&	F_MODE	)	!=	0	&&	mtree	->	set	.	mode	==	me	->	mode
mtree	->	set	.	keys	&	F_MODE	!=	0	&&	mtree	->	set	.	mode	==	me	->	mode
(	mtree	->	keys	&	SET_KEYS	)	==	0
(	mtree	->	keys	&	SET_KEYS	)	==	0
(	keys	&	F_FLAGS	)	!=	0
keys	&	F_FLAGS	!=	0
mtree	->	set	.	processed	&&	(	mtree	->	set	.	keys	&	F_FLAGS	)	!=	0
mtree	->	set	.	processed	&&	mtree	->	set	.	keys	&	F_FLAGS	!=	0
(	keys	&	F_MODE	)	!=	0
keys	&	F_MODE	!=	0
(	keys	&	F_TYPE	)	!=	0
keys	&	F_TYPE	!=	0
(	keys	&	F_SLINK	)	!=	0
keys	&	F_SLINK	!=	0
(	keys	&	F_TYPE	)	!=	0
keys	&	F_TYPE	!=	0
(	keys	&	F_TYPE	)	!=	0
keys	&	F_TYPE	!=	0
(	keys	&	F_DEV	)	!=	0
keys	&	F_DEV	!=	0
(	keys	&	F_TYPE	)	!=	0
keys	&	F_TYPE	!=	0
(	keys	&	F_DEV	)	!=	0
keys	&	F_DEV	!=	0
(	keys	&	F_TYPE	)	!=	0
keys	&	F_TYPE	!=	0
(	keys	&	F_TYPE	)	!=	0
keys	&	F_TYPE	!=	0
(	keys	&	F_TYPE	)	!=	0
keys	&	F_TYPE	!=	0
zip	->	central_directory_entries	!=	archive_le16dec	(	p	+	8	)

p	+	4	<=	end

0	==	(	zip_entry	->	flags	&	ZIP_LENGTH_AT_END	)
0	==	zip_entry	->	flags	&	ZIP_LENGTH_AT_END
0	==	(	zip_entry	->	flags	&	ZIP_LENGTH_AT_END	)	&&	zip	->	entry_bytes_remaining	<	1
0	==	zip_entry	->	flags	&	ZIP_LENGTH_AT_END	&&	zip	->	entry_bytes_remaining	<	1
zip	->	entry	->	flags	&	(	ZIP_ENCRYPTED	|	ZIP_STRONG_ENCRYPTED	)
zip	->	entry	->	flags	&	ZIP_ENCRYPTED	|	ZIP_STRONG_ENCRYPTED
archive_le32dec	(	p	+	4	)	==	zip	->	entry_crc32

archive_le32dec	(	p	+	8	)	==	zip	->	entry_compressed_bytes_read

archive_le32dec	(	p	+	12	)	==	zip	->	entry_uncompressed_bytes_read

0	==	(	zip	->	entry	->	flags	&	ZIP_LENGTH_AT_END	)
0	==	zip	->	entry	->	flags	&	ZIP_LENGTH_AT_END
uidsize	==	4	&&	datasize	>=	6

datasize	>=	(	2	+	uidsize	+	3	)

gidsize	==	4	&&	datasize	>=	(	2	+	uidsize	+	5	)

p	+	newc_header_size	<=	q

!	is_hex	(	h	+	afiol_dev_offset	,	afiol_ino_m_offset	-	afiol_dev_offset	)

!	is_hex	(	h	+	afiol_mode_offset	,	afiol_mtime_n_offset	-	afiol_mode_offset	)

!	is_hex	(	h	+	afiol_namesize_offset	,	afiol_xsize_s_offset	-	afiol_namesize_offset	)

!	is_hex	(	h	+	afiol_filesize_offset	,	afiol_filesize_size	)

p	+	odc_header_size	<=	q

char_cnt	--	>	0

char_cnt	--	>	0

--	le	->	links	<=	0

n	==	-	1	||	n	==	0

a	->	filesize	==	0	||	a	->	fd	<	0

lseek	(	a	->	fd	,	a	->	filesize	-	1	,	SEEK_SET	)	<	0

r	!=	0	||	!	S_ISDIR	(	a	->	mode	)

a	->	skip_file_set	&&	a	->	st	.	st_dev	==	a	->	skip_file_dev	&&	a	->	st	.	st_ino	==	a	->	skip_file_ino

(	a	->	mode	!=	a	->	st	.	st_mode	)	&&	(	a	->	todo	&	TODO_MODE_FORCE	)

a	->	user_uid	!=	0	&&	a	->	user_uid	!=	a	->	uid

r1	!=	0	||	r2	!=	0

a	->	pst	->	st_uid	!=	a	->	uid	&&	(	a	->	todo	&	TODO_SUID	)

(	critical_flags	!=	0	)	&&	(	set	&	critical_flags	)

archive_entry_xattr_count	(	a	->	entry	)	!=	0	&&	!	warning_done

s	--	>	0

s	--	>	0

len	--	>	0

*	pp	++	>	127

(	l	->	flags	&	ZIP_FLAGS_UTF8_NAME	)	!=	0	&&	is_all_ascii	(	archive_entry_pathname	(	l	->	entry	)	)
l	->	flags	&	ZIP_FLAGS_UTF8_NAME	!=	0	&&	is_all_ascii	(	archive_entry_pathname	(	l	->	entry	)	)
t	->	tm_year	<	1980	-	1900

t	->	tm_year	>	2107	-	1900

(	(	t	->	tm_year	-	80	)	&	0x7f	)	<<	9
(	t	->	tm_year	-	80	)	&	0x7f	<<	9
(	(	t	->	tm_mon	+	1	)	&	0x0f	)	<<	5
(	t	->	tm_mon	+	1	)	&	0x0f	<<	5
(	t	->	tm_hour	&	0x1f	)	<<	11
t	->	tm_hour	&	0x1f	<<	11
(	t	->	tm_min	&	0x3f	)	<<	5
t	->	tm_min	&	0x3f	<<	5
(	t	->	tm_sec	&	0x3e	)	>>	1
t	->	tm_sec	&	0x3e	>>	1
crc32	(	0	,	(	unsigned	char	*	)	p	+	12	,	20	)	!=	archive_le32dec	(	p	+	8	)

p	+	32	<	q

zip_entry	->	ssIndex	!=	-	1

coder2	->	codec	!=	_7Z_X86	&&	coder2	->	codec	!=	_7Z_X86_BCJ2

zip	->	codec	!=	_7Z_LZMA2	&&	zip	->	codec2	==	_7Z_X86

zip	->	codec	!=	_7Z_LZMA2	&&	zip	->	codec2	==	_7Z_X86

--	n	>=	0

si	->	pi	.	numPackStreams	==	0	||	si	->	ci	.	numFolders	==	0

crc32	(	0	,	(	unsigned	char	*	)	p	+	12	,	20	)	!=	archive_le32dec	(	p	+	8	)

zip	->	codec	==	_7Z_COPY	&&	zip	->	codec2	==	-	1

zip	->	codec	==	_7Z_COPY	&&	zip	->	codec2	==	-	1

zip	->	codec2	==	_7Z_X86	&&	zip	->	odd_bcj_size	&&	zip	->	uncompressed_buffer_bytes_remaining	+	5	>	zip	->	uncompressed_buffer_size

zip	->	pack_stream_inbytes_remaining	==	0	&&	zip	->	folder_outbytes_remaining	==	0

(	folder	->	numCoders	>	2	&&	!	found_bcj2	)	||	found_bcj2	>	1

++	tar	->	header_recursion_depth	>	32

tar	->	sparse_gnu_major	==	1	&&	tar	->	sparse_gnu_minor	==	0

0x1ff	&	(	-	tar	->	entry_bytes_remaining	)

0x1ff	&	(	-	tar	->	entry_bytes_remaining	)

0x1ff	&	(	-	tar	->	entry_bytes_remaining	)

tar	->	sparse_numbytes	!=	-	1

tar	->	sparse_numbytes	!=	-	1

0x1ff	&	(	-	tar	->	entry_bytes_remaining	)

entries	--	>	0

digit	>=	0	&&	digit	<	base	&&	char_cnt	--	>	0

digit	>=	0	&&	digit	<	base	&&	char_cnt	--	>	0

--	char_cnt	>	0

*	src	>	127	||	*	src	<	32

6	*	(	4	-	group_size	)
6	*	4	-	group_size
(	v	>>	8	)	&	0xff

(	v	>>	16	)	&	0xff

digit1	>=	0	&&	digit2	>=	0

(	digit1	<<	4	)	|	digit2

--	k	==	0

(	++	m	)	-	2

(	numStats	+	1	)	>>	1

states	&	(	1	+	~	states	)

(	a	->	state	&	state	)	==	0
a	->	state	&	state	==	0
!	unset	&&	value	==	0

multiline	==	1	&&	++	entry_cnt	>=	MAX_BID_ENTRY

++	entry_cnt	>=	MAX_BID_ENTRY

fstat	(	mtree	->	fd	,	st	)	==	-	1

lstat	(	path	,	st	)	==	-	1

(	parsed_kws	&	(	MTREE_HAS_GID	|	MTREE_HAS_GNAME	)	)	==	0
(	parsed_kws	&	MTREE_HAS_GID	|	MTREE_HAS_GNAME	)	==	0
(	parsed_kws	&	(	MTREE_HAS_UID	|	MTREE_HAS_UNAME	)	)	==	0
parsed_kws	&	MTREE_HAS_UID	|	MTREE_HAS_UNAME	==	0
(	parsed_kws	&	MTREE_HAS_MTIME	)	==	0
parsed_kws	&	MTREE_HAS_MTIME	==	0
(	parsed_kws	&	MTREE_HAS_NLINK	)	==	0
parsed_kws	&	MTREE_HAS_NLINK	==	0
(	parsed_kws	&	MTREE_HAS_PERM	)	==	0
parsed_kws	&	MTREE_HAS_PERM	==	0
(	parsed_kws	&	MTREE_HAS_SIZE	)	==	0
parsed_kws	&	MTREE_HAS_SIZE	==	0
digit	>=	0	&&	digit	<	base

digit	>=	0	&&	digit	<	base

digit	>=	0	&&	digit	<	base

(	1	<<	state	->	bits	)	-	1
1	<<	state	->	bits	-	1
p	<	end	&&	!	state	->	end_of_stream

ret	==	-	1

(	code	==	256	)	&&	state	->	use_reset_code

state	->	bits	-	(	state	->	bytes_in_section	%	state	->	bits	)

skip_bytes	--	>	0

(	1	<<	state	->	bits	)	-	1
1	<<	state	->	bits	-	1
code	<	state	->	maxcode	&&	state	->	oldcode	>=	0

(	1	<<	state	->	bits	)	-	1
1	<<	state	->	bits	-	1
*	state	->	next_in	++	<<	state	->	bits_avail

a	->	bytes_in_last_block	*	(	(	block_length	+	a	->	bytes_in_last_block	-	1	)	/	a	->	bytes_in_last_block	)
a	->	bytes_in_last_block	*	(	block_length	+	a	->	bytes_in_last_block	-	1	/	a	->	bytes_in_last_block	)
a	->	skip_file_set	&&	archive_entry_dev_is_set	(	entry	)	&&	archive_entry_ino_is_set	(	entry	)	&&	archive_entry_dev	(	entry	)	==	a	->	skip_file_dev	&&	archive_entry_ino64	(	entry	)	==	a	->	skip_file_ino

n	==	-	1

(	br	->	cache_buffer	<<	8	)	|	*	br	->	next_in	++

word	-	(	word	>>	1	)
word	-	word	>>	1
(	dstoffs	-	offset	)	&	lzss_mask	(	&	rar	->	lzss	)

(	dstoffs	+	l	<	srcoffs	)	||	(	srcoffs	+	l	<	dstoffs	)

(	dstoffs	+	l	)	&	lzss_mask	(	&	(	rar	->	lzss	)	)

(	srcoffs	+	l	)	&	lzss_mask	(	&	(	rar	->	lzss	)	)

p	+	7	<	q

rar	->	main_flags	&	MHD_VOLUME	||	rar	->	main_flags	&	MHD_FIRSTVOLUME

(	crc32_val	&	0xffff	)	!=	archive_le16dec	(	p	)
crc32_val	&	0xffff	!=	archive_le16dec	(	p	)
(	crc32_val	&	0xffff	)	!=	archive_le16dec	(	p	)
crc32_val	&	0xffff	!=	archive_le16dec	(	p	)
!	(	rar	->	file_flags	&	FHD_SOLID	)
!	rar	->	file_flags	&	FHD_SOLID
(	crc32_val	&	0xffff	)	!=	archive_le16dec	(	rar_header	.	crc	)
crc32_val	&	0xffff	!=	archive_le16dec	(	rar_header	.	crc	)
rar	->	packed_size	<	0	||	rar	->	unp_size	<	0

p	+	filename_size	>	endp

rar	->	filename_allocated	<	filename_size	+	2

*	(	p	+	offset	++	)
*	p	+	offset	++
offset	<	end	&&	filename_size	<	end

*	(	p	+	offset	++	)
*	p	+	offset	++
(	flagbyte	>>	flagbits	)	&	3

*	(	p	+	offset	++	)
*	p	+	offset	++
*	(	p	+	offset	++	)
*	p	+	offset	++
*	(	p	+	offset	++	)
*	p	+	offset	++
p	+	8	>	endp

2	*	(	time	&	0x1f	)
2	*	time	&	0x1f
(	time	>>	5	)	&	0x3f

(	time	>>	11	)	&	0x1f

(	time	>>	16	)	&	0x1f

(	(	time	>>	21	)	&	0x0f	)	-	1
(	time	>>	21	)	&	0x0f	-	1
(	(	time	>>	25	)	&	0x7f	)	+	80
(	time	>>	25	)	&	0x7f	+	80
p	+	2	>	endp

flags	>>	i	*	4

p	+	4	>	endp

p	+	count	>	endp

(	(	*	p	)	<<	16	)	|	(	rem	>>	8	)

tm	->	tm_sec	+	rem	/	NS_UNIT

rar	->	ppmd_eod	||	(	rar	->	dictionary_size	&&	rar	->	offset	>=	rar	->	unp_size	)

!	rar	->	is_ppmd_block	&&	rar	->	dictionary_size	&&	rar	->	bytes_uncopied	>	0

code	<<	(	i	*	8	)

(	ppmd_flags	&	0x1F	)	+	1
ppmd_flags	&	0x1F	+	1
16	+	(	maxorder	-	16	)	*	3
16	+	maxorder	-	16	*	3
j	<	zerocount	+	2	&&	i	<	MAX_SYMBOLS

j	<	n	&&	i	<	HUFFMAN_TABLE_SIZE

j	<	n	&&	i	<	HUFFMAN_TABLE_SIZE

!	rar	->	dictionary_size	||	!	rar	->	lzss	.	window

--	symbolsleft	<=	0

repeatpos	==	0	||	(	repeatpos	>=	0	&&	(	(	(	codebits	>>	(	repeatpos	-	1	)	)	&	3	)	==	0	||	(	(	codebits	>>	(	repeatpos	-	1	)	)	&	3	)	==	3	)	)
repeatpos	==	0	||	(	repeatpos	>=	0	&&	(	codebits	>>	(	repeatpos	-	1	)	)	&	3	==	0	||	(	(	codebits	>>	(	repeatpos	-	1	)	)	&	3	)	==	3	)
(	codebits	>>	bitpos	)	&	1

(	code	->	numentries	+	1	)	*	sizeof	(	*	code	->	tree	)
code	->	numentries	+	1	*	sizeof	(	*	code	->	tree	)
code	->	maxlength	<	code	->	minlength	||	code	->	maxlength	>	10

sizeof	(	*	code	->	table	)	*	(	1	<<	code	->	tablesize	)
sizeof	(	*	code	->	table	)	*	1	<<	code	->	tablesize
node	<	0	||	node	>=	code	->	numentries

1	<<	(	maxdepth	-	depth	)

table	+	currtablesize	/	2

windowoffs	+	length	<=	lzss_size	(	&	rar	->	lzss	)

(	permset	&	7	)	<<	6
permset	&	7	<<	6
(	permset	&	7	)	<<	3
permset	&	7	<<	3
ap	->	type	==	type	&&	ap	->	tag	==	tag	&&	ap	->	id	==	id

(	ap	->	type	&	want_type	)	!=	0
ap	->	type	&	want_type	!=	0
(	acl	->	mode	>>	6	)	&	7

(	acl	->	mode	>>	3	)	&	7

(	ap	->	type	&	flags	)	!=	0
ap	->	type	&	flags	!=	0
id	!=	-	1

(	ap	->	type	&	flags	)	!=	0
ap	->	type	&	flags	!=	0
id	!=	-	1

id	!=	-	1

id	!=	-	1

id	==	-	1	&&	fields	>	3

id	!=	-	1

id	!=	-	1

*	start	++	!=	*	test	++

start	<	end	&&	*	start	++	==	*	test	++

data	*	10	+	*	p

archive_strlen	(	&	(	file	->	parentdir	)	)	==	0	&&	archive_strlen	(	&	(	file	->	basename	)	)	==	0

(	iso9660	->	cur_file	->	cur_content	->	size	+	LOGICAL_BLOCK_SIZE	-	1	)	>>	LOGICAL_BLOCK_BITS

(	iso9660	->	cur_file	->	cur_content	->	size	+	LOGICAL_BLOCK_SIZE	-	1	)	>>	LOGICAL_BLOCK_BITS

(	high	<<	8	)	|	low

t	==	DIR_REC_SELF	&&	isoent	==	isoent	->	parent

*	sl	&&	sllen	+	11	<	slmax

archive_entry_birthtime_is_set	(	file	->	entry	)	&&	archive_entry_birthtime	(	file	->	entry	)	<=	archive_entry_mtime	(	file	->	entry	)

t	==	DIR_REC_SELF	&&	isoent	==	isoent	->	parent

id	->	length	>	0	&&	leading_under

(	(	size	+	PATH_TABLE_BLOCK_SIZE	-	1	)	/	PATH_TABLE_BLOCK_SIZE	)	*	(	PATH_TABLE_BLOCK_SIZE	/	LOGICAL_BLOCK_SIZE	)
(	size	+	PATH_TABLE_BLOCK_SIZE	-	1	/	PATH_TABLE_BLOCK_SIZE	)	*	(	PATH_TABLE_BLOCK_SIZE	/	LOGICAL_BLOCK_SIZE	)
(	bp	+	1	)	>	wb

isoent	->	children	.	cnt	<=	0	||	(	vdd	->	vdd_type	!=	VDD_JOLIET	&&	!	iso9660	->	opt	.	rr	&&	depth	+	1	>=	vdd	->	max_depth	)

(	bs	+	dr_l	)	>	LOGICAL_BLOCK_SIZE

isoent	->	children	.	cnt	<=	0	||	(	vdd	->	vdd_type	!=	VDD_JOLIET	&&	!	iso9660	->	opt	.	rr	&&	depth	+	1	>=	vdd	->	max_depth	)

(	archive_entry_size	(	isoent	->	file	->	entry	)	+	LOGICAL_BLOCK_SIZE	-	1	)	>>	LOGICAL_BLOCK_BITS

!	iso9660	->	opt	.	rr	&&	iso9660	->	opt	.	joliet

l	>	n	-	1

archive_strlen	(	&	(	iso9660	->	cur_dirstr	)	)	==	archive_strlen	(	&	(	isoent	->	file	->	parentdir	)	)	&&	strcmp	(	iso9660	->	cur_dirstr	.	s	,	fn	)	==	0

archive_strlen	(	&	(	dent	->	file	->	parentdir	)	)	+	archive_strlen	(	&	(	dent	->	file	->	basename	)	)	==	0

(	1	<<	7	)	-	1
1	<<	7	-	1
(	cnt	+	bk	)	&	~	bk

wnp	->	noff	+	numsize	!=	wnp_ext_off

0x20	!=	*	s2	++

0x20	!=	*	s1	++

p1	->	ext_len	==	0	&&	p2	->	ext_len	==	0

p1	->	ext_len	==	1	&&	p2	->	ext_len	==	1

0x20	!=	*	s2	++

0x20	!=	*	s1	++

0	!=	*	s2	++

0	!=	*	s1	++

p1	->	ext_len	==	0	&&	p2	->	ext_len	==	0

p1	->	ext_len	==	2	&&	p2	->	ext_len	==	2

0	!=	*	s2	++

0	!=	*	s1	++

np	->	virtual	&&	!	archive_entry_mtime_is_set	(	np	->	file	->	entry	)

vdd	->	vdd_type	!=	VDD_JOLIET	&&	!	iso9660	->	opt	.	rr	&&	depth	+	1	>=	vdd	->	max_depth

0x20	!=	*	s2	++

0x20	!=	*	s1	++

0	!=	*	s2	++

0	!=	*	s1	++

iso9660	->	dircnt_max	>=	MAX_DEPTH	&&	(	!	iso9660	->	opt	.	limit_depth	||	iso9660	->	opt	.	iso_level	==	4	)
iso9660	->	dircnt_max	>=	MAX_DEPTH	&&	!	iso9660	->	opt	.	limit_depth	||	iso9660	->	opt	.	iso_level	==	4
iso9660	->	opt	.	limit_dirs	&&	dir_number	>	0xffff

archive_entry_size	(	file	->	entry	)	>=	24	&&	archive_entry_size	(	file	->	entry	)	<	MULTI_EXTENT_SIZE

ceil	&&	p	+	8	<=	endp

p	>	pp	+	USTAR_prefix_size

s	--	>	0

len	--	>	0

s	--	>	0

len	--	>	0

res	->	number_entries	>	res	->	number_buckets	*	2

(	4	*	5	+	4	)	*	9	+	8
4	*	5	+	4	*	9	+	8
log2dic	<	12	||	log2dic	>	27

(	int64_t	)	skip	>	(	int64_t	)	(	mine	->	end	-	mine	->	p	)

sizeof	(	skip	)	*	8	-	1

p	+	H_SIZE	<	q

!	lha	->	directory	&&	archive_strlen	(	&	lha	->	filename	)	==	0

(	lha	->	setflag	&	UNIX_MODE_IS_SET	)	==	0	&&	(	lha	->	dos_attr	&	1	)	!=	0
lha	->	setflag	&	UNIX_MODE_IS_SET	==	0	&&	lha	->	dos_attr	&	1	!=	0
lha	->	directory	||	lha	->	compsize	==	0

(	namelen	>	221	||	extdsize	<	0	)	&&	extdsize	!=	-	2
namelen	>	221	||	extdsize	<	0	&&	extdsize	!=	-	2
namelen	>	230	||	padding	<	0

archive_le16dec	(	p	+	H3_FIELD_LEN_OFFSET	)	!=	4

lha	->	header_size	<	H3_FIXED_SIZE	+	4

(	lha	->	setflag	&	CRC_IS_SET	)	&&	lha	->	crc	!=	lha	->	entry_crc_calculated

lha	->	strm	.	avail_out	==	0	||	lha	->	end_of_entry

--	size	>=	0

w_bits	==	15	||	w_bits	==	16

(	br	->	cache_buffer	<<	8	)	|	*	strm	->	next_in	++

ds	->	w_remaining	==	0	&&	ds	->	w_pos	>	0

ds	->	pt	.	len_avail	<	3	||	ds	->	pt	.	len_size	==	ds	->	pos_pt_len_size

ds	->	loop	<	0	||	last

c	--	>	0

ds	->	loop	<	0	||	last

i	+	c	>	ds	->	lt	.	len_avail

i	>	ds	->	lt	.	len_avail	||	!	lzh_make_huffman_table	(	&	(	ds	->	lt	)	)

++	w_pos	>=	w_size

(	w_pos	-	copy_pos	-	1	)	&	w_mask

l	>	w_size	-	copy_pos

l	>	w_size	-	w_pos

(	copy_pos	+	l	<	w_pos	)	||	(	w_pos	+	l	<	copy_pos	)

(	w_pos	+	l	)	&	w_mask

(	copy_pos	+	l	)	&	w_mask

(	copy_pos	+	l	)	&	w_mask

1	<<	(	tbl_bits	-	HTBL_BITS	+	4	)

ptn	!=	0x10000	||	maxbits	>	hf	->	tbl_bits

--	extlen	>	0

extlen	--	<=	0	||	c	>=	hf	->	tree_used

rbits	&	(	1U	<<	extlen	)

i	<	2048	*	16

buff	+	2048	*	16

buff	+	2048	*	16	+	0x28

buff	+	2048	*	16	+	0x50

buff	+	2048	*	17

buff	+	2048	*	17	+	0x28

buff	+	2048	*	17	+	0x50

buff	+	2048	*	16	+	0x32d

buff	+	2048	*	17	+	0x32d

buff	+	2048	*	18

2048	*	18	+	i

i	<	2048	*	150

2048	*	31	+	i

altgid	(	)	==	-	1

invalidgid	(	)	==	-	1

altgid	(	)	!=	-	1

invalidgid	(	)	!=	-	1

i	<	2048	*	16

buff	+	2048	*	16

buff	+	2048	*	16	+	0x28

buff	+	2048	*	16	+	0x50

buff	+	2048	*	17

buff	+	2048	*	17	+	0x28

buff	+	2048	*	17	+	0x50

buff	+	2048	*	16	+	0x32d

buff	+	2048	*	17	+	0x32d

buff	+	2048	*	18

2048	*	18	+	i

buff	+	2048	*	31

buff	+	2048	*	32

buff	+	2048	*	33

buff	+	2048	*	34

(	i	^	j	)	&	0xff
i	^	j	&	0xff
i	<	2048	*	16

buff	+	2048	*	16

buff	+	2048	*	16	+	0x28

buff	+	2048	*	16	+	0x50

buff	+	2048	*	17

buff	+	2048	*	17	+	0x28

buff	+	2048	*	17	+	0x50

buff	+	2048	*	16	+	0x32d

buff	+	2048	*	17	+	0x32d

buff	+	2048	*	18

2048	*	18	+	i

buff	+	2048	*	31

buff	+	2048	*	51

buff	+	2048	*	51	+	1024

buff	+	2048	*	52

buff	+	2048	*	53

i	<	2048	*	16

buff	+	2048	*	16

buff	+	2048	*	16	+	0x28

buff	+	2048	*	16	+	0x50

buff	+	2048	*	17

2048	*	17	+	i

2048	*	17	+	0x47

2048	*	17	+	0x48

2048	*	17	+	0x49

2048	*	17	+	0x4a

2048	*	17	+	i

buff	+	2048	*	18

buff	+	2048	*	18	+	0x28

buff	+	2048	*	18	+	0x50

buff	+	2048	*	16	+	0x32d

buff	+	2048	*	18	+	0x32d

buff	+	2048	*	19

2048	*	19	+	i

buff	+	2048	*	31

buff	+	2048	*	31	+	237

buff	+	2048	*	32

buff	+	2048	*	32	+	64

buff	+	2048	*	33

i	<	2048	*	38

buff	+	2048	*	38

buff	+	2048	*	39

i	<	n	&&	!	matched

(	archive_version_number	(	)	/	1000	)	%	1000

i	<	datasize	-	999

2	*	GB	-	1
2	*	GB	-	1
2	*	GB	+	1
2	*	GB	+	1
4	*	GB	-	1
4	*	GB	-	1
4	*	GB	+	1
4	*	GB	+	1
8	*	GB	-	1
8	*	GB	-	1
8	*	GB	+	1
8	*	GB	+	1
64	*	GB	-	1
64	*	GB	-	1
(	uc	>=	0x2000	&&	uc	<=	0x2FFF	)	||	(	uc	>=	0xF900	&&	uc	<=	0xFAFF	)	||	(	uc	>=	0x2F800	&&	uc	<=	0x2FAFF	)

uc	==	0x1109A	||	uc	==	0x1109C	||	uc	==	0x110AB

!	locale_is_utf8	&&	!	wc_is_unicode

c	>=	32	&&	c	<	127

c	>=	32	&&	c	<	127

n1	==	0	&&	n2	==	0

n	==	s	&&	memcmp	(	buff	,	contents	,	s	)	==	0

s	*	2	+	128

expected_failure	==	0	&&	actual_failure	==	0

filet	<	now	-	10	||	filet	>	now	+	1

filet	!=	t	||	filet_nsec	!=	nsec

mt	==	0	&&	mt_nsec	==	0	&&	at	==	0	&&	at_nsec	==	0

mt	==	0	&&	mt_nsec	==	0

at	==	0	&&	at_nsec	==	0

!	keep_temp_files	&&	assertChdir	(	tmpdir	)

start	<	0	||	end	>=	limit	||	start	>	end

i	<	n	&&	!	matched

07	&	(	mode	>>	6	)

(	permset	<<	6	)	==	(	mode	&	0700	)
(	permset	<<	6	)	==	mode	&	0700
07	&	(	mode	>>	3	)

(	permset	<<	3	)	==	(	mode	&	0070	)
(	permset	<<	3	)	==	mode	&	0070
(	permset	<<	0	)	==	(	mode	&	0007	)
(	permset	<<	0	)	==	mode	&	0007
(	mode	&	0777	)	==	(	archive_entry_mode	(	ae	)	&	0777	)
mode	&	0777	==	(	archive_entry_mode	(	ae	)	&	0777	)
(	archive_entry_mode	(	ae	)	&	0777	)	==	0142
archive_entry_mode	(	ae	)	&	0777	==	0142
(	archive_entry_mode	(	ae	)	&	0777	)	==	0142
archive_entry_mode	(	ae	)	&	0777	==	0142
(	archive_entry_mode	(	ae	)	&	0777	)	==	0543
archive_entry_mode	(	ae	)	&	0777	==	0543
(	archive_entry_mode	(	ae	)	&	0777	)	==	0142
archive_entry_mode	(	ae	)	&	0777	==	0142
i2	(	p	)	|	(	i2	(	p	+	2	)	<<	16	)

3	*	256	+	20

(	tm	->	tm_hour	*	2048	)	+	(	tm	->	tm_min	*	32	)	+	(	tm	->	tm_sec	/	2	)

(	(	tm	->	tm_year	-	80	)	*	512	)	+	(	(	tm	->	tm_mon	+	1	)	*	32	)	+	tm	->	tm_mday
(	tm	->	tm_year	-	80	*	512	)	+	(	tm	->	tm_mon	+	1	*	32	)	+	tm	->	tm_mday
i4	(	p	+	38	)	>>	16	&	01777

(	tm	->	tm_hour	*	2048	)	+	(	tm	->	tm_min	*	32	)	+	(	tm	->	tm_sec	/	2	)

(	(	tm	->	tm_year	-	80	)	*	512	)	+	(	(	tm	->	tm_mon	+	1	)	*	32	)	+	tm	->	tm_mday
(	(	tm	->	tm_year	-	80	)	*	512	)	+	(	tm	->	tm_mon	+	1	*	32	)	+	tm	->	tm_mday
3	*	256	+	20

(	tm	->	tm_hour	*	2048	)	+	(	tm	->	tm_min	*	32	)	+	(	tm	->	tm_sec	/	2	)

(	(	tm	->	tm_year	-	80	)	*	512	)	+	(	(	tm	->	tm_mon	+	1	)	*	32	)	+	tm	->	tm_mday
(	tm	->	tm_year	-	80	*	512	)	+	(	tm	->	tm_mon	+	1	*	32	)	+	tm	->	tm_mday
i4	(	p	+	38	)	>>	16	&	01777

(	tm	->	tm_hour	*	2048	)	+	(	tm	->	tm_min	*	32	)	+	(	tm	->	tm_sec	/	2	)

(	(	tm	->	tm_year	-	80	)	*	512	)	+	(	(	tm	->	tm_mon	+	1	)	*	32	)	+	tm	->	tm_mday
(	tm	->	tm_year	-	80	*	512	)	+	(	(	tm	->	tm_mon	+	1	)	*	32	)	+	tm	->	tm_mday
(	i	+	1	)	%	10
i	+	1	%	10
(	off_t	)	skip	>	(	off_t	)	(	mine	->	end	-	mine	->	p	)

strlen	(	p	+	1	)	<=	fns	->	maxelen

(	fns	->	opt	&	ALLOW_LDOT	)	==	0
fns	->	opt	&	ALLOW_LDOT	==	0
i	<	sizeof	(	sym128	)	-	2

i	<	sizeof	(	sym255	)	-	2

memcmp	(	e	+	12	,	file	+	12	,	6	)	!=	0

i	<	n	&&	!	matched

07	&	(	mode	>>	6	)

(	permset	<<	6	)	==	(	mode	&	0700	)
(	permset	<<	6	)	==	mode	&	0700
07	&	(	mode	>>	3	)

(	permset	<<	3	)	==	(	mode	&	0070	)
(	permset	<<	3	)	==	mode	&	0070
(	permset	<<	0	)	==	(	mode	&	0007	)
(	permset	<<	0	)	==	mode	&	0007
(	mode	&	0777	)	==	(	archive_entry_mode	(	ae	)	&	0777	)
mode	&	0777	==	archive_entry_mode	(	ae	)	&	0777
(	archive_entry_mode	(	ae	)	&	0777	)	==	0142
archive_entry_mode	(	ae	)	&	0777	==	0142
(	archive_entry_mode	(	ae	)	&	0777	)	==	0142
archive_entry_mode	(	ae	)	&	0777	==	0142
(	archive_entry_mode	(	ae	)	&	0777	)	==	0543
archive_entry_mode	(	ae	)	&	0777	==	0543
(	archive_entry_mode	(	ae	)	&	0777	)	==	0142
archive_entry_mode	(	ae	)	&	0777	==	0142
i	<	dlen	+	flen	+	separator

flen	<	100	-	dlen	+	5

sizeof	(	nulls	)	+	512	+	1024	<=	sizeof	(	buff	)

i	<	2048	*	16

buff	+	2048	*	16

buff	+	2048	*	16	+	0x28

buff	+	2048	*	16	+	0x50

buff	+	2048	*	17

2048	*	17	+	i

2048	*	17	+	0x47

2048	*	17	+	0x48

2048	*	17	+	0x49

2048	*	17	+	0x4a

2048	*	17	+	i

buff	+	2048	*	18

buff	+	2048	*	18	+	0x28

buff	+	2048	*	18	+	0x50

buff	+	2048	*	16	+	0x32d

buff	+	2048	*	18	+	0x32d

buff	+	2048	*	19

2048	*	19	+	i

buff	+	2048	*	31

buff	+	2048	*	31	+	237

buff	+	2048	*	32

buff	+	2048	*	32	+	64

buff	+	2048	*	33

buff	+	2048	*	33	+	8

buff	+	2048	*	33	+	64

buff	+	2048	*	33

i	<	2048	*	38

memcmp	(	e	+	6	,	file	+	6	,	8	)	!=	0

(	(	(	(	long	long	)	1	)	<<	62	)	-	1	)	+	(	(	(	long	long	)	1	)	<<	62	)
(	(	(	long	long	)	1	)	<<	62	-	1	)	+	(	(	long	long	)	1	)	<<	62
!	hole	&&	data_blocks	==	1

offset	+	(	int	)	sizeof	(	buff	)	<	size

size	-	offset	==	archive_read_data	(	a	,	buff	,	size	-	offset	)

offset	+	(	int	)	sizeof	(	buff	)	<	size

size	-	offset	==	archive_read_data	(	a	,	buff	,	size	-	offset	)

0755	&	~	UMASK

0755	&	~	UMASK

0755	&	~	UMASK

0755	&	~	UMASK

p	<	buff	+	100

p	<	buff	+	100

p	<	buff	+	100

n	<	148	||	n	>	155

!	(	t	->	flags	&	hasStat	)
!	t	->	flags	&	hasStat
!	(	t	->	flags	&	hasLstat	)
!	t	->	flags	&	hasLstat
(	t	->	flags	&	hasStat	)	&&	(	!	S_ISDIR	(	tree_current_stat	(	t	)	->	st_mode	)	)

!	S_ISREG	(	st	->	st_mode	)	||	st	->	st_size	==	0
S_ISREG	(	st	->	st_mode	)	||	st	->	st_size	==	!	S_ISREG	(	st	->	st_mode	)	||	st	->	st_size	==	0
(	stat	(	pathname	,	&	st	)	)	==	-	1

(	m	&	~	07777	)	|	0744

verbose	||	!	do_extract

verbose	||	!	do_extract

verbose	||	!	do_extract

verbose	||	!	do_extract

gds	->	HaveTime	&&	!	gds	->	HaveYear	&&	!	gds	->	HaveRel

Year	%	4	==	0	&&	(	Year	%	100	!=	0	||	Year	%	400	==	0	)
Year	%	4	==	0	&&	Year	%	100	!=	0	||	Year	%	400	==	0
Year	<	EPOCH	||	Year	>	2038	||	Month	<	1	||	Month	>	12

365	+	(	i	%	4	==	0	)
365	+	i	%	4	==	0
Hours	*	HOUR	+	Minutes	*	MINUTE	+	Seconds
Hours	*	HOUR	+	Minutes	*	MINUTE	+	Seconds
DSTmode	==	DSTon	||	(	DSTmode	==	DSTmaybe	&&	localtime	(	&	Julian	)	->	tm_isdst	)

(	localtime	(	&	Start	)	->	tm_hour	+	1	)	%	24
localtime	(	&	Start	)	->	tm_hour	+	1	%	24
(	localtime	(	&	Future	)	->	tm_hour	+	1	)	%	24
localtime	(	&	Future	)	->	tm_hour	+	1	%	24
(	Future	-	Start	)	+	(	StartDay	-	FutureDay	)	*	HOUR
(	Future	-	Start	)	+	StartDay	-	FutureDay	*	HOUR
(	DayNumber	-	tm	->	tm_wday	+	7	)	%	7
DayNumber	-	tm	->	tm_wday	+	7	%	7
12	*	(	tm	->	tm_year	+	1900	)	+	tm	->	tm_mon	+	RelMonth
12	*	tm	->	tm_year	+	1900	+	tm	->	tm_mon	+	RelMonth
Month	%	12	+	1

i	<	sizeof	(	buff	)	-	1

(	ay	>>	2	)	-	(	by	>>	2	)
ay	>>	2	-	(	by	>>	2	)
ay	/	100	-	by	/	100

(	ay	/	100	>>	2	)	-	(	by	/	100	>>	2	)
ay	/	100	>>	2	-	by	/	100	>>	2
(	long	)	(	ay	-	by	)	*	365

days	*	DAY	+	(	a	->	tm_hour	-	b	->	tm_hour	)	*	HOUR	+	(	a	->	tm_min	-	b	->	tm_min	)	*	MINUTE	+	(	a	->	tm_sec	-	b	->	tm_sec	)
days	*	DAY	+	(	a	->	tm_hour	-	b	->	tm_hour	)	*	HOUR	+	a	->	tm_min	-	b	->	tm_min	*	MINUTE	+	(	a	->	tm_sec	-	b	->	tm_sec	)
lasttoken	>	tokens	+	255

gds	->	HaveTime	>	1	||	gds	->	HaveZone	>	1	||	gds	->	HaveWeekDay	>	1	||	gds	->	HaveYear	>	1	||	gds	->	HaveMonth	>	1	||	gds	->	HaveDay	>	1

local	.	tm_hour	*	HOUR	+	local	.	tm_min	*	MINUTE	+	local	.	tm_sec
local	.	tm_hour	*	HOUR	+	local	.	tm_min	*	MINUTE	+	local	.	tm_sec
gds	->	HaveWeekDay	&&	!	(	gds	->	HaveYear	||	gds	->	HaveMonth	||	gds	->	HaveDay	)
gds	->	HaveWeekDay	&&	!	gds	->	HaveYear	||	gds	->	HaveMonth	||	gds	->	HaveDay
Start	==	-	1

t	<=	0	||	t	>	8192

!	(	t	->	flags	&	hasStat	)
!	t	->	flags	&	hasStat
!	(	t	->	flags	&	hasLstat	)
!	t	->	flags	&	hasLstat
(	t	->	flags	&	hasStat	)	&&	(	!	S_ISDIR	(	tree_current_stat	(	t	)	->	st_mode	)	)

length	<	0	||	length	>=	fmtbuff_length

n	--	>	0

i	>	(	sizeof	(	outbuff	)	-	20	)

p	!=	name	&&	!	bsdtar	->	warned_lead_slash

append_archive_filename	(	bsdtar	,	a	,	arg	+	1	)	!=	0

fd	==	-	1

st	->	st_ctime	==	bsdtar	->	newer_ctime_sec	&&	ARCHIVE_STAT_CTIME_NANOS	(	st	)	<=	bsdtar	->	newer_ctime_nsec

st	->	st_mtime	==	bsdtar	->	newer_mtime_sec	&&	ARCHIVE_STAT_MTIME_NANOS	(	st	)	<=	bsdtar	->	newer_mtime_nsec

bsdtar	->	option_fast_read	&&	lafe_unmatched_inclusions	(	bsdtar	->	matching	)	==	0

c	>=	32	&&	c	<	127

c	>=	32	&&	c	<	127

n1	==	0	&&	n2	==	0

n	==	s	&&	memcmp	(	buff	,	contents	,	s	)	==	0

s	*	2	+	128

expected_failure	==	0	&&	actual_failure	==	0

filet	<	now	-	10	||	filet	>	now	+	1

filet	!=	t	||	filet_nsec	!=	nsec

mt	==	0	&&	mt_nsec	==	0	&&	at	==	0	&&	at_nsec	==	0

mt	==	0	&&	mt_nsec	==	0

at	==	0	&&	at_nsec	==	0

!	keep_temp_files	&&	assertChdir	(	tmpdir	)

start	<	0	||	end	>=	limit	||	start	>	end

j	<	k	+	1

-	24	*	60	*	60

60	*	60	+	60

now	+	24	*	60	*	60

now	-	24	*	60	*	60

now	+	60	*	60

now	+	60	*	60	+	60

now	+	24	*	60	*	60	+	5	*	60	*	60	+	16	*	60

now	+	24	*	60	*	60	+	5	*	60	*	60	+	16	*	60

now	+	6	*	24	*	60	*	60

now	+	24	*	60	*	60

now	+	8	*	24	*	60	*	60

now	-	6	*	24	*	60	*	60

r	==	6	||	r	==	26	||	r	==	43

!	assert	(	r	==	0	)

*	size_ptr	==	-	1	&&	PyErr_Occurred	(	)

2	+	(	MIN_EXPANSION	*	4	)	+	input_chars

2	+	(	input_chars	*	MAX_EXPANSION	)

output_size	-	chars	<	(	1	+	MAX_EXPANSION	)

2	+	(	MIN_EXPANSION	*	4	)	+	input_chars

output_size	-	chars	<	(	1	+	MIN_EXPANSION	)

output_size	>	2	+	(	input_chars	*	MIN_EXPANSION	)

2	+	(	input_chars	*	MIN_EXPANSION	)

end	<	0	||	len	<=	end

end	<	0	||	len	<=	end

idx	+	3	<	length

idx	+	3	<	length

idx	+	4	<	length

idx	+	2	<	length

idx	+	7	<	length

idx	+	8	<	length

(	data	->	n_lines	-	1	)	/	data	->	lines_per_page	+	1
data	->	n_lines	-	1	/	data	->	lines_per_page	+	1
data	->	elements	==	-	1

(	temp	.	depth	+	1	)	>	retloop	.	depth

index	<	G_N_ELEMENTS	(	methods	)	&&	index	>=	0

index	<	G_N_ELEMENTS	(	methods	)	&&	index	>=	0

desktop_file	->	icon	&&	!	g_path_is_absolute	(	desktop_file	->	icon	)

xsmp	->	state	!=	XSMP_STATE_IDLE	||	xsmp	->	expecting_initial_save_yourself

xsmp	->	state	!=	XSMP_STATE_IDLE	&&	xsmp	->	state	!=	XSMP_STATE_SHUTDOWN_CANCELLED

save_type	==	SmSaveLocal	&&	interact_style	==	SmInteractStyleNone	&&	!	shutdown	&&	!	fast

fd	==	-	1

job	->	rectangle	&&	(	job	->	rectangle	->	width	==	0	||	job	->	rectangle	->	height	==	0	)
job	->	rectangle	&&	job	->	rectangle	->	width	==	0	||	job	->	rectangle	->	height	==	0
(	1	/	(	2	*	M_PI	*	r	)	)	*	exp	(	(	-	(	x	*	x	+	y	*	y	)	)	/	(	2	*	r	*	r	)	)
(	1	/	(	2	*	M_PI	*	r	)	)	*	exp	(	(	-	x	*	x	+	y	*	y	)	/	(	2	*	r	*	r	)	)
radius	*	2	+	1

y	*	filter	->	size	+	x

x	-	(	filter	->	size	>>	1	)
x	-	filter	->	size	>>	1
y	-	(	filter	->	size	>>	1	)
y	-	filter	->	size	>>	1
y	*	filter	->	size	+	x

radius	*	2	+	1

iter	<	filter	->	data	+	(	filter	->	size	*	filter	->	size	)

src_width	+	2	*	radius	+	offset

src_height	+	2	*	radius	+	offset

-	(	radius	+	offset	)	+	y	-	(	filter	->	size	>>	1	)	+	i
-	radius	+	offset	+	y	-	(	filter	->	size	>>	1	)	+	i
-	(	radius	+	offset	)	+	x	-	(	filter	->	size	>>	1	)	+	j
-	(	radius	+	offset	)	+	x	-	filter	->	size	>>	1	+	j
src_y	<	0	||	src_y	>=	src_height	||	src_x	<	0	||	src_x	>=	src_width

job	->	total_bytes	==	-	1

line_cur	<	line_end	+	1

(	*	width	==	0	)	^	(	*	height	==	0	)

i	==	n	-	1

(	(	float	)	i	+	(	float	)	rangemax	)	/	2.
(	float	)	i	+	(	float	)	rangemax	/	2.
(	(	float	)	rangemin	+	(	float	)	i	)	/	2.
(	float	)	rangemin	+	(	float	)	i	/	2.
sizeof	(	char	)	*	(	strlen	(	line	)	+	1	)
sizeof	(	char	)	*	strlen	(	line	)	+	1
sizeof	(	char	)	*	(	wsize	+	1	)
sizeof	(	char	)	*	wsize	+	1
sizeof	(	char	)	*	(	wsize	+	1	)
sizeof	(	char	)	*	wsize	+	1
x	!=	-	1

i	==	(	n	-	1	)

major	<	1	||	(	major	==	1	&&	minor	==	0	)

(	major	==	1	&&	1	<	minor	)	||	1	<	major

status_code	<	100	||	600	<=	status_code

tl	==	-	1

tl	==	-	1

tb	==	-	1

tb	==	-	1

items	<	n	||	m	<	items

75	<	x	+	(	spc	-	s	)

i	<	3	*	numatoms

i	<	3	*	numatoms

!	inFileBool	||	!	outFileBool

(	sh	->	x_size	!=	0	)	||	(	sh	->	v_size	!=	0	)	||	(	sh	->	f_size	!=	0	)

(	sh	->	x_size	!=	0	)	||	(	sh	->	v_size	!=	0	)	||	(	sh	->	f_size	!=	0	)

(	sh	->	x_size	!=	0	)	||	(	sh	->	v_size	!=	0	)	||	(	sh	->	f_size	!=	0	)

(	sh	->	x_size	!=	0	)	||	(	sh	->	v_size	!=	0	)	||	(	sh	->	f_size	!=	0	)

step2	-	step1	!=	k

fabs	(	time2	-	time1	-	k	)	>	toler

fabs	(	prec2	-	prec1	)	>	toler

step2	-	step1	!=	k

fabs	(	time2	-	time1	-	k	)	>	toler

fabs	(	lambda2	-	lambda2	)	>	toler

3	*	i	+	j

3	*	i	+	j

3	*	i	+	j

3	*	i	+	j

3	*	i	+	j

3	*	i	+	j

3	*	i	+	j

3	*	i	+	j

i	<	ndata	&&	xdr_int	(	(	XDR	*	)	(	xfp	->	xdr	)	,	ptr	+	i	)

i	<	ndata	&&	xdr_int	(	(	XDR	*	)	(	xfp	->	xdr	)	,	ptr	+	i	)

i	<	ndata	&&	xdr_u_int	(	(	XDR	*	)	(	xfp	->	xdr	)	,	ptr	+	i	)

i	<	ndata	&&	xdr_u_int	(	(	XDR	*	)	(	xfp	->	xdr	)	,	ptr	+	i	)

i	<	ndata	&&	xdr_char	(	(	XDR	*	)	(	xfp	->	xdr	)	,	ptr	+	i	)

i	<	ndata	&&	xdr_char	(	(	XDR	*	)	(	xfp	->	xdr	)	,	ptr	+	i	)

i	<	ndata	&&	xdr_u_char	(	(	XDR	*	)	(	xfp	->	xdr	)	,	ptr	+	i	)

i	<	ndata	&&	xdr_u_char	(	(	XDR	*	)	(	xfp	->	xdr	)	,	ptr	+	i	)

i	<	ndata	&&	xdr_short	(	(	XDR	*	)	(	xfp	->	xdr	)	,	ptr	+	i	)

i	<	ndata	&&	xdr_short	(	(	XDR	*	)	(	xfp	->	xdr	)	,	ptr	+	i	)

i	<	ndata	&&	xdr_u_short	(	(	XDR	*	)	(	xfp	->	xdr	)	,	ptr	+	i	)

i	<	ndata	&&	xdr_u_short	(	(	XDR	*	)	(	xfp	->	xdr	)	,	ptr	+	i	)

i	<	ndata	&&	xdr_float	(	(	XDR	*	)	(	xfp	->	xdr	)	,	ptr	+	i	)

i	<	ndata	&&	xdr_float	(	(	XDR	*	)	(	xfp	->	xdr	)	,	ptr	+	i	)

i	<	ndata	&&	xdr_double	(	(	XDR	*	)	(	xfp	->	xdr	)	,	ptr	+	i	)

i	<	ndata	&&	xdr_double	(	(	XDR	*	)	(	xfp	->	xdr	)	,	ptr	+	i	)

size	>=	num	&&	num_of_bits	<	32

num_of_bits	+	num_of_bytes	*	8

(	(	unsigned	char	*	)	buf	)	+	3	*	sizeof	(	*	buf	)

num	>>	(	num_of_bits	-	8	)

(	lastbyte	<<	num_of_bits	)	|	num

lastbyte	<<	(	8	-	lastbits	)

num_of_bits	>=	num_of_bytes	*	8

num_of_bits	-	num_of_bytes	*	8

i	<	num_of_bytes	-	1

num_of_bits	-	(	num_of_bytes	-	1	)	*	8
num_of_bits	-	num_of_bytes	-	1	*	8
(	1	<<	num_of_bits	)	-	1
1	<<	num_of_bits	-	1
(	(	unsigned	char	*	)	buf	)	+	3	*	sizeof	(	*	buf	)

(	lastbyte	>>	lastbits	)	<<	(	num_of_bits	-	8	)

(	lastbyte	>>	lastbits	)	&	(	(	1	<<	num_of_bits	)	-	1	)
(	lastbyte	>>	lastbits	)	&	(	1	<<	num_of_bits	-	1	)
(	int	*	)	(	lip	)	+	i	*	3

lfp	<	ptr	+	size3

*	lfp	*	precision	+	0.5

*	lfp	*	precision	-	0.5

*	lfp	*	precision	+	0.5

*	lfp	*	precision	-	0.5

*	lfp	*	precision	+	0.5

*	lfp	*	precision	-	0.5

diff	<	mindiff	&&	lfp	>	ptr	+	3

(	int	*	)	(	luip	)	+	i	*	3

smallidx	<	maxidx	&&	i	>=	1

i	+	1	<	size

is_small	==	0	&&	is_smaller	==	-	1

is_small	&&	run	<	8	*	3

is_smaller	==	-	1	&&	tmpsum	>=	smaller	*	smaller

run	!=	prevrun	||	is_smaller	!=	0

i	<	9	*	3

(	int	*	)	(	lip	)	+	i	*	3

i	<	9	*	3

lfp	<	ptr	+	size3

(	float	)	*	lfp	*	float_prec	+	0.5

(	float	)	*	lfp	*	float_prec	-	0.5

(	float	)	*	lfp	*	float_prec	+	0.5

(	float	)	*	lfp	*	float_prec	-	0.5

(	float	)	*	lfp	*	float_prec	+	0.5

(	float	)	*	lfp	*	float_prec	-	0.5

diff	<	mindiff	&&	lfp	>	ptr	+	3

(	int	*	)	(	luip	)	+	i	*	3

smallidx	<	maxidx	&&	i	>=	1

i	+	1	<	size

is_small	==	0	&&	is_smaller	==	-	1

is_small	&&	run	<	8	*	3

is_smaller	==	-	1	&&	tmpsum	>=	smaller	*	smaller

run	!=	prevrun	||	is_smaller	!=	0

--	p	>=	src

*	(	(	char	*	)	&	s	)	==	(	char	)	0x34

*	(	(	char	*	)	&	s	)	==	(	char	)	0x34

ix	==	0xdd	||	ix	==	0x3f

ix	==	0xb8	||	ix	==	0x3c

2	*	sizeof	(	int32_t	)	==	sizeof	(	double	)

lp	+	!	LSW

2	*	sizeof	(	int	)	==	sizeof	(	double	)

2	*	sizeof	(	int32_t	)	==	sizeof	(	double	)

lp	+	!	LSW

2	*	sizeof	(	int	)	==	sizeof	(	double	)

tmp	+	!	LSW

fread	(	(	char	*	)	&	mycopy	,	4	,	1	,	(	FILE	*	)	xdrs	->	x_private	)	!=	1

(	len	!=	0	)	&&	(	fread	(	addr	,	(	int	)	len	,	1	,	(	FILE	*	)	xdrs	->	x_private	)	!=	1	)

(	len	!=	0	)	&&	(	fwrite	(	addr	,	(	int	)	len	,	1	,	(	FILE	*	)	xdrs	->	x_private	)	!=	1	)

a1	*	a3	-	4.0	*	a0

4.0	*	a0	*	a2	-	a1	*	a1	-	a0	*	a3	*	a3

0.25	*	a3	*	a3	+	u1	-	a2

0.75	*	a3	*	a3	-	R2	-	2.0	*	a2

0.25	*	(	4.0	*	a3	*	a2	-	8.0	*	a1	-	a3	*	a3	*	a3	)	/	R
0.25	*	4.0	*	a3	*	a2	-	8.0	*	a1	-	a3	*	a3	*	a3	/	R
0.75	*	a3	*	a3	-	2.0	*	a2

2.0	*	sqrt	(	u1	*	u1	-	4.0	*	a0	)

a1	/	3.0	-	a2	*	a2	/	9.0

(	a1	*	a2	-	3.0	*	a0	)	/	6.0	-	a2	*	a2	*	a2	/	27.0
a1	*	a2	-	3.0	*	a0	/	6.0	-	a2	*	a2	*	a2	/	27.0
q	*	q	*	q	+	r	*	r

-	pow	(	-	s1	,	1.	/	3.	)

-	pow	(	-	s2	,	1.	/	3.	)

(	s1	+	s2	)	-	a2	/	3.0

-	0.5	*	(	s1	+	s2	)	-	a2	/	3.0
-	0.5	*	s1	+	s2	-	a2	/	3.0
acos	(	r	/	sqrt	(	-	q	*	q	*	q	)	)	/	3.0

2.0	*	sq	*	costh	-	a2	/	3.0

-	sq	*	costh	-	a2	/	3.0	-	sqrt	(	3.	)	*	sq	*	sinth

-	sq	*	costh	-	a2	/	3.0	+	sqrt	(	3.	)	*	sq	*	sinth

-	pow	(	-	r	,	1.	/	3.	)

2.0	*	s	-	a2	/	3.0

-	s	-	a2	/	3.0

(	lambda2	+	C_2	)	*	lambda_old
lambda2	+	C_2	*	lambda_old
lambda_old	-	(	a	*	lambda_old	+	C_0	)	/	(	2.0f	*	lambda2	*	lambda_old	+	b	+	a	)
lambda_old	-	a	*	lambda_old	+	C_0	/	2.0f	*	lambda2	*	lambda_old	+	b	+	a
fabsf	(	lambda	-	lambda_old	)	<	fabsf	(	tolerance	*	lambda	)

fabsf	(	lambda	-	lambda_old	)	>=	fabsf	(	100	*	tolerance	*	lambda	)

0	+	0	*	m

1	+	1	*	m

2	+	2	*	m

1	+	2	*	m

2	+	1	*	m

2	+	0	*	m

0	+	2	*	m

0	+	1	*	m

1	+	0	*	m

0	+	0	*	m

1	+	1	*	m

2	+	2	*	m

0	+	1	*	m

1	+	0	*	m

2	+	0	*	m

0	+	2	*	m

0	+	0	*	m

1	+	1	*	m

2	+	2	*	m

1	+	2	*	m

2	+	1	*	m

0	+	0	*	m

1	+	1	*	m

2	+	2	*	m

(	G_x	+	G_y	)	/	2.0f
G_x	+	G_y	/	2.0f
i	<	m	*	m

k01	*	k01	*	k23	*	k23	-	k22	*	k33	*	k01	*	k01	+	2	*	k33	*	k01	*	k02	*	k12	-	2	*	k01	*	k02	*	k13	*	k23	-	2	*	k01	*	k03	*	k12	*	k23	+	2	*	k22	*	k01	*	k03	*	k13	+	k02	*	k02	*	k13	*	k13	-	k11	*	k33	*	k02	*	k02	-	2	*	k02	*	k03	*	k12	*	k13	+	2	*	k11	*	k02	*	k03	*	k23	+	k03	*	k03	*	k12	*	k12	-	k11	*	k22	*	k03	*	k03	-	k00	*	k33	*	k12	*	k12	+	2	*	k00	*	k12	*	k13	*	k23	-	k00	*	k22	*	k13	*	k13	-	k00	*	k11	*	k23	*	k23	+	k00	*	k11	*	k22	*	k33

(	G_x	+	G_y	-	2.0f	*	lambda	)	/	numAtoms
G_x	+	G_y	-	2.0f	*	lambda	/	numAtoms
aT	+	2	*	rowstride

bT	+	2	*	rowstride

*	(	(	int	*	)	(	hdrbuf	+	76	)	)	!=	0

(	*	N	)	*	4	-	(	*	NAMNF	)

(	(	*	N	)	-	(	*	NAMNF	)	)	*	4
(	*	N	)	-	(	*	NAMNF	)	*	4
(	(	*	N	)	-	(	*	NAMNF	)	)	*	4
(	*	N	)	-	(	*	NAMNF	)	*	4
(	num_fixed	==	0	)	||	first

fixedcoords	+	2	*	N

4	*	rec_scale	+	48	+	4	*	rec_scale

3	*	(	2	*	rec_scale	+	natoms	-	nfixed	)	*	4
3	*	2	*	rec_scale	+	natoms	-	nfixed	*	4
(	2	*	rec_scale	+	natoms	-	nfixed	)	*	4
2	*	rec_scale	+	natoms	-	nfixed	*	4
(	(	float	)	accel	->	x	-	(	float	)	ac	->	cal_zero	.	x	)	/	xg
(	float	)	accel	->	x	-	(	float	)	ac	->	cal_zero	.	x	/	xg
(	(	float	)	accel	->	y	-	(	float	)	ac	->	cal_zero	.	y	)	/	yg
(	float	)	accel	->	y	-	(	float	)	ac	->	cal_zero	.	y	/	yg
(	(	float	)	accel	->	z	-	(	float	)	ac	->	cal_zero	.	z	)	/	zg
(	float	)	accel	->	z	-	(	float	)	ac	->	cal_zero	.	z	/	zg
x	<	-	1.0f

y	<	-	1.0f

z	<	-	1.0f

abs	(	accel	->	x	-	ac	->	cal_zero	.	x	)	<=	ac	->	cal_g	.	x

abs	(	accel	->	y	-	ac	->	cal_zero	.	y	)	<=	ac	->	cal_g	.	y

(	(	float	)	accel	->	x	-	(	float	)	ac	->	cal_zero	.	x	)	/	xg
(	float	)	accel	->	x	-	(	float	)	ac	->	cal_zero	.	x	/	xg
(	(	float	)	accel	->	y	-	(	float	)	ac	->	cal_zero	.	y	)	/	yg
(	float	)	accel	->	y	-	(	float	)	ac	->	cal_zero	.	y	/	yg
(	(	float	)	accel	->	z	-	(	float	)	ac	->	cal_zero	.	z	)	/	zg
(	float	)	accel	->	z	-	(	float	)	ac	->	cal_zero	.	z	/	zg
(	inval	-	centerval	)	/	(	centerval	-	minval	+	1	)
(	inval	-	centerval	)	/	centerval	-	minval	+	1
(	inval	-	centerval	)	/	(	maxval	-	centerval	+	1	)
inval	-	centerval	/	maxval	-	centerval	+	1
(	rx	*	rx	)	+	(	ry	*	ry	)

(	(	ac	->	st_roll	<	0	)	&&	(	orient	->	roll	>	0	)	)	||	(	(	ac	->	st_roll	>	0	)	&&	(	orient	->	roll	<	0	)	)

ac	->	st_roll	+	(	ac	->	st_alpha	*	(	orient	->	a_roll	-	ac	->	st_roll	)	)
ac	->	st_roll	+	(	ac	->	st_alpha	*	orient	->	a_roll	-	ac	->	st_roll	)
(	(	ac	->	st_pitch	<	0	)	&&	(	orient	->	pitch	>	0	)	)	||	(	(	ac	->	st_pitch	>	0	)	&&	(	orient	->	pitch	<	0	)	)

ac	->	st_pitch	+	(	ac	->	st_alpha	*	(	orient	->	a_pitch	-	ac	->	st_pitch	)	)
ac	->	st_pitch	+	(	ac	->	st_alpha	*	orient	->	a_pitch	-	ac	->	st_pitch	)
(	gh3	->	btns	|	gh3	->	btns_held	)	&	~	now
gh3	->	btns	|	gh3	->	btns_held	&	~	now
mp	->	ext	==	0	||	isMPFrame

(	mp	->	raw_gyro	.	roll	>	5000	)	&&	(	mp	->	raw_gyro	.	pitch	>	5000	)	&&	(	mp	->	raw_gyro	.	yaw	>	5000	)	&&	(	mp	->	raw_gyro	.	roll	<	0x3fff	)	&&	(	mp	->	raw_gyro	.	pitch	<	0x3fff	)	&&	(	mp	->	raw_gyro	.	yaw	<	0x3fff	)	&&	!	(	mp	->	cal_gyro	.	roll	)	&&	!	(	mp	->	cal_gyro	.	pitch	)	&&	!	(	mp	->	cal_gyro	.	yaw	)

!	wm	||	!	WIIMOTE_IS_CONNECTED	(	wm	)

!	wm	||	!	WIIMOTE_IS_CONNECTED	(	wm	)

!	wm	||	!	WIIMOTE_IS_CONNECTED	(	wm	)

!	wm	||	!	WIIMOTE_IS_CONNECTED	(	wm	)

!	wm	||	!	WIIMOTE_IS_CONNECTED	(	wm	)

!	wm	||	!	WIIMOTE_IS_CONNECTED	(	wm	)

!	wm	||	!	WIIMOTE_IS_CONNECTED	(	wm	)

!	wm	||	!	WIIMOTE_IS_CONNECTED	(	wm	)

!	wm	||	!	WIIMOTE_IS_CONNECTED	(	wm	)

!	req	->	data	||	!	req	->	len

xd	*	xd	+	yd	*	yd

(	(	1024	-	xs	)	/	2	)	+	offset_x
(	1024	-	xs	/	2	)	+	offset_x
(	(	768	-	ys	)	/	2	)	+	offset_y
(	768	-	ys	/	2	)	+	offset_y
(	*	x	>=	x0	)	&&	(	*	x	<=	(	x0	+	xs	)	)	&&	(	*	y	>=	y0	)	&&	(	*	y	<=	(	y0	+	ys	)	)

(	1024	-	xs	)	/	2
1024	-	xs	/	2
(	768	-	ys	)	/	2
768	-	ys	/	2
(	cc	->	btns	|	cc	->	btns_held	)	&	~	now
cc	->	btns	|	cc	->	btns_held	&	~	now
(	wm	->	btns	|	wm	->	btns_held	)	&	~	now
wm	->	btns	|	wm	->	btns_held	&	~	now
(	(	wb	->	tr	+	wb	->	br	)	/	total	)	*	2	-	1
(	wb	->	tr	+	wb	->	br	/	total	)	*	2	-	1
(	(	wb	->	tl	+	wb	->	tr	)	/	total	)	*	2	-	1
(	wb	->	tl	+	wb	->	tr	/	total	)	*	2	-	1
!	(	i	%	16	)
!	i	%	16
(	now	.	tv_sec	-	last_render	.	tv_sec	)	*	1000000
now	.	tv_sec	-	last_render	.	tv_sec	*	1000000
tmp	!=	2	&&	tmp	!=	3

i	<	1	||	i	>	num_messages

tmp	!=	2	&&	tmp	!=	3

i	<	1	||	i	>	num_messages

tmp	!=	2	&&	tmp	!=	3

note	<	1	||	note	>	msg_num

note	<	1	||	note	>	msg_num

ind	<	msg_num	-	1

note	<	1	||	note	>	msg_num

local_weight	+	w	>	MAX_WEIGTH

this_player	(	)	&&	this_player	(	)	->	query_level	(	)	<	20

--	j	>=	0

--	j	>=	0

4	*	strength	+	(	strength	*	strength	)	/	10

1	+	dir_cnt	/	2

1	+	dir_cnt	/	2

1	+	dir_cnt	/	2

1	+	dir_cnt	/	2

num	<	1	||	num	>	dir_cnt	/	2	+	1

num	<	1	||	num	>	dir_cnt	/	2	+	1

i	/	2	+	1

this_player	(	)	&&	environment	(	this_object	(	)	)	==	this_player	(	)	&&	(	this_player	(	)	->	query_level	(	)	>	19	)

4	*	strength	+	(	strength	*	strength	)	/	10

this_player	(	)	&&	this_player	(	)	->	query_level	(	)	<	20

note	<	1	||	note	>	msg_num

note	<	1	||	note	>	msg_num

ind	<	msg_num	-	1

note	<	1	||	note	>	msg_num

note	<	1	||	note	>	msg_num

ind	<	msg_num	-	1

strength	>=	12	&&	level	<	10

strength	>=	8	&&	level	<	5

!	this_player	(	)	->	drink_alcohol	(	strength	)	&&	!	npc

!	refreshing	&&	this_player	(	)

!	needs_refresh	&&	!	refreshing

pos	<	1	||	pos	<=	history_offset

!	wrapped	&&	(	pos	-	1	)	>=	history_pos

pos	>	MAX_HISTORY	+	history_offset	-	1

w	+	local_weight	>	8

level	>=	20	&&	!	is_npc	&&	dam	>=	hit_point

dam	>	hit_point	+	1

!	is_npc	&&	!	query_ip_number	(	this_object	(	)	)

w	+	local_weight	>	Str	+	10	&&	level	<	20

i	-	(	i	/	43200	)	*	43200

i	-	(	i	/	1800	)	*	1800

i	-	(	i	/	30	)	*	30

!	this_player	(	)	||	this_player	(	)	->	query_level	(	)	<=	level	||	query_ip_number	(	this_player	(	)	)	==	0

level	<=	19	&&	!	is_npc

g	==	0	||	g	==	1	||	g	==	2

i	<	1	||	i	>	20

i	<	1	||	i	>	20

42	+	Int	*	8

i	<	1	||	i	>	20

42	+	Con	*	8

i	<	1	||	i	>	20

4	*	strength	+	(	strength	*	strength	)	/	10

intoxicated	&&	random	(	40	)	==	0

-	i	>	intoxicated	/	10

-	intoxicated	/	10

-	i	>	stuffed	/	10

-	stuffed	/	10

-	i	>	soaked	/	10

-	soaked	/	10

intoxicated	>	0	&&	headache

intoxicated	>	0	&&	headache

previous_object	(	)	&&	previous_object	(	)	!=	this_object	(	)

previous_object	(	)	&&	previous_object	(	)	!=	this_object	(	)

local_weight	+	w	>	max_weight

this_player	(	)	&&	!	this_player	(	)	->	query_npc	(	)

previous_object	(	)	&&	previous_object	(	)	!=	this_object	(	)

time	(	)	<	start_time	+	3600

(	i	+	10	)	*	4
i	+	10	*	4
seconds	<=	240	&&	!	transport_offer

seconds	*	3	/	4	-	10

i	==	-	1

set_light	(	-	1	)	==	0

this_player	(	)	&&	!	this_player	(	)	->	query_npc	(	)

n	<	1	||	n	>	5

!	(	cm	||	mm	||	rmm	)
!	cm	||	mm	||	rmm
n	*	fac	(	n	-	1	)

dest	==	1	||	level	==	1

dest	==	1	||	level	==	1

level	==	-	1

(	this_player	(	)	->	query_con	(	)	+	this_player	(	)	->	query_str	(	)	+	this_player	(	)	->	query_int	(	)	+	this_player	(	)	->	query_dex	(	)	)	/	4	>=	this_player	(	)	->	query_level	(	)	+	3
this_player	(	)	->	query_con	(	)	+	this_player	(	)	->	query_str	(	)	+	this_player	(	)	->	query_int	(	)	+	this_player	(	)	->	query_dex	(	)	/	4	>=	this_player	(	)	->	query_level	(	)	+	3
door_is_open	||	!	door_is_locked

align	<	-	1000

align	<	-	500

align	<	-	200

j	<	i	-	2

handicap	<	2	||	handicap	>	9

x	<	0	||	x	>	8	||	y	<	0	||	y	>	8

tmp	<	1000	&&	tmp	>	-	1000

tmp	<	1000	&&	tmp	>	-	1000

tmp	<	1000	&&	tmp	>	-	1000

tmp	<	1000	&&	tmp	>	-	1000

x	<	0	||	x	>	8	||	y	<	0	||	y	>	8

--	i	>=	0

--	i	>=	0

--	i	>=	0

--	i	>=	0

--	i	>=	0

--	i	>=	0

--	j	>=	0

--	i	>=	0

--	i	>=	0

--	i	>=	0

--	i	>=	0

--	i	>=	0

--	i	>=	0

--	i	>=	0

--	i	>=	0

--	i	>=	0

link	(	tmp_name	,	name	)	==	-	1

!	(	backslashes	&	1	)
!	backslashes	&	1
!	f	||	fstat	(	fileno	(	f	)	,	&	st	)	==	-	1

i	>	0	&&	(	i	==	2	||	ctx	->	restored_version	>=	CURRENT_VERSION	)
i	>	0	&&	i	==	2	||	ctx	->	restored_version	>=	CURRENT_VERSION
--	i	>=	0

--	num_values	>=	0

--	i	>=	0

call_list	&&	call_list	->	delta	<=	0

cop	->	delta	<	0	&&	call_list

ptable	->	hash_usage	+	(	hash	>>	2	&	~	1	)
ptable	->	hash_usage	+	hash	>>	2	&	~	1
(	old	->	key	^	old	->	key	>>	16	)	&	(	PTABLE_SIZE	-	1	)
old	->	key	^	old	->	key	>>	16	&	(	PTABLE_SIZE	-	1	)
st	->	sppos	!=	-	1

--	n	>=	0

++	i	==	l

--	i	>=	0

num_spaces	/	(	num_words	-	1	)
num_spaces	/	num_words	-	1
save	-	2	>	done

(	COL	->	info	&	INFO_A	)	==	INFO_A_JUSTIFY	&&	*	COL_D	&&	*	(	COL_D	+	1	)
COL	->	info	&	INFO_A	==	INFO_A_JUSTIFY	&&	*	COL_D	&&	*	COL_D	+	1
!	(	*	COL_D	)	||	!	(	*	(	++	COL_D	)	)

i	<	TAB	->	nocols	&&	TAB_D

(	tcst	->	info	&	(	INFO_COLS	|	INFO_TABLE	)	)	==	INFO_TABLE	&&	tcst	->	d	.	tab
(	tcst	->	info	&	INFO_COLS	|	INFO_TABLE	)	==	INFO_TABLE	&&	tcst	->	d	.	tab
(	err_num	&	ERR_ID_NUMBER	)	!=	ERR_NOMEM
err_num	&	ERR_ID_NUMBER	!=	ERR_NOMEM
EXTRACT_UCHAR	(	p	)	!=	0x100	-	10

-	i	/	900.0

--	j	>=	0

--	j	>=	0

i	>>	(	8	*	sizeof	i	-	4	)

sizeof	(	*	erq_args	)	*	(	num_args	+	3	)
sizeof	(	*	erq_args	)	*	num_args	+	3
chdir	(	pValue	)	==	-	1

fstat	(	fileno	(	f	)	,	&	st	)	==	-	1

fwrite	(	last_variable_block	,	last_changed_swapped_svalue	-	(	char	*	)	last_variable_block	,	1	,	swap_file	)	!=	1

result	|	-	0x80

result	|	-	0x80

--	len	>=	0

--	j	>=	0

--	j	>=	0

--	cnt	>=	0

--	cnt	>=	0

--	res	<=	0

--	num_arg	>=	0

--	cnt	>=	0

--	num_arg	>=	0

-	(	b	*	c	)
-	b	*	c
--	i	>=	0

*	end	||	i	<	0

defbuf_len	>	(	MAX_TOTAL_BUF	>>	1	)

yyin	.	fd	!=	-	1

yyin	.	fd	!=	-	1

(	x	&	~	TS_IAC	)	==	TS_SB
x	&	~	TS_IAC	==	TS_SB
gethostname	(	host_name	,	sizeof	host_name	)	==	-	1

gethostname	(	host_name	,	sizeof	host_name	)	==	-	1

++	i	<	0

++	i	<=	0

++	i	<=	0

!	hb_list	||	!	next_hb	||	!	next_hb	->	prev

i	>=	0	&&	this

!	(	flags	&	HASWIDTH	)
!	flags	&	HASWIDTH
op	==	ASTERIX	&&	(	flags	&	SIMPLE	)
op	==	ASTERIX	&&	(	flags	&	SIMPLE	)
op	==	CROSS	&&	(	flags	&	SIMPLE	)
op	==	CROSS	&&	(	flags	&	SIMPLE	)
(	offset	>>	8	)	&	0377

class	>	classend	+	1

flags	&	(	HASWIDTH	|	SPSTART	)
flags	&	HASWIDTH	|	SPSTART
len	>	1	&&	ISMULT	(	ender	)
len	>	1	&&	ISMULT	(	ender	)
!	(	flags	&	HASWIDTH	)
!	flags	&	HASWIDTH
!	(	flags	&	HASWIDTH	)
!	flags	&	HASWIDTH
--	n	>=	0

ep	<	(	sp	+	8	)

times	(	&	buffer	)	==	-	1

ixstat	(	path	,	&	stats	)	==	0	&&	S_ISDIR	(	stats	.	st_mode	)
(	path	,	&	stats	)	==	0	&&	S_ISDIR	(	stats	.	st_mode	ixstat	(	path	,	&	stats	)	==	0	&&	S_ISDIR	(	stats	.	st_mode	)
fromstat	.	st_dev	==	tostat	.	st_dev	&&	fromstat	.	st_ino	==	tostat	.	st_ino

fromstat	.	st_mode	&	(	S_IRWXU	|	S_IRWXG	|	S_IRWXO	)
fromstat	.	st_mode	&	S_IRWXU	|	S_IRWXG	|	S_IRWXO
ixstat	(	xde	.	d_name	,	&	st	)	==	-	1

from_stats	.	st_dev	==	to_stats	.	st_dev	&&	from_stats	.	st_ino	==	to_stats	.	st_ino

fstat	(	f	,	&	st	)	==	-	1

(	start	+	len	)	>	size

len	<	0	&&	len	!=	-	1

fstat	(	fileno	(	f	)	,	&	st	)	==	-	1

!	--	len

!	--	len

st	.	st_size	&&	len	>	0

fstat	(	f	,	&	st	)	==	-	1

strlen	(	what	)	+	strlen	(	error_file	)	>	sizeof	buff	-	100

strlen	(	what	)	+	strlen	(	error_file	)	>	sizeof	buff	-	100

--	i	>	0

ixstat	(	fname	,	&	c_st	)	==	-	1

--	j	>=	0

aap	->	port	>=	0	&&	aap	->	port	!=	port

!	(	(	1	<<	tm_p	->	tm_hour	)	&	aap	->	hour_mask	)
!	(	1	<<	tm_p	->	tm_hour	)	&	aap	->	hour_mask
!	(	(	1	<<	tm_p	->	tm_wday	)	&	aap	->	wday_mask	)
!	(	1	<<	tm_p	->	tm_wday	)	&	aap	->	wday_mask
(	2	<<	last_hour	)	-	(	1	<<	first_hour	)
2	<<	last_hour	-	1	<<	first_hour
-	(	1	<<	first_hour	)	+	(	2	<<	last_hour	)	-	1
-	1	<<	first_hour	+	2	<<	last_hour	-	1
!	*	str	&&	less_indent_flag

8	-	blanks	%	8

next	!=	last	&&	next	!=	&	P_LINE0

to	!=	0	&&	from	<=	P_LASTLN

*	str	&&	*	str	!=	NL

*	inptr	&&	*	inptr	!=	NL	&&	*	inptr	!=	SP	&&	*	inptr	!=	HT

2	*	num	-	cur	>	P_LASTLN	&&	num	<=	P_LASTLN

--	j	>=	0

--	j	>=	0

2	*	num	<=	cur

--	j	>=	0

--	j	>=	0

delim	==	NL	||	*	inptr	==	NL

*	inptr	!=	delim	&&	*	inptr	!=	NL

--	i	!=	0

first	<=	0	||	first	>	last	||	last	>	P_LASTLN

cp	>=	buf	+	MAXLINE	-	1

num	>=	P_LINE1	&&	num	<	P_LINE2

--	count1	>=	0

*	inptr	!=	delim	&&	*	inptr	!=	NL	&&	*	inptr	!=	EOS	&&	cp	<	str	+	MAXPAT	-	1

*	inptr	!=	SP	&&	*	inptr	!=	HT	&&	*	inptr	!=	NL

*	inptr	!=	SP	&&	*	inptr	!=	HT	&&	*	inptr	!=	NL

i	==	sizeof	word	-	2

(	P_FLAGS	&	t	->	t_and_mask	)	|	t	->	t_or_mask

tabsize	-	(	h	%	tabsize	)

!	(	pos	%	tabsize	)
!	pos	%	tabsize
!	space	&&	(	pos	%	tabsize	)	==	tabsize	-	1

(	indent_index	+	8	)	&	~	7

p	-	buffer	+	strlen	(	text	)	<	MAXLINE

(	indent_index	+	8	)	&	~	7

q	<	p	-	1

(	indent_index	+	8	)	&	~	7

(	index2	+	8	)	&	~	7

top	==	LOPERATOR	&&	token	==	RHOOK

(	token	==	LBRACKET	&&	(	*	sp	==	ROPERATOR	||	*	sp	==	ELSE	||	*	sp	==	DO	)	)	||	token	==	RBRACKET	||	(	token	==	IF	&&	*	sp	==	ELSE	)
(	token	==	LBRACKET	&&	*	sp	==	ROPERATOR	||	*	sp	==	ELSE	||	*	sp	==	DO	)	||	token	==	RBRACKET	||	(	token	==	IF	&&	*	sp	==	ELSE	)
token	==	RHOOK	||	token	==	ROPERATOR

token	==	TOKEN	&&	*	sp	==	LBRACKET

*	sp	==	ROPERATOR	||	*	sp	==	ELSE

*	inptr	!=	NL	||	P_NLINES	>	1

*	inptr	!=	NL	||	P_NLINES	>	1

*	inptr	!=	NL	||	deflt	(	P_CURLN	,	P_CURLN	+	1	)	<	0

~	(	NFLG_MASK	|	LFLG_MASK	)
~	NFLG_MASK	|	LFLG_MASK
nchng	==	1	&&	P_PFLG
nchng	==	1	&&	P_PFLG
doprnt	(	P_LINE1	-	21	,	P_LINE1	)	<	0

doprnt	(	P_LINE1	-	11	,	P_LINE1	+	10	)	<	0

doprnt	(	P_LINE1	,	P_LINE1	+	21	)	<	0

doprnt	(	P_LINE1	-	41	,	P_LINE1	)	<	0

doprnt	(	P_LINE1	-	21	,	P_LINE1	+	20	)	<	0

doprnt	(	P_LINE1	,	P_LINE1	+	41	)	<	0

(	char	*	)	digest	+	2	*	i

left	!=	str	||	right	!=	end

wrap	&&	indent	>	wrap

num	%	NSTRSEGS	==	0

j	+	indent	>	MAX_STRING_LENGTH

!	isspace	(	(	unsigned	char	)	*	str	)
isspace	(	(	unsigned	char	)	*	str	!	isspace	(	(	unsigned	char	)	*	str	)
!	isspace	(	(	unsigned	char	)	*	str	)
isspace	(	(	unsigned	char	)	*	str	!	isspace	(	(	unsigned	char	)	*	str	)
c	==	*	str	++

info	.	match_req	&&	info	.	no_match	&&	info	.	number_of_matches	>	0

what	<	0	||	what	>	2

what	<	0	||	what	>	2

!	size	--

rec	->	ref_count	++	<	0

rec	->	ref_count	++	<	0

--	cnt	>=	0

--	cnt	>=	0

--	cnt	>=	0

--	cnt	>=	0

--	cnt	>=	0

--	cnt	>=	0

--	cnt	>=	0

--	cnt	>=	0

--	cnt	>=	0

--	cnt	>=	0

num	--	,	from	++	,	to	--

num_arg	!=	1	&&	num_arg	!=	2

num_arg	!=	2	&&	num_arg	!=	3

num_arg	!=	2	&&	num_arg	!=	3

num_arg	!=	1	&&	num_arg	!=	2

(	j	+	1	)	*	sizeof	(	char	)
j	+	1	*	sizeof	(	char	)
(	i	+	2	)	>>	1

(	o	+	1	)	>>	1

--	current	.	values_left	<	0

opt_flags	&	VOID_ACCEPTED	&&	!	(	void_given	&	VOID_GIVEN	)
opt_flags	&	VOID_ACCEPTED	&&	!	void_given	&	VOID_GIVEN
!	(	void_given	&	VOID_GIVEN	)
!	void_given	&	VOID_GIVEN
!	(	void_given	&	VOID_GIVEN	)
!	void_given	&	VOID_GIVEN
--	lvalues	>=	0

--	i	>=	0

--	i	>=	0

++	current	.	break_stack	>	current	.	max_break_stack

opt_flags	&	(	NEGATE_ACCEPTED	|	VOID_GIVEN	)
opt_flags	&	NEGATE_ACCEPTED	|	VOID_GIVEN
--	i	>=	0

i	>	1	&&	current	.	code_left	<	i	+	4

--	i	>=	0

opt_flags	&	(	VOID_ACCEPTED	|	ZERO_ACCEPTED	)
opt_flags	&	VOID_ACCEPTED	|	ZERO_ACCEPTED
--	n	>=	0

negative	*	3	>	total	*	2

d	>	0x100	||	min	>	0x1000

!	terse	&&	d	!=	min

num	==	-	1	&&	errno	==	EINTR

num	>	0	&&	total	<	expected

num	==	-	1	&&	errno	==	EINTR

--	buflen	>=	0

--	buflen	>=	0

--	buflen	>=	0

strlen	(	erq_dir	)	+	strlen	(	p	)	+	2	>	sizeof	(	path	)

socketpair	(	AF_UNIX	,	SOCK_STREAM	,	0	,	sockets	+	2	)	<	0

!	(	!	child_slots	&&	next_child_index	>=	MAX_CHILDS	)
!	!	child_slots	&&	next_child_index	>=	MAX_CHILDS
pid	==	-	1

num	==	-	1	&&	errno	==	EINTR

!	hp	&&	h_errno	==	TRY_AGAIN

!	hp	&&	h_errno	==	TRY_AGAIN

pid2	>=	1	&&	pid2	!=	pid1

(	(	get_seed	(	)	-	ticket	.	s	.	seq	)	&	0x7fffffff	)	+	1
(	get_seed	(	)	-	ticket	.	s	.	seq	)	&	0x7fffffff	+	1
msglen	<	sizeof	ticket	+	1

num	==	-	1	&&	errno	==	EINTR

msglen	!=	sizeof	ticket	+	4	&&	msglen	!=	sizeof	ticket

i	+	1	>=	argc

num_ready	<	0	&&	errno	!=	EINTR

num_ready	>	0	&&	FD_ISSET	(	1	,	&	readfds	)
>	0	&&	FD_ISSET	(	1	,	&	readfds	num_ready	>	0	&&	FD_ISSET	(	1	,	&	readfds	)
i	+	1	>=	argc

l	<	0	||	l	==	len

tmp	||	(	listen	(	fd	,	5	)	<	0	)

--	buflen	>=	0

--	buflen	>=	0

--	buflen	>=	0

*	j	++	!=	*	tok	++	||	*	j	++	!=	*	tok	++

(	(	col	-	1	)	&	~	7	)	+	9
(	col	-	1	)	&	~	7	+	9
++	parser_state_tos	->	tos	>=	parser_state_tos	->	p_stack_size

(	(	target	-	1	)	&	~	7	)	+	9
(	target	-	1	)	&	~	7	+	9
f	->	size	*	10	+	*	s

p	->	p_type	==	PRO_BOOL	||	p	->	p_type	==	PRO_INT

*	p	->	p_name	==	*	arg	&&	eqin	(	p	->	p_name	,	arg	,	&	param_start	)

explicit	||	!	*	(	p	->	p_explicit	)

5	*	Int_1_Loc	-	Int_2_Loc

7	*	(	Int_2_Loc	-	Int_3_Loc	)	-	Int_1_Loc
7	*	Int_2_Loc	-	Int_3_Loc	-	Int_1_Loc
User_Time	<	(	2	*	100	)

flag	&	~	old_flag	&	1

old_flag	&	~	flag	&	1

flag	&	~	old_flag	&	2

old_flag	&	~	flag	&	2

5	*	Int_1_Loc	-	Int_2_Loc

7	*	(	Int_2_Loc	-	Int_3_Loc	)	-	Int_1_Loc
7	*	Int_2_Loc	-	Int_3_Loc	-	Int_1_Loc
User_Time	<	(	2	*	100	)

startx	+	starty	*	map_width

goalx	+	goaly	*	map_width

iheap	+	2	>=	sizeof	(	open	)

iheap	+	2	<	sizeof	(	open	)

(	iparent	+	1	)	<<	1

newx	+	newy	*	map_width

(	abs	(	currpos	%	map_width	)	+	abs	(	currpos	/	map_width	)	)	<<	2

(	abs	(	goalx	-	newx	)	+	abs	(	goaly	-	newy	)	)	<<	2

(	(	iheap	>>	1	)	-	1	)	&	-	2
(	iheap	>>	1	-	1	)	&	-	2
index	>	-	1

num	<	0	||	!	this_player	(	)

!	num	||	num	>	CAT_MAX_LINES

num	<	0	||	!	this_player	(	)

!	num	||	num	>	CAT_MAX_LINES

(	count	+	3	)	/	4
count	+	3	/	4
--	n	>	0

j	+	i	*	N

i	*	ldB	+	j

j	*	ldA	+	i

i	<	N	*	M

i	%	M	==	M	-	1

action	==	-	1

!	mutex	||	!	cv_GPUThreads	||	!	cv_JNI

i	*	2	+	1

i	*	2	+	1

index	>=	size	||	index	<	0

j	+	i	*	N

i	*	ldB	+	j

j	*	ldA	+	i

i	<	N	*	M

i	%	M	==	M	-	1

action	==	-	1

!	mutex	||	!	cv_GPUThreads	||	!	cv_JNI

i	*	2	+	1

i	*	2	+	1

index	>=	size	||	index	<	0

len	>	sizeof	(	output_buffer	)	-	1

(	void	*	)	ip_header	+	ip_header	->	ihl	*	sizeof	(	uint32_t	)

(	void	*	)	ip_header	+	ip_header	->	ihl	*	sizeof	(	uint32_t	)

packets_received	%	1000	==	0

dns_bytes_len	>	0	&&	mac_id	>=	0	&&	packet_id	>=	0

sig	==	SIGINT	||	sig	==	SIGTERM

alarm_count	%	ALARMS_PER_UPDATE	==	0

fseek	(	handle	,	0	,	SEEK_END	)	==	-	1

fseek	(	handle	,	0	,	SEEK_SET	)	==	-	1

*	len	+	1024	>	capacity

offset	+	rr_header_len	>	bytes	+	len

beginning	+	rr_header_len	==	offset

beginning	+	rr_header_len	==	offset

offset	>	bytes	+	len

dn_expand	(	bytes	,	bytes	+	len	,	record	->	rdata	,	cname	,	sizeof	(	cname	)	)	<	0

dns_header	->	qr	!=	1	||	dns_header	->	opcode	!=	QUERY	||	dns_header	->	rcode	!=	NOERROR

*	opt1	|	(	*	opt2	<<	1	)

floor	(	k	)	==	k	&&	k	>=	1

cfg	->	encode_sparse_ratio	>	0	&&	max	>	items	*	cfg	->	encode_sparse_ratio	&&	max	>	cfg	->	encode_sparse_safe

(	codepoint	>>	6	)	|	0xC0

(	codepoint	&	0x3F	)	|	0x80

(	codepoint	>>	12	)	|	0xE0

(	(	codepoint	>>	6	)	&	0x3F	)	|	0x80

(	codepoint	&	0x3F	)	|	0x80

(	codepoint	>>	18	)	|	0xF0

(	(	codepoint	>>	12	)	&	0x3F	)	|	0x80

(	(	codepoint	>>	6	)	&	0x3F	)	|	0x80

(	codepoint	&	0x3F	)	|	0x80

(	codepoint	&	0xF800	)	==	0xD800
codepoint	&	0xF800	==	0xD800
(	surrogate_low	&	0xFC00	)	!=	0xDC00
surrogate_low	&	0xFC00	!=	0xDC00
(	codepoint	&	0x3FF	)	<<	10
codepoint	&	0x3FF	<<	10
(	codepoint	|	surrogate_low	)	+	0x10000
codepoint	|	surrogate_low	+	0x10000
!	json	->	cfg	->	decode_refuse_badnum	&&	json_is_invalid_number	(	json	)

increment	==	0	||	increment	==	-	1

memcmp	(	prev	,	curr	,	sizeof	(	double	)	*	noiso	)	!=	0

(	-	0.5	)	*	tmp	*	tmp	/	sigma

i	<	noiso	-	1

i	<	noiso	-	1

(	j	+	1	)	%	noChains
j	+	1	%	noChains
j	==	noChains	-	1

noChains	*	(	noIterations	-	noBurnIn	)	/	noLag
noChains	*	noIterations	-	noBurnIn	/	noLag
overHang	<	1	||	overHang	>=	readLength	/	2

lagCounter	==	noLag	-	1

3	*	noIterations	-	2	*	noBurnIn

noChains	*	(	noIterations	-	noBurnIn	)	/	noLag
noChains	*	noIterations	-	noBurnIn	/	noLag
(	x	-	mu	)	/	sigma
x	-	mu	/	sigma
-	(	M_LN_SQRT_2PI	+	0.5	*	x	*	x	+	log	(	sigma	)	)
-	M_LN_SQRT_2PI	+	0.5	*	x	*	x	+	log	(	sigma	)
-	0.5	*	x	*	x

pl	+	2	*	d

pn	-	2	*	d

parent_a	==	-	1	&&	parent_b	!=	-	1

parent_a	!=	-	1	&&	parent_b	==	-	1

gparent_a	==	-	1	&&	gparent_b	!=	-	1

gparent_a	!=	-	1	&&	gparent_b	==	-	1

gparent_a	!=	-	1	&&	gparent_b	!=	-	1

p	!=	-	1

sizeof	(	buffer	)	/	sizeof	(	char	)	-	sizeof	(	char	)

normalMean	-	normalSd	*	numDevs

normalMean	+	normalSd	*	numDevs

i	<	nodes	+	1

i	<	nodes	+	1

i	<	nodes	+	1

16807	*	(	s	-	h	*	127773	)	-	h	*	2836
16807	*	s	-	h	*	127773	-	h	*	2836
i	<	10	*	31

(	1103515245	*	state	->	x	+	12345	)	&	0x7fffffffUL

kk	<	N	-	M

kk	<	N	-	1

(	k	<<	7	)	&	0x9d2c5680UL

(	k	<<	15	)	&	0xefc60000UL

x	/	++	i

-	negalphainv	*	n

n	>	1	&&	threshold	<	N

1.0	/	(	-	1.0	+	nreal	)
1.0	/	-	1.0	+	nreal
Nreal	*	(	-	Vprime	+	1.0	)
Nreal	*	-	Vprime	+	1.0
y1	*	(	-	X	/	Nreal	+	1.0	)	*	(	qu1real	/	(	negSreal	+	qu1real	)	)
y1	*	(	-	X	/	Nreal	+	1.0	)	*	(	qu1real	/	negSreal	+	qu1real	)
-	1	+	n	>	S

Nreal	/	(	-	X	+	Nreal	)	>=	y1	*	exp	(	log	(	y2	)	*	nmin1inv	)
Nreal	/	-	X	+	Nreal	>=	y1	*	exp	(	log	(	y2	)	*	nmin1inv	)
.180625	-	q	*	q

q	*	(	(	(	(	(	(	(	r	*	2509.0809287301226727	+	33430.575583588128105	)	*	r	+	67265.770927008700853	)	*	r	+	45921.953931549871457	)	*	r	+	13731.693765509461125	)	*	r	+	1971.5909503065514427	)	*	r	+	133.14166789178437745	)	*	r	+	3.387132872796366608	)	/	(	(	(	(	(	(	(	r	*	5226.495278852854561	+	28729.085735721942674	)	*	r	+	39307.89580009271061	)	*	r	+	21213.794301586595867	)	*	r	+	5394.1960214247511077	)	*	r	+	687.1870074920579083	)	*	r	+	42.313330701600911252	)	*	r	+	1.	)
q	*	(	(	r	*	2509.0809287301226727	+	33430.575583588128105	*	r	+	67265.770927008700853	)	*	r	+	45921.953931549871457	*	r	+	13731.693765509461125	*	r	+	1971.5909503065514427	*	r	+	133.14166789178437745	)	*	r	+	3.387132872796366608	/	r	*	5226.495278852854561	+	28729.085735721942674	*	r	+	39307.89580009271061	*	r	+	21213.794301586595867	*	r	+	5394.1960214247511077	*	r	+	687.1870074920579083	*	r	+	42.313330701600911252	*	r	+	1.
log_p	&&	(	(	lower_tail	&&	q	<=	0	)	||	(	!	lower_tail	&&	q	>	0	)	)
log_p	&&	(	lower_tail	&&	q	<=	0	)	||	(	!	lower_tail	&&	q	>	0	)
(	(	(	(	(	(	(	r	*	7.7454501427834140764e-4	+	.0227238449892691845833	)	*	r	+	.24178072517745061177	)	*	r	+	1.27045825245236838258	)	*	r	+	3.64784832476320460504	)	*	r	+	5.7694972214606914055	)	*	r	+	4.6303378461565452959	)	*	r	+	1.42343711074968357734	)	/	(	(	(	(	(	(	(	r	*	1.05075007164441684324e-9	+	5.475938084995344946e-4	)	*	r	+	.0151986665636164571966	)	*	r	+	.14810397642748007459	)	*	r	+	.68976733498510000455	)	*	r	+	1.6763848301838038494	)	*	r	+	2.05319162663775882187	)	*	r	+	1.	)
(	r	*	7.7454501427834140764e-4	+	.0227238449892691845833	)	*	r	+	.24178072517745061177	*	r	+	1.27045825245236838258	*	r	+	3.64784832476320460504	*	r	+	5.7694972214606914055	*	r	+	4.6303378461565452959	*	r	+	1.42343711074968357734	/	(	(	r	*	1.05075007164441684324e-9	+	5.475938084995344946e-4	*	r	+	.0151986665636164571966	)	*	r	+	.14810397642748007459	*	r	+	.68976733498510000455	*	r	+	1.6763848301838038494	*	r	+	2.05319162663775882187	*	r	+	1.	)
(	(	(	(	(	(	(	r	*	2.01033439929228813265e-7	+	2.71155556874348757815e-5	)	*	r	+	.0012426609473880784386	)	*	r	+	.026532189526576123093	)	*	r	+	.29656057182850489123	)	*	r	+	1.7848265399172913358	)	*	r	+	5.4637849111641143699	)	*	r	+	6.6579046435011037772	)	/	(	(	(	(	(	(	(	r	*	2.04426310338993978564e-15	+	1.4215117583164458887e-7	)	*	r	+	1.8463183175100546818e-5	)	*	r	+	7.868691311456132591e-4	)	*	r	+	.0148753612908506148525	)	*	r	+	.13692988092273580531	)	*	r	+	.59983220655588793769	)	*	r	+	1.	)
(	(	(	(	r	*	2.01033439929228813265e-7	+	2.71155556874348757815e-5	)	*	r	+	.0012426609473880784386	*	r	+	.026532189526576123093	)	*	r	+	.29656057182850489123	)	*	r	+	1.7848265399172913358	*	r	+	5.4637849111641143699	)	*	r	+	6.6579046435011037772	/	(	(	(	(	r	*	2.04426310338993978564e-15	+	1.4215117583164458887e-7	*	r	+	1.8463183175100546818e-5	)	*	r	+	7.868691311456132591e-4	)	*	r	+	.0148753612908506148525	)	*	r	+	.13692988092273580531	)	*	r	+	.59983220655588793769	*	r	+	1.
mu	+	sigma	*	val

!	isnan	(	x	)	&	(	x	!=	1	/	0.0	)	&	(	x	!=	-	1.0	/	0.0	)

!	(	big_mu	&&	mu	==	muprev	)
!	big_mu	&&	mu	==	muprev
d	*	u	>=	difmuk	*	difmuk	*	difmuk

new_big_mu	||	mu	!=	muprev2

t	>	-	0.6744

mu	+	s	*	t

del	*	(	1.	-	4.8	*	del	*	del	)
del	*	1.	-	4.8	*	del	*	del
fk	*	v	*	v	*	(	(	(	(	(	(	(	a7	*	v	+	a6	)	*	v	+	a5	)	*	v	+	a4	)	*	v	+	a3	)	*	v	+	a2	)	*	v	+	a1	)	*	v	+	a0	)	-	del
fk	*	v	*	v	*	a7	*	v	+	a6	*	v	+	a5	*	v	+	a4	*	v	+	a3	*	v	+	a2	*	v	+	a1	*	v	+	a0	-	del
fk	*	log	(	1.	+	v	)	-	difmuk	-	del

(	0.5	-	difmuk	)	/	s
0.5	-	difmuk	/	s
omega	*	(	(	(	c3	*	x	+	c2	)	*	x	+	c1	)	*	x	+	c0	)
omega	*	(	c3	*	x	+	c2	*	x	+	c1	*	x	+	c0	)
c	*	fabs	(	u	)	<=	py	*	exp	(	px	+	E	)	-	fy	*	exp	(	fx	+	E	)

fy	-	u	*	fy	<=	py	*	exp	(	px	-	fx	)

n	==	0	||	pp	==	0.

r	*	(	n	+	1	)
r	*	n	+	1
pp	!=	psave	||	n	!=	nsave

0.134	+	20.5	/	(	15.3	+	fm	)
0.134	+	20.5	/	15.3	+	fm
(	ffm	-	xl	)	/	(	ffm	-	xl	*	p	)
ffm	-	xl	/	ffm	-	xl	*	p
al	*	(	1.0	+	0.5	*	al	)
al	*	1.0	+	0.5	*	al
(	xr	-	ffm	)	/	(	xr	*	q	)
xr	-	ffm	/	(	xr	*	q	)
al	*	(	1.0	+	0.5	*	al	)
al	*	1.0	+	0.5	*	al
p1	*	(	1.0	+	c	+	c	)
p1	*	1.0	+	c	+	c
p2	+	c	/	xll

p3	+	c	/	xlr

xm	-	p1	*	v	+	u

xl	+	(	u	-	p1	)	/	c
xl	+	u	-	p1	/	c
v	*	c	+	1.0	-	fabs	(	xm	-	x	)	/	p1

v	>	1.0	||	v	<=	0.

xr	-	log	(	v	)	/	xlr

v	*	(	u	-	p3	)	*	xlr
v	*	u	-	p3	*	xlr
xl	+	log	(	v	)	/	xll

v	*	(	u	-	p2	)	*	xll
v	*	u	-	p2	*	xll
k	<=	20	||	k	>=	npq	/	2	-	1

g	/	i	-	r

g	/	i	-	r

(	k	/	npq	)	*	(	(	k	*	(	k	/	3.	+	0.625	)	+	0.1666666666666	)	/	npq	+	0.5	)
(	k	/	npq	)	*	(	k	*	(	k	/	3.	+	0.625	)	+	0.1666666666666	/	npq	+	0.5	)
-	k	*	k	/	(	2.0	*	npq	)

alv	<	ynorm	-	amaxp

alv	<=	ynorm	+	amaxp

alv	<=	xm	*	log	(	f1	/	x1	)	+	(	n	-	m	+	0.5	)	*	log	(	z	/	w	)	+	(	ix	-	m	)	*	log	(	w	*	p	/	(	x1	*	q	)	)	+	(	13860.0	-	(	462.0	-	(	132.0	-	(	99.0	-	140.0	/	f2	)	/	f2	)	/	f2	)	/	f2	)	/	f1	/	166320.0	+	(	13860.0	-	(	462.0	-	(	132.0	-	(	99.0	-	140.0	/	z2	)	/	z2	)	/	z2	)	/	z2	)	/	z	/	166320.0	+	(	13860.0	-	(	462.0	-	(	132.0	-	(	99.0	-	140.0	/	x2	)	/	x2	)	/	x2	)	/	x2	)	/	x1	/	166320.0	+	(	13860.0	-	(	462.0	-	(	132.0	-	(	99.0	-	140.0	/	w2	)	/	w2	)	/	w2	)	/	w2	)	/	w	/	166320.
alv	<=	xm	*	log	(	f1	/	x1	)	+	n	-	m	+	0.5	*	log	(	z	/	w	)	+	(	ix	-	m	)	*	log	(	w	*	p	/	(	x1	*	q	)	)	+	(	13860.0	-	462.0	-	132.0	-	99.0	-	140.0	/	f2	/	f2	/	f2	/	f2	)	/	f1	/	166320.0	+	13860.0	-	462.0	-	132.0	-	99.0	-	140.0	/	z2	/	z2	/	z2	/	z2	/	z	/	166320.0	+	13860.0	-	462.0	-	(	132.0	-	99.0	-	140.0	/	x2	/	x2	)	/	x2	/	x2	/	x1	/	166320.0	+	(	13860.0	-	(	462.0	-	132.0	-	99.0	-	140.0	/	w2	/	w2	/	w2	)	/	w2	)	/	w	/	166320.
g	/	ix	-	r

!	R_FINITE	(	a	)	||	!	R_FINITE	(	scale	)	||	a	<	0.0	||	scale	<=	0.0

1.0	+	exp_m1	*	a

-	log	(	(	e	-	p	)	/	a	)
-	log	(	e	-	p	/	a	)
d	*	u	<=	t	*	t	*	t

(	(	(	(	(	(	q7	*	r	+	q6	)	*	r	+	q5	)	*	r	+	q4	)	*	r	+	q3	)	*	r	+	q2	)	*	r	+	q1	)	*	r
(	q7	*	r	+	q6	*	r	+	q5	*	r	+	q4	*	r	+	q3	*	r	+	q2	*	r	+	q1	)	*	r
0.195	/	s	-	0.079	+	0.16	*	s

1.68	/	s	+	0.275

0.062	/	s	+	0.024

t	/	(	s	+	s	)
t	/	s	+	s
q0	+	0.5	*	t	*	t	*	(	(	(	(	(	(	a7	*	v	+	a6	)	*	v	+	a5	)	*	v	+	a4	)	*	v	+	a3	)	*	v	+	a2	)	*	v	+	a1	)	*	v
q0	+	0.5	*	t	*	t	*	(	(	(	(	a7	*	v	+	a6	)	*	v	+	a5	)	*	v	+	a4	*	v	+	a3	)	*	v	+	a2	)	*	v	+	a1	*	v
q0	-	s	*	t	+	0.25	*	t	*	t	+	(	s2	+	s2	)	*	log	(	1.0	+	v	)
q0	-	s	*	t	+	0.25	*	t	*	t	+	s2	+	s2	*	log	(	1.0	+	v	)
log	(	1.0	-	u	)	<=	q

b	-	si	*	e

b	+	si	*	e

t	>=	-	0.71874483771719

t	/	(	s	+	s	)
t	/	s	+	s
q0	+	0.5	*	t	*	t	*	(	(	(	(	(	(	a7	*	v	+	a6	)	*	v	+	a5	)	*	v	+	a4	)	*	v	+	a3	)	*	v	+	a2	)	*	v	+	a1	)	*	v
q0	+	0.5	*	t	*	t	*	a7	*	v	+	a6	*	v	+	a5	*	v	+	a4	*	v	+	a3	*	v	+	a2	*	v	+	a1	*	v
q0	-	s	*	t	+	0.25	*	t	*	t	+	(	s2	+	s2	)	*	log	(	1.0	+	v	)
q0	-	s	*	t	+	0.25	*	t	*	t	+	s2	+	s2	*	log	(	1.0	+	v	)
c	*	fabs	(	u	)	<=	w	*	exp	(	e	-	0.5	*	t	*	t	)

pos	+	1	<	pos2

memcmp	(	prev	,	curr	,	sizeof	(	double	)	*	noiso	)	!=	0

ass	!=	-	1

noChains	*	(	noIterations	-	noBurnIn	)	/	noLag
noChains	*	noIterations	-	noBurnIn	/	noLag
overHang	<	1	||	overHang	>=	readLength	/	2

lagCounter	==	noLag	-	1

3	*	noIterations	-	2	*	noBurnIn

noChains	*	(	noIterations	-	noBurnIn	)	/	noLag
noChains	*	noIterations	-	noBurnIn	/	noLag
memcmp	(	prev	,	curr	,	sizeof	(	double	)	*	noiso	)	!=	0

same	&&	j	<	noiso

sizeof	(	buf	)	/	sizeof	(	char	)	-	1

sizeof	(	buf	)	/	sizeof	(	char	)	-	1

p1	<	0	&&	p2	<	0

pos	<	pos2	&&	rl	>	0

pos	<	pos2	&&	rl	>	0

flp	<	0	||	flp	>	1

flp	<	0	||	flp	>	1

!	found	&&	m	<	mncol

s	==	se	||	*	s

(	i	*	(	se	-	s	)	<<	1	)	+	1
i	*	se	-	s	<<	1	+	1
!	(	*	s	&	0xf0	)
!	*	s	&	0xf0
ndigit	+	xsign	>	w	||	m	+	xsign	>	w

*	++	s	==	quote

lx	+	2	*	len

fedisableexcept	(	FE_ALL_EXCEPT	)	==	-	1

feenableexcept	(	FE_DIVBYZERO	|	FE_INVALID	|	FE_OVERFLOW	)	==	-	1

n	<	100	&&	n	>=	0

n	>=	(	int	)	MAXERR	||	n	<	-	1

10	*	e	+	ch

10	*	f__lcount	+	ch

10	*	f__lcount	+	ch

++	i	==	size

++	i	==	size

++	i	<	size

++	i	<	size

x	--	>	a

(	double	)	(	t	.	tms_utime	-	t0	.	tms_utime	)	/	Hz

(	double	)	(	t	.	tms_stime	-	t0	.	tms_stime	)	/	Hz

--	w	>=	0

--	delta	>=	0

--	delta	>=	0

--	d1	>	0

++	e1	<=	e

--	n	>	0

++	n	<	0

--	w	>=	0

--	w	>=	0

--	d1	>=	0

zr	*	sqrt	(	1	+	t	*	t	)

(	(	zr	*	zr	-	1.	)	+	zi	*	zi	)	/	(	s	+	1	)
(	zr	*	zr	-	1.	)	+	zi	*	zi	/	s	+	1
u	/	v	-	t	*	u	/	(	v	+	1	)
u	/	v	-	t	*	u	/	v	+	1
s	-	s0	>	1e-18	||	(	*	diff	)	(	&	s	,	&	s0	)	>	0.

a	<=	b	||	a	>=	bend

bp	<	blast	&&	*	s

w	<	0	||	w	>	2

(	real	+	imag	)	==	real

real	*	sqrt	(	1.0	+	temp	*	temp	)

w1	+	1	>>	1

s	-	(	w	<<	1	)
s	-	w	<<	1
!	--	w

!	--	w

dot	++	||	!	w

w	--	>	0

!	w	--

!	w	--

!	w	--

!	w	--

!	w	--

!	w	--

!	w	--

!	w	--

!	w	--

!	w	--

!	w	--

10	*	e	+	ch

*	s	==	quote	&&	*	(	s	+	1	)	!=	quote
*	s	==	quote	&&	*	s	+	1	!=	quote
*	++	s	!=	quote

10	*	m	+	c

f__parenlvl	++	==	1

--	f__parenlvl	==	0

(	(	x	<<	1	)	&	0x7fff	)	+	1
(	x	<<	1	)	&	0x7fff	+	1
ht	->	tab	+	x	%	ht	->	htsize

sizeof	(	hashtab	)	+	(	nht	-	1	)	*	sizeof	(	hashentry	*	)	+	nv	*	sizeof	(	hashentry	)
sizeof	(	hashtab	)	+	nht	-	1	*	sizeof	(	hashentry	*	)	+	nv	*	sizeof	(	hashentry	)
n	++	<	nd

iva	>=	ivae	||	iva	<	0

++	dn1	->	curval	<	dn1	->	extent

sizeof	(	char	)	*	strlen	(	str	)	+	1	+	2

*	(	new_str	+	(	i	++	)	)
*	new_str	+	(	i	++	)
*	(	new_str	+	(	i	++	)	)
*	new_str	+	(	i	++	)
(	p_data	->	extensions	&	ext	)	!=	0
p_data	->	extensions	&	ext	!=	0
cursor	->	label	&&	strcmp	(	label	,	cursor	->	label	)	==	0

sizeof	(	char	)	*	(	strlen	(	str	)	+	strlen	(	ret	)	)	+	1
sizeof	(	char	)	*	strlen	(	str	)	+	strlen	(	ret	)	+	1
*	(	p_data	->	current_elem	->	text	+	p_data	->	current_elem	->	text_offset	++	)
*	p_data	->	current_elem	->	text	+	p_data	->	current_elem	->	text_offset	++
G	->	buflen	-	G	->	pos	<	512

G	->	pos	>=	G	->	limit	&&	!	yyrefill	(	G	)

G	->	pos	>=	G	->	limit	&&	!	yyrefill	(	G	)

G	->	pos	>=	G	->	limit	&&	!	yyrefill	(	G	)

G	->	pos	>=	G	->	limit	&&	!	yyrefill	(	G	)

1	<<	(	c	&	7	)
1	<<	c	&	7
G	->	textlen	<	(	yyleng	+	1	)

(	key	>>	3	)	*	2654435761
key	>>	3	*	2654435761
(	curr	+	1	)	%	m	->	table_size
curr	+	1	%	m	->	table_size
(	curr	+	1	)	%	m	->	table_size
curr	+	1	%	m	->	table_size
(	curr	+	1	)	%	m	->	table_size
curr	+	1	%	m	->	table_size
milliseconds	%	1000	*	1000000

type	<	1000	||	type	>	2999

option	>=	0	&&	option	<	100

-	(	-	option	/	100	)
-	-	option	/	100
-	option	%	100

!	(	sockbase	->	flags	&	NN_SOCK_FLAG_CLOSING	)
!	sockbase	->	flags	&	NN_SOCK_FLAG_CLOSING
!	(	sockbase	->	flags	&	NN_SOCK_FLAG_IN	)
!	sockbase	->	flags	&	NN_SOCK_FLAG_IN
!	(	sockbase	->	flags	&	NN_SOCK_FLAG_OUT	)
!	sockbase	->	flags	&	NN_SOCK_FLAG_OUT
!	(	sockbase	->	flags	&	NN_SOCK_FLAG_CLOSING	)
!	sockbase	->	flags	&	NN_SOCK_FLAG_CLOSING
sockbase	->	domain	==	-	1	&&	sockbase	->	protocol	==	-	1

(	sockbase	->	protocol	&	0xfff0	)	!=	(	socktype	&	0xfff0	)
sockbase	->	protocol	&	0xfff0	!=	(	socktype	&	0xfff0	)
sockbase	->	flags	&	(	NN_SOCK_FLAG_ZOMBIE	|	NN_SOCK_FLAG_CLOSING	)
sockbase	->	flags	&	NN_SOCK_FLAG_ZOMBIE	|	NN_SOCK_FLAG_CLOSING
val	<	1	||	val	>	16

!	internal	&&	nn_slow	(	sockbase	->	flags	&	(	NN_SOCK_FLAG_ZOMBIE	|	NN_SOCK_FLAG_CLOSING	)	)
!	internal	&&	nn_slow	(	sockbase	->	flags	&	NN_SOCK_FLAG_ZOMBIE	|	NN_SOCK_FLAG_CLOSING	)
sockbase	->	flags	&	NN_SOCK_FLAG_CLOSING	&&	nn_list_empty	(	&	sockbase	->	eps	)

sockbase	->	flags	&	(	NN_SOCK_FLAG_ZOMBIE	|	NN_SOCK_FLAG_CLOSING	)
sockbase	->	flags	&	NN_SOCK_FLAG_ZOMBIE	|	NN_SOCK_FLAG_CLOSING
sockbase	->	flags	&	(	NN_SOCK_FLAG_ZOMBIE	|	NN_SOCK_FLAG_CLOSING	)
sockbase	->	flags	&	NN_SOCK_FLAG_ZOMBIE	|	NN_SOCK_FLAG_CLOSING
!	(	self	->	flags	&	NN_SOCK_FLAG_IN	)
!	self	->	flags	&	NN_SOCK_FLAG_IN
!	(	self	->	flags	&	NN_SOCK_FLAG_OUT	)
!	self	->	flags	&	NN_SOCK_FLAG_OUT
i	<	0	||	i	>=	SYM_VALUE_NAMES_LEN

s1	<	0	&&	s2	<	0

op1	/	16	!=	op2	/	16

s1rcv	!=	-	1	&&	s2snd	==	-	1

s1snd	!=	-	1	&&	s2rcv	==	-	1

s2rcv	!=	-	1	&&	s1snd	==	-	1

s2snd	!=	-	1	&&	s1rcv	==	-	1

s1rcv	!=	-	1	&&	s1snd	!=	-	1	&&	s2rcv	!=	-	1	&&	s2snd	!=	-	1

s1rcv	!=	-	1	&&	s1snd	==	-	1	&&	s2rcv	==	-	1	&&	s2snd	!=	-	1

s1rcv	==	-	1	&&	s1snd	!=	-	1	&&	s2rcv	!=	-	1	&&	s2snd	==	-	1

socktype	->	domain	==	domain	&&	socktype	->	protocol	==	protocol

!	iov	->	iov_base	&&	iov	->	iov_len

self	->	state	==	NN_REQ_STATE_UNSENT	||	self	->	state	==	NN_REQ_STATE_SENT

!	(	reqid	&	0x80000000	)
!	reqid	&	0x80000000
reqid	!=	(	req	->	reqid	|	0x80000000	)
reqid	!=	req	->	reqid	|	0x80000000
req	->	state	==	NN_REQ_STATE_UNSENT	||	req	->	state	==	NN_REQ_STATE_SENT

(	new_children	-	old_children	)	*	sizeof	(	struct	nn_trie_node	*	)
new_children	-	old_children	*	sizeof	(	struct	nn_trie_node	*	)
(	(	*	self	)	->	type	-	index	-	1	)	*	sizeof	(	struct	nn_trie_node	*	)
(	*	self	)	->	type	-	index	-	1	*	sizeof	(	struct	nn_trie_node	*	)
!	(	*	self	)	->	type	&&	!	nn_node_has_subscribers	(	*	self	)

(	(	*	self	)	->	u	.	dense	.	max	-	new_min	+	1	)	*	sizeof	(	struct	nn_trie_node	*	)
(	*	self	)	->	u	.	dense	.	max	-	new_min	+	1	*	sizeof	(	struct	nn_trie_node	*	)
milliseconds	%	1000	*	1000000

self	->	current	==	-	1

self	->	current	==	-	1

self	->	items	*	2	>	self	->	slots	&&	self	->	slots	<	0x80000000

!	self	->	first	||	self	->	first	==	it

(	(	val	)	>>	8	)	&	0xff

(	(	val	)	>>	24	)	&	0xff

(	(	val	)	>>	16	)	&	0xff

(	(	val	)	>>	8	)	&	0xff

(	val	>>	56	)	&	0xff

(	val	>>	48	)	&	0xff

(	val	>>	40	)	&	0xff

(	val	>>	32	)	&	0xff

(	val	>>	24	)	&	0xff

(	val	>>	16	)	&	0xff

(	val	>>	8	)	&	0xff

reply	&&	!	reply	->	ai_next

reconnect_ivl_max	>	0	&&	reconnect_ivl_max	>	reconnect_ivl

!	nn_inprocb_ispeer	(	inprocb	,	nn_inprocc_socktype	(	inprocc	)	)	||	!	nn_inprocc_ispeer	(	inprocc	,	nn_inprocb_socktype	(	inprocb	)	)

self	->	pipe	&&	self	->	pipe	==	pipe

milliseconds	%	1000	*	1000000

s	!=	-	1

s	!=	-	1

s	!=	-	1

s	!=	-	1

s	!=	-	1

s	!=	-	1

s	!=	-	1

s	!=	-	1

s	!=	-	1

s	!=	-	1

s	!=	-	1

s	!=	-	1

s	!=	-	1

s	!=	-	1

s	!=	-	1

s	!=	-	1

s	!=	-	1

sc	!=	-	1

sb	!=	-	1

sb	!=	-	1

sc	!=	-	1

!	self	->	first	||	self	->	first	==	it

self	->	items	*	2	>	self	->	slots	&&	self	->	slots	<	0x80000000

sink	!=	-	1

source1	!=	-	1

source2	!=	-	1

!	self	->	first	||	self	->	first	==	it

milliseconds	%	1000	*	1000000

sb	!=	-	1

sc	!=	-	1

milliseconds	%	1000	*	1000000

sc	!=	-	1

sc	!=	-	1

sb	!=	-	1

pair	!=	-	1

sink	!=	-	1

sink	!=	-	1

pair	!=	-	1

surveyor	!=	-	1

respondent1	!=	-	1

respondent2	!=	-	1

respondent3	!=	-	1

milliseconds	%	1000	*	1000000

s	!=	-	1

s	!=	-	1

milliseconds	%	1000	*	1000000

sc	!=	-	1

sc	!=	-	1

sb	!=	-	1

sb	!=	-	1

sc	!=	-	1

milliseconds	%	1000	*	1000000

rcvfd	+	1	>	maxfd

sndfd	+	1	>	maxfd

(	timeout	%	1000	)	*	1000

(	events	&	NN_IN	)	&&	FD_ISSET	(	rcvfd	,	&	pollset	)
events	&	NN_IN	)	&&	FD_ISSET	(	rcvfd	,	&	pollset	(	events	&	NN_IN	)	&&	FD_ISSET	(	rcvfd	,	&	pollset	)
(	events	&	NN_OUT	)	&&	FD_ISSET	(	sndfd	,	&	pollset	)
events	&	NN_OUT	)	&&	FD_ISSET	(	sndfd	,	&	pollset	(	events	&	NN_OUT	)	&&	FD_ISSET	(	sndfd	,	&	pollset	)
sb	!=	-	1

sc	!=	-	1

milliseconds	%	1000	*	1000000

milliseconds	%	1000	*	1000000

i	==	-	1

sb	!=	-	1

sc	!=	-	1

milliseconds	%	1000	*	1000000

push	!=	-	1

pull1	!=	-	1

pull2	!=	-	1

pull1	!=	-	1

pull2	!=	-	1

push	!=	-	1

milliseconds	%	1000	*	1000000

bus1	!=	-	1

bus2	!=	-	1

bus3	!=	-	1

rc	==	2	||	rc	==	3

rc	==	2	||	rc	==	3

rc	==	1	||	rc	==	3

rc	==	1	||	rc	==	3

rc	==	1	||	rc	==	2

rc	==	1	||	rc	==	2

(	new_children	-	old_children	)	*	sizeof	(	struct	nn_trie_node	*	)
new_children	-	old_children	*	sizeof	(	struct	nn_trie_node	*	)
(	(	*	self	)	->	type	-	index	-	1	)	*	sizeof	(	struct	nn_trie_node	*	)
(	*	self	)	->	type	-	index	-	1	*	sizeof	(	struct	nn_trie_node	*	)
!	(	*	self	)	->	type	&&	!	nn_node_has_subscribers	(	*	self	)

(	(	*	self	)	->	u	.	dense	.	max	-	new_min	+	1	)	*	sizeof	(	struct	nn_trie_node	*	)
(	*	self	)	->	u	.	dense	.	max	-	new_min	+	1	*	sizeof	(	struct	nn_trie_node	*	)
i	<	0	||	i	>=	SYM_VALUE_NAMES_LEN

milliseconds	%	1000	*	1000000

rep1	!=	-	1

req1	!=	-	1

req2	!=	-	1

req1	!=	-	1

rep1	!=	-	1

rep2	!=	-	1

rep1	!=	-	1

req1	!=	-	1

req1	!=	-	1

rep1	!=	-	1

sb	!=	-	1

sc	!=	-	1

milliseconds	%	1000	*	1000000

milliseconds	%	1000	*	1000000

pub	!=	-	1

sub1	!=	-	1

sub2	!=	-	1

(	x1	-	x0	)	/	(	bx1	-	bx0	)
x1	-	x0	/	(	bx1	-	bx0	)
(	y1	-	y0	)	/	(	by1	-	by0	)
y1	-	y0	/	by1	-	by0
(	edge	->	xb	-	(	*	st	)	->	xb	)	/	den
edge	->	xb	-	(	*	st	)	->	xb	/	den
(	*	st	)	->	xb	+	r	*	(	(	*	st	)	->	xt	-	(	*	st	)	->	xb	)
(	*	st	)	->	xb	+	r	*	(	*	st	)	->	xt	-	(	*	st	)	->	xb
tr	+	(	tl	<<	1	)	+	(	br	<<	2	)	+	(	bl	<<	3	)
tr	+	tl	<<	1	+	br	<<	2	+	(	bl	<<	3	)
edge	->	bot	.	x	+	edge	->	dx	*	(	yt	-	edge	->	bot	.	y	)
edge	->	bot	.	x	+	edge	->	dx	*	yt	-	edge	->	bot	.	y
tr	+	(	tl	<<	1	)	+	(	br	<<	2	)	+	(	bl	<<	3	)
tr	+	tl	<<	1	+	(	br	<<	2	)	+	bl	<<	3
(	edge	->	top	.	y	==	yt	)	&&	succ_edge

tr	+	(	tl	<<	1	)	+	(	br	<<	2	)	+	(	bl	<<	3	)
tr	+	tl	<<	1	+	br	<<	2	+	bl	<<	3
edge	->	bot	.	x	+	edge	->	dx	*	(	yt	-	edge	->	bot	.	y	)
edge	->	bot	.	x	+	edge	->	dx	*	yt	-	edge	->	bot	.	y
tr	+	(	tl	<<	1	)	+	(	br	<<	2	)	+	(	bl	<<	3	)
tr	+	tl	<<	1	+	br	<<	2	+	(	bl	<<	3	)
(	edge	->	top	.	y	==	yt	)	&&	succ_edge

(	x	!=	0.0	)	||	(	y	!=	0.0	)

(	xs	!=	1.0	)	||	(	ys	!=	1.0	)

(	i	>=	0	)	&&	(	i	<	self	->	gpc_p	->	num_contours	)

(	i	>=	0	)	&&	(	i	<	self	->	gpc_p	->	num_contours	)

(	i	>=	0	)	&&	(	i	<	self	->	gpc_p	->	num_contours	)

(	i	>=	0	)	&&	(	i	<	self	->	gpc_p	->	num_contours	)

(	i	>=	0	)	&&	(	i	<	self	->	gpc_p	->	num_contours	)

(	y1	-	y0	)	/	(	x1	-	x0	)
y1	-	y0	/	x1	-	x0
(	i	>=	0	)	&&	(	i	<	self	->	gpc_p	->	num_contours	)

(	i	>=	0	)	&&	(	i	<	self	->	gpc_p	->	num_contours	)

(	a	+	b	)	>	1.0

time	==	-	1

index	<	-	slen

(	0	==	width	)	||	(	80	<	width	)

0	!=	(	width	%	ncolumns	)

(	(	colx	+	coly	)	/	2	)	-	(	strlen	(	str	)	/	2	)
(	colx	+	coly	/	2	)	-	(	strlen	(	str	)	/	2	)
(	channel_count	<	1	)	||	(	channel_count	>	2	)

pcm_get_htimestamp	(	out	->	pcm	,	(	unsigned	int	*	)	&	kernel_frames	,	&	time_stamp	)	<	0

(	(	int64_t	)	(	kernel_frames	-	out	->	write_threshold	)	*	1000000	)	/	MM_FULL_POWER_SAMPLING_RATE

adev	->	input_requires_stereo	&&	(	in	->	config	.	channels	==	1	)

(	in	->	source	!=	val	)	&&	(	val	!=	0	)

(	in	->	device	!=	val	)	&&	(	val	!=	0	)

(	(	int64_t	)	(	in	->	frames_in	+	in	->	proc_frames_in	)	*	1000000000	)	/	in	->	config	.	rate

in	->	buffer	+	(	in	->	config	.	period_size	-	in	->	frames_in	)	*	in	->	config	.	channels
in	->	buffer	+	in	->	config	.	period_size	-	in	->	frames_in	*	in	->	config	.	channels
in	->	proc_buf	+	in	->	proc_frames_in	*	in	->	config	.	channels

!	adev	->	mixer_ctls	.	mm_dl1	||	!	adev	->	mixer_ctls	.	vx_dl1	||	!	adev	->	mixer_ctls	.	mm_dl2	||	!	adev	->	mixer_ctls	.	vx_dl2	||	!	adev	->	mixer_ctls	.	dl2_mono	||	!	adev	->	mixer_ctls	.	dl1_mono	||	!	adev	->	mixer_ctls	.	dl1_headset	||	!	adev	->	mixer_ctls	.	dl1_bt	||	!	adev	->	mixer_ctls	.	earpiece_enable	||	!	adev	->	mixer_ctls	.	left_capture	||	!	adev	->	mixer_ctls	.	right_capture	||	!	adev	->	mixer_ctls	.	amic_ul_volume	||	!	adev	->	mixer_ctls	.	sidetone_capture	||	!	adev	->	mixer_ctls	.	headset_volume	||	!	adev	->	mixer_ctls	.	speaker_volume	||	!	adev	->	mixer_ctls	.	dmic1_ul_volume	||	!	adev	->	mixer_ctls	.	dl1_eq	||	!	adev	->	mixer_ctls	.	voice_ul_volume

ret	&&	tries	<	5

index	==	-	1

c	==	EOF	&&	nch	==	0

sizeof	(	char	)	*	(	c	-	s	+	1	)
sizeof	(	char	)	*	c	-	s	+	1
sizeof	(	char	)	*	(	c	-	s	)
sizeof	(	char	)	*	c	-	s
i	<	n	-	1

(	nf	*	2	)	+	1

(	nf	*	2	)	+	1

(	(	x2	-	x1	)	*	(	x2	-	x1	)	)	+	(	(	y2	-	y1	)	*	(	y2	-	y1	)	)
(	(	x2	-	x1	)	*	(	x2	-	x1	)	)	+	(	y2	-	y1	*	y2	-	y1	)
dx	*	dx	+	dy	*	dy

2	*	(	dx	*	(	x1	-	cx	)	+	dy	*	(	y1	-	cy	)	)
2	*	dx	*	x1	-	cx	+	dy	*	y1	-	cy
cx	*	cx	+	cy	*	cy

x1	*	x1	+	y1	*	y1

2	*	(	cx	*	x1	+	cy	*	y1	)
2	*	cx	*	x1	+	cy	*	y1
b	*	b	-	4	*	a	*	c

(	-	b	+	sqrt	(	delta	)	)	/	(	2	*	a	)
-	b	+	sqrt	(	delta	)	/	(	2	*	a	)
x1	+	mu	*	(	dx	)

y1	+	mu	*	(	dy	)

(	-	b	-	sqrt	(	delta	)	)	/	(	2	*	a	)
-	b	-	sqrt	(	delta	)	/	(	2	*	a	)
x1	+	mu	*	(	dx	)

y1	+	mu	*	(	dy	)

sock	==	-	1

cols	<=	n	/	2

cols	*	cols	>=	n

!	(	(	hashSize	>	0	)	&&	(	hashSize	<=	64	)	)
!	(	hashSize	>	0	)	&&	(	hashSize	<=	64	)
hashSize	*	2	+	1

i	*	2	+	1

!	(	(	hashSize	>	0	)	&&	(	hashSize	<=	32	)	)
!	(	hashSize	>	0	)	&&	(	hashSize	<=	32	)
hashSize	*	2	+	1

i	*	2	+	1

k	%	3	==	0

k	%	100	==	0

!	root	||	!	*	root	||	!	cmp

!	toDelete	->	left	&&	!	toDelete	->	right

auth_time	>	current_time	+	30

auth_time	<	current_time	-	30

total_bytes	<	filesize	&&	bytes_read	>	0

index	<	0	||	index	>=	SDL_num_mice

index	>=	0	&&	index	<	SDL_num_mice

numchans	<	0	||	numchans	==	num_channels

which	==	-	1

which	==	-	1

which	==	-	1

which	==	-	1

which	==	-	1

which	==	-	1

which	==	-	1

(	channel	>=	0	)	&&	(	channel	<	num_channels	)

which	==	-	1

which	==	-	1

which	<	0	||	which	>	num_channels

tag	==	-	1

tag	==	-	1

(	channel	<	0	)	||	(	channel	>=	num_channels	)

(	channel	<	0	)	||	(	channel	>=	num_channels	)

(	channel	<	0	)	||	(	channel	>=	num_channels	)

(	which	<	0	)	||	(	which	>=	num_channels	)

loops	>=	0	&&	loopNum	>	loops

currentTrackID	==	-	1

total_bytes	<	filesize	&&	bytes_read	>	0

index	<	0	||	index	>=	SDL_num_mice

index	>=	0	&&	index	<	SDL_num_mice

numchans	<	0	||	numchans	==	num_channels

which	==	-	1

which	==	-	1

which	==	-	1

which	==	-	1

which	==	-	1

which	==	-	1

which	==	-	1

(	channel	>=	0	)	&&	(	channel	<	num_channels	)

which	==	-	1

which	==	-	1

which	<	0	||	which	>	num_channels

tag	==	-	1

tag	==	-	1

(	channel	<	0	)	||	(	channel	>=	num_channels	)

(	channel	<	0	)	||	(	channel	>=	num_channels	)

(	channel	<	0	)	||	(	channel	>=	num_channels	)

(	which	<	0	)	||	(	which	>=	num_channels	)

loops	>=	0	&&	loopNum	>	loops

currentTrackID	==	-	1

argc	--	,	argv	++

argc	--	,	argv	++

(	argc	+	1	)	*	sizeof	(	char	*	)
argc	+	1	*	sizeof	(	char	*	)
args	->	rfp	&&	args	->	rfp	!=	stdin

(	y	%	4	)	==	0	&&	(	(	y	%	100	)	!=	0	||	(	y	%	400	)	==	0	)
(	y	%	4	)	==	0	&&	(	y	%	100	)	!=	0	||	(	y	%	400	)	==	0
(	tm	->	tm_mday	-	1	)	*	24	*	60	*	60
tm	->	tm_mday	-	1	*	24	*	60	*	60
!	tm1	||	!	tm2

val	>=	(	1	<<	10	)

d	&&	*	b	!=	d

p	<	end	&&	*	p	!=	term

!	(	flags	&	FWIDTH	)
!	flags	&	FWIDTH
flags	&	(	FPREC	|	FWIDTH	)
flags	&	FPREC	|	FWIDTH
!	(	flags	&	FMINUS	)
!	flags	&	FMINUS
flags	&	(	FPLUS	|	FSPACE	)
flags	&	FPLUS	|	FSPACE
d	&&	*	s	!=	d

(	flags	&	(	FZERO	|	FMINUS	|	FPREC	)	)	==	FZERO
flags	&	FZERO	|	FMINUS	|	FPREC	==	FZERO
!	(	flags	&	FMINUS	)
!	flags	&	FMINUS
(	flags	&	(	FMINUS	|	FPREC	)	)	!=	FMINUS
flags	&	FMINUS	|	FPREC	!=	FMINUS
(	!	isnan	(	fval	)	&&	fval	<	0.0	)	||	(	flags	&	FPLUS	)

kclass	==	0	||	kclass	==	sclass

(	y	<<	7	)	&	0x9d2c5680UL

(	y	<<	15	)	&	0xefc60000UL

(	y	<<	7	)	&	0x9d2c5680UL

(	y	<<	15	)	&	0xefc60000UL

(	(	(	double	)	genrand_int32	(	)	)	+	0.5	)	*	(	1.0	/	4294967296.0	)
(	(	double	)	genrand_int32	(	)	)	+	0.5	*	(	1.0	/	4294967296.0	)
(	a	*	67108864.0	+	b	)	*	(	1.0	/	9007199254740992.0	)
a	*	67108864.0	+	b	*	(	1.0	/	9007199254740992.0	)
argc	--	,	argv	++

argc	--	,	argv	++

shared	->	refcnt	==	1	&&	s	->	ptr	==	shared	->	ptr

ptr	>=	s	->	ptr	&&	ptr	<=	s	->	ptr	+	s	->	len

(	strlen	(	s	->	ptr	)	^	s	->	len	)	!=	0
strlen	(	s	->	ptr	)	^	s	->	len	!=	0
!	(	s	->	flags	&	MRB_STR_SHARED	)
!	s	->	flags	&	MRB_STR_SHARED
!	(	orig	->	flags	&	MRB_STR_SHARED	)
!	orig	->	flags	&	MRB_STR_SHARED
s	->	len	==	0	||	!	s	->	ptr

++	p	<	pend

base	<	-	1

base	<	2	||	36	<	base

++	us	>=	2

c	<	0	||	c	>=	base

!	s	||	ps	->	len	!=	strlen	(	s	)

p	<	end	&&	n	<	e

n	==	buf	||	!	ISDIGIT	(	prev	)
n	==	buf	||	!	ISDIGIT	(	prev	)
!	end	||	p	==	end

argc	<=	i	&&	!	opt

!	c	&&	argc	>	i

s	->	lastlabel	!=	s	->	pc	&&	s	->	pc	>	0

c	>	127	||	c	<	-	127

s	->	irep	->	slen	>	125	&&	s	->	irep	->	slen	<	256

n2	->	car	&&	!	n2	->	car	->	cdr	&&	!	n2	->	cdr

(	(	ma	+	oa	)	&	0x3f	)	<<	6
(	ma	+	oa	)	&	0x3f	<<	6
(	ra	&	1	)	<<	5
ra	&	1	<<	5
val	&&	!	tree

lp	&&	lp	->	type	!=	LOOP_RESCUE

a1	->	len	==	a2	->	len	&&	a1	->	ptr	==	a2	->	ptr

index	<	0	||	a	->	len	<	(	int	)	index

index	<	0	||	a	->	len	<=	(	int	)	index

klass	&&	(	klass	!=	oldklass	)

m	--	==	0

--	i	>=	0

d	+	(	number	-	d	>=	0.5	)
d	+	number	-	d	>=	0.5
d	-	(	d	-	number	>=	0.5	)
d	-	d	-	number	>=	0.5
base	<	2	||	36	<	base

(	bx	>>	10	)	&	0x3f

(	bx	>>	9	)	&	0x1

(	bx	>>	4	)	&	0x1f

(	bx	>>	0	)	&	0xf

argc	<	m1	+	m2	||	(	r	==	0	&&	argc	>	len	)

argc	-	m2	<=	m1

argc	-	m2	>	m1

proc	->	env	&&	!	MRB_PROC_STRICT_P	(	proc	)

(	bx	>>	10	)	&	0x3f

(	bx	>>	9	)	&	0x1

(	bx	>>	4	)	&	0x1f

(	bx	>>	0	)	&	0xf

len	>	pre	+	post

i	+	pre	<	len

b	+	c	*	2

n	+	1	==	argc

i	<	a	.	len	-	1

rrd_create	(	argc	,	argv	)	==	-	1

rrd_update	(	argc	,	argv	)	==	-	1

rrd_tune	(	argc	,	argv	)	==	-	1

argv_i	++	>=	argc

last_up	<	3600	*	24	*	365	*	10

argv_i	++	>=	argc

argv_i	++	>=	argc

rc	!=	-	1

cur_row	+	elapsed_pdp_st	>=	seasonal_smooth_idx

cur_row	+	elapsed_pdp_st	>=	row_cnt	&&	cur_row	+	elapsed_pdp_st	>=	row_cnt	+	seasonal_smooth_idx

cur_row	+	elapsed_pdp_st	>=	row_cnt	&&	++	(	*	init_seasonal	)

(	elapsed_pdp_st	-	start_pdp_offset	)	%	pdp_cnt
elapsed_pdp_st	-	start_pdp_offset	%	pdp_cnt
(	elapsed_pdp_st	-	start_pdp_offset	)	%	pdp_cnt
elapsed_pdp_st	-	start_pdp_offset	%	pdp_cnt
j	>	0	&&	j	<	3

*	width	>	0	&&	*	height	>	0

sizeof	(	char	)	*	(	maxlen	+	1	)
sizeof	(	char	)	*	maxlen	+	1
(	1	<<	5	)	-	1
1	<<	5	-	1
(	1	<<	5	)	-	1
1	<<	5	-	1
~	(	G_LOG_FLAG_RECURSION	|	G_LOG_FLAG_FATAL	)
~	G_LOG_FLAG_RECURSION	|	G_LOG_FLAG_FATAL
~	(	G_LOG_FLAG_RECURSION	|	G_LOG_FLAG_FATAL	)
~	G_LOG_FLAG_RECURSION	|	G_LOG_FLAG_FATAL
gstring	->	len	+	1	<	gstring	->	allocated_len

pid	!=	getpid	(	)	&&	kill	(	pid	,	0	)	==	0

ftruncate	(	pid_fd	,	0	)	==	-	1

sock	->	wbuf	!=	NULL	&&	rc	==	RESP_OK

(	ci	->	flags	&	CI_FLAGS_IN_QUEUE	)	==	0
ci	->	flags	&	CI_FLAGS_IN_QUEUE	==	0
ci	->	values_num	>	0	&&	(	ci	->	last_flush_time	<=	cfd	->	abs_timeout	||	state	!=	RUNNING	)
ci	->	values_num	>	0	&&	ci	->	last_flush_time	<=	cfd	->	abs_timeout	||	state	!=	RUNNING
(	(	cfd	->	now	-	ci	->	last_flush_time	)	>=	config_flush_interval	)	&&	(	ci	->	values_num	<=	0	)

!	rrd_add_ptr	(	(	void	*	*	*	)	&	cfd	->	keys	,	&	cfd	->	keys_num	,	(	void	*	)	key	)

cfd	.	now	+	2	*	config_write_jitter	+	1

(	now	.	tv_sec	>	next_flush	.	tv_sec	)	||	(	(	now	.	tv_sec	==	next_flush	.	tv_sec	)	&&	(	(	1000	*	now	.	tv_usec	)	>	next_flush	.	tv_nsec	)	)

status	!=	0	&&	status	!=	ETIMEDOUT

state	!=	SHUTDOWN	||	(	cache_queue_head	!=	NULL	&&	config_flush_at_shutdown	)

(	status	!=	0	)	&&	(	status	!=	ETIMEDOUT	)

!	config_write_base_only	||	JOURNAL_REPLAY	(	sock	)	||	config_base_dir	==	NULL
!	config_write_base_only	||	JOURNAL_REPLAY	(	sock	)	||	config_base_dir	==	NULL
sock	!=	NULL	&&	sock	->	fd	>=	0

eostamp	==	value	||	eostamp	==	NULL

last_up	<	3600	*	24	*	365	*	10

(	sock	->	permissions	&	(	1	<<	i	)	)	!=	0
sock	->	permissions	&	(	1	<<	i	)	!=	0
help	&&	(	help	->	syntax	||	help	->	help	)
help	&&	help	->	syntax	||	help	->	help
statbuf	.	st_mode	&	(	S_IWGRP	|	S_IWOTH	)
statbuf	.	st_mode	&	S_IWGRP	|	S_IWOTH
(	pollfd	.	revents	&	POLLHUP	)	!=	0
pollfd	.	revents	&	POLLHUP	!=	0
(	pollfd	.	revents	&	(	POLLIN	|	POLLPRI	)	)	==	0
(	pollfd	.	revents	&	POLLIN	|	POLLPRI	)	==	0
sock	->	socket_group	!=	(	gid_t	)	-	1

(	chown	(	path	,	getuid	(	)	,	sock	->	socket_group	)	!=	0	)	||	(	chmod	(	path	,	(	S_IRUSR	|	S_IWUSR	|	S_IXUSR	|	S_IRGRP	|	S_IWGRP	)	)	!=	0	)

sock	->	socket_permissions	!=	(	mode_t	)	-	1

!	(	open_listen_sockets_systemd	(	)	>	0	)
!	open_listen_sockets_systemd	(	)	>	0
dup	(	0	)	==	-	1	||	dup	(	0	)	==	-	1

(	endptr	==	optarg	)	||	(	!	endptr	)

access	(	journal_dir	,	R_OK	|	W_OK	|	X_OK	)	!=	0

config_flush_interval	<	2	*	config_write_interval

config_write_base_only	&&	config_base_dir	==	NULL

start_tmp	<	3600	*	24	*	365	*	10

sizeof	(	long	)	*	(	(	*	col_cnt	)	+	1	)
sizeof	(	long	)	*	(	*	col_cnt	)	+	1
(	(	*	end	)	-	(	*	start	)	)	/	(	*	step	)
(	*	end	)	-	(	*	start	)	/	(	*	step	)
(	end	-	start	)	/	step
end	-	start	/	step
12	+	19	*	col_cnt

(	end	-	start	)	/	step
end	-	start	/	step
12	+	19	*	col_cnt

j	<	col_cnt	-	1

j	<	col_cnt	-	1

putenv	(	xyz	)	==	-	1

argc	==	1	&&	calcpr

end	-	(	*	buf	)	<	(	i	+	valln	)

(	length	+	1	)	*	sizeof	(	char	)
length	+	1	*	sizeof	(	char	)
(	numargs	+	1	)	*	sizeof	(	s_var	*	)
numargs	+	1	*	sizeof	(	s_var	*	)
*	*	last	&&	!	strchr	(	sep	,	*	*	last	)

sc_tokid	==	SLASH	||	sc_tokid	==	DOT

sc_tokid	==	AM	||	sc_tokid	==	PM

year	>=	0	&&	year	<	38

mon	>	10	*	365	*	24	*	60	*	60

mon	>	19700101	&&	mon	<	24000101

mon	<=	31	&&	(	sc_tokid	==	SLASH	||	sc_tokid	==	DOT	)
mon	<=	31	&&	sc_tokid	==	SLASH	||	sc_tokid	==	DOT
mon	<	0	||	mon	>	11

mday	<	1	||	mday	>	31

sc_tokid	==	PLUS	||	sc_tokid	==	MINUS

sc_tokid	==	PLUS	||	sc_tokid	==	MINUS

sc_tokid	==	PLUS	||	sc_tokid	==	MINUS	||	sc_tokid	==	NUMBER

(	argc	==	2	)	||	(	argc	==	3	)

r	<<	24	|	g	<<	16	|	b	<<	8	|	a

(	bits	&	PARSE_FIELD1	)	&&	(	(	bits	&	(	PARSE_FIELD2	|	PARSE_FIELD3	|	PARSE_FIELD4	)	)	)
(	bits	&	PARSE_FIELD1	)	&&	(	(	bits	&	PARSE_FIELD2	|	PARSE_FIELD3	|	PARSE_FIELD4	)	)
(	getDouble	(	t	,	&	linewidth	,	&	x	)	)	||	(	linewidth	<=	0	)

(	!	vname	)	||	(	!	rrd	)

(	bitscmp	(	PARSE_VNAMECOLORFRACTIONLEGEND	)	)	&&	(	!	fraction	)

(	!	vname	)	||	(	!	rpn	)

(	legend	)	&&	(	*	legend	!=	0	)

last_tabwidth	<	0	||	last_tabwidth	!=	tabwidth

line_width	/	2.0	-	ceil	(	line_width	/	2.0	)

line_height	/	2.0	-	ceil	(	line_height	/	2.0	)

(	op_len	+	1	+	*	offset	)	*	sizeof	(	char	)
op_len	+	1	+	*	offset	*	sizeof	(	char	)
(	l_sec	-	gm_sec	)	+	(	l_min	-	gm_min	)	*	60	+	(	l_hour	-	gm_hour	)	*	3600
(	l_sec	-	gm_sec	)	+	(	l_min	-	gm_min	)	*	60	+	l_hour	-	gm_hour	*	3600
l_yday	>	gm_yday	||	l_year	>	gm_year

l_yday	<	gm_yday	||	l_year	<	gm_year

*	value	==	0.0	||	isnan	(	*	value	)

sindex	<=	symbcenter	&&	sindex	>=	-	symbcenter

ypixfrac	>	0	&&	ypixfrac	<	1

minor_y_px_frac	>	0	&&	minor_y_px_frac	<	1

(	(	*	end	)	-	(	*	start	)	)	/	cur_step
(	*	end	)	-	(	*	start	)	/	cur_step
reduce_factor	-	start_offset	/	cur_step

isnan	(	minval	)	||	isnan	(	maxval	)	||	maxval	<=	0

first_weekday	==	-	1

tm	.	tm_wday	==	0	&&	find_first_weekday	(	)	>	0

(	tm	.	tm_year	+	1900	)	%	basestep
tm	.	tm_year	+	1900	%	basestep
madetime	==	-	1	&&	limit	--	>=	0

-	val_exp	%	exfrac

(	(	val_exp	+	1	)	%	3	)	+	2
(	val_exp	+	1	%	3	)	+	2
(	(	scale	+	si_symbcenter	)	<	(	int	)	sizeof	(	si_symbol	)	)	&&	(	(	scale	+	si_symbcenter	)	>=	0	)

mid	<	4	&&	exfrac	==	1

val_exp	-	exfrac	/	3	*	2

mid	<	4	&&	exfrac	==	1

val_exp	-	exfrac	/	3	*	2

(	(	color	&	0xF00	)	*	0x110000	)	|	(	(	color	&	0x0F0	)	*	0x011000	)	|	(	(	color	&	0x00F	)	*	0x001100	)	|	0x000000FF
(	color	&	0xF00	*	0x110000	)	|	(	(	color	&	0x0F0	)	*	0x011000	)	|	(	(	color	&	0x00F	)	*	0x001100	)	|	0x000000FF
(	(	color	&	0xF000	)	*	0x11000	)	|	(	(	color	&	0x0F00	)	*	0x01100	)	|	(	(	color	&	0x00F0	)	*	0x00110	)	|	(	(	color	&	0x000F	)	*	0x00011	)
(	color	&	0xF000	*	0x11000	)	|	(	color	&	0x0F00	*	0x01100	)	|	(	color	&	0x00F0	*	0x00110	)	|	(	color	&	0x000F	*	0x00011	)
(	color	<<	8	)	+	0xff
color	<<	8	+	0xff
start_tmp	<	3600	*	24	*	365	*	10

(	col	<<	8	)	+	0xff
col	<<	8	+	0xff
param	>=	0.0	&&	param	<=	100.0

(	SUMx	*	SUMy	-	cnt	*	SUMxy	)	/	(	SUMx	*	SUMx	-	cnt	*	SUMxx	)
SUMx	*	SUMy	-	cnt	*	SUMxy	/	SUMx	*	SUMx	-	cnt	*	SUMxx
(	SUMy	-	slope	*	SUMx	)	/	cnt
SUMy	-	slope	*	SUMx	/	cnt
(	SUMxy	-	(	SUMx	*	SUMy	)	/	cnt	)	/	sqrt	(	(	SUMxx	-	(	SUMx	*	SUMx	)	/	cnt	)	*	(	SUMyy	-	(	SUMy	*	SUMy	)	/	cnt	)	)
SUMxy	-	(	SUMx	*	SUMy	)	/	cnt	/	sqrt	(	(	SUMxx	-	(	SUMx	*	SUMx	)	/	cnt	)	*	SUMyy	-	(	SUMy	*	SUMy	)	/	cnt	)
status	==	-	1

status	==	-	1

fd	==	-	1

(	argc	-	optind	)	!=	2

!	(	isdigit	(	(	int	)	*	a	)	||	*	a	==	0	)
!	isdigit	(	(	int	)	*	a	)	||	*	a	==	0
!	(	isdigit	(	(	int	)	*	b	)	||	*	b	==	0	)
!	isdigit	(	(	int	)	*	b	)	||	*	b	==	0
a_neg	+	b_neg	==	2

opt	==	-	1

i	<	2	*	offset

i	<	row_count	+	offset

h1	==	(	char	)	-	1

h1	==	(	char	)	-	1

h2	+	(	h1	<<	4	)
h2	+	h1	<<	4
(	(	*	end	)	-	(	*	start	)	)	/	(	*	step	)	+	2
(	*	end	)	-	(	*	start	)	/	(	*	step	)	+	2
(	r_timestamp	-	(	*	start	)	)	/	(	*	step	)
r_timestamp	-	(	*	start	)	/	(	*	step	)
(	d_timestamp	>	0	)	&&	(	d_timestamp	<	2	*	derive	)

r_status	==	-	1

r_value	/	(	count	*	(	count	-	1	)	)
r_value	/	(	count	*	count	-	1	)
(	endptr	==	str_value	)	||	(	errno	!=	0	)
(	endptr	==	str_value	)	||	errno	!=	0
(	endptr	==	str_key	)	||	(	errno	!=	0	)
(	endptr	==	str_key	)	||	errno	!=	0
sd	==	-	1

sd	==	-	1

sd	==	-	1

sd	==	-	1

status	==	0	&&	sd	>=	0

!	s	||	!	*	s

status	!=	0	&&	!	rrd_test_error	(	)

t	->	tm_yday	%	7	>	t	->	tm_wday

t	->	tm_yday	%	7	>	(	t	->	tm_wday	+	6	)	%	7
t	->	tm_yday	%	7	>	t	->	tm_wday	+	6	%	7
last_up	<	3600	*	24	*	365	*	10

atof	(	token	)	<=	0.0	||	atof	(	token	)	>=	1.0

atof	(	token	)	<=	0.0	||	atof	(	token	)	>=	1.0

atof	(	token	)	<	0.0	||	atof	(	token	)	>	1.0

param	<=	0.0	||	param	>=	1.0

rra_idx	==	-	1

param	<	0.0	||	param	>	1.0

rra_idx	==	-	1

rra_idx	==	-	1

rra_idx	==	-	1

access	(	ors_dir	,	F_OK	)	==	-	1

access	(	tmp	,	F_OK	)	!=	-	1

access	(	tmp	,	F_OK	)	!=	-	1

access	(	aroma_file	,	F_OK	)	!=	-	1

ret	<	0	||	ret	>=	offset

strcmp	(	de	->	d_name	+	strlen	(	de	->	d_name	)	-	extension_length	,	fileExtensionOrDirectory	)	!=	0

(	total	+	1	)	*	sizeof	(	char	*	)
total	+	1	*	sizeof	(	char	*	)
j	<	total	-	i

curMax	==	-	1

(	i	+	3	)	*	sizeof	(	char	*	)
i	+	3	*	sizeof	(	char	*	)
(	total	+	1	)	*	sizeof	(	char	*	)
total	+	1	*	sizeof	(	char	*	)
chosen_item	==	(	mountable_volumes	+	formatable_volumes	)

is_data_media	(	)	&&	chosen_item	==	(	mountable_volumes	+	formatable_volumes	+	1	)

chosen_item	<	(	mountable_volumes	+	formatable_volumes	)

st	.	st_mode	&	(	S_IXUSR	|	S_IXGRP	|	S_IXOTH	)
st	.	st_mode	&	S_IXUSR	|	S_IXGRP	|	S_IXOTH
(	st	.	st_mode	&	(	S_ISUID	|	S_ISGID	)	)	!=	(	S_ISUID	|	S_ISGID	)
st	.	st_mode	&	S_ISUID	|	S_ISGID	!=	S_ISUID	|	S_ISGID
(	st	.	st_mode	&	(	S_ISUID	|	S_ISGID	)	)	!=	(	S_ISUID	|	S_ISGID	)
st	.	st_mode	&	S_ISUID	|	S_ISGID	!=	S_ISUID	|	S_ISGID
tv	.	tv_sec	+	tv	.	tv_usec	/	1000000.0

(	gr_fb_width	(	)	-	iconWidth	)	/	2
gr_fb_width	(	)	-	iconWidth	/	2
(	gr_fb_height	(	)	-	iconHeight	)	/	2
gr_fb_height	(	)	-	iconHeight	/	2
(	gr_fb_width	(	)	-	width	)	/	2
gr_fb_width	(	)	-	width	/	2
(	3	*	gr_fb_height	(	)	+	iconHeight	-	2	*	height	)	/	4
3	*	gr_fb_height	(	)	+	iconHeight	-	2	*	height	/	4
gProgressScopeStart	+	gProgress	*	gProgressScopeSize

pos	<	width	-	1

(	gr_fb_width	(	)	-	iconWidth	)	/	2
gr_fb_width	(	)	-	iconWidth	/	2
(	gr_fb_width	(	)	-	length	)	/	2
gr_fb_width	(	)	-	length	/	2
(	row	+	1	)	*	CHAR_HEIGHT	-	1
row	+	1	*	CHAR_HEIGHT	-	1
show_text	||	!	gPagesIdentical

gProgressBarType	==	PROGRESSBAR_TYPE_INDETERMINATE	&&	!	show_text

gProgressBarType	==	PROGRESSBAR_TYPE_NORMAL	&&	duration	>	0

!	ev_wait	(	-	1	)

text_cols	>	MAX_COLS	-	1

gProgressBarType	==	PROGRESSBAR_TYPE_NORMAL	&&	fraction	>	gProgress

(	int	)	(	gProgress	*	scale	)	!=	(	int	)	(	fraction	*	scale	)

(	to	.	tv_sec	-	from	.	tv_sec	)	*	1000
to	.	tv_sec	-	from	.	tv_sec	*	1000
(	to	.	tv_usec	-	from	.	tv_usec	)	/	1000
to	.	tv_usec	-	from	.	tv_usec	/	1000
ms	<	NICE_INTERVAL	&&	ms	>=	0

text_rows	>	0	&&	text_cols	>	0

(	text_row	+	1	)	%	text_rows
text_row	+	1	%	text_rows
(	text_top	+	1	)	%	text_rows
text_top	+	1	%	text_rows
text_rows	>	0	&&	text_cols	>	0

menu_sel	<	menu_show_start	&&	menu_show_start	>	0

menu_sel	-	menu_show_start	+	menu_top	>=	max_menu_rows

show_menu	>	0	&&	text_rows	>	0	&&	text_cols	>	0

key_queue_len	==	0	&&	rc	!=	ETIMEDOUT

usb_connected	(	)	&&	key_queue_len	==	0

key_queue_len	==	0	&&	rc	!=	ETIMEDOUT

rc	==	ETIMEDOUT	&&	!	usb_connected	(	)

(	now	.	tv_sec	*	1000	)	+	(	now	.	tv_usec	/	1000	)

(	text_row	-	1	+	text_rows	)	%	text_rows
text_row	-	1	+	text_rows	%	text_rows
sizeof	(	char	*	)	*	(	argc	+	1	)
sizeof	(	char	*	)	*	argc	+	1
sizeof	(	char	*	)	*	(	argc	+	1	)
sizeof	(	char	*	)	*	argc	+	1
error	==	0	||	error_count	>	0

error	==	0	||	error_count	>	0

!	WIFEXITED	(	status	)	||	WEXITSTATUS	(	status	)	!=	0
WIFEXITED	(	status	)	||	WEXITSTATUS	(	status	)	!=	!	WIFEXITED	(	status	)	||	WEXITSTATUS	(	status	)	!=	0
alt	&&	key_code	==	KEY_L

get_allow_toggle_display	(	)	&&	(	key_code	==	KEY_HOME	||	key_code	==	KEY_MENU	||	key_code	==	KEY_POWER	||	key_code	==	KEY_END	)
get_allow_toggle_display	(	)	&&	key_code	==	KEY_HOME	||	key_code	==	KEY_MENU	||	key_code	==	KEY_POWER	||	key_code	==	KEY_END
fseek	(	f	,	-	FOOTER_SIZE	,	SEEK_END	)	!=	0

!	ui_was_niced	(	)	&&	nandroid_files_total	!=	0

!	(	nandroid_backup_bitfield	&	NANDROID_FIELD_DEDUPE_CLEARED_SPACE	)
!	nandroid_backup_bitfield	&	NANDROID_FIELD_DEDUPE_CLEARED_SPACE
argc	>	3	||	argc	<	2

ret	&&	tries	<	10

(	bitmap_bpp	+	7	)	/	8	*	bitmap_width	*	bitmap_height
bitmap_bpp	+	7	/	8	*	bitmap_width	*	bitmap_height
ensure_path_mounted	(	COMMAND_FILE	)	!=	0	||	(	unlink	(	COMMAND_FILE	)	&&	errno	!=	ENOENT	)

(	st	.	st_mode	&	0777	)	!=	0700
st	.	st_mode	&	0777	!=	0700
(	count	+	1	)	*	sizeof	(	char	*	)
count	+	1	*	sizeof	(	char	*	)
key	==	-	1

key	==	-	2

de	->	d_type	==	DT_REG	&&	name_len	>=	4

d_size	+	z_size	+	1	>	z_alloc

!	WIFEXITED	(	status	)	||	WEXITSTATUS	(	status	)	!=	0
WIFEXITED	(	status	)	||	WEXITSTATUS	(	status	)	!=	!	WIFEXITED	(	status	)	||	WEXITSTATUS	(	status	)	!=	0
err	!=	-	1

pid	==	-	1

pid	==	-	1	&&	errno	==	EINTR

pid	==	-	1

hash	*	31	+	*	name	++

*	ptr	==	(	ENDSIG	&	0xff	)	&&	get4LE	(	ptr	)	==	ENDSIG
*	ptr	==	ENDSIG	&	0xff	&&	get4LE	(	ptr	)	==	ENDSIG
low	+	(	(	high	-	low	)	/	2	)
low	+	(	high	-	low	/	2	)
zerr	!=	Z_OK	&&	zerr	!=	Z_STREAM_END

zstream	.	avail_out	==	0	||	(	zerr	==	Z_STREAM_END	&&	zstream	.	avail_out	!=	sizeof	(	procBuf	)	)

start	==	(	off_t	)	-	1	||	end	==	(	off_t	)	-	1

fail	||	errno	<	0

mtd	->	type	==	MTD_NANDFLASH	||	mtd	->	type	==	MTD_MLCNANDFLASH

mappingEntry	-	mappings	<	100

rawSrcBlk	>=	srcPartStartBlock	&&	rawSrcBlk	<=	srcLastBlock

pos	==	(	off_t	)	-	1

ret	!=	0	&&	!	(	ret	==	-	1	&&	errno	==	EOPNOTSUPP	)
ret	!=	0	&&	!	ret	==	-	1	&&	errno	==	EOPNOTSUPP
mtd	->	type	==	MTD_NANDFLASH	||	mtd	->	type	==	MTD_MLCNANDFLASH

read_only	||	rv	<	0

ctx	->	bad_block_count	+	1	>	ctx	->	bad_block_alloc

(	ctx	->	bad_block_alloc	*	2	)	+	1

pos	==	(	off_t	)	-	1

ret	!=	0	&&	!	(	ret	==	-	1	&&	errno	==	EOPNOTSUPP	)
ret	!=	0	&&	!	ret	==	-	1	&&	errno	==	EOPNOTSUPP
(	off_t	)	pos	==	(	off_t	)	-	1

(	ctx	->	partition	->	size	-	pos	)	/	ctx	->	partition	->	erase_size
ctx	->	partition	->	size	-	pos	/	ctx	->	partition	->	erase_size
blocks	--	>	0

mtd_erase_blocks	(	ctx	,	0	)	==	(	off_t	)	-	1

success	&&	(	wrote	==	read	)

mtd_erase_blocks	(	ctx	,	-	1	)	==	-	1

error	!=	0	||	error_count	>	0

argc	!=	1	&&	argc	!=	2

result	==	0	||	errno	==	EEXIST

i	<	argc	-	1

key_end	>	line	&&	isspace	(	*	key_end	)
>	line	&&	isspace	(	*	key_end	key_end	>	line	&&	isspace	(	*	key_end	)
val_end	>	val_start	&&	isspace	(	*	val_end	)
>	val_start	&&	isspace	(	*	val_end	val_end	>	val_start	&&	isspace	(	*	val_end	)
argc	<	6	||	(	argc	%	2	)	==	1

(	argc	-	4	)	/	2
argc	-	4	/	2
i	<	patchcount	*	2

sizeof	(	char	*	)	*	(	argc	+	1	)
sizeof	(	char	*	)	*	argc	+	1
avail	<=	0	||	len	<=	0

usb	->	fd	!=	-	1

(	r	==	0	)	||	(	errno	!=	EAGAIN	)
(	r	==	0	)	||	errno	!=	EAGAIN
len	--	>	0

(	n	<<	4	)	|	c

(	len	<	1	)	||	(	len	>	1024	)

(	i	<	select_n	)	&&	(	n	>	0	)

(	fd	<	0	)	||	(	fd	>=	fd_table_max	)

(	subproc_fd	<	0	)	||	(	subproc_fd	>=	fd_table_max	)

(	r	<	0	)	&&	(	errno	==	EINTR	)
(	r	<	0	)	&&	errno	==	EINTR
(	r	<	0	)	&&	(	errno	==	EINTR	)
(	r	<	0	)	&&	errno	==	EINTR
count	--	>	0

(	r	<	0	)	&&	(	errno	==	EINTR	)
(	r	<	0	)	&&	errno	==	EINTR
(	r	<	0	)	&&	(	errno	==	EINTR	)
(	r	<	0	)	&&	errno	==	EINTR
count	--	>	0

i	<	(	sz	/	512	)

error	>	0	||	error_count	>	0

error	==	0	||	error_count	>	0

argc	!=	2	&&	argc	!=	3

fn_size	*	2	+	1

!	(	bit_depth	==	8	&&	(	(	channels	==	3	&&	color_type	==	PNG_COLOR_TYPE_RGB	)	||	(	channels	==	4	&&	color_type	==	PNG_COLOR_TYPE_RGBA	)	||	(	channels	==	1	&&	color_type	==	PNG_COLOR_TYPE_PALETTE	)	)	)
(	bit_depth	==	8	&&	(	channels	==	3	&&	color_type	==	PNG_COLOR_TYPE_RGB	)	||	(	channels	==	4	&&	color_type	==	PNG_COLOR_TYPE_RGBA	)	||	(	channels	==	1	&&	color_type	==	PNG_COLOR_TYPE_PALETTE	)	!	(	bit_depth	==	8	&&	(	channels	==	3	&&	color_type	==	PNG_COLOR_TYPE_RGB	)	||	(	channels	==	4	&&	color_type	==	PNG_COLOR_TYPE_RGBA	)	||	(	channels	==	1	&&	color_type	==	PNG_COLOR_TYPE_PALETTE	)	)
channels	==	3	||	(	channels	==	1	&&	!	alpha	)

vi	.	yres	*	fi	.	line_length	*	2	>	fi	.	smem_len

n	>	1	||	!	double_buffering

(	gr_active_fb	+	1	)	&	1

n	--	>	0

(	val	==	run_val	)	&&	(	run_count	<	127	)

!	test_bit	(	EV_KEY	,	ev_bits	)	&&	!	test_bit	(	EV_REL	,	ev_bits	)	&&	!	test_bit	(	EV_ABS	,	ev_bits	)
!	test_bit	(	EV_KEY	,	ev_bits	)	&&	!	test_bit	(	EV_REL	,	ev_bits	)	&&	!	test_bit	(	EV_ABS	,	ev_bits	)
ret	<	0	||	!	test_bit	(	EV_KEY	,	ev_bits	)
ret	<	0	||	!	test_bit	(	EV_KEY	,	ev_bits	)
st	.	st_mode	&	(	S_IRWXU	|	S_IRWXG	|	S_IRWXO	|	S_ISUID	|	S_ISGID	)
st	.	st_mode	&	S_IRWXU	|	S_IRWXG	|	S_IRWXO	|	S_ISUID	|	S_ISGID
cmp	>	0	||	j	>=	used_files	.	size

ptr	<	prop	&&	isspace	(	*	ptr	)
<	prop	&&	isspace	(	*	ptr	ptr	<	prop	&&	isspace	(	*	ptr	)
argc	!=	optind	+	1

fd	>=	0	&&	close	(	fd	)	==	0

(	EBR_first_sec	+	dfirstsec	)	*	512
EBR_first_sec	+	dfirstsec	*	512
g_mmc_state	.	partition_count	==	-	1

!	WIFEXITED	(	status	)	||	WEXITSTATUS	(	status	)	!=	0
WIFEXITED	(	status	)	||	WEXITSTATUS	(	status	)	!=	!	WIFEXITED	(	status	)	||	WEXITSTATUS	(	status	)	!=	0
read_only	||	rv	<	0

i	<	(	sz	/	512	)

i	<	(	sz	/	512	)

(	value	>>	8	)	&	0xff

(	value	>>	16	)	&	0xff

(	value	>>	24	)	&	0xff

(	value	>>	8	)	&	0xff

(	value	>>	16	)	&	0xff

(	value	>>	24	)	&	0xff

(	value	>>	32	)	&	0xff

(	value	>>	40	)	&	0xff

(	value	>>	48	)	&	0xff

(	value	>>	56	)	&	0xff

i	>=	0	&&	i	>	st	.	st_size	-	65600

Read2	(	lh	+	26	)	!=	nlen	||	memcmp	(	lh	+	30	,	filename	,	nlen	)	!=	0

(	entrycount	*	2	+	2	)	*	sizeof	(	ImageChunk	)
entrycount	*	2	+	2	*	sizeof	(	ImageChunk	)
a	->	len	==	b	->	len	&&	memcmp	(	a	->	data	,	b	->	data	,	a	->	len	)	==	0

a	->	deflate_len	==	b	->	deflate_len	&&	memcmp	(	a	->	deflate_data	,	b	->	deflate_data	,	a	->	deflate_len	)	==	0

in_end	==	in_start	+	1

ReconstructDeflateChunk	(	tgt_chunks	+	i	)	<	0

i	==	1	&&	bonus_data

ctrl_len	<	0	||	data_len	<	0	||	*	new_size	<	0

(	oldpos	+	i	>=	0	)	&&	(	oldpos	+	i	<	old_size	)

stat	(	path	,	&	st	)	==	0	&&	S_ISREG	(	st	.	st_mode	)
(	path	,	&	st	)	==	0	&&	S_ISREG	(	st	.	st_mode	stat	(	path	,	&	st	)	==	0	&&	S_ISREG	(	st	.	st_mode	)
k	<	start	+	len

k	+	i	<	start	+	len

start	+	len	/	2

i	<	start	+	len

jj	+	j	<	kk

i	<	kk	-	jj

jj	==	kk	-	1

start	+	len	>	kk

i	<	oldsize	+	1

i	<	oldsize	+	1

(	i	<	oldsize	)	&&	(	i	<	newsize	)

en	-	st	<	2

st	+	(	en	-	st	)	/	2
st	+	en	-	st	/	2
(	oldsize	+	1	)	*	sizeof	(	off_t	)
oldsize	+	1	*	sizeof	(	off_t	)
(	oldsize	+	1	)	*	sizeof	(	off_t	)
oldsize	+	1	*	sizeof	(	off_t	)
scsc	<	scan	+	len

scsc	+	lastoffset	<	oldsize

(	(	len	==	oldscore	)	&&	(	len	!=	0	)	)	||	(	len	>	oldscore	+	8	)

scan	+	lastoffset	<	oldsize

(	len	!=	oldscore	)	||	(	scan	==	newsize	)

(	lastscan	+	i	<	scan	)	&&	(	lastpos	+	i	<	oldsize	)

s	*	2	-	i	>	Sf	*	2	-	lenf

(	scan	>=	lastscan	+	i	)	&&	(	pos	>=	i	)

s	*	2	-	i	>	Sb	*	2	-	lenb

lastscan	+	lenf	>	scan	-	lenb

i	<	(	scan	-	lenb	)	-	(	lastscan	+	lenf	)

colons	<	3	||	colons	%	2	==	0

(	colons	-	1	)	/	2
colons	-	1	/	2
msi	->	size	-	msi	->	pos	<	len

retry	--	>	0

2.0	*	self	->	near	*	self	->	far	/	(	self	->	far	+	self	->	near	-	z_n	*	(	self	->	far	-	self	->	near	)	)
2.0	*	self	->	near	*	self	->	far	/	self	->	far	+	self	->	near	-	z_n	*	self	->	far	-	self	->	near
2.0	*	self	->	near	*	self	->	far	/	(	self	->	far	+	self	->	near	-	z_n	*	(	self	->	far	-	self	->	near	)	)
2.0	*	self	->	near	*	self	->	far	/	(	self	->	far	+	self	->	near	-	z_n	*	self	->	far	-	self	->	near	)
self	->	height	-	(	pixel	/	self	->	width	)

z_e	*	(	u	-	self	->	u_0	)	/	self	->	alpha_u
z_e	*	u	-	self	->	u_0	/	self	->	alpha_u
z_e	*	(	v	-	self	->	v_0	)	/	self	->	alpha_v
z_e	*	v	-	self	->	v_0	/	self	->	alpha_v
tv	.	tv_sec	*	1000	+	tv	.	tv_usec	/	1000

!	_glut	->	window	||	_glut	->	window	->	id	!=	win

!	_glut	->	window	||	_glut	->	window	->	id	!=	win

(	float	)	depth	/	(	pot_depth	-	1	)
(	float	)	depth	/	pot_depth	-	1
1	+	depth	*	(	BUF_WIDTH	+	1	)
1	+	depth	*	BUF_WIDTH	+	1
1	+	depth	*	(	BUF_WIDTH	+	1	)
1	+	depth	*	BUF_WIDTH	+	1
(	layer	+	1	)	%	4
layer	+	1	%	4
(	x	+	0.5	)	/	(	size	)
x	+	0.5	/	(	size	)
x1	<	x	+	dim

(	x1	-	x	+	0.5	)	/	(	dim	)
x1	-	x	+	0.5	/	(	dim	)
start_x	+	dim	/	4

start_x	+	dim	*	3	/	4

start_y	+	dim	/	4

start_y	+	dim	*	3	/	4

i	<	sizeof	(	expected	)	/	sizeof	(	*	expected	)

1	+	layer	*	(	BUF_WIDTH	+	1	)
1	+	layer	*	BUF_WIDTH	+	1
1	+	layer	*	(	BUF_WIDTH	+	1	)
1	+	layer	*	BUF_WIDTH	+	1
16	*	(	count	-	1	)
16	*	count	-	1
x	+	w	/	2

y	+	h	/	2

i	<	SIZE	*	SIZE	*	4

i	<	sizeof	(	expected	)	/	sizeof	(	*	expected	)

i	<	16	*	16

color_location	==	-	1

x	==	BUF_SIZE	/	2	||	y	==	BUF_SIZE	/	2

y	<	BUF_SIZE	/	2

y	<	BUF_SIZE	/	2

x	==	BUF_SIZE	/	2	||	y	==	BUF_SIZE	/	2

y	<	BUF_SIZE	/	2

y	<	BUF_SIZE	/	2

10	+	TEX_WIDTH	/	4

10	+	TEX_WIDTH	*	3	/	4

10	+	TEX_HEIGHT	/	4

10	+	TEX_HEIGHT	*	3	/	4

x	==	BUF_SIZE	/	2	||	y	==	BUF_SIZE	/	2

incomplete	!=	-	1	&&	complete	!=	-	1

complete	==	-	1

(	i	*	4	)	+	1

(	i	*	4	)	+	2

(	i	*	4	)	+	3

16	*	(	count	-	1	)
16	*	count	-	1
x	+	w	/	2

y	+	h	/	2

glslMajor	*	100	+	glslMinor	<	130

(	face	+	2	*	level	)	%	7
face	+	2	*	level	%	7
1	+	face	*	(	BUF_WIDTH	+	1	)
1	+	face	*	BUF_WIDTH	+	1
1	+	face	*	(	BUF_WIDTH	+	1	)
1	+	face	*	BUF_WIDTH	+	1
x	<	BUF_WIDTH	*	2

(	x	+	1	)	%	8	<	4
x	+	1	%	8	<	4
dim	<	TEX_WIDTH	/	4

1	+	layer	*	(	BUF_WIDTH	+	1	)
1	+	layer	*	BUF_WIDTH	+	1
1	+	layer	*	(	BUF_WIDTH	+	1	)
1	+	layer	*	BUF_WIDTH	+	1
x	+	w	/	2

y	+	h	/	2

y	<	0	||	y	>=	drawable_height

x	<	0	||	x	>=	drawable_width

x	>=	subrect_w	*	1	&&	x	<	subrect_w	*	2	&&	y	>=	subrect_h	*	1	&&	y	<	subrect_h	*	2

x	>=	subrect_w	*	3	&&	x	<	subrect_w	*	4	&&	y	>=	subrect_h	*	1	&&	y	<	subrect_h	*	2

x	>=	subrect_w	*	1	&&	x	<	subrect_w	*	2	&&	y	>=	subrect_h	*	3	&&	y	<	subrect_h	*	4

x	>=	subrect_w	*	3	&&	x	<	subrect_w	*	4	&&	y	>=	subrect_h	*	3	&&	y	<	subrect_h	*	4

x	<	BUF_WIDTH	/	2

16	*	(	count	-	1	)
16	*	count	-	1
(	tex_width	>>	i	)	||	(	tex_height	>>	i	)

x	+	w	/	2

y	+	h	/	2

x1	<	x	+	w

(	x1	-	x	+	0.5	)	/	w
x1	-	x	+	0.5	/	w
w	>	1	&&	h	>	1

w	<=	7	||	h	<=	7

(	tex_width	>>	level	)	||	(	tex_height	>>	level	)

(	tex_width	>>	level	)	+	1
tex_width	>>	level	+	1
(	tex_width	>>	level	)	||	(	tex_height	>>	level	)

(	tex_width	>>	level	)	+	1
tex_width	>>	level	+	1
x	+	w	/	2

y	+	h	/	2

1	+	(	i	*	(	BOX_SIZE	+	1	)	)
1	+	(	i	*	BOX_SIZE	+	1	)
(	component_mask	>>	2	)	&	0x03

bump_density_location	!=	-	1

bump_size_location	!=	-	1

specular_factor_location	!=	-	1

surface_color_location	!=	-	1

light_position_location	!=	-	1

tangent_attrib	!=	-	1

strlen	(	pre	)	+	strlen	(	sample	)	*	sample_count	+	strlen	(	post	)	+	1

2	+	2	*	(	sample_count	-	1	)	+	1
2	+	2	*	sample_count	-	1	+	1
2	+	4	*	(	sample_count	-	1	)	+	1
2	+	4	*	sample_count	-	1	+	1
strlen	(	pre	)	+	strlen	(	sample	)	*	(	sample_count	-	1	)	+	strlen	(	post	)	+	1
strlen	(	pre	)	+	strlen	(	sample	)	*	sample_count	-	1	+	strlen	(	post	)	+	1
i	<	sample_count	-	1

(	i	^	j	)	&	(	BOX_SIZE	/	4	)
i	^	j	&	(	BOX_SIZE	/	4	)
1	+	(	(	BOX_SIZE	+	2	)	*	i	)
1	+	(	(	BOX_SIZE	+	2	)	*	i	)
!	piglit_probe_pixel_rgb	(	x	+	(	3	*	tile_size	/	2	)	,	2	,	clear_color	)	||	!	piglit_probe_pixel_rgb	(	x	+	(	tile_size	/	2	)	,	2	,	green	)

2	+	12	*	index

(	r	>>	5	)	&	31

(	r	>>	10	)	&	31

texture_data	+	z	*	TEXTURE_SIZE	*	TEXTURE_SIZE	*	3	+	y	*	TEXTURE_SIZE	*	3	+	x	*	3

(	x	+	0.5	)	/	32.0
x	+	0.5	/	32.0
(	y	+	0.5	)	/	32.0
y	+	0.5	/	32.0
(	z	+	0.5	)	/	32.0
z	+	0.5	/	32.0
sizeof	(	program_Head	)	+	(	samples	+	1	)	*	sizeof	(	program_TEX	)	+	sizeof	(	program_Tail	)	+	sizeof	(	program_Input	)	+	sizeof	(	program_Output	)
sizeof	(	program_Head	)	+	samples	+	1	*	sizeof	(	program_TEX	)	+	sizeof	(	program_Tail	)	+	sizeof	(	program_Input	)	+	sizeof	(	program_Output	)
(	(	cc	+	1	)	*	(	BOX_SIZE	+	1	)	)	+	1
(	cc	+	1	*	BOX_SIZE	+	1	)	+	1
(	mask	*	(	BOX_SIZE	+	1	)	)	+	1
(	mask	*	BOX_SIZE	+	1	)	+	1
5	+	(	25	*	i	)

5	+	(	25	*	j	)

rotate	<	i	*	j

(	float	)	i	*	4	+	j

value	<	(	13	*	4	)

-	2	/	10.0

-	12.0	/	10

x	==	0	||	y	==	0	||	x	==	SIZE	-	1	||	y	==	SIZE	-	1

(	test	+	1	)	%	5
test	+	1	%	5
(	0	+	rotate	)	%	4
0	+	rotate	%	4
(	i	+	1	)	%	16
i	+	1	%	16
(	1	+	rotate	)	%	4
1	+	rotate	%	4
(	i	+	1	)	%	16
i	+	1	%	16
(	i	+	1	)	%	256
i	+	1	%	256
(	2	+	rotate	)	%	4
2	+	rotate	%	4
(	i	+	1	)	%	256
i	+	1	%	256
(	i	+	1	)	%	4096
i	+	1	%	4096
(	3	+	rotate	)	%	4
3	+	rotate	%	4
(	i	+	1	)	%	4096
i	+	1	%	4096
sizeof	(	program_Head	)	+	2	*	alu_depth	*	sizeof	(	program_Step	)	+	sizeof	(	program_Tail	)	+	sizeof	(	program_Output	)

!	alu_depth	||	alu_depth	>	16384	||	alu_depth	+	1	>	max_alu_instructions

i	==	(	alu_depth	-	1	)

(	(	alu_depth	/	16	)	%	16	)	*	0.0625

(	(	alu_depth	/	256	)	%	16	)	*	0.0625

i	<	(	(	alu_depth	+	3	)	%	4	)
i	<	(	alu_depth	+	3	%	4	)
(	alu_depth	*	2	)	-	5

(	i	+	j	)	&	1

(	i	+	j	)	&	1

(	1	<<	i	)	&	vsbitmask

(	1	<<	i	)	&	fsbitmask

i	*	4	+	(	j	%	4	)

(	(	1	<<	i	)	&	vsbitmask	)	&&	(	(	1	<<	i	)	&	fsbitmask	)

5	+	(	i	*	(	BOX_SIZE	+	5	)	)	%	240
5	+	(	i	*	BOX_SIZE	+	5	)	%	240
(	(	1	<<	i	)	&	vsbitmask	)	&&	(	(	1	<<	i	)	&	fsbitmask	)

i	<	sizeof	(	conf	)	/	sizeof	(	*	conf	)

(	0.4	+	2	)	/	8
0.4	+	2	/	8
(	1.0	+	2	)	/	8
1.0	+	2	/	8
(	1.6	+	2	)	/	8
1.6	+	2	/	8
(	1.0	+	2	)	/	8
1.0	+	2	/	8
mask	&	(	1	<<	i	)

x	<	w	/	2	&&	y	<	h	/	2

y	<	h	/	2

x	<	w	/	2

i	!=	(	argc	-	1	)

4	*	(	(	r	*	TEST_COLS	)	+	c	)
4	*	(	r	*	TEST_COLS	)	+	c
(	i	%	10	)	*	10

sin	(	(	i	-	25	)	*	DEGREES_30	)	*	0.5	+	0.5
sin	(	i	-	25	*	DEGREES_30	)	*	0.5	+	0.5
5	+	(	25	*	i	)

5	+	(	25	*	j	)

5	+	(	25	*	i	)

5	+	(	25	*	j	)

(	i	+	j	)	&	1

!	isspace	(	(	int	)	*	src	)
isspace	(	(	int	)	*	src	!	isspace	(	(	int	)	*	src	)
!	isspace	(	(	int	)	*	src	)
isspace	(	(	int	)	*	src	!	isspace	(	(	int	)	*	src	)
(	num_vertex_shaders	==	0	)	&&	(	num_fragment_shaders	==	0	)	&&	(	num_geometry_shaders	==	0	)

(	i	*	(	BOX_SIZE	+	1	)	)	+	1
(	i	*	BOX_SIZE	+	1	)	+	1
bits	.	ui	&	(	1U	<<	31	)

bits	.	ui	&	(	0x0ff	<<	23	)

bits	.	ui	&	(	(	1U	<<	23	)	-	1	)
bits	.	ui	&	(	1U	<<	23	-	1	)
(	1U	<<	(	23	-	10	)	)	>>	1

-	(	128.0	/	127.0	)
-	128.0	/	127.0
(	i	*	(	BOX_SIZE	+	1	)	)	+	1
(	i	*	BOX_SIZE	+	1	)	+	1
(	i	*	3	)	+	2	<	ARRAY_SIZE	(	v	)

(	i	%	10	)	*	10

cos	(	(	i	-	25	)	*	DEGREES_30	)	*	0.5	+	0.5
cos	(	i	-	25	*	DEGREES_30	)	*	0.5	+	0.5
5	+	(	25	*	i	)

5	+	(	25	*	j	)

rotate	<	i	*	j

(	float	)	i	*	4	+	j

x	+	size	/	4

x	+	size	*	3	/	4

y	+	size	/	4

y	+	size	*	3	/	4

(	i	+	j	)	&	1

(	i	+	j	)	&	1

(	5	*	cellx	+	x	+	1	)	*	SquareSize	/	5
5	*	cellx	+	x	+	1	*	SquareSize	/	5
(	5	*	celly	+	y	+	1	)	*	SquareSize	/	5
5	*	celly	+	y	+	1	*	SquareSize	/	5
base	/	(	float	)	(	1	<<	bias	)

base	*	(	float	)	(	1	<<	(	-	bias	)	)

CurrentBias	<	-	MaxTextureLodBias

CurrentBias2	<	-	MaxTextureLodBias

j	<	dim	*	dim

(	i	+	j	)	&	1

1.0	+	(	(	box_size	+	1	)	*	row	)
1.0	+	(	box_size	+	1	*	row	)
1.0	+	(	(	box_size	+	1	)	*	i	)
1.0	+	(	box_size	+	1	*	i	)
i	<	TEX_SIZE	*	TEX_SIZE

i	<	4	*	size	*	size

fabs	(	*	l1	-	*	l2	)	<	tolerance

(	i	+	j	)	&	1

275	-	(	35	*	row	)

150	+	(	col	*	50	)

w	>	1	&&	h	>	1

(	x	+	y	)	%	7
x	+	y	%	7
(	x	+	y	)	%	7
x	+	y	%	7
i	*	(	h	+	2	)
i	*	h	+	2
(	i	+	1	)	*	(	h	+	2	)
i	+	1	*	h	+	2
(	i	+	2	)	*	(	h	+	2	)
i	+	2	*	h	+	2
(	i	+	3	)	*	(	h	+	2	)
i	+	3	*	(	h	+	2	)
(	w	/	(	float	)	TEX_WIDTH	)	*	(	1	<<	level	)
(	w	/	(	float	)	TEX_WIDTH	)	*	1	<<	level
(	h	/	(	float	)	TEX_HEIGHT	)	*	(	1	<<	level	)
(	h	/	(	float	)	TEX_HEIGHT	)	*	1	<<	level
i	<	4	*	256	*	256

i	<	4	*	128	*	128

i	<	4	*	size	*	size

srcy	+	srch	/	2

srcy	+	srch	/	2

srcw	-	(	srcw	/	2	)

srch	-	(	srch	/	2	)

i	<	4	*	size	*	size

x	+	size	/	4

x	+	size	*	3	/	4

y	+	size	/	4

y	+	size	*	3	/	4

size	*	(	1	<<	level	)
size	*	1	<<	level
i	%	2	==	0

row_dim	*	2	+	(	ffs	(	dim	)	+	3	)	*	PAD
row_dim	*	2	+	ffs	(	dim	)	+	3	*	PAD
x	<	size	/	2	&&	y	<	size	/	2

y	<	size	/	2

x	<	size	/	2

reds	+	(	size	/	2	)	*	size	*	4

blues	+	size	/	2	*	4

10	+	(	10	+	SIZE	)	*	0
10	+	10	+	SIZE	*	0
10	+	(	10	+	SIZE	)	*	1
10	+	10	+	SIZE	*	1
10	+	(	10	+	SIZE	)	*	2
10	+	10	+	SIZE	*	2
10	+	(	10	+	SIZE	)	*	3
10	+	10	+	SIZE	*	3
10	+	(	10	+	SIZE	)	*	0
10	+	10	+	SIZE	*	0
10	+	(	10	+	SIZE	)	*	1
10	+	10	+	SIZE	*	1
x	+	size	/	4

x	+	size	*	3	/	4

y	+	size	/	4

y	+	size	*	3	/	4

(	SIZEMAX	+	2	)	*	(	SIZEMAX	+	2	)	*	(	SIZEMAX	+	2	)	*	4
SIZEMAX	+	2	*	SIZEMAX	+	2	*	(	SIZEMAX	+	2	)	*	4
(	y	*	stride	+	x	)	*	4
y	*	stride	+	x	*	4
offset	*	(	TILE_SIZE	+	TILE_SPACE	)	+	5
offset	*	(	TILE_SIZE	+	TILE_SPACE	)	+	5
i	*	(	TILE_SIZE	+	TILE_SPACE	)	+	35
i	*	TILE_SIZE	+	TILE_SPACE	+	35
x0	+	BIAS	*	(	x1	-	x0	)	/	(	s1	-	s0	)
x0	+	BIAS	*	(	x1	-	x0	)	/	s1	-	s0
y0	+	BIAS	*	(	y1	-	y0	)	/	(	t1	-	t0	)
y0	+	BIAS	*	y1	-	y0	/	t1	-	t0
x1	-	BIAS	*	(	x1	-	x0	)	/	(	s1	-	s0	)
x1	-	BIAS	*	x1	-	x0	/	s1	-	s0
y0	+	BIAS	*	(	y1	-	y0	)	/	(	t1	-	t0	)
y0	+	BIAS	*	y1	-	y0	/	t1	-	t0
x1	-	BIAS	*	(	x1	-	x0	)	/	(	s1	-	s0	)
x1	-	BIAS	*	(	x1	-	x0	)	/	(	s1	-	s0	)
y1	-	BIAS	*	(	y1	-	y0	)	/	(	t1	-	t0	)
y1	-	BIAS	*	y1	-	y0	/	t1	-	t0
x0	+	BIAS	*	(	x1	-	x0	)	/	(	s1	-	s0	)
x0	+	BIAS	*	x1	-	x0	/	s1	-	s0
y1	-	BIAS	*	(	y1	-	y0	)	/	(	t1	-	t0	)
y1	-	BIAS	*	(	y1	-	y0	)	/	(	t1	-	t0	)
offset	*	(	TILE_SIZE	+	TILE_SPACE	)	+	5
offset	*	(	TILE_SIZE	+	TILE_SPACE	)	+	5
5	+	(	(	offset	&	1	)	*	15	)
5	+	(	offset	&	1	*	15	)
offset	*	(	TILE_SIZE	+	TILE_SPACE	)	+	5
offset	*	(	TILE_SIZE	+	TILE_SPACE	)	+	5
i	*	(	TILE_SIZE	+	TILE_SPACE	)	+	35
i	*	TILE_SIZE	+	TILE_SPACE	+	35
b	<	(	texture_size	+	BIAS_INT	*	2	)
b	<	(	texture_size	+	BIAS_INT	*	2	)
a	<	(	texture_size	+	BIAS_INT	*	2	)
a	<	(	texture_size	+	BIAS_INT	*	2	)
x0	+	TEXEL_SIZE	*	(	a	+	0.5	)
x0	+	TEXEL_SIZE	*	a	+	0.5
y0	+	TEXEL_SIZE	*	(	b	+	0.5	)
y0	+	TEXEL_SIZE	*	b	+	0.5
(	z	*	bsize_y	*	bsize_x	+	y	*	bsize_x	+	x	)	*	4
z	*	bsize_y	*	bsize_x	+	y	*	bsize_x	+	x	*	4
y	==	border_y	&&	x	==	border_x

y	==	border_y	&&	x	==	bsize_x	-	border_x	-	1

y	==	bsize_y	-	border_y	-	1	&&	x	==	border_x

y	==	bsize_y	-	border_y	-	1	&&	x	==	bsize_x	-	border_x	-	1

(	z	==	0	&&	border_z	)	||	(	z	==	bsize_z	-	1	&&	border_z	)	||	(	y	==	0	&&	border_y	)	||	(	y	==	bsize_y	-	1	&&	border_y	)	||	(	x	==	0	&&	border_x	)	||	(	x	==	bsize_x	-	1	&&	border_x	)

(	y	+	x	-	!	border_y	)	&	1

x	<	bsize_z	*	bsize_y	*	bsize_x

(	z	*	size_y	*	size_x	+	y	*	size_x	+	x	)	*	4
z	*	size_y	*	size_x	+	y	*	size_x	+	x	*	4
y	==	0	&&	x	==	0

y	==	0	&&	x	==	size_x	-	1

y	==	size_y	-	1	&&	x	==	0

y	==	size_y	-	1	&&	x	==	size_x	-	1

(	y	+	x	)	&	1

x	<	size_z	*	size_y	*	size_x

(	z	*	size_y	*	size_x	+	y	*	size_x	+	x	)	*	4
z	*	size_y	*	size_x	+	y	*	size_x	+	x	*	4
(	z	*	size_y	*	size_x	+	y	*	size_x	)	*	16	+	x	*	4
z	*	size_y	*	size_x	+	y	*	size_x	*	16	+	x	*	4
dstb	+	r	*	size_x	*	4

(	dstr	+	c	)	*	4
dstr	+	c	*	4
x	<	size_z	*	size_y	*	size_x

x	<	size_z	*	size_y	*	size_x

r	!=	f	->	red	||	(	g	!=	f	->	green	&&	g	-	1	!=	f	->	green	)	||	b	!=	f	->	blue	||	a	!=	f	->	alpha	||	l	!=	f	->	luminance	||	i	!=	f	->	intensity	||	d	!=	f	->	depth	||	s	!=	f	->	stencil	||	iformat	!=	f	->	internalformat

(	layer	+	0.5	)	/	d
layer	+	0.5	/	d
1	<=	w	&&	w	<=	16

1	<=	h	&&	h	<=	16

1	<=	d	&&	d	<=	16

rand	(	)	%	300	-	100

rand	(	)	%	300	-	100

(	i	/	4	)	%	16

(	i	+	j	)	&	1

10	+	(	10	+	SIZE	)	*	0
10	+	10	+	SIZE	*	0
10	+	(	10	+	SIZE	)	*	1
10	+	10	+	SIZE	*	1
10	+	(	10	+	SIZE	)	*	2
10	+	10	+	SIZE	*	2
10	+	(	10	+	SIZE	)	*	3
10	+	10	+	SIZE	*	3
test_target	!=	-	1	&&	test_target	!=	j

(	layer	+	0.5	)	/	d
layer	+	0.5	/	d
1	<=	w	&&	w	<=	16

1	<=	h	&&	h	<=	16

1	<=	d	&&	d	<=	16

i	<	4	*	size	*	size

cellx	*	CellWidth	+	(	CellWidth	/	2	)

celly	*	CellHeight	+	(	CellHeight	/	2	)

!	HaveShadowAmbient	&&	ambient	>	0.0

(	(	nr	&	3	)	+	1	)	*	0.2
nr	&	3	+	1	*	0.2
CellSize	*	(	cellnr	&	15	)
CellSize	*	cellnr	&	15
readback	+	4	*	(	y	*	CellSize	+	x	)
readback	+	4	*	y	*	CellSize	+	x
(	v	+	a	-	1	)	&	~	(	a	-	1	)
(	v	+	a	-	1	)	&	~	a	-	1
(	SIZE	>>	level	)	>	0

!	vs	||	!	fs

(	b1	<<	8	)	|	(	b2	)

(	b1	<<	24	)	|	(	b2	<<	16	)	|	(	b3	<<	8	)	|	(	b4	)

(	raw	->	type	&	0xFF00	)	==	0x0100
raw	->	type	&	0xFF00	==	0x0100
512	+	(	2	*	x	)

(	raw	->	type	&	0xFF00	)	==	0x0100
raw	->	type	&	0xFF00	==	0x0100
y	+	z	*	raw	->	sizeY

y	+	z	*	raw	->	sizeY

512	+	(	y	*	raw	->	sizeX	)	+	(	z	*	raw	->	sizeX	*	raw	->	sizeY	)

(	raw	->	sizeX	+	1	)	*	(	raw	->	sizeY	+	1	)	*	4
raw	->	sizeX	+	1	*	raw	->	sizeY	+	1	*	4
(	iy	<<	8	)	|	icr

(	iy	<<	8	)	|	icb

image	->	components	!=	3	&&	image	->	components	!=	4

data	+	(	height	*	width	*	bytes	)

array	+	i	*	5	+	2

array	+	i	*	5	+	2

array	+	i	*	5	+	17

array	+	i	*	5	+	17

array	+	i	*	5	+	32

array	+	i	*	5	+	32

array	+	i	*	5	+	47

array	+	i	*	5	+	47

array	+	i	*	15	+	j	*	5	+	2

array	+	i	*	15	+	j	*	5

array	+	i	*	15	+	j	*	5	+	2

array	+	i	*	15	+	j	*	5

start_x	+	next_x	*	0

start_x	+	next_x	*	1

start_x	+	next_x	*	1

start_x	+	next_x	*	2

start_x	+	next_x	*	2

start_x	+	next_x	*	3

start_x	+	next_x	*	3

(	vbo_cfg	!=	DISABLE_VBO	)	&&	(	vbo_cfg	!=	VBO_INDEX_ONLY	)

(	vbo_cfg	==	VBO_INDEX_ONLY	)	||	(	vbo_cfg	==	VBO_SEPARATE_VERTEX_AND_INDEX	)

(	vbo_cfg	==	DISABLE_VBO	)	||	(	vbo_cfg	==	VBO_VERTEX_ONLY	)

(	vbo_cfg	!=	DISABLE_VBO	)	&&	(	vbo_cfg	!=	VBO_VERTEX_ONLY	)

(	vbo_cfg	!=	DISABLE_VBO	)	&&	(	vbo_cfg	!=	VBO_INDEX_ONLY	)

10	+	i	*	20

20	+	i	*	20

i	<	NUM_QUADS	-	1

i	<	NUM_QUADS	-	1

15	+	i	*	20

15	+	j	*	20

j	==	i	||	j	==	i	+	1

start_x	+	next_x	*	0

start_x	+	next_x	*	1

start_x	+	next_x	*	1

start_x	+	next_x	*	2

start_x	+	next_x	*	3

start_x	+	next_x	*	3

5	+	(	10	+	5	)	*	x	+	y	*	0.2
5	+	10	+	5	*	x	+	y	*	0.2
5	+	(	10	+	5	)	*	y	+	x	*	0.2
5	+	10	+	5	*	y	+	x	*	0.2
5	+	(	10	+	5	)	*	x
5	+	10	+	5	*	x
5	+	(	10	+	5	)	*	y
5	+	10	+	5	*	y
i	<	tris	*	3

x	>=	32	&&	x	<	96	&&	y	>=	32	&&	y	<	96

d0	<	-	dist_eps	&&	d1	<	-	dist_eps	&&	d2	<	-	dist_eps

d0	>	dist_eps	||	d1	>	dist_eps	||	d2	>	dist_eps

near	+	(	far	-	near	)	*	i	/	5.0
near	+	far	-	near	*	i	/	5.0
near	+	(	far	-	near	)	*	i	/	5.0
near	+	far	-	near	*	i	/	5.0
(	far	-	z	)	/	(	far	-	near	)
far	-	z	/	(	far	-	near	)
-	(	2.0	*	z	)	*	(	2.0	*	z	)
-	2.0	*	z	*	(	2.0	*	z	)
i	<	tris	*	6

(	75	*	75	)	-	(	55	*	55	)

(	v2	->	x	-	v1	->	x	)	*	dx
v2	->	x	-	v1	->	x	*	dx
(	v2	->	y	-	v1	->	y	)	*	dy
v2	->	y	-	v1	->	y	*	dy
probe_y	<=	y	+	h

probe_x	<=	x	+	w

probe_y	<	y	||	probe_y	>=	y	+	h	||	probe_x	<	x	||	probe_x	>=	x	+	w

(	color_red	+	color_green	+	color_blue	)	<	1

(	accum_red	+	accum_green	+	accum_blue	)	<	1

x	+	w	*	1	/	4

y	+	h	*	1	/	4

x	+	w	*	3	/	4

y	+	h	*	1	/	4

x	+	w	*	1	/	4

y	+	h	*	3	/	4

x	+	w	*	3	/	4

y	+	h	*	3	/	4

(	double	)	tv	.	tv_sec	+	tv	.	tv_usec	/	1000000.0

t	-	tRate0	>=	3.0

(	time_val	/	frames	)	<	0.0016

!	Intel_swap_event	==	0

time_fin	-	t_last	>=	3.0

!	(	interval_diff	||	async	||	test_events	)
!	interval_diff	||	async	||	test_events
index	==	0	||	index	==	2

draw_secondary_loc	!=	-	1

expected_glx_error	!=	-	1	&&	glx_error_code	!=	expected_glx_error

src	>	dst	-	size	&&	src	<	dst	+	size

i	<	BUF_SIZE	/	chunk

read	+	pixel	*	chans	*	read_info	->	size	/	8

(	(	char	*	)	packed	)	+	(	(	pixel	*	values_per_pixel	+	chan	)	*	read_info	->	size	/	8	)
(	(	char	*	)	packed	)	+	(	pixel	*	values_per_pixel	+	chan	*	read_info	->	size	/	8	)
i	<	6	*	test_to_run	->	expected_num_output_components

i	>=	offset	&&	i	<	offset	+	range

i	*	num_varyings	+	j

(	16	-	i	)	/	16.0
16	-	i	/	16.0
2	+	12	*	index

vertex	*	num_xfb_varyings	+	varying

memcmp	(	expected	,	actual	,	4	*	sizeof	(	float	)	)	!=	0

offset	+	num_xfb_varyings	<=	max_varyings

col	<	max_varyings	-	row

test	->	mode	==	USEPROG_ACTIVE	||	test	->	mode	==	LINK_OTHER_ACTIVE

test	->	mode	==	UNBOUND_BUFFER	&&	i	==	test	->	param

additional_offset	>	12	||	additional_offset	%	4	!=	0

j	<	NUM_OUT_VERTICES	*	4

i	<	NUM_OUT_VERTICES	*	comps

i	<	NUM_POINTS	/	2

i	+	NUM_POINTS	/	2

2	*	i	+	1

x	%	2	==	0

3	*	x	+	1

(	(	unsigned	)	1	)	<<	(	(	SHIFT_COUNT	*	iteration_count	)	%	31	)

3	*	i	+	1

3	*	i	+	2

i	<	4	*	w	*	h

i	<	4	*	size	*	size

i	<	4	*	w	*	h

i	<	4	*	w	*	h

expected_glx_error	!=	-	1	&&	glx_error_code	!=	expected_glx_error

major	<	2	||	(	major	==	2	&&	minor	<	0	)

major	<	1	||	(	major	==	1	&&	minor	<	2	)

i	<	ARRAY_SIZE	(	values	)	*	3

sign_in_shader	==	-	1	||	sign_in_shader	==	0

isinf	(	delta	)	||	isnan	(	delta	)	||	fabs	(	delta	)	>	threshold

i	<	sizeof	(	expressions	)	/	sizeof	(	*	expressions	)

sx	-	x	/	8

sy	-	y	/	8

dx	==	0	&&	dy	==	0

expected	+	(	y	*	64	+	x	)	*	4
expected	+	y	*	64	+	x	*	4
(	tex_size	>>	l	)	>	0

10	+	20	*	l

(	q	%	2	)	*	(	(	height	/	2	)	)

10	+	20	*	q

(	tex_size	>>	l	)	>	0

10	+	20	*	l

(	q	%	2	)	*	(	(	height	/	2	)	)

10	+	20	*	q

10	+	i	*	20

20	+	i	*	20

i	<	NUM_QUADS	-	1

i	<	NUM_QUADS	-	1

15	+	i	*	20

15	+	j	*	20

j	==	i	+	1

val	*	Scale	+	Bias

(	i	+	1	)	%	12
i	+	1	%	12
i	+	1	<	comps

1.0	-	size	/	2

near	+	(	far	-	near	)	*	i	/	5.0
near	+	far	-	near	*	i	/	5.0
near	+	(	far	-	near	)	*	i	/	5.0
near	+	far	-	near	*	i	/	5.0
(	far	-	z	)	/	(	far	-	near	)
far	-	z	/	(	far	-	near	)
-	(	2.0	*	z	)	*	(	2.0	*	z	)
-	2.0	*	z	*	(	2.0	*	z	)
(	i	*	4	+	j	)	*	4	+	0
i	*	4	+	j	*	4	+	0
i	*	2	+	0

j	*	2	+	0

i	*	4	+	0

(	i	*	4	+	j	)	*	4	+	1
i	*	4	+	j	*	4	+	1
i	*	2	+	1

j	*	2	+	1

i	*	4	+	1

(	i	*	4	+	j	)	*	4	+	2
i	*	4	+	j	*	4	+	2
i	*	4	+	2

(	i	*	4	+	j	)	*	4	+	3
i	*	4	+	j	*	4	+	3
i	*	4	+	3

location	!=	-	1

location	==	-	1

i	<	16	*	16	*	4

(	rand	(	)	%	256	)	/	255.f

sample	*	format	->	components	+	i

sample	*	format	->	components	+	i

5	+	i	*	10

10	+	i	*	10

piglit_probe_pixel_rgb	(	x	+	5	,	y	,	green	)	&&	pass

piglit_probe_pixel_rgb	(	x	,	y	+	5	,	blue	)	&&	pass

piglit_probe_pixel_rgb	(	x	+	5	,	y	+	5	,	white	)	&&	pass

piglit_probe_pixel_rgb	(	x	+	5	,	y	,	blue	)	&&	pass

piglit_probe_pixel_rgb	(	x	,	y	+	5	,	green	)	&&	pass

piglit_probe_pixel_rgb	(	x	+	5	,	y	+	5	,	red	)	&&	pass

piglit_probe_pixel_rgb	(	x	+	5	,	y	,	white	)	&&	pass

piglit_probe_pixel_rgb	(	x	,	y	+	5	,	white	)	&&	pass

piglit_probe_pixel_rgb	(	x	+	5	,	y	+	5	,	white	)	&&	pass

half_width	+	half_width	/	2	-	2

half_height	+	half_height	/	2	-	2

piglit_probe_pixel_rgb	(	x	+	5	,	y	,	green	)	&&	pass

piglit_probe_pixel_rgb	(	x	,	y	+	5	,	blue	)	&&	pass

piglit_probe_pixel_rgb	(	x	+	5	,	y	+	5	,	white	)	&&	pass

blend	==	2	&&	!	logicop

blend	==	3	&&	!	logicop

(	double	)	tv	.	tv_sec	+	tv	.	tv_usec	/	1000000.0

d	*	d	/	(	num_results	-	1	)
d	*	d	/	num_results	-	1
t	>	t_cutoff	&&	fabs	(	delta_mean	)	>	.05	*	cpu_time_mean

loc	!=	-	1

y	<	TEXSIZE	/	2

x	<	TEXSIZE	/	2

x	<	TEXSIZE	/	2

1	+	(	BOX_SIZE	/	2	)	+	(	i	*	(	BOX_SIZE	+	1	)	)
1	+	(	BOX_SIZE	/	2	)	+	(	i	*	BOX_SIZE	+	1	)
1	+	(	BOX_SIZE	/	2	)	+	(	j	*	(	BOX_SIZE	+	1	)	)
1	+	(	BOX_SIZE	/	2	)	+	(	j	*	BOX_SIZE	+	1	)
maxSize	/	(	float	)	(	1	<<	j	)

!	piglit_probe_pixel_rgb	(	x	-	(	size	/	4	)	,	y	+	(	size	/	4	)	,	upper_left	)	||	!	piglit_probe_pixel_rgb	(	x	-	(	size	/	4	)	,	y	-	(	size	/	4	)	,	lower_left	)	||	!	piglit_probe_pixel_rgb	(	x	+	(	size	/	4	)	,	y	+	(	size	/	4	)	,	lower_left	)	||	!	piglit_probe_pixel_rgb	(	x	+	(	size	/	4	)	,	y	-	(	size	/	4	)	,	upper_left	)

(	i	^	j	)	&	(	BOX_SIZE	/	4	)
(	i	^	j	)	&	(	BOX_SIZE	/	4	)
size	==	~	0

err	==	-	1

10	*	major	+	minor

(	fi	.	i	>>	23	)	&	0xff

(	fi	.	i	>>	31	)	&	0x1

(	flt_e	==	0	)	&&	(	flt_m	==	0	)

(	flt_e	==	0	)	&&	(	flt_m	!=	0	)

(	flt_e	==	0xff	)	&&	(	flt_m	==	0	)

(	flt_e	==	0xff	)	&&	(	flt_m	!=	0	)

new_exp	<	-	24

new_exp	<	-	14

512	+	(	flt_m	>>	14	)
512	+	flt_m	>>	14
256	+	(	flt_m	>>	15	)
256	+	flt_m	>>	15
128	+	(	flt_m	>>	16	)
128	+	flt_m	>>	16
64	+	(	flt_m	>>	17	)
64	+	flt_m	>>	17
32	+	(	flt_m	>>	18	)
32	+	flt_m	>>	18
16	+	(	flt_m	>>	19	)
16	+	flt_m	>>	19
8	+	(	flt_m	>>	20	)
8	+	flt_m	>>	20
4	+	(	flt_m	>>	21	)
4	+	flt_m	>>	21
2	+	(	flt_m	>>	22	)
2	+	flt_m	>>	22
(	s	<<	15	)	|	(	e	<<	10	)	|	m

maxrgb	/	denom	+	0.5

maxm	==	MAX_RGB9E5_MANTISSA	+	1
maxm	==	MAX_RGB9E5_MANTISSA	+	1
rc	/	denom	+	0.5

gc	/	denom	+	0.5

bc	/	denom	+	0.5

(	j	*	w	+	i	)	*	num_components
j	*	w	+	i	*	num_components
(	j	*	w	+	i	)	*	num_components
j	*	w	+	i	*	num_components
j	<	y	+	h

i	<	x	+	w

j	<	y	+	h

i	<	x	+	w

(	row	^	col	)	&	1
row	^	col	&	1
i	<	size	*	size

x	<	w	/	2	&&	y	<	h	/	2

y	<	h	/	2

x	<	w	/	2

(	float	)	(	x	)	/	(	w	-	1	)
(	float	)	(	x	)	/	w	-	1
y	*	w	+	x

(	y	*	w	+	x	)	*	2
y	*	w	+	x	*	2
y	*	w	+	x

(	row	^	col	)	&	1
row	^	col	&	1
glxMajor	!=	major	||	glxMinor	<	minor

(	num_vertex_shaders	==	0	)	&&	(	num_fragment_shaders	==	0	)

strlen	(	orig	)	+	(	len_with	-	len_rep	)	*	count	+	1
strlen	(	orig	)	+	len_with	-	len_rep	*	count	+	1
sizeof	(	char	)	*	(	separator_pos	-	rest	+	1	)
sizeof	(	char	)	*	separator_pos	-	rest	+	1
sizeof	(	char	)	*	(	strlen	(	rest	)	+	1	)
sizeof	(	char	)	*	strlen	(	rest	)	+	1
argc	<	2	||	ShowVersion

argc	<	2	||	ShowUsage

minProfile	>	1	&&	Extras	->	CurrProfile	<	2

1.0	+	a	+	a	*	a	/	2.0	+	a	*	a	*	a	/	6.0

(	n	-	1	)	*	n
n	-	1	*	n
i	+	PI	/	2

n	>	1	&&	Line	<	n

rndseed	*	0x8088405	+	1

n	>	1	&&	Line	<	n

sourceLen	+	(	sourceLen	>>	12	)	+	(	sourceLen	>>	14	)	+	(	sourceLen	>>	25	)	+	13
sourceLen	+	sourceLen	>>	12	+	sourceLen	>>	14	+	sourceLen	>>	25	+	13
strlen	(	file	)	+	strlen	(	GZ_SUFFIX	)	>=	sizeof	(	outfile	)

argc	--	,	argv	++

argc	--	,	argv	++

argv	++	,	--	argc

--	len	>	0

pos	!=	6	||	gztell	(	file	)	!=	pos

c_stream	.	total_in	!=	len	&&	c_stream	.	total_out	<	comprLen

d_stream	.	total_out	<	uncomprLen	&&	d_stream	.	total_in	<	comprLen

d_stream	.	total_out	!=	2	*	uncomprLen	+	comprLen	/	2

compr	==	Z_NULL	||	uncompr	==	Z_NULL

err	==	Z_NEED_DICT	||	(	err	==	Z_BUF_ERROR	&&	stream	.	avail_in	==	0	)

next	<	len	&&	got	<	4

a	->	Class	<	b	->	Class	||	(	a	->	Class	==	b	->	Class	&&	a	->	Id	<	b	->	Id	)

a	->	Class	>	b	->	Class	||	a	->	Id	>	b	->	Id

(	BUFFER_SIZE	-	1	)	<<	16

ch	<	0x80	&&	OutLen	>	1

ch	<	0x800	&&	OutLen	>	2

ch	<	0x10000	&&	OutLen	>	3

*	In	&&	OutLen	>	1

(	(	v	>>	4	)	&	15	)	*	10	+	(	v	&	15	)
(	(	v	>>	4	)	&	15	)	*	10	+	v	&	15
(	v	%	4	)	==	0	&&	(	(	v	%	100	)	!=	0	||	(	v	%	400	)	==	0	)
(	v	%	4	)	==	0	&&	(	v	%	100	)	!=	0	||	(	v	%	400	)	==	0
a	%	(	24	*	60	*	60	)
a	%	24	*	60	*	60
t	.	tv_sec	*	1000	+	t	.	tv_usec	/	1000

p	->	fd	!=	-	1

p	->	fd	==	-	1

p	->	fd	!=	-	1

max_decimal_digits	--	>	0

w	>	v	&&	w	>	1

Decimals	--	>	0

dvs	*	_dvs	>	1.0

dvs	*	_dvs	<	1.0

(	n	%	32	)	==	0

(	type	&	FLAG_PATH_MASK	)	==	type
type	&	FLAG_PATH_MASK	==	type
(	type	&	FLAG_PATH_MASK	)	==	type
type	&	FLAG_PATH_MASK	==	type
(	p	->	childend	-	child	-	1	)	*	sizeof	(	item	*	)
p	->	childend	-	child	-	1	*	sizeof	(	item	*	)
!	(	(	*	child	)	->	flags	&	FLAG_REMOVED	)
!	(	*	child	)	->	flags	&	FLAG_REMOVED
p	&&	--	p	->	refcount	==	0

!	a	&&	!	b

!	a	||	!	b

(	itemcond_same	(	a	->	a	,	b	->	a	)	&&	itemcond_same	(	a	->	b	,	b	->	b	)	)	||	(	itemcond_same	(	a	->	b	,	b	->	a	)	&&	itemcond_same	(	a	->	a	,	b	->	b	)	)

cond	->	func	==	COND_AND	&&	has

cond	->	a	->	func	==	COND_GET	&&	itemcond_contains	(	cond	->	b	,	cond	->	a	->	value	)

cond	->	b	->	func	==	COND_GET	&&	itemcond_contains	(	cond	->	a	,	cond	->	b	->	value	)

a	&&	a	->	func	==	COND_OR

!	(	p	->	value	->	flags	&	FLAG_PROCESSED	)
!	p	->	value	->	flags	&	FLAG_PROCESSED
(	p	->	value	->	flags	&	FLAG_DEFINED	)	==	FLAG_DEFINED
p	->	value	->	flags	&	FLAG_DEFINED	==	FLAG_DEFINED
(	child	->	flags	&	FLAG_DEFINED	)	==	FLAG_DEFINED
child	->	flags	&	FLAG_DEFINED	==	FLAG_DEFINED
(	(	child	->	flags	&	FLAG_REMOVED	)	||	removed	)	&&	(	!	*	exists	||	(	dup	->	flags	&	FLAG_REMOVED	)	)
(	child	->	flags	&	FLAG_REMOVED	)	||	removed	&&	!	*	exists	||	(	dup	->	flags	&	FLAG_REMOVED	)
child	->	flags	&	~	FLAG_REMOVED

(	plus	->	flags	&	FLAG_REMOVED	)	==	FLAG_REMOVED
plus	->	flags	&	FLAG_REMOVED	==	FLAG_REMOVED
!	(	p	->	r	.	flags	&	FLAG_READY	)	&&	!	reader_read	(	p	)
!	p	->	r	.	flags	&	FLAG_READY	&&	!	reader_read	(	p	)
!	(	p	->	r	.	flags	&	FLAG_READY	)	&&	!	reader_read	(	p	)
!	p	->	r	.	flags	&	FLAG_READY	&&	!	reader_read	(	p	)
!	(	p	->	r	.	flags	&	FLAG_READY	)
!	p	->	r	.	flags	&	FLAG_READY
!	(	p	->	r	.	flags	&	FLAG_READY	)
!	p	->	r	.	flags	&	FLAG_READY
!	(	p	->	r	.	flags	&	FLAG_READY	)	&&	!	reader_read	(	p	)
!	p	->	r	.	flags	&	FLAG_READY	&&	!	reader_read	(	p	)
(	path_flags	&	FLAG_PATH_MASK	)	==	FLAG_PATH_NOT_PATH
path_flags	&	FLAG_PATH_MASK	==	FLAG_PATH_NOT_PATH
!	(	path_flags	&	FLAG_PATH_SET_ABSOLUTE	)
!	path_flags	&	FLAG_PATH_SET_ABSOLUTE
i	&&	j	&&	(	i	-	path	)	==	(	j	-	curr	)	&&	strnicmp	(	path	,	curr	,	i	-	path	)	==	0

(	dst_flags	&	FLAG_PATH_SET_ABSOLUTE	)	==	0
dst_flags	&	FLAG_PATH_SET_ABSOLUTE	==	0
(	dst_flags	&	FLAG_PATH_MASK	)	!=	(	p	->	r	.	filename_kind	&	FLAG_PATH_MASK	)
dst_flags	&	FLAG_PATH_MASK	!=	p	->	r	.	filename_kind	&	FLAG_PATH_MASK
sub	!=	2	&&	sub	!=	3

startpos	&&	!	nobreak	&&	pos	>	*	startpos	+	200

!	first	&&	(	p	->	func	==	COND_OR	||	p	->	func	==	COND_AND	)	&&	p	->	func	!=	prev
!	first	&&	p	->	func	==	COND_OR	||	p	->	func	==	COND_AND	&&	p	->	func	!=	prev
!	first	&&	(	p	->	func	==	COND_OR	||	p	->	func	==	COND_AND	)	&&	p	->	func	!=	prev
!	first	&&	p	->	func	==	COND_OR	||	p	->	func	==	COND_AND	&&	p	->	func	!=	prev
!	(	p	->	flags	&	FLAG_REMOVED	)
!	p	->	flags	&	FLAG_REMOVED
!	(	(	*	child	)	->	flags	&	FLAG_DEFINED	)
!	(	*	child	)	->	flags	&	FLAG_DEFINED
!	(	p	->	flags	&	FLAG_PROCESSED	)
!	p	->	flags	&	FLAG_PROCESSED
prj	&&	!	no_project

host	&&	!	lib

host	&&	!	lib

ref	&&	!	(	ref	->	flags	&	FLAG_REMOVED	)
ref	&&	!	ref	->	flags	&	FLAG_REMOVED
a	&&	!	(	a	->	flags	&	FLAG_REMOVED	)
a	&&	!	a	->	flags	&	FLAG_REMOVED
!	(	(	*	child	)	->	flags	&	FLAG_REMOVED	)
!	(	*	child	)	->	flags	&	FLAG_REMOVED
!	(	(	*	child	)	->	flags	&	FLAG_REMOVED	)
!	(	*	child	)	->	flags	&	FLAG_REMOVED
!	(	(	*	child	)	->	flags	&	FLAG_REMOVED	)
!	(	*	child	)	->	flags	&	FLAG_REMOVED
!	(	(	*	child	)	->	flags	&	FLAG_REMOVED	)
!	(	*	child	)	->	flags	&	FLAG_REMOVED
!	(	(	*	child	)	->	flags	&	FLAG_REMOVED	)
!	(	*	child	)	->	flags	&	FLAG_REMOVED
--	s	!=	path

!	(	path_flags	&	FLAG_PATH_SET_ABSOLUTE	)
!	path_flags	&	FLAG_PATH_SET_ABSOLUTE
++	curr_build	>	MAX_PUSHED_PATH

--	curr_build	<	0

!	i	->	parent	||	relpath

!	skip	&&	!	j	&&	i2	->	parent

!	skip	&&	!	j

--	deep	<	0

usename	||	child	!=	j	->	childend

(	Item	->	flags	&	FLAG_PATH_SET_ABSOLUTE	)	==	FLAG_PATH_SET_ABSOLUTE
isabs	&&	!	only_abspath

!	isabs	&&	!	only_relpath

(	value_flags	&	FLAG_PATH_MASK	)	!=	FLAG_PATH_NOT_PATH
!	isalpha	(	ch	)	&&	!	isdigit	(	ch	)
(	ch	)	&&	!	isdigit	(	ch	!	isalpha	(	ch	)	&&	!	isdigit	(	ch	isalpha	(	ch	)	&&	!	isdigit	(	ch	!	isalpha	(	ch	)	&&	!	isdigit	(	ch	)
findfile	&&	!	skip

findfile	&&	!	skip

!	filename	&&	(	name_flags	&	FLAG_PATH_MASK	)	!=	FLAG_PATH_NOT_PATH
!	escape	&&	(	!	has_forced_generated	||	(	name_flags	&	FLAG_PATH_MASK	)	==	FLAG_PATH_SYSTEM	)
skip	||	!	abspath

!	skip	&&	abspath	&&	is_relpath

i	&&	(	i	->	flags	&	FLAG_DEFINED	)
(	dir_stats	.	st_mode	&	S_IFDIR	)	!=	S_IFDIR
dir_stats	.	st_mode	&	S_IFDIR	!=	S_IFDIR
ret	!=	0	&&	ret	!=	EEXIST

*	*	in	&&	(	quote	||	!	isspace	(	*	*	in	)	)
*	in	&&	quote	||	!	isspace	(	*	*	in	*	*	in	&&	quote	||	!	isspace	(	*	*	in	)
pos0	&&	pos0	->	p	==	p

reader_tokenline	(	file	,	0	)	&&	!	skip

config	&&	config	->	flags	&	FLAG_DEFINED

!	v	||	skip

v	&&	!	skip

!	v	||	skip	||	done

i	&&	(	i	->	flags	&	FLAG_DEFINED	)
!	v	||	skip	||	done

!	i	||	!	(	i	->	flags	&	FLAG_DEFINED	)
!	v	||	skip	||	done

sub	!=	2	&&	sub	!=	3

!	skip	&&	i	&&	i	->	value

i	&&	!	skip

++	curr_build	>	MAX_PUSHED_PATH

--	curr_build	<	0

i	&&	i	->	child	!=	i	->	childend

ispathabs	(	i	->	value	)	||	!	ispathabs	(	src_root	)

(	dir_stats	.	st_mode	&	S_IFDIR	)	!=	S_IFDIR
dir_stats	.	st_mode	&	S_IFDIR	!=	S_IFDIR
ret	!=	0	&&	ret	!=	EEXIST

argc	<	(	1	+	InputPathIndex	)	||	ShowVersion

argc	<	2	||	ShowUsage

InputPathIndex	==	argc	-	1

Result	!=	0	||	ShowVersion

argc	<	1	||	ShowUsage

(	look	->	n	+	1	)	*	sizeof	(	*	look	->	linearmap	)
look	->	n	+	1	*	sizeof	(	*	look	->	linearmap	)
bytes	==	0	&&	errno

result	==	-	1

result	==	-	1

lastflag	&&	!	firstflag

(	lastblock	+	thisblock	)	>>	2

samples	>	(	bytes_req	/	(	2	*	channels	)	)

(	val	&	0x7fe00000L	)	>>	VQ_FMAN
val	&	0x7fe00000L	>>	VQ_FMAN
!	(	mant	&	0x40000000	)
!	mant	&	0x40000000
(	bytes	+	(	WORD_ALIGN	-	1	)	)	&	~	(	WORD_ALIGN	-	1	)
(	bytes	+	WORD_ALIGN	-	1	)	&	~	(	WORD_ALIGN	-	1	)
(	entry	>>	15	)	&	0x7fff

hi	-	lo	>	1

(	hi	-	lo	)	>>	1

p	&	(	test	-	1	)

p	&	(	-	test	)

entry	==	-	1

entry	==	-	1

entry	==	-	1

entry	==	-	1

i	<	offset	+	n

entry	==	-	1

i	<	offset	+	n

entry	==	-	1

j	<	n	/	2

j	<	maxclass	+	1

i	<	n	-	2

j	<	i	+	2

x	>	lx	&&	x	<	currentx

x	<	hx	&&	x	>	currentx

ady	*	(	x	-	x0	)
ady	*	x	-	x0
++	x	<	n

-	(	(	val	+	1	)	>>	1	)
-	(	val	+	1	)	>>	1
n	/	4	-	ln	/	4

leftbegin	+	ln	/	2

n	/	2	+	n	/	4	-	rn	/	4

rightbegin	+	rn	/	2

--	stages	>	0

(	x	&	0x0f0	)	>>	4
x	&	0x0f0	>>	4
!	(	n	&	(	1	<<	shift	)	)
!	n	&	(	1	<<	shift	)
(	partvals	+	partitions_per_word	-	1	)	/	partitions_per_word
partvals	+	partitions_per_word	-	1	/	partitions_per_word
temp	==	-	1

k	<	partitions_per_word	&&	i	<	partvals

(	partvals	+	partitions_per_word	-	1	)	/	partitions_per_word
partvals	+	partitions_per_word	-	1	/	partitions_per_word
temp	==	-	1

k	<	partitions_per_word	&&	i	<	partvals

(	bs	->	buffer	<<	1	)	|	(	bit	&	0x1	)

(	(	bs	->	buffer	)	>>	(	bs	->	buffLive	)	)	&	0x1

(	(	bs	->	buffer	)	>>	7	)	&	0x1

(	(	(	UInt32	)	c	)	>>	i	)	&	0x1

(	c	>>	i	)	&	0x1

(	buffHi	<<	1	)	|	(	buffLo	>>	31	)

(	buffLo	<<	1	)	|	(	b	&	1	)

(	(	buffHi	&	0x0000ffff	)	==	BLOCK_HEADER_HI	&&	buffLo	==	BLOCK_HEADER_LO	)	||	(	(	buffHi	&	0x0000ffff	)	==	BLOCK_ENDMARK_HI	&&	buffLo	==	BLOCK_ENDMARK_LO	)
(	buffHi	&	0x0000ffff	==	BLOCK_HEADER_HI	&&	buffLo	==	BLOCK_HEADER_LO	)	||	(	buffHi	&	0x0000ffff	==	BLOCK_ENDMARK_HI	&&	buffLo	==	BLOCK_ENDMARK_LO	)
(	buffHi	<<	1	)	|	(	buffLo	>>	31	)

(	buffLo	<<	1	)	|	(	b	&	1	)

(	buffHi	<<	16	)	|	(	buffLo	>>	16	)

(	hi32	>>	24	)	&	0xFF

(	hi32	>>	16	)	&	0xFF

(	hi32	>>	8	)	&	0xFF

(	lo32	>>	24	)	&	0xFF

(	lo32	>>	16	)	&	0xFF

(	lo32	>>	8	)	&	0xFF

nbytes_in_lo32	==	0	&&	nbytes_in_hi32	==	0

100.0	*	(	1.0	-	nbytes_out_d	/	nbytes_in_d	)
100.0	*	1.0	-	nbytes_out_d	/	nbytes_in_d
nUnused	==	0	&&	myfeof	(	zStream	)

nUnused	==	0	&&	myfeof	(	zStream	)

srcMode	==	SM_F2F	&&	opMode	!=	OM_TEST	&&	deleteOutputOnInterrupt

noisy	&&	numFileNames	>	0	&&	numFilesProcessed	<	numFileNames

i	<=	longestFileName	-	(	Int32	)	strlen	(	s	)

strlen	(	from	)	>	FILE_NAME_LEN	-	10

strcmp	(	s	+	ns	-	nx	,	suffix	)	==	0

srcMode	!=	SM_I2O	&&	containsDubiousChars	(	inName	)

srcMode	!=	SM_I2O	&&	!	fileExists	(	inName	)

srcMode	==	SM_F2F	||	srcMode	==	SM_F2O

srcMode	==	SM_F2F	&&	!	forceOverwrite	&&	notAStandardFile	(	inName	)

srcMode	==	SM_F2F	&&	fileExists	(	outName	)

srcMode	==	SM_F2F	&&	!	forceOverwrite

srcMode	!=	SM_I2O	&&	containsDubiousChars	(	inName	)

srcMode	!=	SM_I2O	&&	!	fileExists	(	inName	)

srcMode	==	SM_F2F	||	srcMode	==	SM_F2O

srcMode	==	SM_F2F	&&	!	forceOverwrite	&&	notAStandardFile	(	inName	)

srcMode	==	SM_F2F	&&	fileExists	(	outName	)

srcMode	==	SM_F2F	&&	!	forceOverwrite

srcMode	!=	SM_I2O	&&	containsDubiousChars	(	inName	)

srcMode	!=	SM_I2O	&&	!	fileExists	(	inName	)

allOK	&&	verbosity	>=	1

k	>	FILE_NAME_LEN	-	10

sizeof	(	Int32	)	!=	4	||	sizeof	(	UInt32	)	!=	4	||	sizeof	(	Int16	)	!=	2	||	sizeof	(	UInt16	)	!=	2	||	sizeof	(	Char	)	!=	1	||	sizeof	(	UChar	)	!=	1

i	<=	argc	-	1

opMode	==	OM_Z	&&	smallMode	&&	blockSize100k	>	2

opMode	==	OM_TEST	&&	srcMode	==	SM_F2O

srcMode	==	SM_F2O	&&	numFileNames	==	0

*	track	==	(	unsigned	int	)	-	1

UpperElement	!=	0	&&	*	Level	>	0

argc	!=	2	&&	argc	!=	3

argc	<	2	||	ShowVersion

argc	<	2	||	ShowUsage

numer	*	(	scale	/	denom	)	+	numer	*	(	scale	%	denom	)	/	denom
numer	*	(	scale	/	denom	)	+	numer	*	scale	%	denom	/	denom
scale	*	(	numer	/	denom	)	+	scale	*	(	numer	%	denom	)	/	denom
scale	*	(	numer	/	denom	)	+	scale	*	numer	%	denom	/	denom
numer	>=	denom	&&	denom	>	0

(	10	-	1	)	*	2	*	d
10	-	1	*	2	*	d
2	*	(	(	m	-	2	)	/	(	cycle	/	10	)	)
2	*	(	m	-	2	/	(	cycle	/	10	)	)
-	exp	*	(	3.0	/	4.0	)

mad_header_decode	(	&	frame	->	header	,	stream	)	==	-	1

mad_frame_decode	(	frame	,	stream	)	==	-	1

3	+	(	header	->	layer	>>	1	)
3	+	header	->	layer	>>	1
(	unsigned	long	)	header	->	samplerate	*	(	N	-	4	*	pad_slot	+	4	)	/	48	/	1000
(	unsigned	long	)	header	->	samplerate	*	N	-	4	*	pad_slot	+	4	/	48	/	1000
(	unsigned	long	)	header	->	samplerate	*	(	N	-	pad_slot	+	1	)	/	slots_per_frame	/	1000
(	unsigned	long	)	header	->	samplerate	*	N	-	pad_slot	+	1	/	slots_per_frame	/	1000
end	-	ptr	<	stream	->	skiplen

mad_stream_sync	(	stream	)	==	-	1

decode_header	(	header	,	stream	)	==	-	1

(	(	12	*	header	->	bitrate	/	header	->	samplerate	)	+	pad_slot	)	*	4
(	12	*	header	->	bitrate	/	header	->	samplerate	)	+	pad_slot	*	4
(	slots_per_frame	*	header	->	bitrate	/	header	->	samplerate	)	+	pad_slot

phase	&	~	1

(	(	phase	-	1	)	&	0xf	)	|	1

(	phase	+	1	)	%	16
phase	+	1	%	16
phase	&	~	1

(	(	phase	-	1	)	&	0xf	)	|	1

!	(	sb	&	1	)
!	sb	&	1
(	phase	+	1	)	%	16
phase	+	1	%	16
(	synth	->	phase	+	ns	)	%	16
synth	->	phase	+	ns	%	16
4	+	header	->	mode_extension	*	4

4	*	(	bound	*	nch	+	(	32	-	bound	)	)
4	*	bound	*	nch	+	(	32	-	bound	)
4	+	header	->	mode_extension	*	4

3	*	gr	+	s

3	*	gr	+	s

3	*	gr	+	s

!	(	(	mode_extension	&	I_STEREO	)	&&	gr1ch	)
!	(	mode_extension	&	I_STEREO	)	&&	gr1ch
(	scalefac_compress	>>	4	)	/	5
scalefac_compress	>>	4	/	5
(	scalefac_compress	>>	4	)	%	5
scalefac_compress	>>	4	%	5
(	scalefac_compress	%	16	)	>>	2

(	scalefac_compress	>>	2	)	/	5
scalefac_compress	>>	2	/	5
(	scalefac_compress	>>	2	)	%	5
scalefac_compress	>>	2	%	5
(	scalefac_compress	%	36	)	/	6

(	scalefac_compress	%	64	)	>>	4

(	scalefac_compress	%	16	)	>>	2

8	+	3	*	3

(	(	32	-	1	-	24	)	+	(	24	-	cachesz	)	)	&	~	7

big_values	--	&&	cachesz	+	bits_left	>	0

--	rcount	==	0

(	(	32	-	1	-	21	)	+	(	21	-	cachesz	)	)	&	~	7

cachesz	<	linbits	+	2

reqhits	&	(	1	<<	value	)

cachesz	<	linbits	+	1

reqhits	&	(	1	<<	value	)

reqhits	&	(	1	<<	value	)

reqhits	&	(	1	<<	value	)

cachesz	+	bits_left	<	0

f	--	==	0

*	sfbwidth	++	-	1

(	w	+	1	)	%	3
w	+	1	%	3
(	w	+	1	)	%	3
w	+	1	%	3
header	->	mode_extension	&	~	I_STEREO

header	->	mode_extension	&	~	I_STEREO

(	w	+	1	)	%	3
w	+	1	%	3
header	->	mode_extension	&	~	I_STEREO

(	(	sfreq	>>	7	)	&	0x000f	)	+	(	(	sfreq	>>	15	)	&	0x0001	)	-	8
(	sfreq	>>	7	)	&	0x000f	+	(	sfreq	>>	15	)	&	0x0001	-	8
channel	->	block_type	!=	2	||	(	channel	->	flags	&	mixed_block_flag	)

32	-	(	576	-	i	)	/	18
32	-	576	-	i	/	18
stream	->	next_frame	-	mad_bit_nextbyte	(	&	stream	->	ptr	)	<	(	signed	int	)	si_len

next_md_begin	>	si	.	main_data_begin	+	frame_space

md_len	*	CHAR_BIT	-	data_bitlen

extra	+	frame_free	>	next_md_begin

fstat	(	STDIN_FILENO	,	&	stat	)	==	-	1	||	stat	.	st_size	==	0

ptr	<	end	-	1

begin	->	left	+	CHAR_BIT	*	(	end	->	byte	-	(	begin	->	byte	+	1	)	)	+	(	CHAR_BIT	-	end	->	left	)
begin	->	left	+	CHAR_BIT	*	end	->	byte	-	(	begin	->	byte	+	1	)	+	(	CHAR_BIT	-	end	->	left	)
(	bitptr	->	cache	&	(	(	1	<<	bitptr	->	left	)	-	1	)	)	>>	(	bitptr	->	left	-	len	)
bitptr	->	cache	&	(	(	1	<<	bitptr	->	left	)	-	1	)	>>	(	bitptr	->	left	-	len	)
bitptr	->	cache	&	(	(	1	<<	bitptr	->	left	)	-	1	)
bitptr	->	cache	&	(	1	<<	bitptr	->	left	-	1	)
(	value	<<	CHAR_BIT	)	|	*	bitptr	->	byte	++

(	value	<<	len	)	|	(	bitptr	->	cache	>>	(	CHAR_BIT	-	len	)	)

(	(	crc	>>	8	)	^	(	data	>>	24	)	)	&	0xff
(	crc	>>	8	)	^	(	data	>>	24	)	&	0xff
(	(	crc	>>	8	)	^	(	data	>>	16	)	)	&	0xff
(	crc	>>	8	)	^	(	data	>>	16	)	&	0xff
(	(	crc	>>	8	)	^	(	data	>>	8	)	)	&	0xff
(	crc	>>	8	)	^	(	data	>>	8	)	&	0xff
(	(	crc	>>	8	)	^	(	data	>>	0	)	)	&	0xff
(	crc	>>	8	)	^	(	data	>>	0	)	&	0xff
uip_connr	->	timer	--	==	0

(	uip_connr	->	sa	>>	3	)	+	uip_connr	->	sv
uip_connr	->	sa	>>	3	+	uip_connr	->	sv
(	char	*	)	m	->	mem	+	(	i	*	m	->	size	)

s	->	state	!=	STATE_DATA_SENT	||	uip_rexmit	(	)

s	->	state	==	STATE_DATA_SENT	&&	uip_acked	(	)

strncmp	(	s	.	httpheaderline	,	http_11	,	sizeof	(	http_11	)	-	1	)	==	0

strncmp	(	cptr	,	http_200	,	sizeof	(	http_200	)	-	1	)	==	0

strncmp	(	cptr	,	http_301	,	sizeof	(	http_301	)	-	1	)	==	0	||	strncmp	(	cptr	,	http_302	,	sizeof	(	http_302	)	-	1	)	==	0

!	isalnum	(	(	int	)	(	(	unsigned	char	)	*	str	)	)
isalnum	(	(	int	)	(	(	unsigned	char	)	*	str	)	!	isalnum	(	(	int	)	(	(	unsigned	char	)	*	str	)	)
len	+	datalen	+	4	>	alloc_len

sizeof	(	char	*	)	*	(	len	+	1	)
sizeof	(	char	*	)	*	len	+	1
is_a_screen_saver	&&	!	login_token_name

configuration	->	slot_num	!=	-	1

configuration	->	slot_num	!=	-	1

configuration	->	slot_num	!=	-	1

rv	==	-	1

(	-	1	==	rv	)	||	(	0	==	rv	)

!	configuration	->	nullok	&&	strlen	(	password	)	==	0

(	errcode	>>	ERR_LIB_OFFSET	)	&	ERR_LIB_MASK

errcode	&	(	ERR_RFLAGS_MASK	<<	ERR_RFLAGS_OFFSET	)

(	ERR_GET_RFLAGS	(	errcode	)	&	ERR_RFLAG_FATAL	)	!=	0
ERR_GET_RFLAGS	(	errcode	)	&	ERR_RFLAG_FATAL	!=	0
(	ERR_GET_RFLAGS	(	errcode	)	&	ERR_RFLAG_COMMON	)	!=	0
ERR_GET_RFLAGS	(	errcode	)	&	ERR_RFLAG_COMMON	!=	0
sizeof	(	void	*	)	*	(	(	*	ncerts	)	+	1	)
sizeof	(	void	*	)	*	(	*	ncerts	)	+	1
lastpos	==	-	1

lastpos	==	-	1

lastpos	==	-	1

(	n	&	0xff000000	)	>>	24
n	&	0xff000000	>>	24
(	n	&	0x00ff0000	)	>>	16
n	&	0x00ff0000	>>	16
(	n	&	0x0000ff00	)	>>	8
n	&	0x0000ff00	>>	8
(	n	&	0x000000ff	)	>>	0
n	&	0x000000ff	>>	0
1	+	4	*	(	(	2	+	pt	-	blob	)	/	3	)
1	+	4	*	(	2	+	pt	-	blob	/	3	)
-	1	==	level

fd	==	-	1

*	length	==	-	1

sock	==	-	1

rv	==	-	1

rv	==	-	1

len	>=	bufsize	&&	rv

rv	==	301	||	rv	==	302

i	<	len	-	10

i	<	len	-	2

i	<	len	-	4

!	nullok	&&	strlen	(	pin	)	==	0

(	errcode	>>	ERR_LIB_OFFSET	)	&	ERR_LIB_MASK

errcode	&	(	ERR_RFLAGS_MASK	<<	ERR_RFLAGS_OFFSET	)

(	ERR_GET_RFLAGS	(	errcode	)	&	ERR_RFLAG_FATAL	)	!=	0
ERR_GET_RFLAGS	(	errcode	)	&	ERR_RFLAG_FATAL	!=	0
(	ERR_GET_RFLAGS	(	errcode	)	&	ERR_RFLAG_COMMON	)	!=	0
ERR_GET_RFLAGS	(	errcode	)	&	ERR_RFLAG_COMMON	!=	0
module_stat	.	st_mode	&	S_IWGRP	||	module_stat	.	st_mode	&	S_IWOTH	||	module_stat	.	st_uid	!=	0
st_mode	&	S_IWGRP	||	module_stat	.	st_mode	&	S_IWOTH	||	module_stat	.	st_uid	!=	module_stat	.	st_mode	&	S_IWGRP	||	module_stat	.	st_mode	&	S_IWOTH	||	module_stat	.	st_uid	!=	.	st_mode	&	S_IWGRP	||	module_stat	.	st_mode	&	S_IWOTH	||	module_stat	.	st_uid	!=	module_stat	.	st_mode	&	S_IWGRP	||	module_stat	.	st_mode	&	S_IWOTH	||	module_stat	.	st_uid	!=	0
fh	==	-	1

1	+	3	*	len

(	1	+	strlen	(	hexstr	)	)	/	3
1	+	strlen	(	hexstr	)	/	3
(	1	+	strlen	(	hexstr	)	)	/	3
1	+	strlen	(	hexstr	)	/	3
n	<	nelems	-	1

n	<	nelems	-	1

k	==	0	&&	c	==	0

(	a	>>	2	)	&	0x3F

(	(	(	a	&	3	)	<<	4	)	+	(	b	>>	4	)	)	&	0x3F
(	a	&	3	<<	4	+	(	b	>>	4	)	)	&	0x3F
finished	||	*	in	==	0

(	errcode	>>	ERR_LIB_OFFSET	)	&	ERR_LIB_MASK

errcode	&	(	ERR_RFLAGS_MASK	<<	ERR_RFLAGS_OFFSET	)

(	ERR_GET_RFLAGS	(	errcode	)	&	ERR_RFLAG_FATAL	)	!=	0
ERR_GET_RFLAGS	(	errcode	)	&	ERR_RFLAG_FATAL	!=	0
(	ERR_GET_RFLAGS	(	errcode	)	&	ERR_RFLAG_COMMON	)	!=	0
(	ERR_GET_RFLAGS	(	errcode	)	&	ERR_RFLAG_COMMON	)	!=	0
i	<=	data_len	-	24

j	<=	data_len	-	22

i	<=	data_len	-	24	&&	j	<=	data_len	-	22	&&	i	<	j

rv	==	-	1

(	at	-	c_email	)	==	strlen	(	c_user	)	&&	!	strncmp	(	c_email	,	c_user	,	strlen	(	c_user	)	)

(	!	key	)	||	is_empty_str	(	key	)

(	!	file	)	||	(	is_empty_str	(	(	char	*	)	file	)	)

!	strcasecmp	(	pw	->	pw_name	,	str	)	||	!	strcasecmp	(	pw	->	pw_gecos	,	str	)

!	strcmp	(	pw	->	pw_name	,	str	)	||	!	strcmp	(	pw	->	pw_gecos	,	str	)

!	login	||	is_empty_str	(	login	)

sizeof	(	void	*	)	*	(	(	*	nkeys	)	+	1	)
sizeof	(	void	*	)	*	(	*	nkeys	)	+	1
!	pw	||	is_empty_str	(	pw	->	pw_dir	)

str	&&	(	match_found	==	0	)

!	pw	||	!	pw	->	pw_dir

*	buflen	<	uri_len	+	1

i	<	certcnt	&&	!	match_found

str	&&	(	match_found	==	0	)

str	&&	(	match_found	==	0	)

str	&&	(	match_found	==	0	)

pid	==	-	1

waitpid	(	pid	,	&	status	,	0	)	==	-	1

pid	==	-	1

waitpid	(	pid	,	&	status	,	0	)	==	-	1

!	first_loop	++

setsid	(	)	==	-	1

l	->	depth	==	-	1

ctx	->	active	.	token	&&	strcmp	(	ctx	->	active	.	token	,	ctx	->	token	)	==	0

(	ch	&	ne_debug_mask	)	==	0
ch	&	ne_debug_mask	==	0
openbk	&&	(	!	slash	||	openbk	<	slash	)
openbk	&&	!	slash	||	openbk	<	slash
traila	!=	trailb	&&	abs	(	lena	-	lenb	)	==	1	&&	(	(	traila	&&	lena	>	lenb	)	||	(	trailb	&&	lenb	>	lena	)	)
traila	!=	trailb	&&	abs	(	lena	-	lenb	)	==	1	&&	(	traila	&&	lena	>	lenb	)	||	(	trailb	&&	lenb	>	lena	)
scheme	==	auth_scheme_gssapi	||	scheme	==	auth_scheme_sspi_negotiate	||	scheme	==	auth_scheme_sspi_ntlm

sess	->	context	==	AUTH_ANY	||	(	is_connect	&&	sess	->	context	==	AUTH_CONNECT	)	||	(	!	is_connect	&&	sess	->	context	==	AUTH_NOTCONNECT	)

!	sess	->	can_handle	||	!	req

auth_info_hdr	&&	sess	->	scheme	==	auth_scheme_digest

sizeof	(	struct	prop	)	*	(	n	+	1	)
sizeof	(	struct	prop	)	*	n	+	1
count	*	2	+	1

count	*	2	+	1

newoff	==	-	1

ret	==	-	1	&&	errno	==	EINTR

-	off_hour	*	3600	-	off_min	*	60

off_hour	*	3600	+	off_min	*	60

tmp	==	-	1

tmp	==	-	1

(	tmp	>>	16	)	&	0xff

(	tmp	>>	8	)	&	0xff

tracker	->	last_checked	+	tracker	->	check_interval	>=	now

offset	==	-	1

sizeof	(	char	*	)	*	(	i	+	1	)
sizeof	(	char	*	)	*	i	+	1
fd	==	-	1

(	fd	==	-	1	)	&&	(	errno	==	ENOENT	)
(	fd	==	-	1	)	&&	errno	==	ENOENT
fd	!=	-	1

ret	==	-	1

now	>=	mime_info_cache	->	last_stat_time	+	5

scanner	-	string	+	escape_count	*	2	+	1

(	first_digit	<<	4	)	|	second_digit

i	<	5	&&	i	<	len

(	a	->	sin_addr	.	s_addr	&	cmask	.	s_addr	)	==	(	b	->	sin_addr	.	s_addr	&	cmask	.	s_addr	)
a	->	sin_addr	.	s_addr	&	cmask	.	s_addr	==	b	->	sin_addr	.	s_addr	&	cmask	.	s_addr
i	+	len	>	raw_txt_len

p	+	4	>	end

p	+	10	>	end

p	+	rr	->	rdlength	>	end

reply_len	==	-	1

(	header	.	flags	&	(	1	<<	15	)	)	==	0
header	.	flags	&	(	1	<<	15	)	==	0
header	.	flags	&	(	1	<<	9	)

reply_len	==	-	1

(	header	.	flags	&	(	1	<<	15	)	)	==	0
header	.	flags	&	(	1	<<	15	)	==	0
header	.	flags	&	(	1	<<	9	)

reply_len	==	-	1

(	header	.	flags	&	(	1	<<	15	)	)	==	0
header	.	flags	&	(	1	<<	15	)	==	0
header	.	flags	&	(	1	<<	9	)

callback_data	->	send_state	==	CALLBACK_STATE_NOT_SENT	||	callback_data	->	send_state	==	CALLBACK_STATE_SENDING

callback_data	->	send_state	==	CALLBACK_STATE_NOT_SENT	&&	callback_data	->	send_at	<=	now

callback_data	->	send_state	==	CALLBACK_STATE_SENT	&&	callback_data	->	send_at	+	CONSECUTIVE_CALLBACK_DELAY	<=	now

callback_data	->	send_state	!=	CALLBACK_STATE_SENT	&&	strcmp	(	callback_data	->	info_uri	,	uri	)	==	0

monitor_handle	->	min_send_at	==	0	||	callback_data	->	send_at	<	monitor_handle	->	min_send_at

(	entry	->	n_parents	+	1	)	*	sizeof	(	char	*	)
entry	->	n_parents	+	1	*	sizeof	(	char	*	)
(	entry	->	n_parents	+	2	)	*	sizeof	(	char	*	)
entry	->	n_parents	+	2	*	sizeof	(	char	*	)
current_time	>=	last_stat_time	+	5

sep	&&	strncmp	(	mime_a	,	mime_b	,	sep	-	mime_a	+	1	)	==	0

(	i	+	1	)	*	sizeof	(	char	*	)
i	+	1	*	sizeof	(	char	*	)
configuration	->	last_checked	+	5	>=	now

pipe	(	pipes	)	==	-	1

pid	==	-	1

res	==	-	1	&&	errno	==	EINTR

strcmp	(	tmp_element	->	data	,	data	)	==	0	&&	strcmp	(	tmp_element	->	mime_type	,	mime_type	)	==	0

!	list	->	case_sensitive	&&	strcmp	(	(	const	char	*	)	list	->	data	,	lower_case	)	==	0

list	&&	n	<	n_mime_types

cancel_fd	!=	-	1	&&	FD_ISSET	(	cancel_fd	,	&	read_fds	)
!=	-	1	&&	FD_ISSET	(	cancel_fd	,	&	read_fds	cancel_fd	!=	-	1	&&	FD_ISSET	(	cancel_fd	,	&	read_fds	)
cancel_fd	!=	-	1	&&	FD_ISSET	(	cancel_fd	,	read_fds	)
!=	-	1	&&	FD_ISSET	(	cancel_fd	,	read_fds	cancel_fd	!=	-	1	&&	FD_ISSET	(	cancel_fd	,	read_fds	)
*	p	&&	numcols	<	MAXCOLS

(	pos	-	week	)	/	3
pos	-	week	/	3
(	pos	-	month	)	/	3
pos	-	month	/	3
year	<	1900	||	year	>	3000

idx	+	1	==	num_cols

!	got_year	&&	current_mon	<	6	&&	current_mon	<	tim	.	tm_mon	&&	tim	.	tm_mon	-	current_mon	>=	6

idx	==	6	||	(	idx	==	5	&&	!	S_ISCHR	(	s	->	st_mode	)	&&	!	S_ISBLK	(	s	->	st_mode	)	)
6	||	(	idx	==	5	&&	!	S_ISCHR	(	s	->	st_mode	)	&&	!	S_ISBLK	(	s	->	st_mode	)	idx	==	6	||	(	idx	==	5	&&	!	S_ISCHR	(	s	->	st_mode	)	&&	!	S_ISBLK	(	s	->	st_mode	)	==	6	||	(	idx	==	5	&&	!	S_ISCHR	(	s	->	st_mode	)	&&	!	S_ISBLK	(	s	->	st_mode	)	idx	==	6	||	(	idx	==	5	&&	!	S_ISCHR	(	s	->	st_mode	)	&&	!	S_ISBLK	(	s	->	st_mode	)	)
idx	==	3	||	(	idx	==	4	&&	(	S_ISCHR	(	s	->	st_mode	)	||	S_ISBLK	(	s	->	st_mode	)	)	)
idx	==	3	||	(	idx	==	4	&&	S_ISCHR	(	s	->	st_mode	)	||	S_ISBLK	(	s	->	st_mode	)	)
num_cols	==	idx	+	3	&&	s	->	st_nlink	>	1

++	errorcount	<	5

4	-	(	(	mp3_header	>>	19	)	&	3u	)
4	-	(	mp3_header	>>	19	)	&	3u
(	mp3_header	>>	12	)	&	0xfu

(	mp3_header	>>	10	)	&	3u

(	mp3_header	&	0xffe20000ul	)	==	0xffe20000ul
mp3_header	&	0xffe20000ul	==	0xffe20000ul
(	ver	==	1	)	||	(	ver	==	2	)

(	mp3_header	&	3u	)	!=	2
mp3_header	&	3u	!=	2
offset	<	MATE_VFS_MP3_SNIFF_LENGTH	-	7

lang_level	>	0	&&	previous_key

g_mkdir	(	user_registry_dir	.	dirname	,	0700	)	&&	errno	!=	EEXIST

!	(	*	source	&	0x80	)
!	*	source	&	0x80
!	(	*	source	&	0x40	)
!	*	source	&	0x40
!	(	*	source	&	0x20	)
!	*	source	&	0x20
!	(	*	source	&	0x10	)
!	*	source	&	0x10
!	(	*	source	&	0x08	)
!	*	source	&	0x08
!	(	*	source	&	0x04	)
!	*	source	&	0x04
!	(	*	source	&	0x02	)
!	*	source	&	0x02
i	<	len	-	i	-	1

pos	%	128	==	127

match	->	priority	==	-	1

indent	==	-	1

matchlet	->	offset	==	-	1

matchlet	->	value_length	+	(	c	&	0xFF	)
matchlet	->	value_length	+	c	&	0xFF
matchlet	->	word_size	!=	0	&&	matchlet	->	word_size	!=	1	&&	matchlet	->	word_size	!=	2	&&	matchlet	->	word_size	!=	4

matchlet	->	range_length	==	-	1

matchlet	->	value_length	%	matchlet	->	word_size	!=	0

i	<	matchlet	->	offset	+	matchlet	->	range_length

matchlet	&&	matchlet	->	indent	>	indent

state	==	XDG_MIME_MAGIC_EOF	||	state	==	XDG_MIME_MAGIC_ERROR

state	==	XDG_MIME_MAGIC_SECTION	||	(	state	==	XDG_MIME_MAGIC_EOF	&&	match	->	mime_type	)

state	==	XDG_MIME_MAGIC_EOF	||	state	==	XDG_MIME_MAGIC_ERROR

(	min	+	max	)	/	2
min	+	max	/	2
case_sensitive_check	||	!	case_sensitive

next_offset	<	0	||	next_offset	>=	to

tl	==	-	1

lang_level	!=	-	1	&&	lang_level	<	previous_lang_level

ret	==	-	1

cur	<	path_end	&&	g_ascii_isdigit	(	*	cur	)

segment_prev	-	uri_current	>=	2

(	int	)	toc	.	cdte_addr	.	msf	.	frame	+	(	int	)	toc	.	cdte_addr	.	msf	.	second	*	75	+	(	int	)	toc	.	cdte_addr	.	msf	.	minute	*	75	*	60	-	150

ans	<	1	||	ans	>	i

ans	<	1	||	ans	>	i

ans	<	1	||	ans	>	i

argc	!=	2	&&	argc	!=	1

ans	<	1	||	ans	>	i

ans	<	1	||	ans	>	i

ans	<	1	||	ans	>	i

ans	<	1	||	ans	>	i

ans	<	1	||	ans	>	i

ans	<	1	||	ans	>	i

ans	<	1	||	ans	>	i

h	->	id	<<	16	|	h	->	conn_id

aa	->	id	==	bb	->	id	&&	aa	->	conn_id	==	bb	->	conn_id

!	from	||	!	to

!	handle	||	!	from

!	handle	||	!	from

k	+	1	<	1024

(	finished_7	>	0	)	&&	(	finished_7	-	finished_before_7	>	TEST_LIMIT	+	1	)

(	finished_0	>	0	)	&&	(	finished_0	-	finished_before_0	>	TEST_LIMIT	+	1	)

--	async_task_counter	==	0

bind	(	s	,	(	struct	sockaddr	*	)	&	sin	,	sizeof	(	sin	)	)	<	0

getsockname	(	s	,	(	struct	sockaddr	*	)	&	sin	,	&	len	)	==	-	1

client_fd	==	-	1

client_fd	==	-	1

argc	!=	3	&&	argc	!=	4

fd	==	-	1

0	!=	proxy_port	&&	0xffff	>=	(	unsigned	)	proxy_port

strcmp	(	key	,	KEY_MATECONF_USE_HTTP_PROXY	)	==	0	||	strcmp	(	key	,	KEY_MATECONF_HTTP_PROXY_IGNORE_HOSTS	)	==	0	||	strcmp	(	key	,	KEY_MATECONF_HTTP_PROXY_HOST	)	==	0	||	strcmp	(	key	,	KEY_MATECONF_HTTP_PROXY_PORT	)	==	0

strcmp	(	key	,	KEY_MATECONF_HTTP_AUTH_USER	)	==	0	||	strcmp	(	key	,	KEY_MATECONF_HTTP_AUTH_PW	)	==	0	||	strcmp	(	key	,	KEY_MATECONF_HTTP_USE_AUTH	)	==	0

ioctl	(	inotify_instance_fd	,	FIONREAD	,	&	pending	)	==	-	1

pending	-	prev_pending	<	PENDING_MARGINAL_COST	(	pending_count	)

!	g_ascii_isalnum	(	*	right_ptr	)	&&	right_ptr	>	input_str

*	left_ptr	&&	!	g_ascii_isalnum	(	*	left_ptr	)

(	(	byte_0	<<	2	)	&	252	)	|	(	(	byte_1	>>	4	)	&	3	)

(	(	byte_1	<<	4	)	&	240	)	|	(	(	byte_2	>>	2	)	&	15	)

(	(	byte_2	<<	6	)	&	192	)	|	(	byte_3	&	63	)

byte_0	<	0	||	byte_1	<	0	||	byte_2	<	0	||	byte_3	<	0

(	(	byte_0	<<	2	)	&	252	)	|	(	(	byte_1	>>	4	)	&	3	)

(	(	byte_1	<<	4	)	&	240	)	|	(	(	byte_2	>>	2	)	&	15	)

(	(	byte_2	<<	6	)	&	192	)	|	(	byte_3	&	63	)

current_char	<	32	||	current_char	>	95

(	last_message	-	first_message	)	>	MAX_MESSAGE_COUNT

offset	==	-	1

dir_separator_scanner	-	path	>	0

g_lstat	(	trash_path	,	&	stat_buffer	)	==	0	&&	S_ISDIR	(	stat_buffer	.	st_mode	)
(	trash_path	,	&	stat_buffer	)	==	0	&&	S_ISDIR	(	stat_buffer	.	st_mode	g_lstat	(	trash_path	,	&	stat_buffer	)	==	0	&&	S_ISDIR	(	stat_buffer	.	st_mode	)
g_stat	(	disk_top_directory	,	&	stat_buffer	)	<	0	||	stat_buffer	.	st_dev	!=	near_device_id

permissions	&	~	tmask

connect	(	sock	,	(	struct	sockaddr	*	)	&	sin	,	sizeof	(	sin	)	)	<	0

socket	==	-	1

track	>=	0	&&	track	<	numtracks

track	>=	0	&&	track	<	numtracks

track	>=	0	&&	track	<	numtracks

workgroups_timestamp	!=	0	&&	workgroups_timestamp	<	t	&&	t	<	workgroups_timestamp	+	WORKGROUP_CACHE_TIMEOUT

!	(	actx	->	state	&	SMB_AUTH_STATE_PREFILLED	)
!	actx	->	state	&	SMB_AUTH_STATE_PREFILLED
type	==	SMB_URI_WHOLE_NETWORK	||	type	==	SMB_URI_WORKGROUP	||	type	==	SMB_URI_SERVER	||	type	==	SMB_URI_SHARE

type	==	SMB_URI_WHOLE_NETWORK	||	type	==	SMB_URI_WORKGROUP	||	type	==	SMB_URI_SERVER	||	type	==	SMB_URI_SHARE

type	==	SMB_URI_WORKGROUP_LINK	||	type	==	SMB_URI_SERVER_LINK

type	==	SMB_URI_ERROR	||	type	==	SMB_URI_WORKGROUP_LINK	||	type	==	SMB_URI_SERVER_LINK

type	==	SMB_URI_WHOLE_NETWORK	||	type	==	SMB_URI_WORKGROUP	||	type	==	SMB_URI_SERVER	||	type	==	SMB_URI_SHARE	||	type	==	SMB_URI_WORKGROUP_LINK	||	type	==	SMB_URI_SERVER_LINK

!	server1	||	!	server2	||	!	path1	||	!	path2	||	(	strcmp	(	server1	,	server2	)	!=	0	)

*	p1	&&	*	p2	&&	*	p1	==	*	p2

*	p1	==	0	||	*	p2	==	0	||	*	p1	!=	*	p2

old_type	!=	SMB_URI_SHARE_FILE	||	new_type	!=	SMB_URI_SHARE_FILE

type	==	SMB_URI_WHOLE_NETWORK	||	type	==	SMB_URI_WORKGROUP	||	type	==	SMB_URI_SERVER	||	type	==	SMB_URI_SHARE	||	type	==	SMB_URI_WORKGROUP_LINK	||	type	==	SMB_URI_SERVER_LINK

type	==	SMB_URI_WHOLE_NETWORK	||	type	==	SMB_URI_WORKGROUP	||	type	==	SMB_URI_SERVER	||	type	==	SMB_URI_SHARE	||	type	==	SMB_URI_WORKGROUP_LINK	||	type	==	SMB_URI_SERVER_LINK

type	==	SMB_URI_WHOLE_NETWORK	||	type	==	SMB_URI_WORKGROUP	||	type	==	SMB_URI_SERVER	||	type	==	SMB_URI_SHARE	||	type	==	SMB_URI_WORKGROUP_LINK	||	type	==	SMB_URI_SERVER_LINK

track	==	-	1

(	off	/	75	)	%	60

(	minutes	*	60	)	+	seconds

i	<	ret	->	num_blocks	&&	size	<	maxsize

fstype_known	&&	statp	->	st_dev	==	current_dev

tty_fd	!=	-	1

tty_fd	!=	-	1

tty_fd	!=	-	1

conn	->	tty_fd	!=	-	1

--	conn	->	ref_count	==	0	&&	conn	->	close_timeout_id	==	0

++	followed_symlinks	>	MAX_SYMLINKS_FOLLOWED

attempt	==	0	&&	info	->	username	&&	info	->	password

!	(	hctx	->	methods	&	ALLOW_PUT	)
!	hctx	->	methods	&	ALLOW_PUT
handle	->	transfer_state	==	TRANSFER_WRITE	&&	handle	->	transfer	.	write	->	len	!=	0

tv	.	tv_sec	>=	pool	->	last_use	&&	tv	.	tv_sec	<=	pool	->	last_use	+	CONNECTION_CACHE_MIN_LIFETIME

pool	->	num_connections	==	0	&&	pool	->	num_monitors	<=	0

pool	->	num_connections	==	0	&&	pool	->	num_monitors	<=	0

tv	.	tv_sec	>=	cached_dirlist	->	read_time	&&	tv	.	tv_sec	<=	(	cached_dirlist	->	read_time	+	DIRLIST_CACHE_TIMEOUT	)

sizeof	(	PidEntry	)	*	(	pids_size	-	old_pids_size	)
sizeof	(	PidEntry	)	*	pids_size	-	old_pids_size
(	(	len	)	+	NLMSG_ALIGNTO	-	1	)	&	~	(	NLMSG_ALIGNTO	-	1	)
(	len	)	+	NLMSG_ALIGNTO	-	1	&	~	NLMSG_ALIGNTO	-	1
msg	.	n	.	nlmsg_type	==	NLMSG_ERROR	||	!	NLMSG_OK	(	(	&	msg	.	n	)	,	rep_len	)
.	n	.	nlmsg_type	==	NLMSG_ERROR	||	!	NLMSG_OK	(	(	&	msg	.	n	)	,	rep_len	msg	.	n	.	nlmsg_type	==	NLMSG_ERROR	||	!	NLMSG_OK	(	(	&	msg	.	n	)	,	rep_len	)
(	(	len	)	+	NLMSG_ALIGNTO	-	1	)	&	~	(	NLMSG_ALIGNTO	-	1	)
(	len	)	+	NLMSG_ALIGNTO	-	1	&	~	NLMSG_ALIGNTO	-	1
entry	->	time_total	==	time_total	&&	entry	->	ppid	==	ts	->	ac_ppid

u1	*	100	+	u2

ans	.	n	.	nlmsg_type	==	NLMSG_ERROR	||	(	rep_len	<	0	)	||	!	NLMSG_OK	(	(	&	ans	.	n	)	,	rep_len	)
.	n	.	nlmsg_type	==	NLMSG_ERROR	||	(	rep_len	<	0	)	||	!	NLMSG_OK	(	(	&	ans	.	n	)	,	rep_len	ans	.	n	.	nlmsg_type	==	NLMSG_ERROR	||	(	rep_len	<	0	)	||	!	NLMSG_OK	(	(	&	ans	.	n	)	,	rep_len	)
bind	(	netlink_socket	,	(	struct	sockaddr	*	)	&	addr	,	sizeof	(	addr	)	)	<	0

i	<	argc	-	1

sizeof	(	struct	proc_event	)	*	(	nls	->	buffer_size	+	1	)
sizeof	(	struct	proc_event	)	*	nls	->	buffer_size	+	1
(	(	len	)	+	NLMSG_ALIGNTO	-	1	)	&	~	(	NLMSG_ALIGNTO	-	1	)
(	len	)	+	NLMSG_ALIGNTO	-	1	&	~	NLMSG_ALIGNTO	-	1
(	(	len	)	+	NLMSG_ALIGNTO	-	1	)	&	~	(	NLMSG_ALIGNTO	-	1	)
(	len	)	+	NLMSG_ALIGNTO	-	1	&	~	NLMSG_ALIGNTO	-	1
(	(	len	)	+	NLMSG_ALIGNTO	-	1	)	&	~	(	NLMSG_ALIGNTO	-	1	)
(	len	)	+	NLMSG_ALIGNTO	-	1	&	~	NLMSG_ALIGNTO	-	1
(	(	len	)	+	NLMSG_ALIGNTO	-	1	)	&	~	(	NLMSG_ALIGNTO	-	1	)
(	len	)	+	NLMSG_ALIGNTO	-	1	&	~	NLMSG_ALIGNTO	-	1
(	(	len	)	+	NLMSG_ALIGNTO	-	1	)	&	~	(	NLMSG_ALIGNTO	-	1	)
(	len	)	+	NLMSG_ALIGNTO	-	1	&	~	NLMSG_ALIGNTO	-	1
(	(	len	)	+	NLMSG_ALIGNTO	-	1	)	&	~	(	NLMSG_ALIGNTO	-	1	)
(	len	)	+	NLMSG_ALIGNTO	-	1	&	~	NLMSG_ALIGNTO	-	1
(	(	len	)	+	NLMSG_ALIGNTO	-	1	)	&	~	(	NLMSG_ALIGNTO	-	1	)
(	len	)	+	NLMSG_ALIGNTO	-	1	&	~	NLMSG_ALIGNTO	-	1
(	(	len	)	+	NLMSG_ALIGNTO	-	1	)	&	~	(	NLMSG_ALIGNTO	-	1	)
(	len	)	+	NLMSG_ALIGNTO	-	1	&	~	NLMSG_ALIGNTO	-	1
(	nlh	->	nlmsg_type	==	NLMSG_ERROR	)	||	(	nlh	->	nlmsg_type	==	NLMSG_OVERRUN	)

(	(	len	)	+	NLMSG_ALIGNTO	-	1	)	&	~	(	NLMSG_ALIGNTO	-	1	)
(	len	)	+	NLMSG_ALIGNTO	-	1	&	~	NLMSG_ALIGNTO	-	1
(	(	len	)	+	NLMSG_ALIGNTO	-	1	)	&	~	(	NLMSG_ALIGNTO	-	1	)
(	len	)	+	NLMSG_ALIGNTO	-	1	&	~	NLMSG_ALIGNTO	-	1
(	(	len	)	+	NLMSG_ALIGNTO	-	1	)	&	~	(	NLMSG_ALIGNTO	-	1	)
(	len	)	+	NLMSG_ALIGNTO	-	1	&	~	NLMSG_ALIGNTO	-	1
(	(	len	)	+	NLMSG_ALIGNTO	-	1	)	&	~	(	NLMSG_ALIGNTO	-	1	)
(	len	)	+	NLMSG_ALIGNTO	-	1	&	~	NLMSG_ALIGNTO	-	1
(	(	len	)	+	NLMSG_ALIGNTO	-	1	)	&	~	(	NLMSG_ALIGNTO	-	1	)
(	len	)	+	NLMSG_ALIGNTO	-	1	&	~	NLMSG_ALIGNTO	-	1
(	(	len	)	+	NLMSG_ALIGNTO	-	1	)	&	~	(	NLMSG_ALIGNTO	-	1	)
(	(	len	)	+	NLMSG_ALIGNTO	-	1	)	&	~	NLMSG_ALIGNTO	-	1
(	(	len	)	+	NLMSG_ALIGNTO	-	1	)	&	~	(	NLMSG_ALIGNTO	-	1	)
(	len	)	+	NLMSG_ALIGNTO	-	1	&	~	NLMSG_ALIGNTO	-	1
(	(	len	)	+	NLMSG_ALIGNTO	-	1	)	&	~	(	NLMSG_ALIGNTO	-	1	)
(	len	)	+	NLMSG_ALIGNTO	-	1	&	~	NLMSG_ALIGNTO	-	1
nls	->	socket	==	-	1

!	(	pr	.	revents	&	POLLIN	)
!	pr	.	revents	&	POLLIN
ev	->	what	!=	PROC_EVENT_NONE	||	ev	->	event_data	.	ack	.	err

i	<	len	&&	argc	<	127

count	<	size	-	1

!	isgraph	(	*	p	)	&&	!	isblank	(	*	p	)

!	gethostname	(	host_buf	,	2047	)	&&	!	getdomainname	(	domain_buf	,	2048	)

(	nrec	+	1	)	*	sizeof	(	Resource	*	)
nrec	+	1	*	sizeof	(	Resource	*	)
(	nrec	+	1	)	*	sizeof	(	Resource	*	)
nrec	+	1	*	sizeof	(	Resource	*	)
(	nrec	+	2	)	*	sizeof	(	Resource	*	)
nrec	+	2	*	sizeof	(	Resource	*	)
(	strlen	(	rstring	)	+	len	+	1	)	*	sizeof	(	char	)
strlen	(	rstring	)	+	len	+	1	*	sizeof	(	char	)
(	ev	<<	32	)	|	sb	->	events_lo

get_bits	(	sb	.	f_bfree	)	+	get_bits	(	sb	.	f_bsize	)	<=	64

(	major	(	sb	.	st_rdev	)	>=	136	)	&&	(	major	(	sb	.	st_rdev	)	<=	143	)
(	major	(	sb	.	st_rdev	)	>=	136	)	&&	major	(	sb	.	st_rdev	)	<=	143
set_intf_up	(	ifr	,	sock	)	==	-	1

filesize	==	0	&&	s	<	0

!	rc	||	mkerr	==	EEXIST

close	(	fd	)	==	-	1

dup2	(	io	,	fd	)	==	-	1

close	(	io	)	==	-	1

~	(	(	1	<<	(	32	-	prefix	)	)	-	1	)
~	1	<<	(	32	-	prefix	)	-	1
setpgrp	(	)	==	-	1

pid	==	-	1

major	(	sb	.	st_rdev	)	==	3	||	major	(	sb	.	st_rdev	)	==	136

num	==	-	1

lseek	(	fd	,	blkNum	*	BLOCK_SIZE	+	1	,	SEEK_SET	)	<	0

(	modulo	-	fd	->	pos	%	modulo	)	%	modulo
modulo	-	fd	->	pos	%	modulo	%	modulo
lastDirLength	==	length	&&	!	strcmp	(	buf	,	lastDir	)

lastDirAlloced	<	(	length	+	1	)

(	S_ISCHR	(	sb	.	st_mode	)	||	S_ISBLK	(	sb	.	st_mode	)	)	&&	(	sb	.	st_rdev	==	hdr	->	rdev	)
S_ISCHR	(	sb	.	st_mode	)	||	S_ISBLK	(	sb	.	st_mode	)	&&	(	sb	.	st_rdev	==	hdr	->	rdev	)
mappings	&&	!	map

li	->	inode	==	ch	.	inode	&&	li	->	dev	==	ch	.	dev

(	ch	.	nlink	>	1	)	&&	S_ISREG	(	ch	.	mode	)	&&	!	ch	.	size	&&	li	->	createdPath	==	-	1
ch	.	nlink	>	1	)	&&	S_ISREG	(	ch	.	mode	)	&&	!	ch	.	size	&&	li	->	createdPath	==	-	(	ch	.	nlink	>	1	)	&&	S_ISREG	(	ch	.	mode	)	&&	!	ch	.	size	&&	li	->	createdPath	==	-	1
(	ch	.	nlink	>	1	)	&&	S_ISREG	(	ch	.	mode	)	&&	(	li	->	createdPath	!=	-	1	)
ch	.	nlink	>	1	)	&&	S_ISREG	(	ch	.	mode	)	&&	(	li	->	createdPath	!=	-	1	(	ch	.	nlink	>	1	)	&&	S_ISREG	(	ch	.	mode	)	&&	(	li	->	createdPath	!=	-	1	)
rc	&&	!	*	failedFile

1	&&	!	rc

li	&&	!	rc

li	->	createdPath	==	-	1

!	fnmatch	(	*	aPattern	,	ch	.	path	,	FNM_PATHNAME	|	FNM_PERIOD	)

1	&&	!	rc

(	ep	->	speed_hi	<<	16	)	|	ep	->	speed

(	ETHTOOL_RX_FLOW_SPEC_RING_VF	&	ring_cookie	)	>>	ETHTOOL_RX_FLOW_SPEC_RING_VF_OFF
ETHTOOL_RX_FLOW_SPEC_RING_VF	&	ring_cookie	>>	ETHTOOL_RX_FLOW_SPEC_RING_VF_OFF
main_log_tty	&&	level	>=	minLevel	&&	log_tty

fd	==	-	1

fd	==	-	1

fd	==	-	1

fd	!=	-	1

bind	(	fd	,	(	struct	sockaddr	*	)	&	sa	,	sizeof	(	sa	)	)	<	0

fd	==	STDIN_FILENO	||	fd	==	STDOUT_FILENO	||	fd	==	STDERR_FILENO

loading	!=	-	2

!	devpath	||	!	firmware

fd	!=	-	1

rc	<	1	||	(	rc	<	0	&&	errno	==	EINTR	)

rc	<	0	&&	errno	==	ECHILD

rc	==	0	&&	siginfo	.	si_pid	!=	0

tmp	&&	(	strlen	(	tmp	)	>	1	)

!	host	||	!	directory

(	sizePtr	-	sizeBuf	)	<	(	int	)	sizeof	(	sizeBuf	)

sizePtr	-	sizeBuf	==	sizeof	(	sizeBuf	)

s	<	data	+	len

s	<	(	data	+	(	len	-	1	)	)

(	len	*	2	)	+	1

d	-	buf	<	len

!	kspartition	||	!	ksdirectory

!	p	||	!	np

!	p	||	!	np

(	len	+	1	)	*	sizeof	(	char	*	)
len	+	1	*	sizeof	(	char	*	)
(	len	+	1	)	*	sizeof	(	char	*	)
len	+	1	*	sizeof	(	char	*	)
(	len	+	1	)	*	sizeof	(	char	*	)
len	+	1	*	sizeof	(	char	*	)
(	sum	<<	16	)	|	(	(	xor	&	0xFF	)	<<	8	)	|	(	len	&	0xFF	)
(	sum	<<	16	)	|	(	xor	&	0xFF	<<	8	)	|	(	len	&	0xFF	)
forced	|	!	FL_KICKSTART	(	flags	)

forced	|	!	FL_KICKSTART	(	flags	)

forced	|	!	FL_KICKSTART	(	flags	)

sizeof	(	*	langs	)	*	(	numLanguages	+	1	)
sizeof	(	*	langs	)	*	numLanguages	+	1
p	!=	descr	&&	!	isspace	(	*	p	)
!=	descr	&&	!	isspace	(	*	p	p	!=	descr	&&	!	isspace	(	*	p	)
FL_KICKSTART	(	flags	)	&&	!	FL_MEDIACHECK	(	flags	)

mountMightSucceedLater	(	rc	)	&&	i	<	5

!	*	arg	||	!	*	(	arg	+	1	)
!	*	arg	||	!	*	arg	+	1
*	arg	&&	*	(	arg	+	1	)
*	arg	&&	*	arg	+	1
done	==	-	1

done	==	-	2

(	sb	.	st_dev	>>	8	)	==	7

(	7	<<	8	)	|	i

cidr	<	1	||	cidr	>	upper

i	>=	0	&&	i	<=	127

i	>=	128	&&	i	<=	191

i	>=	192	&&	i	<=	222

!	devmacaddr	||	!	ibft_present	(	)

ibft_iface_dns1	(	)	&&	inet_pton	(	AF_INET	,	ibft_iface_dns1	(	)	,	&	addr	)	>=	1

ibft_iface_dns2	(	)	&&	inet_pton	(	AF_INET	,	ibft_iface_dns2	(	)	,	&	addr	)	>=	1

FL_NOIPV4	(	flags	)	&&	!	FL_IP_PARAM	(	flags	)

cidr	>=	1	&&	cidr	<=	32

!	access	(	ofile	,	R_OK	|	W_OK	)

rename	(	ofile	,	nfile	)	==	-	1

uname	(	&	kv	)	==	-	1

rename	(	ofile	,	nfile	)	==	-	1

(	i	+	1	)	*	sizeof	(	*	devices	)
i	+	1	*	sizeof	(	*	devices	)
(	i	+	1	)	*	sizeof	(	*	devices	)
i	+	1	*	sizeof	(	*	devices	)
loaderData	->	netDev	&&	(	loaderData	->	netDev_set	)	==	1

loaderData	->	bootIf	&&	(	loaderData	->	bootIf_set	)	==	1

loaderData	->	netDev	&&	(	loaderData	->	netDev_set	==	1	)

loaderData	->	netDev	&&	(	loaderData	->	netDev_set	==	1	)

loaderData	->	netDev	&&	(	loaderData	->	netDev_set	==	1	)

idrc	==	0	||	idrc	==	1

secs	<=	0	||	secs	>	300

firstcolon	&&	secondcolon	&&	firstcolon	!=	secondcolon

status	<	0	||	!	WIFEXITED	(	status	)	||	WEXITSTATUS	(	status	)	!=	0
<	0	||	!	WIFEXITED	(	status	)	||	WEXITSTATUS	(	status	)	!=	status	<	0	||	!	WIFEXITED	(	status	)	||	WEXITSTATUS	(	status	)	!=	0
a	->	c_iflag	!=	b	->	c_iflag	||	a	->	c_oflag	!=	b	->	c_oflag	||	a	->	c_cflag	!=	b	->	c_cflag	||	a	->	c_lflag	!=	b	->	c_lflag	||	a	->	c_ispeed	!=	b	->	c_ispeed	||	a	->	c_ospeed	!=	b	->	c_ospeed

retpid	==	-	1

(	fd	<	0	)	&&	(	ioctl	(	0	,	TIOCLINUX	,	&	twelve	)	<	0	)

ioctl	(	0	,	TIOCGSERIAL	,	&	si	)	==	-	1

isSerial	&&	(	isSerial	!=	3	)

!	WIFEXITED	(	waitStatus	)	||	(	WIFEXITED	(	waitStatus	)	&&	WEXITSTATUS	(	waitStatus	)	)
WIFEXITED	(	waitStatus	)	||	WIFEXITED	(	waitStatus	)	&&	WEXITSTATUS	(	waitStatus	!	WIFEXITED	(	waitStatus	)	||	WIFEXITED	(	waitStatus	)	&&	WEXITSTATUS	(	waitStatus	)
!	glob	(	globpattern	,	GLOB_NOSORT	|	GLOB_NOESCAPE	,	globErrFunc	,	&	globres	)

!	access	(	fwdir	,	R_OK	|	X_OK	)

(	numDevices	+	2	)	*	sizeof	(	char	*	)
numDevices	+	2	*	sizeof	(	char	*	)
dir	==	-	1

num	==	-	1

(	errno	!=	EINVAL	)	&&	(	errno	!=	ENOENT	)
errno	!=	EINVAL	&&	errno	!=	ENOENT
dir	==	-	1

!	WIFEXITED	(	status	)	||	(	WIFEXITED	(	status	)	&&	WEXITSTATUS	(	status	)	)
!	WIFEXITED	(	status	)	||	WIFEXITED	(	status	)	&&	WEXITSTATUS	(	status	)
!	WIFEXITED	(	status	)	||	(	WIFEXITED	(	status	)	&&	WEXITSTATUS	(	status	)	)
WIFEXITED	(	status	)	||	(	WIFEXITED	(	status	)	&&	WEXITSTATUS	(	status	)	!	WIFEXITED	(	status	)	||	(	WIFEXITED	(	status	)	&&	WEXITSTATUS	(	status	)	)
fd	==	-	1

outfd	==	-	1

(	numfound	+	2	)	*	sizeof	(	char	*	)
numfound	+	2	*	sizeof	(	char	*	)
(	numfound	-	idx	)	*	sizeof	(	char	*	)
numfound	-	idx	*	sizeof	(	char	*	)
*	chptr	&&	!	total

!	isdigit	(	*	start	)	&&	*	start
isdigit	(	*	start	)	&&	*	!	isdigit	(	*	start	)	&&	*	start
!	defkbd	&&	lang

num	==	-	1

vasprintf	(	&	buf	,	text	,	args	)	!=	-	1

vasprintf	(	&	buf	,	text	,	args	)	!=	-	1

!	device	||	!	*	device

!	devices	&&	i	<	10

!	p	||	strlen	(	kspath	)	<	1

uname	(	&	utsbuf	)	==	-	1

i	++	>=	(	numfiles	-	1	)

*	start	&&	!	inSection

chptr	>	start	&&	isspace	(	*	chptr	)
>	start	&&	isspace	(	*	chptr	chptr	>	start	&&	isspace	(	*	chptr	)
!	devices	&&	i	<	10

!	p	||	strlen	(	kspath	)	<	1

height	!=	-	1	&&	width	!=	-	1

sizeof	(	access_vector_t	)	*	8	+	1

child	==	-	1

waitpid	(	child	,	&	status	,	0	)	==	-	1

dir	==	-	1

dir	==	-	1

closedir	(	dp	)	==	-	1

i	<	(	bufsiz	-	1	)

fclose	(	f	)	==	-	1

!	loaderData	->	stage2Data	&&	loaderData	->	instRepo

loaderData	->	lang	&&	(	loaderData	->	lang_set	==	1	)

FL_RESCUE	(	flags	)	||	!	skipLangKbd

loaderData	->	kbd	&&	(	loaderData	->	kbd_set	==	1	)

FL_RESCUE	(	flags	)	||	!	skipLangKbd

dir	==	-	1

loaderData	->	method	!=	-	1

rc	&&	(	rc	!=	1	)

dir	==	-	1

!	needsNetwork	||	dir	==	-	1

unlink	(	dirname	)	==	-	1

(	FL_SERIAL	(	flags	)	||	FL_VIRTPCONSOLE	(	flags	)	)	&&	!	hasGraphicalOverride	(	)
FL_SERIAL	(	flags	)	||	FL_VIRTPCONSOLE	(	flags	)	&&	!	hasGraphicalOverride	(	)
idx	&&	(	(	idx	-	*	tmparg	)	<	strlen	(	*	tmparg	)	)

!	WIFEXITED	(	status	)	||	(	WIFEXITED	(	status	)	&&	WEXITSTATUS	(	status	)	)
WIFEXITED	(	status	)	||	WIFEXITED	(	status	)	&&	WEXITSTATUS	(	status	!	WIFEXITED	(	status	)	||	WIFEXITED	(	status	)	&&	WEXITSTATUS	(	status	)
(	rc	==	0	)	&&	(	FL_POWEROFF	(	flags	)	||	FL_HALT	(	flags	)	)
(	rc	==	0	)	&&	FL_POWEROFF	(	flags	)	||	FL_HALT	(	flags	)
!	(	i	%	8	)
!	i	%	8
!	(	i	%	8	)
!	i	%	8
!	(	i	%	8	)
!	i	%	8
!	found	&&	!	nextModule

!	nextModule	&&	skipModule

!	nextModule	&&	skipModule

!	isspace	(	*	chptr	)	&&	chptr	>	start
isspace	(	*	chptr	)	&&	chptr	>	!	isspace	(	*	chptr	)	&&	chptr	>	start
sizeof	(	*	nextModule	->	args	)	*	(	nextModule	->	numArgs	+	1	)
sizeof	(	*	nextModule	->	args	)	*	nextModule	->	numArgs	+	1
!	isspace	(	*	chptr	)	&&	*	chptr
isspace	(	*	chptr	)	&&	*	!	isspace	(	*	chptr	)	&&	*	chptr
oc	==	-	1

!	image_specified	||	!	ramdisk_specified	||	!	parmfile_specified	||	!	outfile_specified

fseek	(	fd3	,	0	,	SEEK_END	)	==	-	1

fseek	(	fd1	,	0x4	,	SEEK_SET	)	==	-	1

fseek	(	fd1	,	0x10408	,	SEEK_SET	)	==	-	1

fseek	(	fd1	,	0x10410	,	SEEK_SET	)	==	-	1

fseek	(	fd1	,	0x10480	,	SEEK_SET	)	==	-	1

x	==	-	1

x	==	-	1

(	ep	->	speed_hi	<<	16	)	|	ep	->	speed

(	ETHTOOL_RX_FLOW_SPEC_RING_VF	&	ring_cookie	)	>>	ETHTOOL_RX_FLOW_SPEC_RING_VF_OFF
ETHTOOL_RX_FLOW_SPEC_RING_VF	&	ring_cookie	>>	ETHTOOL_RX_FLOW_SPEC_RING_VF_OFF
bind	(	*	fd	,	(	struct	sockaddr	*	)	&	sll	,	sizeof	sll	)	<	0

(	TC_QDISC	<<	16	)	+	class_id
TC_QDISC	<<	16	+	class_id
bind	(	netdev_fd	,	(	struct	sockaddr	*	)	&	sll	,	sizeof	sll	)	<	0

hwaddr_family	!=	AF_UNSPEC	&&	hwaddr_family	!=	ARPHRD_ETHER

n_bytes	<	0	&&	errno	==	EINTR

n_bytes	<	0	&&	errno	==	EINTR

n_bytes	<	0	&&	errno	==	EINTR

!	error	&&	addr	.	s_addr	!=	INADDR_ANY

netdev	->	changed_flags	&	(	IFF_PROMISC	|	IFF_UP	)
netdev	->	changed_flags	&	IFF_PROMISC	|	IFF_UP
(	ifr	.	ifr_flags	^	netdev	->	save_flags	)	&	restore_flags
ifr	.	ifr_flags	^	netdev	->	save_flags	&	restore_flags
signr	>=	1	&&	signr	<	N_SIGNALS
>=	1	&&	signr	<	signr	>=	1	&&	signr	<	N_SIGNALS
(	long	long	int	)	now	.	tv_sec	*	1000	+	now	.	tv_usec	/	1000

retval	!=	-	EINTR

cli	->	state	&	(	S_RENEWING	|	S_REBINDING	)
cli	->	state	&	S_RENEWING	|	S_REBINDING
cli	->	state	&	(	S_BOUND	|	S_RENEWING	)
cli	->	state	&	S_BOUND	|	S_RENEWING
cli	->	state	&	(	S_BOUND	|	S_RENEWING	|	S_REBINDING	)
cli	->	state	&	S_BOUND	|	S_RENEWING	|	S_REBINDING
!	error	&&	router	.	s_addr

msg	->	type	>	31	||	!	(	(	1u	<<	msg	->	type	)	&	msgs	)
msg	->	type	>	31	||	!	(	1u	<<	msg	->	type	)	&	msgs
cli	->	validate_offer	&&	!	cli	->	validate_offer	(	msg	,	cli	->	aux	)

!	t2	||	t2	>=	lease

!	t1	||	t1	>=	t2

cli	->	state	&	(	S_SELECTING	|	S_REQUESTING	|	S_RENEWING	|	S_REBINDING	)
cli	->	state	&	S_SELECTING	|	S_REQUESTING	|	S_RENEWING	|	S_REBINDING
cli	->	state	&	(	S_SELECTING	|	S_REQUESTING	|	S_REBOOTING	)
cli	->	state	&	S_SELECTING	|	S_REQUESTING	|	S_REBOOTING
random_range	(	max_fuzz	*	2	+	1	)	-	max_fuzz

fcntl	(	fd	,	F_GETLK	,	&	lck	)	!=	-	1	&&	lck	.	l_type	!=	F_UNLCK

fcntl	(	fd	,	F_SETLK	,	&	lck	)	!=	-	1

(	1u	<<	x	)	|	(	1u	<<	y	)

(	1u	<<	x	)	|	(	1u	<<	y	)

++	block_level	==	1

--	block_level	==	0

!	(	stp	->	bridge_id	>>	48	)
!	stp	->	bridge_id	>>	48
(	UINT64_C	(	1	)	<<	48	)	-	1
UINT64_C	(	1	)	<<	48	-	1
(	UINT64_C	(	1	)	<<	48	)	-	1
UINT64_C	(	1	)	<<	48	-	1
port_no	>=	0	&&	port_no	<	ARRAY_SIZE	(	stp	->	ports	)

port_no	>=	0	&&	port_no	<	ARRAY_SIZE	(	stp	->	ports	)

(	p	->	port_id	&	0xff	)	|	(	new_priority	<<	8	)

stp	->	bridge_id	==	p	->	designated_bridge	&&	p	->	port_id	<	p	->	designated_port

ntohll	(	config	->	bridge_id	)	!=	p	->	stp	->	bridge_id	||	ntohs	(	config	->	port_id	)	<=	p	->	designated_port

p	->	designated_bridge	==	p	->	stp	->	bridge_id	&&	p	->	designated_port	==	p	->	port_id

ms	*	0x100	%	1000

2	*	(	ht	+	1000	)
2	*	ht	+	1000
ma	/	2	+	1000

s	.	st_atime	<	recent	||	s	.	st_ctime	<	recent	||	s	.	st_mtime	<	recent

s	.	st_uid	&&	s	.	st_uid	!=	getuid	(	)

error	!=	EAGAIN	&&	error	!=	EWOULDBLOCK

c	<	0x20	||	c	>	0x7e

is_wild	&&	verbosity	<	2

wild_bits	>=	32	&&	verbosity	<	2

t	->	type	==	type	&&	t	->	code	==	-	1

t	->	type	==	type	&&	t	->	code	==	code

stat	!=	-	1

!	opt	->	data	||	!	opt	->	n

(	rc	->	state	&	(	S_ACTIVE	|	S_IDLE	)	)	&&	rc	->	txq	.	n
(	rc	->	state	&	S_ACTIVE	|	S_IDLE	)	&&	rc	->	txq	.	n
rc	->	state	&	(	S_ACTIVE	|	S_IDLE	)
rc	->	state	&	S_ACTIVE	|	S_IDLE
rc	->	state	&	(	S_CONNECTING	|	S_ACTIVE	|	S_IDLE	)
rc	->	state	&	S_CONNECTING	|	S_ACTIVE	|	S_IDLE
now	-	rc	->	last_connected	>	60

(	rc	->	state	==	S_ACTIVE	)	!=	(	state	==	S_ACTIVE	)

now	-	rc	->	last_questioned	>	60

(	state	&	(	S_ACTIVE	|	S_IDLE	)	)	!=	0
state	&	(	S_ACTIVE	|	S_IDLE	)	!=	0
ph	.	magic_number	!=	0xa1b2c3d4	&&	ph	.	magic_number	!=	0xd4c3b2a1

retval	>=	0	||	errno	==	EAGAIN

multicast_group	>	0	&&	multicast_group	<=	32

multicast_group	>	32	&&	setsockopt	(	sock	->	fd	,	SOL_NETLINK	,	NETLINK_ADD_MEMBERSHIP	,	&	multicast_group	,	sizeof	multicast_group	)	<	0

nbytes	<	0	&&	errno	==	EINTR

nbytes2	<	0	&&	errno	==	EINTR

(	getpid	(	)	&	PROCESS_MASK	)	|	(	i	<<	PROCESS_BITS	)
(	getpid	(	)	&	PROCESS_MASK	)	|	(	i	<<	PROCESS_BITS	)
(	flags_left	&	flag	->	bits	)	==	flag	->	bits
flags_left	&	flag	->	bits	==	flag	->	bits
timeout	<	0	||	msec	<	timeout

rand	(	)	|	(	(	rand	(	)	&	1u	)	<<	31	)
rand	(	)	|	(	rand	(	)	&	1u	<<	31	)
(	errcode	>>	ERR_LIB_OFFSET	)	&	ERR_LIB_MASK

errcode	&	(	ERR_RFLAGS_MASK	<<	ERR_RFLAGS_OFFSET	)

(	ERR_GET_RFLAGS	(	errcode	)	&	ERR_RFLAG_FATAL	)	!=	0
ERR_GET_RFLAGS	(	errcode	)	&	ERR_RFLAG_FATAL	!=	0
(	ERR_GET_RFLAGS	(	errcode	)	&	ERR_RFLAG_COMMON	)	!=	0
(	ERR_GET_RFLAGS	(	errcode	)	&	ERR_RFLAG_COMMON	)	!=	0
!	chain	||	!	sk_X509_num	(	chain	)

(	SSL_get_verify_mode	(	sslv	->	ssl	)	&	(	SSL_VERIFY_NONE	|	SSL_VERIFY_PEER	)	)	!=	SSL_VERIFY_PEER
SSL_get_verify_mode	(	sslv	->	ssl	)	&	(	SSL_VERIFY_NONE	|	SSL_VERIFY_PEER	)	!=	SSL_VERIFY_PEER
ssl_error	==	SSL_ERROR_WANT_WRITE	||	ssl_error	==	SSL_ERROR_WANT_READ

now	-	sw	->	last_reply	>	10000

now	-	sw	->	last_query	>	10000

now	>=	sw	->	last_features_request	+	1

retval	&&	retval	!=	ENOTCONN

get_port_state	(	sw	,	port_no	)	&	(	P_LEARNING	|	P_FORWARDING	)
get_port_state	(	sw	,	port_no	)	&	P_LEARNING	|	P_FORWARDING
(	*	new_vconn	)	->	state	!=	VCS_CONNECTING	||	(	*	new_vconn	)	->	class	->	connect

(	*	new_vconn	)	->	state	!=	VCS_CONNECTING	||	(	*	new_vconn	)	->	class	->	connect

(	e	->	expires	-	time_now	(	)	)	*	1000
e	->	expires	-	time_now	(	)	*	1000
flags	!=	-	1

fcntl	(	fd	,	F_SETFL	,	flags	|	O_NONBLOCK	)	!=	-	1

!	getrlimit	(	RLIMIT_NOFILE	,	&	r	)	&&	r	.	rlim_cur	!=	RLIM_INFINITY	&&	r	.	rlim_cur	!=	RLIM_SAVED_MAX	&&	r	.	rlim_cur	!=	RLIM_SAVED_CUR

retval	<	0	&&	errno	==	EINTR

flags	==	-	1

fcntl	(	fd	,	F_SETFL	,	flags	|	O_NONBLOCK	)	==	-	1

unlink	(	un	.	sun_path	)	&&	errno	!=	ENOENT

bind	(	fd	,	(	struct	sockaddr	*	)	&	un	,	un_len	)	||	fchmod	(	fd	,	S_IRWXU	)

connect	(	fd	,	(	struct	sockaddr	*	)	&	un	,	un_len	)	&&	errno	!=	EINPROGRESS

retval	&&	retval	!=	EAGAIN

*	dp_idx	!=	-	1

dp_idx	!=	-	1

hw_idx	+	1	!=	of_port

nf2	->	fd	==	-	1

setsockopt	(	nf2	->	fd	,	SOL_SOCKET	,	SO_BINDTODEVICE	,	(	char	*	)	&	ifreq	,	sizeof	(	ifreq	)	)	<	0

bind	(	nf2	->	fd	,	(	struct	sockaddr	*	)	&	address	,	sizeof	(	address	)	)	==	-	1

nf2	->	fd	==	-	1

(	1u	<<	n_wild_bits	)	-	1
1u	<<	n_wild_bits	-	1
error	&&	error	!=	EAGAIN

(	now	-	rl	->	last_fill	)	*	s	->	rate_limit	+	rl	->	tokens
now	-	rl	->	last_fill	*	s	->	rate_limit	+	rl	->	tokens
retval	&&	retval	!=	EAGAIN

rconn_is_connected	(	fail_open	->	remote_rconn	)	||	!	fail_open	->	lswitch

time_now	(	)	+	s	->	probe_interval	*	3

error	&&	error	!=	EAGAIN

(	context	->	index	+	1	)	%	context	->	settings	->	num_controllers
context	->	index	+	1	%	context	->	settings	->	num_controllers
last_ip	!=	ip	||	!	next_refresh	||	now	>=	next_refresh

ip	&&	ip	!=	last_nonzero_ip

!	get_ofp_packet_eth_header	(	r	,	&	opi	,	&	eth	)	||	!	in_band	->	of_device

!	in_band	->	of_device	||	strcmp	(	netdev_get_name	(	in_band	->	of_device	)	,	name	)

(	a	->	port_no	!=	b	->	port_no	)	+	(	memcmp	(	a	->	hw_addr	,	b	->	hw_addr	,	sizeof	a	->	hw_addr	)	!=	0	)	+	(	memcmp	(	a	->	name	,	b	->	name	,	sizeof	a	->	name	)	!=	0	)	+	(	a	->	config	!=	b	->	config	)	+	(	a	->	state	!=	b	->	state	)	+	(	a	->	curr	!=	b	->	curr	)	+	(	a	->	advertised	!=	b	->	advertised	)	+	(	a	->	supported	!=	b	->	supported	)	+	(	a	->	peer	!=	b	->	peer	)
a	->	port_no	!=	b	->	port_no	+	memcmp	(	a	->	hw_addr	,	b	->	hw_addr	,	sizeof	a	->	hw_addr	)	!=	0	+	memcmp	(	a	->	name	,	b	->	name	,	sizeof	a	->	name	)	!=	0	+	a	->	config	!=	b	->	config	+	a	->	state	!=	b	->	state	+	a	->	curr	!=	b	->	curr	+	(	a	->	advertised	!=	b	->	advertised	)	+	a	->	supported	!=	b	->	supported	+	a	->	peer	!=	b	->	peer
*	p	<	32	||	*	p	>	126

(	opp	->	state	&	~	s_mask	)	|	(	old	->	state	&	s_mask	)

!	old	||	opp_differs	(	opp	,	old	)

(	pw_opp	->	config	&	~	opm	->	mask	)	|	(	opm	->	config	&	opm	->	mask	)

!	pw	->	got_feature_reply	&&	time_now	(	)	>=	pw	->	last_feature_request	+	5	&&	rconn_is_connected	(	pw	->	local_rconn	)

!	pw	->	got_feature_reply	&&	rconn_is_connected	(	pw	->	local_rconn	)

features	&	(	hd_bit	|	fd_bit	)
features	&	hd_bit	|	fd_bit
old	&&	new	&&	(	opp_differs	(	old	,	new	)	==	(	(	old	->	config	!=	new	->	config	)	+	(	old	->	state	!=	new	->	state	)	)	)
old	&&	new	&&	(	opp_differs	(	old	,	new	)	==	(	(	old	->	config	!=	new	->	config	)	+	old	->	state	!=	new	->	state	)	)
!	(	(	ntohl	(	p	->	state	)	^	state	)	&	s_mask	)	&&	(	!	(	(	ntohl	(	p	->	config	)	^	config	)	&	c_mask	)	)
!	(	ntohl	(	p	->	state	)	^	state	&	s_mask	)	&&	(	!	(	ntohl	(	p	->	config	)	^	config	&	c_mask	)	)
(	ntohl	(	p	->	config	)	&	~	c_mask	)	|	(	config	&	c_mask	)

(	ntohl	(	p	->	state	)	&	~	s_mask	)	|	(	state	&	s_mask	)

retval	&&	retval	!=	EAGAIN

retval	&&	retval	!=	EAGAIN

this	->	rxbuf	&&	!	this	->	n_txq

c	==	-	1

s	->	max_idle	<	1	||	s	->	max_idle	>	65535

argc	<	1	||	argc	>	2

s	->	discovery	&&	!	s	->	in_band

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	ep	->	speed_hi	<<	16	)	|	ep	->	speed

(	ETHTOOL_RX_FLOW_SPEC_RING_VF	&	ring_cookie	)	>>	ETHTOOL_RX_FLOW_SPEC_RING_VF_OFF
ETHTOOL_RX_FLOW_SPEC_RING_VF	&	ring_cookie	>>	ETHTOOL_RX_FLOW_SPEC_RING_VF_OFF
(	skb_tailroom	(	skb	)	-	NLA_HDRLEN	)	&	~	(	NLA_ALIGNTO	-	1	)
!	oh	||	IS_ERR	(	oh	)

dp_idx	==	-	1

packet_length	(	skb	)	>	skb	->	dev	->	mtu	&&	!	skb_is_gso	(	skb	)

!	p	||	memcmp	(	opm	->	hw_addr	,	p	->	dev	->	dev_addr	,	ETH_ALEN	)

dp_idx	!=	-	1

length	+	s	->	bytes_used	>	s	->	bytes_allocated

s	->	table_idx	<	dp	->	chain	->	n_tables	&&	(	s	->	rq	->	table_id	==	0xff	||	s	->	rq	->	table_id	==	s	->	table_idx	)
s	->	table_idx	<	dp	->	chain	->	n_tables	&&	s	->	rq	->	table_id	==	0xff	||	s	->	rq	->	table_id	==	s	->	table_idx
table_idx	<	dp	->	chain	->	n_tables	&&	(	rq	->	table_id	==	0xff	||	rq	->	table_id	==	table_idx	)
table_idx	<	dp	->	chain	->	n_tables	&&	rq	->	table_id	==	0xff	||	rq	->	table_id	==	table_idx
(	th	->	bucket_mask	+	1	)	*	sizeof	*	th	->	buckets
th	->	bucket_mask	+	1	*	sizeof	*	th	->	buckets
n_buckets	&	(	n_buckets	-	1	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	ep	->	speed_hi	<<	16	)	|	ep	->	speed

(	ETHTOOL_RX_FLOW_SPEC_RING_VF	&	ring_cookie	)	>>	ETHTOOL_RX_FLOW_SPEC_RING_VF_OFF
ETHTOOL_RX_FLOW_SPEC_RING_VF	&	ring_cookie	>>	ETHTOOL_RX_FLOW_SPEC_RING_VF_OFF
prev_port	!=	-	1

prev_port	!=	-	1

!	hwtable	||	add_table	(	chain	,	hwtable	,	0	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

~	(	(	1u	<<	n_wild_bits	)	-	1	)
~	1u	<<	n_wild_bits	-	1
from	->	nw_proto	==	IPPROTO_TCP	||	from	->	nw_proto	==	IPPROTO_UDP	||	from	->	nw_proto	==	IPPROTO_ICMP

esh	->	dsap	==	LLC_SAP_SNAP	&&	esh	->	ssap	==	LLC_SAP_SNAP

skb	->	len	<	sizeof	*	eth

skb	->	len	>=	sizeof	*	esh	&&	is_snap	(	esh	)

key	->	dl_type	==	htons	(	ETH_P_IP	)	&&	iphdr_ok	(	skb	)

(	1u	<<	n_wild_bits	)	-	1
1u	<<	n_wild_bits	-	1
(	ep	->	speed_hi	<<	16	)	|	ep	->	speed

(	ETHTOOL_RX_FLOW_SPEC_RING_VF	&	ring_cookie	)	>>	ETHTOOL_RX_FLOW_SPEC_RING_VF_OFF
ETHTOOL_RX_FLOW_SPEC_RING_VF	&	ring_cookie	>>	ETHTOOL_RX_FLOW_SPEC_RING_VF_OFF
!	(	rcv	->	flags	&	IFF_UP	)
!	rcv	->	flags	&	IFF_UP
!	dev_valid_name	(	devname	)	||	!	dev_valid_name	(	peername	)

c	==	-	1

conn	->	bridge	!=	b	||	conn	->	port_no	!=	port_no

dst	->	rxq_head	++	%	RXQ_SIZE

c	->	bridge	==	b	&&	c	->	port_no	==	port_no

sizeof	*	c	*	(	old_lan	->	n_conns	-	j	-	1	)
sizeof	*	c	*	old_lan	->	n_conns	-	j	-	1
time	<	1000	*	180

token	&&	isdigit	(	(	unsigned	char	)	*	token	)
&&	isdigit	(	(	unsigned	char	)	*	token	token	&&	isdigit	(	(	unsigned	char	)	*	token	)
token	&&	!	strcmp	(	want	,	token	)

argc	-	optind	<	1

n_switches	==	0	&&	n_listeners	==	0

n_switches	>	0	||	n_listeners	>	0

i	<	n_listeners	&&	n_switches	<	MAX_SWITCHES

!	retval	||	retval	==	EAGAIN

!	retval	||	retval	==	EAGAIN

c	==	-	1

max_idle	<	1	||	max_idle	>	65535

c	==	-	1

nm	&	(	1u	<<	i	)

!	(	nm	&	(	1u	<<	i	)	)
!	nm	&	(	1u	<<	i	)
prefix	<=	0	||	prefix	>	32

port_no	!=	-	1

(	1000	*	(	double	)	(	end	.	tv_sec	-	start	.	tv_sec	)	)	+	(	.001	*	(	end	.	tv_usec	-	start	.	tv_usec	)	)
(	1000	*	(	double	)	(	end	.	tv_sec	-	start	.	tv_sec	)	)	+	(	.001	*	end	.	tv_usec	-	start	.	tv_usec	)
!	port	||	!	q_id

c	==	-	1

!	strcmp	(	optarg	,	s	->	name	)	||	!	strcmp	(	optarg	,	s	->	name	+	3	)

option	==	-	1

c	==	-	1

argc	-	optind	<	1

!	retval	||	retval	==	EAGAIN

c	==	-	1

new_mac	&&	!	eth_addr_equals	(	netdev_get_etheraddr	(	netdev	)	,	new_mac	)

sizeof	*	dp	->	listeners	*	(	dp	->	n_listeners	+	1	)
sizeof	*	dp	->	listeners	*	dp	->	n_listeners	+	1
(	tdiff	-	(	sec	*	1000	)	)	*	1000000
tdiff	-	(	sec	*	1000	)	*	1000000
(	tdiff	-	(	sec	*	1000	)	)	*	1000000
tdiff	-	(	sec	*	1000	)	*	1000000
ntohl	(	opo	->	buffer_id	)	==	(	uint32_t	)	-	1

error	==	-	ENOBUFS

ntohl	(	ofm	->	buffer_id	)	!=	(	uint32_t	)	-	1

error	==	-	ENOBUFS

ntohl	(	ofm	->	buffer_id	)	!=	(	uint32_t	)	-	1

s	->	table_idx	<	dp	->	chain	->	n_tables	&&	(	s	->	rq	.	table_id	==	0xff	||	s	->	rq	.	table_id	==	s	->	table_idx	)
s	->	table_idx	<	dp	->	chain	->	n_tables	&&	s	->	rq	.	table_id	==	0xff	||	s	->	rq	.	table_id	==	s	->	table_idx
table_idx	<	dp	->	chain	->	n_tables	&&	(	rq	->	table_id	==	0xff	||	rq	->	table_id	==	table_idx	)
table_idx	<	dp	->	chain	->	n_tables	&&	rq	->	table_id	==	0xff	||	rq	->	table_id	==	table_idx
body_len	<	cb	->	s	->	min_body	||	body_len	>	cb	->	s	->	max_body

!	p	||	(	p	->	port_no	!=	port_no	)

(	buffer_idx	+	1	)	&	PKT_BUFFER_MASK
(	buffer_idx	+	1	)	&	PKT_BUFFER_MASK
++	p	->	cookie	>=	(	1u	<<	PKT_COOKIE_BITS	)	-	1
++	p	->	cookie	>=	1u	<<	PKT_COOKIE_BITS	-	1
buffer_idx	|	(	p	->	cookie	<<	PKT_BUFFER_BITS	)

p	->	cookie	==	id	>>	PKT_BUFFER_BITS

p	->	cookie	==	id	>>	PKT_BUFFER_BITS

!	(	n_buckets	&	(	n_buckets	-	1	)	)
!	n_buckets	&	(	n_buckets	-	1	)
!	(	n_buckets	&	(	n_buckets	-	1	)	)
!	n_buckets	&	(	n_buckets	-	1	)
(	nt	->	nw_tos	&	0xFC	)	|	(	nh	->	ip_tos	&	0x03	)

(	len	<	act	->	min_size	)	||	(	len	>	act	->	max_size	)

prev_port	!=	-	1

prev_port	!=	-	1

~	(	(	1u	<<	n_wild_bits	)	-	1	)
~	1u	<<	n_wild_bits	-	1
from	->	nw_proto	==	IPPROTO_TCP	||	from	->	nw_proto	==	IPPROTO_UDP	||	from	->	nw_proto	==	IPPROTO_ICMP

i_unix_socket	==	-	1

i_ret	==	-	1

(	argc	-	1	)	*	sizeof	(	char	*	)
argc	-	1	*	sizeof	(	char	*	)
i	<	argc	-	1

i_ret	==	-	1

l	->	depth	==	-	1

ctx	->	active	.	token	&&	strcmp	(	ctx	->	active	.	token	,	ctx	->	token	)	==	0

openbk	&&	(	!	slash	||	openbk	<	slash	)
openbk	&&	!	slash	||	openbk	<	slash
strlen	(	abs_path	)	+	2	*	count	+	1

traila	!=	trailb	&&	abs	(	lena	-	lenb	)	==	1	&&	(	(	traila	&&	lena	>	lenb	)	||	(	trailb	&&	lenb	>	lena	)	)
traila	!=	trailb	&&	abs	(	lena	-	lenb	)	==	1	&&	(	traila	&&	lena	>	lenb	)	||	(	trailb	&&	lenb	>	lena	)
sizeof	(	struct	prop	)	*	(	n	+	1	)
sizeof	(	struct	prop	)	*	n	+	1
count	*	2	+	1

count	*	2	+	1

(	tv2	.	tv_sec	-	tv1	.	tv_sec	)	*	1000000	+	(	tv2	.	tv_usec	-	tv1	.	tv_usec	)
tv2	.	tv_sec	-	tv1	.	tv_sec	*	1000000	+	(	tv2	.	tv_usec	-	tv1	.	tv_usec	)
-	off_hour	*	3600	-	off_min	*	60

off_hour	*	3600	+	off_min	*	60

tmp	==	-	1

tmp	==	-	1

sizeof	(	char	*	)	*	(	count	+	1	)
sizeof	(	char	*	)	*	count	+	1
(	2	*	count	+	2	)	*	sizeof	(	char	*	)
2	*	count	+	2	*	sizeof	(	char	*	)
!	cur	&&	got_unknown

ctx	->	range	->	end	==	-	1

(	errcode	>>	ERR_LIB_OFFSET	)	&	ERR_LIB_MASK

errcode	&	(	ERR_RFLAGS_MASK	<<	ERR_RFLAGS_OFFSET	)

(	ERR_GET_RFLAGS	(	errcode	)	&	ERR_RFLAG_FATAL	)	!=	0
ERR_GET_RFLAGS	(	errcode	)	&	ERR_RFLAG_FATAL	!=	0
(	ERR_GET_RFLAGS	(	errcode	)	&	ERR_RFLAG_COMMON	)	!=	0
ERR_GET_RFLAGS	(	errcode	)	&	ERR_RFLAG_COMMON	!=	0
X509_subject_name_cmp	(	cert	,	peercert	)	!=	0	||	X509_issuer_name_cmp	(	cert	,	peercert	)	!=	0

!	X509_digest	(	cert	,	EVP_sha1	(	)	,	md	,	&	mdlen	)	||	peermdlen	!=	mdlen

n	==	0	||	n	>	3	||	n	==	2

(	tv2	.	tv_sec	-	tv1	.	tv_sec	)	*	1000000	+	(	tv2	.	tv_usec	-	tv1	.	tv_usec	)
tv2	.	tv_sec	-	tv1	.	tv_sec	*	1000000	+	(	tv2	.	tv_usec	-	tv1	.	tv_usec	)
strlen	(	myuri	)	>=	sizeof	(	myuri	)	-	4

read_options	(	argc	,	argv	)	==	-	1

passes	+	fails	!=	n

dev	->	descriptor	.	idVendor	==	vendorID	&&	dev	->	descriptor	.	idProduct	==	productID

(	version	&	0xF0	)	>>	4
version	&	0xF0	>>	4
pid	==	-	1

connect	(	sock	,	ai	->	ai_addr	,	sizeof	(	struct	sockaddr	)	)	==	-	1

(	(	(	locationChannelA	/	RANGE	)	*	(	MAX_LIMIT	-	MIN_LIMIT	)	)	+	MIN_LIMIT	)	/	STEP_SIZE
(	(	locationChannelA	/	RANGE	)	*	(	MAX_LIMIT	-	MIN_LIMIT	)	)	+	MIN_LIMIT	/	STEP_SIZE
(	(	(	locationChannelB	/	RANGE	)	*	(	MAX_LIMIT	-	MIN_LIMIT	)	)	+	MIN_LIMIT	)	/	STEP_SIZE
(	(	locationChannelB	/	RANGE	)	*	MAX_LIMIT	-	MIN_LIMIT	)	+	MIN_LIMIT	/	STEP_SIZE
*	++	p	==	*	text

*	text	<=	*	++	p	&&	*	text	>=	last

2	*	i	+	1

(	vendorID	==	0	||	dev	->	descriptor	.	idVendor	==	vendorID	)	&&	(	productID	==	0	||	dev	->	descriptor	.	idProduct	==	productID	)
(	vendorID	==	0	||	dev	->	descriptor	.	idVendor	==	vendorID	)	&&	productID	==	0	||	dev	->	descriptor	.	idProduct	==	productID
v4	==	EOF	||	v3	==	EOF	||	v2	==	EOF	||	v1	==	EOF

(	v4	<<	24	)	|	(	v3	<<	16	)	|	(	v2	<<	8	)	|	v1

v2	==	EOF	||	v1	==	EOF

zs	.	avail_out	>	0	&&	zs	.	avail_in	>	0

(	strlen	(	s	)	+	1	)	*	sizeof	(	char	)
strlen	(	s	)	+	1	*	sizeof	(	char	)
(	first	+	last	)	/	2
first	+	last	/	2
i	==	-	1

sizeof	(	Transition	)	*	(	trie	->	num_transitions	+	1	)
sizeof	(	Transition	)	*	trie	->	num_transitions	+	1
sizeof	(	Transition	)	*	(	trie	->	num_transitions	-	i	)
sizeof	(	Transition	)	*	trie	->	num_transitions	-	i
(	first	+	last	)	/	2
first	+	last	/	2
(	int	)	(	strlen	(	suffix	)	-	strlen	(	key	)	)	>	k

(	prev_keylen	+	i	)	>=	max_key

new_keylen	+	1	<	max_key

new_keylen	+	1	<	max_key

l	+	strlen	(	key	)	<	max_key

trie	->	value	&&	(	strlen	(	key	)	<=	k	)

(	first	+	last	)	/	2
first	+	last	/	2
keylen	+	strlen	(	suffix	)	>=	max_key

(	first	+	last	)	/	2
first	+	last	/	2
keylen	+	suffixlen	>=	max_key

has_value	!=	0	&&	has_value	!=	1

suffixlen	<	0	||	suffixlen	>=	MAX_KEY_LENGTH

has_trie	!=	0	&&	has_trie	!=	1

open	+	extend	*	length

!	IndexList__verify_free_index	(	il	,	il	->	num_used	+	1	)

!	IndexList__verify_free_index	(	il1	,	il1	->	num_used	+	il2	->	num_used	)

!	score_matrix	||	!	trace_matrix

i	<	lenA	*	lenB

(	lenA	-	1	)	*	sizeof	(	*	row_cache_score	)
lenA	-	1	*	sizeof	(	*	row_cache_score	)
(	lenA	-	1	)	*	sizeof	(	*	row_cache_index	)
lenA	-	1	*	sizeof	(	*	row_cache_index	)
(	lenB	-	1	)	*	sizeof	(	*	col_cache_score	)
lenB	-	1	*	sizeof	(	*	col_cache_score	)
(	lenB	-	1	)	*	sizeof	(	*	col_cache_index	)
lenB	-	1	*	sizeof	(	*	col_cache_index	)
!	row_cache_score	||	!	row_cache_index	||	!	col_cache_score	||	!	col_cache_index

(	lenA	-	1	)	*	sizeof	(	*	row_cache_score	)
lenA	-	1	*	sizeof	(	*	row_cache_score	)
(	lenA	-	1	)	*	sizeof	(	*	row_cache_index	)
lenA	-	1	*	sizeof	(	*	row_cache_index	)
(	lenB	-	1	)	*	sizeof	(	*	col_cache_score	)
lenB	-	1	*	sizeof	(	*	col_cache_score	)
(	lenB	-	1	)	*	sizeof	(	*	col_cache_index	)
lenB	-	1	*	sizeof	(	*	col_cache_index	)
i	<	lenA	-	1

i	<	lenB	-	1

(	row	-	1	)	*	lenB	+	col	-	1
row	-	1	*	lenB	+	col	-	1
!	align_globally	&&	score	<	0

row	*	lenB	+	col

row	*	lenB	+	col

row	*	lenB	+	col

(	row	-	1	)	*	lenB	+	col	-	1
row	-	1	*	lenB	+	col	-	1
(	row	-	1	)	*	lenB	+	col	-	1
row	-	1	*	lenB	+	col	-	1
row	*	lenB	+	col

!	row	||	!	col

i	*	2	+	1

i	<	lenA	*	lenB

i	<	lenA	-	1

i	<	lenB	-	1

x	*	precision	+	0.5

(	yy_start	-	1	)	/	2
yy_start	-	1	/	2
yy_c_buf_p	-	yytext_ptr	-	YY_MORE_ADJ	==	1

yy_cp	<	yy_current_buffer	->	yy_ch_buf	+	2

yy_cp	<	yy_current_buffer	->	yy_ch_buf	+	2

n	==	2	*	nr

(	lo	+	hi	)	/	2
lo	+	hi	/	2
j	==	nl	&&	i	==	nr

i	==	j	&&	i	==	nr

lo	<	hi	-	1

(	m	-	1	)	/	2.
m	-	1	/	2.
j	<	i	+	m

f	*	g	-	s

i	<	n	-	1

i	<	n	-	1

f	*	g	-	s

i	<	n	-	1

i	!=	n	-	1

i	!=	n	-	1

fabs	(	f	)	+	anorm	==	anorm

f	*	f	+	g	*	g

-	f	/	h

y	*	c	+	z	*	s

-	y	*	s	+	z	*	c

(	(	y	-	z	)	*	(	y	+	z	)	+	(	g	-	h	)	*	(	g	+	h	)	)	/	(	2.0	*	h	*	y	)
y	-	z	*	y	+	z	+	g	-	h	*	g	+	h	/	(	2.0	*	h	*	y	)
f	*	f	+	1.0

(	x	-	z	)	*	(	x	+	z	)
x	-	z	*	x	+	z
f	*	f	+	h	*	h

x	*	c	+	g	*	s

-	x	*	s	+	g	*	c

x	*	c	+	z	*	s

-	x	*	s	+	z	*	c

f	*	f	+	h	*	h

c	*	g	+	s	*	y

-	s	*	g	+	c	*	y

y	*	c	+	z	*	s

-	y	*	s	+	z	*	c

f	*	g	-	s

i	<	m	-	1

i	<	m	-	1

f	*	g	-	s

i	<	m	-	1

i	!=	m	-	1

i	!=	m	-	1

fabs	(	f	)	+	anorm	==	anorm

f	*	f	+	g	*	g

-	f	/	h

y	*	c	+	z	*	s

-	y	*	s	+	z	*	c

(	(	y	-	z	)	*	(	y	+	z	)	+	(	g	-	h	)	*	(	g	+	h	)	)	/	(	2.0	*	h	*	y	)
(	y	-	z	)	*	(	y	+	z	)	+	g	-	h	*	(	g	+	h	)	/	(	2.0	*	h	*	y	)
f	*	f	+	1.0

(	x	-	z	)	*	(	x	+	z	)
x	-	z	*	x	+	z
f	*	f	+	h	*	h

x	*	c	+	g	*	s

-	x	*	s	+	g	*	c

x	*	c	+	z	*	s

-	x	*	s	+	z	*	c

f	*	f	+	h	*	h

c	*	g	+	s	*	y

-	s	*	g	+	c	*	y

y	*	c	+	z	*	s

-	y	*	s	+	z	*	c

!	index	||	!	temp

i	<	ncolumns	/	2

i	<	nrows	/	2

x1	<	x2	&&	y1	<	y2

x1	>	x2	&&	y1	>	y2

x1	<	x2	&&	y1	>	y2

x1	>	x2	&&	y1	<	y2

x1	==	x2	&&	y1	!=	y2

x1	!=	x2	&&	y1	==	y2

x1	<	x2	&&	y1	<	y2

x1	>	x2	&&	y1	>	y2

x1	<	x2	&&	y1	>	y2

x1	>	x2	&&	y1	<	y2

x1	==	x2	&&	y1	!=	y2

x1	!=	x2	&&	y1	==	y2

(	con	-	dis	)	/	sqrt	(	denomx	*	denomy	)
con	-	dis	/	sqrt	(	denomx	*	denomy	)
s1	==	0	||	s2	==	0

40014	*	(	s1	-	k	*	53668	)	-	k	*	12211
40014	*	s1	-	k	*	53668	-	k	*	12211
40692	*	(	s2	-	k	*	52774	)	-	k	*	3791
40692	*	s2	-	k	*	52774	-	k	*	3791
n	*	p	<	30.0

(	n	+	1	)	*	s
n	+	1	*	s
(	a	/	x	)	-	s

n	*	p	+	p

floor	(	2.195	*	sqrt	(	n	*	p	*	q	)	-	4.6	*	q	)	+	0.5

0.134	+	20.5	/	(	15.3	+	m	)
0.134	+	20.5	/	15.3	+	m
(	fm	-	xl	)	/	(	fm	-	xl	*	p	)
fm	-	xl	/	(	fm	-	xl	*	p	)
(	xr	-	fm	)	/	(	xr	*	q	)
xr	-	fm	/	(	xr	*	q	)
a	*	(	1.0	+	0.5	*	a	)
a	*	1.0	+	0.5	*	a
b	*	(	1.0	+	0.5	*	b	)
b	*	1.0	+	0.5	*	b
p1	*	(	1	+	2	*	c	)
p1	*	1	+	2	*	c
p2	+	c	/	lambdal

p3	+	c	/	lambdar

xm	-	p1	*	v	+	u

xr	-	log	(	v	)	/	lambdar

v	*	(	u	-	p3	)	*	lambdar
v	*	u	-	p3	*	lambdar
xl	+	log	(	v	)	/	lambdal

v	*	(	u	-	p2	)	*	lambdal
v	*	u	-	p2	*	lambdal
xl	+	(	u	-	p1	)	/	c
xl	+	u	-	p1	/	c
v	*	c	+	1.0	-	fabs	(	m	-	x	+	0.5	)	/	p1

k	>	20	&&	k	<	0.5	*	n	*	p	*	q	-	1.0

(	k	/	(	n	*	p	*	q	)	)	*	(	(	k	*	(	k	/	3.0	+	0.625	)	+	0.1666666666666	)	/	(	n	*	p	*	q	)	+	0.5	)
(	k	/	(	n	*	p	*	q	)	)	*	k	*	k	/	3.0	+	0.625	+	0.1666666666666	/	(	n	*	p	*	q	)	+	0.5
-	k	*	k	/	(	2	*	n	*	p	*	q	)

A	<	t	-	rho

A	>	t	+	rho

A	>	xm	*	log	(	f1	/	x1	)	+	(	n	-	m	+	0.5	)	*	log	(	z	/	w	)	+	(	y	-	m	)	*	log	(	w	*	p	/	(	x1	*	q	)	)	+	(	13860.	-	(	462.	-	(	132.	-	(	99.	-	140.	/	f2	)	/	f2	)	/	f2	)	/	f2	)	/	f1	/	166320.	+	(	13860.	-	(	462.	-	(	132.	-	(	99.	-	140.	/	z2	)	/	z2	)	/	z2	)	/	z2	)	/	z	/	166320.	+	(	13860.	-	(	462.	-	(	132.	-	(	99.	-	140.	/	x2	)	/	x2	)	/	x2	)	/	x2	)	/	x1	/	166320.	+	(	13860.	-	(	462.	-	(	132.	-	(	99.	-	140.	/	w2	)	/	w2	)	/	w2	)	/	w2	)	/	w	/	166320.
A	>	xm	*	log	(	f1	/	x1	)	+	n	-	m	+	0.5	*	log	(	z	/	w	)	+	y	-	m	*	log	(	w	*	p	/	(	x1	*	q	)	)	+	13860.	-	462.	-	132.	-	99.	-	140.	/	f2	/	f2	/	f2	/	f2	/	f1	/	166320.	+	13860.	-	(	462.	-	(	132.	-	99.	-	140.	/	z2	/	z2	)	/	z2	)	/	z2	/	z	/	166320.	+	13860.	-	462.	-	(	132.	-	99.	-	140.	/	x2	/	x2	)	/	x2	/	x2	/	x1	/	166320.	+	13860.	-	(	462.	-	132.	-	99.	-	140.	/	w2	/	w2	/	w2	)	/	w2	/	w	/	166320.
s	*	(	n	+	1	)
s	*	n	+	1
aa	/	(	++	i	)	-	s

aa	/	(	++	i	)	-	s

i	<	nclusters	-	1

1.0	/	(	nclusters	-	i	)
1.0	/	nclusters	-	i
i	+	(	nelements	-	i	)	*	uniform	(	)
i	+	nelements	-	i	*	uniform	(	)
counter	%	period	==	0

++	ipass	<	npass

counter	%	period	==	0

++	ipass	<	npass

counter	%	period	==	0

++	ipass	<	npass

exponent	*	log	(	1	-	distance	/	cutoff	)

i	<	nnodes	-	inode

i	<	nnodes	-	inode

j	<	n	-	1

j	<	n	-	1

nxgrid	*	nxgrid	+	nygrid	*	nygrid

i	+	(	nelements	-	i	)	*	uniform	(	)
i	+	nelements	-	i	*	uniform	(	)
maxradius	*	(	1.	-	(	(	double	)	iter	)	/	(	(	double	)	niter	)	)
maxradius	*	1.	-	(	(	double	)	iter	)	/	(	(	double	)	niter	)
inittau	*	(	1.	-	(	(	double	)	iter	)	/	(	(	double	)	niter	)	)
inittau	*	1.	-	(	(	double	)	iter	)	/	(	(	double	)	niter	)
sqrt	(	(	ix	-	ixbest	)	*	(	ix	-	ixbest	)	+	(	iy	-	iybest	)	*	(	iy	-	iybest	)	)	<	radius
sqrt	(	ix	-	ixbest	*	(	ix	-	ixbest	)	+	iy	-	iybest	*	(	iy	-	iybest	)	)	<	radius
maxradius	*	(	1.	-	(	(	double	)	iter	)	/	(	(	double	)	niter	)	)
maxradius	*	1.	-	(	(	double	)	iter	)	/	(	(	double	)	niter	)
inittau	*	(	1.	-	(	(	double	)	iter	)	/	(	(	double	)	niter	)	)
inittau	*	1.	-	(	(	double	)	iter	)	/	(	(	double	)	niter	)
sqrt	(	(	ix	-	ixbest	)	*	(	ix	-	ixbest	)	+	(	iy	-	iybest	)	*	(	iy	-	iybest	)	)	<	radius
sqrt	(	ix	-	ixbest	*	ix	-	ixbest	+	iy	-	iybest	*	(	iy	-	iybest	)	)	<	radius
n1	<	1	||	n2	<	1

index	<	0	||	index	>=	nrows

index	<	0	||	index	>=	nrows

index	<	0	||	index	>=	ncolumns

index	<	0	||	index	>=	ncolumns

nrows	<	1	||	ncols	<	1

(	1	+	sqrt	(	1	+	8	*	m	)	)	/	2
1	+	sqrt	(	1	+	8	*	m	)	/	2
(	*	n	)	*	(	*	n	)	-	(	*	n	)	!=	2	*	m

i	<	nxgrid	*	nygrid

(	2	*	n	+	1	)	*	sizeof	(	int	)
2	*	n	+	1	*	sizeof	(	int	)
i	<	2	*	n	+	1

!	flag	||	i	<	n

i	<	n	-	1

i	<	0	||	i	>=	self	->	n

IFOUND	==	-	1

result	<	-	0.5

dim	<=	0	||	bucket_size	<=	0

ls	-	rq	>	radius

lq	-	rs	>	radius

rs	<=	rq	&&	ls	>=	lq

(	offset_end	-	offset_begin	)	<=	tree	->	_bucket_size

d	/	2	+	d	%	2

(	n	+	1	)	*	sizeof	(	struct	DataPoint	)
n	+	1	*	sizeof	(	struct	DataPoint	)
(	n	+	1	)	*	sizeof	(	struct	Radius	)
n	+	1	*	sizeof	(	struct	Radius	)
intersect_right	==	-	1

coords	+	i	*	tree	->	dim

!	down	||	!	up	||	!	down_region	||	!	up_region

intersect	==	-	1

intersect	==	-	1

intersect	==	+	1

intersect	==	-	1

intersect	==	-	1

intersect	==	+	1

intersect	==	-	1

intersect	==	-	1

intersect	==	+	1

fabs	(	x2	-	x1	)	<=	radius

!	(	commlevel	||	speciallevel	)	&&	t	==	quotelevel
!	commlevel	||	speciallevel	&&	t	==	quotelevel
!	quotelevel	&&	!	(	commlevel	||	speciallevel	)
!	quotelevel	&&	!	commlevel	||	speciallevel
!	(	commlevel	||	speciallevel	)
!	commlevel	||	speciallevel
!	(	quotelevel	||	speciallevel	)
!	quotelevel	||	speciallevel
stat	(	path	,	&	statbuf	)	==	-	1

mkdir	(	path	,	S_IRWXU	)	==	-	1

ci	->	slidenum	==	mypage_i	&&	ci	->	w	==	w	&&	ci	->	h	==	h	&&	ci	->	scale	==	scale

pp	->	width	<=	0	||	pp	->	height	<=	0

mypage_i	<	0	||	mypage_i	>=	doc_n_pages

pp	->	offset	==	0	&&	!	pp	->	isBeamer

doc_page	+	pp	->	offset	==	doc_page_mark

mypage_i	<	0	||	mypage_i	>=	doc_n_pages

doc_page	==	doc_n_pages	-	1

target_page	>=	0	&&	target_page	<	doc_n_pages

i	-	(	int	)	(	(	double	)	numframes	/	2.0	)

i	==	numframes	-	1

i	==	(	int	)	(	numframes	/	2	)

i	<	(	int	)	(	numframes	/	2	)

2	*	atoi	(	optarg	)	+	1

stat	(	filename	,	&	statbuf	)	==	-	1

ret	==	-	1

CloseRemoteService	(	db	)	==	-	1

ret	==	-	1

ret	==	-	1

db	==	-	1

ret	==	-	1

ret	==	-	1

idx	*	37	+	*	(	unsigned	char	*	)	kbuf	++

(	hash	*	31	)	^	*	(	unsigned	char	*	)	--	rp

listenfd	==	-	1

epollfd	==	-	1

fd	==	-	1

ret	==	-	1

ret	<	0	||	ret	!=	BufSize

ret	==	-	1

ret	==	-	1

ret	==	-	1

(	next	-	prev	)	%	2	==	0
next	-	prev	%	2	==	0
(	next	-	prev	)	/	2	+	prev
next	-	prev	/	2	+	prev
(	next	-	prev	-	1	)	/	2	+	prev
next	-	prev	-	1	/	2	+	prev
BufSize	<	(	sizeof	(	tDataFormat	)	+	len1	)	||	len1	>	*	pData1Size

BufSize	<	(	sizeof	(	tDataFormat	)	+	*	pData1Size	+	sizeof	(	int	)	+	len2	)	||	len2	>	*	pData2Size

!	_vsync	&&	run

*	p	&&	!	isspace	(	*	p	)
p	&&	!	isspace	(	*	p	*	p	&&	!	isspace	(	*	p	)
code	>=	32	&&	code	<=	126

pan	<	-	100

pan	<	-	100

f	<	-	16

(	f	/	239.0f	)	*	3.0f	+	1.0f

(	tmpstop	-	start	)	>	maxlen

i	<	y	+	h

j	<	x	+	w

(	(	i	-	y	)	*	w	*	4	)	+	(	(	j	-	x	)	*	4	)
(	i	-	y	*	w	*	4	)	+	(	(	j	-	x	)	*	4	)
i	<	y	+	h

j	<	x	+	w

(	(	i	-	y	)	*	w	*	4	)	+	(	(	j	-	x	)	*	4	)
(	(	i	-	y	)	*	w	*	4	)	+	(	j	-	x	*	4	)
5	*	row_a	+	column_a

5	*	row_b	+	column_b

5	*	row_a	+	column_a

5	*	row_b	+	column_b

(	5	*	row_a	)	+	column_a	+	18

(	5	*	row_b	)	+	column_b	+	18

5	*	row_a	+	column_a

5	*	row_b	+	column_b

i	<	sizeof	(	_resolutions	)	/	sizeof	(	struct	resolution_t	)

x0	==	x1	&&	y0	==	y1

e2	>	-	dx

my	<	y	+	h

mx	<	x	+	w

-	1.0	+	2.0f	*	sx	/	320.0f

1.0	-	sy	/	100.0f	-	h

-	1.0	+	2.0f	*	sx	/	320.0f

1.0	-	sy	/	100.0f	-	h

ret	<=	0	&&	val	==	first	-	1

handle	!=	stdout	&&	handle	!=	0

(	(	hval	>>	x	)	^	hval	)	&	TINY_MASK	(	x	)
(	hval	>>	x	)	^	hval	&	TINY_MASK	(	x	)
width	*	10	+	c

*	p	&&	(	--	precision	>=	0	)

p	<	line	+	size	-	1

unix_time	==	-	1

++	cnt	>=	500

++	cnt	>=	500

++	cnt	>=	500

unix_time	==	-	1

(	par1	+	par2	)	*	(	par3	+	par4	)
par1	+	par2	*	par3	+	par4
++	cnt	>=	500

++	cnt	>=	500

++	cnt	>=	500

++	cnt	>=	500

++	cnt	>=	500

++	cnt	>=	500

--	cnt	==	0

--	cnt	==	0

--	cnt	==	0

--	cnt	==	0

--	cnt	==	0

--	cnt	==	0

!	base	||	!	*	base

urls	++	==	0

bufkeylen	==	slot	->	keylen	&&	!	memcmp	(	slot	->	key	,	slot	->	buf	,	bufkeylen	+	1	)

!	err	&&	slot	->	match

len	>	sizeof	(	filename	)	-	10

filename	+	len	++

strlen	(	path	)	>	1024	-	10

!	commit	||	parse_commit	(	commit	)

++	cgit_repolist	.	count	>	cgit_repolist	.	length

(	tl	==	sl	&&	!	strncmp	(	f	->	suffix	,	str	,	tl	)	)	||	(	tl	==	sl	-	1	&&	!	strncmp	(	f	->	suffix	+	1	,	str	,	tl	-	1	)	)

i	<	bufsize	-	1

!	isname	&&	isspace	(	c	)
isname	&&	isspace	(	c	!	isname	&&	isspace	(	c	)
!	commit	||	parse_commit	(	commit	)

age1	!=	0	&&	age2	!=	0

age1	==	0	&&	age2	==	0

!	tag	||	!	info

mode	==	3	&&	isdigit	(	*	p	)

!	txt	||	!	*	txt	||	!	src_enc	||	!	dst_enc

t	&&	*	t	&&	len	--

selected_value	&&	!	strcmp	(	selected_value	,	value	)

d1	<	0	||	d2	<	0

d1	*	16	+	d2

!	(	WIFEXITED	(	status	)	&&	WEXITSTATUS	(	status	)	==	0	)
!	WIFEXITED	(	status	)	&&	WEXITSTATUS	(	status	)	==	0
!	strcmp	(	fmt	->	suffix	,	filename	+	fl	-	sl	)

cmd	->	want_repo	&&	!	ctx	->	repo

port	&&	atoi	(	port	)	!=	80

!	tag	||	parse_tag	(	tag	)

!	(	snapshots	&	f	->	bit	)
!	snapshots	&	f	->	bit
info	->	old_mode	!=	info	->	new_mode	&&	!	is_null_sha1	(	info	->	old_sha1	)	&&	!	is_null_sha1	(	info	->	new_sha1	)

(	max_changes	-	info	->	removed	-	info	->	added	)	*	100.0	/	max_changes
max_changes	-	info	->	removed	-	info	->	added	*	100.0	/	max_changes
line	&&	(	len	>	0	)

lines_added	+	lines_removed	>	max_changes

mode1	!=	0	&&	mode2	!=	0

!	commit	||	parse_commit	(	commit	)

!	commit2	||	parse_commit	(	commit2	)

!	tag	||	parse_tag	(	tag	)

mode1	!=	0	&&	mode2	!=	0

ret	==	-	1

rc	!=	-	1

!	MAX_SEND_BUFFER	||	!	MAX_DIR_PATH

16	*	d1	+	d2

!	(	is_get	||	is_head	)
!	is_get	||	is_head
rc	!=	-	1

socket	||	hot	||	!	HAS_EPOLL

rc	!=	-	1

rc	!=	-	1

rc	==	-	1

*	(	p	++	)	==	L_ESC

++	p	<	ec

p	+	2	<	ec

*	p	==	0	||	*	(	p	+	1	)	==	0
*	p	==	0	||	*	p	+	1	==	0
++	s	<	ms	->	src_end

--	cont	==	0

(	s	+	i	)	<	ms	->	src_end	&&	singlematch	(	uchar	(	*	(	s	+	i	)	)	,	p	,	ep	)
s	+	i	<	ms	->	src_end	&&	singlematch	(	uchar	(	*	(	s	+	i	)	)	,	p	,	ep	)
s	<	ms	->	src_end	&&	singlematch	(	uchar	(	*	s	)	,	p	,	ep	)

s	<	ms	->	src_end	&&	singlematch	(	uchar	(	*	s	)	,	p	,	ep	)

ret	!=	-	1

rc	==	0	&&	getgid	(	)	==	sb	.	st_gid	&&	getegid	(	)	==	sb	.	st_gid

rc	==	0	&&	getuid	(	)	==	sb	.	st_uid	&&	geteuid	(	)	==	sb	.	st_uid

pid	==	-	1

rc	==	-	1

++	p	==	pe

++	p	==	pe

++	p	==	pe

++	p	==	pe

++	p	==	pe

++	p	==	pe

++	p	==	pe

++	p	==	pe

++	p	==	pe

++	p	==	pe

++	p	==	pe

++	p	==	pe

++	p	==	pe

++	p	==	pe

++	p	==	pe

++	p	==	pe

++	p	==	pe

++	p	==	pe

tns_add_to_list	(	val	,	item	)	!=	-	1

tns_add_to_dict	(	val	,	key	,	item	)	!=	-	1

rc	==	-	1	&&	RUNNING

rc	!=	-	1

nparsed	!=	-	1

rc	!=	-	1

rc	!=	-	1

rc	!=	-	1

rc	!=	-	1

rc	!=	-	1

rc	!=	-	1

rc	!=	-	1

min_ping	>	0	||	min_write_rate	>	0	||	min_read_rate	>	0

rc	!=	-	1

tasksrunning	(	)	>	1	&&	attempts	<	20

rc	!=	-	1

rc	!=	-	1

rc	!=	-	1

rc	!=	-	1

tmpfd	!=	-	1

header_start	!=	-	1

rc	!=	-	1

rc	!=	-	1

rc	!=	-	1

rc	!=	-	1

packet_length	==	-	1	&&	tries	<	8	*	CLIENT_READ_RETRIES

packet_length	==	-	1

rc	==	0	&&	tries	<	CLIENT_READ_RETRIES

(	len	-	total	)	>	block_size

sent	!=	-	1

tosend	+	total	>	len

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	122

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	122

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

p	-	targets_start	==	target_expected_len

p	-	targets_start	==	target_expected_len

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

rc	!=	-	1

rc	!=	-	1

rc	!=	-	1

rc	!=	-	1

rc	!=	0	&&	bind_attempts	--	>	0

rc	!=	0	&&	bind_attempts	--	>	0

!	MAX_URL_PATH	||	!	MAX_HOST_NAME

low	+	(	high	-	low	)	/	2
low	+	high	-	low	/	2
low	+	(	high	-	low	)	/	2
low	+	high	-	low	/	2
!	results	->	tester	||	results	->	tester	(	value	,	results	->	key	,	results	->	len	)

(	q_start	+	1	)	%	q_max
q_start	+	1	%	q_max
q_size	+	3	>	q_max

height_left	==	0	||	height_right	==	0

len	+	(	2	-	(	len	!=	0	)	)
len	+	(	2	-	len	!=	0	)
i	==	ii	+	j

i	==	lf	&&	ll	==	j	+	1

l	+	1	<=	i

l	+	1	<=	i

slen	>=	mlen	-	1

pos	<	0	||	acc	<	0

d	==	0	&&	c	<	0

d	==	0	&&	c	<	0

s	->	isEOF	&&	(	s	->	buff	->	slen	==	0	)

r	>	count	+	1

l	+	c	>=	width	||	c	<	2

(	width	-	l	+	(	c	/	2	)	)	/	c
width	-	l	+	(	c	/	2	)	/	c
(	x	*	10	)	+	v

rows	!=	-	1

rows	!=	-	1

rc	!=	-	1

rc	!=	-	1

i	==	1	&&	!	all

nalltask	%	TASK_LIST_GROWTH	==	0

istcp	&&	getsockopt	(	fd	,	SOL_SOCKET	,	SO_TYPE	,	(	void	*	)	&	n	,	&	sn	)	>=	0

rc	!=	-	1

rc	!=	-	1

rc	!=	-	1

rc	!=	-	1

rc	!=	-	1

rc	!=	-	1

port	>=	0	&&	port	<=	65535

rc	!=	-	1

cfd	==	-	1

rc	!=	-	1

cfd	!=	-	1

ms	%	min	!=	0

ms	-	(	ms	%	min	)

rc	!=	-	1

max	!=	-	1

!	b	||	!	p

p	&&	p	->	magic	==	HH_MAGIC

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

++	p	==	pe

++	p	==	pe

42	<=	(	*	p	)	&&	(	*	p	)	<=	43

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

94	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

42	<=	(	*	p	)	&&	(	*	p	)	<=	43

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

94	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

42	<=	(	*	p	)	&&	(	*	p	)	<=	43

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

94	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

42	<=	(	*	p	)	&&	(	*	p	)	<=	43

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

94	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

++	p	==	pe

++	p	==	pe

++	p	==	pe

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

++	p	==	pe

++	p	==	pe

++	p	==	pe

42	<=	(	*	p	)	&&	(	*	p	)	<=	43

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

94	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

42	<=	(	*	p	)	&&	(	*	p	)	<=	43

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

94	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

9	<=	(	*	p	)	&&	(	*	p	)	<=	12

++	p	==	pe

++	p	==	pe

++	p	==	pe

42	<=	(	*	p	)	&&	(	*	p	)	<=	43

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

94	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

42	<=	(	*	p	)	&&	(	*	p	)	<=	43

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

94	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

42	<=	(	*	p	)	&&	(	*	p	)	<=	43

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

94	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

42	<=	(	*	p	)	&&	(	*	p	)	<=	43

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

94	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

42	<=	(	*	p	)	&&	(	*	p	)	<=	43

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

94	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

42	<=	(	*	p	)	&&	(	*	p	)	<=	43

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

94	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

42	<=	(	*	p	)	&&	(	*	p	)	<=	43

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

94	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

42	<=	(	*	p	)	&&	(	*	p	)	<=	43

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

94	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

42	<=	(	*	p	)	&&	(	*	p	)	<=	43

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

94	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

42	<=	(	*	p	)	&&	(	*	p	)	<=	43

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

94	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

9	<=	(	*	p	)	&&	(	*	p	)	<=	12

++	p	==	pe

9	<=	(	*	p	)	&&	(	*	p	)	<=	12

42	<=	(	*	p	)	&&	(	*	p	)	<=	43

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

94	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

9	<=	(	*	p	)	&&	(	*	p	)	<=	13

++	p	==	pe

++	p	==	pe

++	p	==	pe

++	p	==	pe

++	p	==	pe

++	p	==	pe

42	<=	(	*	p	)	&&	(	*	p	)	<=	43

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

94	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

42	<=	(	*	p	)	&&	(	*	p	)	<=	43

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

94	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

42	<=	(	*	p	)	&&	(	*	p	)	<=	43

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

94	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

42	<=	(	*	p	)	&&	(	*	p	)	<=	43

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

94	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

42	<=	(	*	p	)	&&	(	*	p	)	<=	43

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

94	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

42	<=	(	*	p	)	&&	(	*	p	)	<=	43

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

94	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

42	<=	(	*	p	)	&&	(	*	p	)	<=	43

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

94	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

42	<=	(	*	p	)	&&	(	*	p	)	<=	43

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

94	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

42	<=	(	*	p	)	&&	(	*	p	)	<=	43

94	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

42	<=	(	*	p	)	&&	(	*	p	)	<=	43

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

94	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

42	<=	(	*	p	)	&&	(	*	p	)	<=	43

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

94	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

42	<=	(	*	p	)	&&	(	*	p	)	<=	43

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

94	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

42	<=	(	*	p	)	&&	(	*	p	)	<=	43

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

94	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

42	<=	(	*	p	)	&&	(	*	p	)	<=	43

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

94	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

42	<=	(	*	p	)	&&	(	*	p	)	<=	43

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

94	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

42	<=	(	*	p	)	&&	(	*	p	)	<=	43

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

94	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

42	<=	(	*	p	)	&&	(	*	p	)	<=	43

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

94	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

42	<=	(	*	p	)	&&	(	*	p	)	<=	43

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

94	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

9	<=	(	*	p	)	&&	(	*	p	)	<=	12

++	p	==	pe

9	<=	(	*	p	)	&&	(	*	p	)	<=	12

42	<=	(	*	p	)	&&	(	*	p	)	<=	43

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

94	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

9	<=	(	*	p	)	&&	(	*	p	)	<=	13

++	p	==	pe

++	p	==	pe

++	p	==	pe

++	p	==	pe

++	p	==	pe

++	p	==	pe

++	p	==	pe

++	p	==	pe

++	p	==	pe

9	<=	(	*	p	)	&&	(	*	p	)	<=	13

++	p	==	pe

9	<=	(	*	p	)	&&	(	*	p	)	<=	13

++	p	==	pe

42	<=	(	*	p	)	&&	(	*	p	)	<=	43

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

94	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

42	<=	(	*	p	)	&&	(	*	p	)	<=	43

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

94	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

42	<=	(	*	p	)	&&	(	*	p	)	<=	43

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

94	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

42	<=	(	*	p	)	&&	(	*	p	)	<=	43

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

94	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

42	<=	(	*	p	)	&&	(	*	p	)	<=	43

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

94	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

42	<=	(	*	p	)	&&	(	*	p	)	<=	43

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

94	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

42	<=	(	*	p	)	&&	(	*	p	)	<=	43

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

94	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

9	<=	(	*	p	)	&&	(	*	p	)	<=	13

++	p	==	pe

++	p	==	pe

++	p	==	pe

++	p	==	pe

++	p	==	pe

++	p	==	pe

++	p	==	pe

++	p	==	pe

++	p	==	pe

9	<=	(	*	p	)	&&	(	*	p	)	<=	13

++	p	==	pe

9	<=	(	*	p	)	&&	(	*	p	)	<=	13

++	p	==	pe

42	<=	(	*	p	)	&&	(	*	p	)	<=	43

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

94	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

42	<=	(	*	p	)	&&	(	*	p	)	<=	43

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

94	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

42	<=	(	*	p	)	&&	(	*	p	)	<=	43

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

94	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

42	<=	(	*	p	)	&&	(	*	p	)	<=	43

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

94	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

42	<=	(	*	p	)	&&	(	*	p	)	<=	43

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

94	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

9	<=	(	*	p	)	&&	(	*	p	)	<=	13

++	p	==	pe

++	p	==	pe

++	p	==	pe

++	p	==	pe

++	p	==	pe

++	p	==	pe

42	<=	(	*	p	)	&&	(	*	p	)	<=	43

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

94	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

42	<=	(	*	p	)	&&	(	*	p	)	<=	43

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

94	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

42	<=	(	*	p	)	&&	(	*	p	)	<=	43

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

94	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

42	<=	(	*	p	)	&&	(	*	p	)	<=	43

94	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

42	<=	(	*	p	)	&&	(	*	p	)	<=	43

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

94	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

42	<=	(	*	p	)	&&	(	*	p	)	<=	43

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

94	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

42	<=	(	*	p	)	&&	(	*	p	)	<=	43

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

94	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

42	<=	(	*	p	)	&&	(	*	p	)	<=	43

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

94	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

42	<=	(	*	p	)	&&	(	*	p	)	<=	43

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

94	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

42	<=	(	*	p	)	&&	(	*	p	)	<=	43

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

94	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

42	<=	(	*	p	)	&&	(	*	p	)	<=	43

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

94	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

++	p	==	pe

9	<=	(	*	p	)	&&	(	*	p	)	<=	12

42	<=	(	*	p	)	&&	(	*	p	)	<=	43

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

94	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

++	p	==	pe

42	<=	(	*	p	)	&&	(	*	p	)	<=	43

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

94	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

65	<=	(	*	p	)	&&	(	*	p	)	<=	90

++	p	==	pe

65	<=	(	*	p	)	&&	(	*	p	)	<=	90

++	p	==	pe

36	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

++	p	==	pe

++	p	==	pe

++	p	==	pe

++	p	==	pe

++	p	==	pe

++	p	==	pe

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	49

++	p	==	pe

++	p	==	pe

1	<=	(	*	p	)	&&	(	*	p	)	<=	8

35	<=	(	*	p	)	&&	(	*	p	)	<=	39

45	<=	(	*	p	)	&&	(	*	p	)	<=	46

94	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

1	<=	(	*	p	)	&&	(	*	p	)	<=	8

35	<=	(	*	p	)	&&	(	*	p	)	<=	39

45	<=	(	*	p	)	&&	(	*	p	)	<=	46

94	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

++	p	==	pe

++	p	==	pe

++	p	==	pe

1	<=	(	*	p	)	&&	(	*	p	)	<=	8

35	<=	(	*	p	)	&&	(	*	p	)	<=	39

45	<=	(	*	p	)	&&	(	*	p	)	<=	46

94	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

1	<=	(	*	p	)	&&	(	*	p	)	<=	8

35	<=	(	*	p	)	&&	(	*	p	)	<=	39

45	<=	(	*	p	)	&&	(	*	p	)	<=	46

94	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

36	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

36	<=	(	*	p	)	&&	(	*	p	)	<=	59

97	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

36	<=	(	*	p	)	&&	(	*	p	)	<=	59

97	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

36	<=	(	*	p	)	&&	(	*	p	)	<=	59

97	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

36	<=	(	*	p	)	&&	(	*	p	)	<=	59

97	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

36	<=	(	*	p	)	&&	(	*	p	)	<=	59

97	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

36	<=	(	*	p	)	&&	(	*	p	)	<=	59

97	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

36	<=	(	*	p	)	&&	(	*	p	)	<=	59

97	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

36	<=	(	*	p	)	&&	(	*	p	)	<=	59

97	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

36	<=	(	*	p	)	&&	(	*	p	)	<=	46

97	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

36	<=	(	*	p	)	&&	(	*	p	)	<=	59

97	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

36	<=	(	*	p	)	&&	(	*	p	)	<=	59

97	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

++	p	==	pe

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

++	p	==	pe

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

++	p	==	pe

++	p	==	pe

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

++	p	==	pe

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

++	p	==	pe

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

++	p	==	pe

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

++	p	==	pe

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

++	p	==	pe

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

++	p	==	pe

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

49	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

49	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

2	<=	(	*	p	)	&&	(	*	p	)	<=	3

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

49	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

49	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

49	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

49	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

2	<=	(	*	p	)	&&	(	*	p	)	<=	3

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

2	<=	(	*	p	)	&&	(	*	p	)	<=	3

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

49	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

49	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

2	<=	(	*	p	)	&&	(	*	p	)	<=	3

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

2	<=	(	*	p	)	&&	(	*	p	)	<=	3

++	p	==	pe

++	p	==	pe

++	p	==	pe

++	p	==	pe

2	<=	(	*	p	)	&&	(	*	p	)	<=	5

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

38	<=	(	*	p	)	&&	(	*	p	)	<=	46

97	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

38	<=	(	*	p	)	&&	(	*	p	)	<=	46

97	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

36	<=	(	*	p	)	&&	(	*	p	)	<=	44

97	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

36	<=	(	*	p	)	&&	(	*	p	)	<=	59

97	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

65	<=	(	*	p	)	&&	(	*	p	)	<=	90

++	p	==	pe

65	<=	(	*	p	)	&&	(	*	p	)	<=	90

++	p	==	pe

65	<=	(	*	p	)	&&	(	*	p	)	<=	90

++	p	==	pe

65	<=	(	*	p	)	&&	(	*	p	)	<=	90

++	p	==	pe

65	<=	(	*	p	)	&&	(	*	p	)	<=	90

++	p	==	pe

65	<=	(	*	p	)	&&	(	*	p	)	<=	90

++	p	==	pe

65	<=	(	*	p	)	&&	(	*	p	)	<=	90

++	p	==	pe

65	<=	(	*	p	)	&&	(	*	p	)	<=	90

++	p	==	pe

65	<=	(	*	p	)	&&	(	*	p	)	<=	90

++	p	==	pe

65	<=	(	*	p	)	&&	(	*	p	)	<=	90

++	p	==	pe

65	<=	(	*	p	)	&&	(	*	p	)	<=	90

++	p	==	pe

65	<=	(	*	p	)	&&	(	*	p	)	<=	90

++	p	==	pe

65	<=	(	*	p	)	&&	(	*	p	)	<=	90

++	p	==	pe

65	<=	(	*	p	)	&&	(	*	p	)	<=	90

++	p	==	pe

65	<=	(	*	p	)	&&	(	*	p	)	<=	90

++	p	==	pe

65	<=	(	*	p	)	&&	(	*	p	)	<=	90

++	p	==	pe

65	<=	(	*	p	)	&&	(	*	p	)	<=	90

++	p	==	pe

65	<=	(	*	p	)	&&	(	*	p	)	<=	90

++	p	==	pe

++	p	==	pe

45	<=	(	*	p	)	&&	(	*	p	)	<=	46

97	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

9	<=	(	*	p	)	&&	(	*	p	)	<=	13

97	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

++	p	==	pe

++	p	==	pe

++	p	==	pe

36	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

++	p	==	pe

++	p	==	pe

++	p	==	pe

36	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

36	<=	(	*	p	)	&&	(	*	p	)	<=	59

97	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

36	<=	(	*	p	)	&&	(	*	p	)	<=	59

97	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

36	<=	(	*	p	)	&&	(	*	p	)	<=	59

97	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

36	<=	(	*	p	)	&&	(	*	p	)	<=	59

97	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

36	<=	(	*	p	)	&&	(	*	p	)	<=	46

97	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

36	<=	(	*	p	)	&&	(	*	p	)	<=	59

97	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

36	<=	(	*	p	)	&&	(	*	p	)	<=	59

97	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

++	p	==	pe

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

++	p	==	pe

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

++	p	==	pe

++	p	==	pe

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

++	p	==	pe

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

++	p	==	pe

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

++	p	==	pe

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

++	p	==	pe

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

++	p	==	pe

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

++	p	==	pe

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

49	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

49	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

2	<=	(	*	p	)	&&	(	*	p	)	<=	3

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

49	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

49	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

49	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

49	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

2	<=	(	*	p	)	&&	(	*	p	)	<=	3

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

2	<=	(	*	p	)	&&	(	*	p	)	<=	3

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

49	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

49	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

2	<=	(	*	p	)	&&	(	*	p	)	<=	3

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

2	<=	(	*	p	)	&&	(	*	p	)	<=	3

++	p	==	pe

++	p	==	pe

++	p	==	pe

++	p	==	pe

2	<=	(	*	p	)	&&	(	*	p	)	<=	5

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	102

++	p	==	pe

38	<=	(	*	p	)	&&	(	*	p	)	<=	46

97	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

38	<=	(	*	p	)	&&	(	*	p	)	<=	46

97	<=	(	*	p	)	&&	(	*	p	)	<=	122

rc	!=	-	1

rc	==	-	1

rc	!=	-	1

rc	!=	-	1

rc	!=	-	1

Register_ping	(	12	)	==	-	1

rc	!=	-	1

rc	!=	-	1

*	string	&&	isspace	(	(	unsigned	char	)	*	string	)
string	&&	isspace	(	(	unsigned	char	)	*	string	*	string	&&	isspace	(	(	unsigned	char	)	*	string	)
*	string	&&	!	isspace	(	(	unsigned	char	)	*	string	)
string	&&	!	isspace	(	(	unsigned	char	)	*	string	*	string	&&	!	isspace	(	(	unsigned	char	)	*	string	)
tokenize	(	in	+	1	,	&	tok1	,	&	tok2	,	(	char	*	*	)	0	)	!=	2

!	key	||	!	val

tokenize	(	in	+	1	,	&	tok1	,	(	char	*	*	)	0	)	!=	1

tokenize	(	in	+	1	,	&	tok1	,	(	char	*	*	)	0	)	!=	1

nr	!=	-	1

rc	!=	-	1

etv	.	tv_usec	+	etv	.	tv_sec	*	1000000LL

*	string	&&	isspace	(	(	unsigned	char	)	*	string	)
string	&&	isspace	(	(	unsigned	char	)	*	string	*	string	&&	isspace	(	(	unsigned	char	)	*	string	)
*	string	&&	!	isspace	(	(	unsigned	char	)	*	string	)
string	&&	!	isspace	(	(	unsigned	char	)	*	string	*	string	&&	!	isspace	(	(	unsigned	char	)	*	string	)
tokenize	(	in	+	1	,	&	tok1	,	&	tok2	,	(	char	*	*	)	0	)	!=	2

tokenize	(	in	+	1	,	&	tok1	,	&	tok2	,	(	char	*	*	)	0	)	!=	2

!	key	||	!	val

tokenize	(	in	+	1	,	&	tok1	,	(	char	*	*	)	0	)	!=	1

tokenize	(	in	+	1	,	&	tok1	,	(	char	*	*	)	0	)	!=	1

tokenize	(	in	+	1	,	&	tok1	,	(	char	*	*	)	0	)	!=	1

dictnum	<	0	||	dictnum	>	9

tokenize	(	in	+	1	,	&	tok1	,	&	tok2	,	(	char	*	*	)	0	)	!=	2

dict1	<	0	||	dict1	>	9	||	dict2	<	0	||	dict2	>	9

rc	==	-	1

rc	==	-	1

rc	==	-	1

rc	==	-	1

rows	!=	-	1

*	string	&&	isspace	(	(	unsigned	char	)	*	string	)
string	&&	isspace	(	(	unsigned	char	)	*	string	*	string	&&	isspace	(	(	unsigned	char	)	*	string	)
*	string	&&	!	isspace	(	(	unsigned	char	)	*	string	)
string	&&	!	isspace	(	(	unsigned	char	)	*	string	*	string	&&	!	isspace	(	(	unsigned	char	)	*	string	)
tokenize	(	in	+	1	,	&	tok1	,	(	char	*	*	)	0	)	!=	1

tokenize	(	in	+	1	,	&	tok1	,	(	char	*	*	)	0	)	!=	1

tokenize	(	in	+	1	,	&	tok1	,	(	char	*	*	)	0	)	!=	1

rc	==	-	1

rc	==	-	1

rc	==	-	1

rc	==	-	1

rc	==	-	1

fd	!=	-	1

fd	!=	-	1

rc	==	-	1

rc	==	10	*	1024

rc	==	-	1

rc	==	-	1

(	rand	(	)	+	1	)	%	4
rand	(	)	+	1	%	4
(	rot	+	1	)	%	(	unsigned	)	16
rot	+	1	%	(	unsigned	)	16
b	->	mlen	>	0	&&	b	->	mlen	<	b	->	slen

b	->	mlen	==	-	1

(	!	nochange	)	==	(	!	x	)

ret	&&	0	==	linenum

ret	&&	0	==	linenum

ret	&&	0	==	linenum

ret	&&	0	==	linenum

(	rv	==	0	)	!=	(	pos	>=	0	)

ret	&&	0	==	linenum

ret	&&	0	==	linenum

ret	&&	0	==	linenum

ret	&&	0	==	linenum

ret	&&	0	==	linenum

ret	&&	0	==	linenum

(	len	>=	0	)	!=	(	rv	==	0	)

len	+	sb	->	ofs	>	sb	->	b	->	slen

*	val	==	i	*	333

rc	==	-	1

--	i	>=	0

sec	*	(	1000	+	rand	(	)	%	1000	)
sec	*	1000	+	rand	(	)	%	1000
rc	!=	-	1

p	->	yystksz	*	2	+	100

yyTraceFILE	&&	pParser	->	yyidx	>=	0

yyTraceFILE	&&	yypParser	->	yyidx	>	0

rc	!=	-	1

++	p	==	pe

9	<=	(	*	p	)	&&	(	*	p	)	<=	13

97	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

++	p	==	pe

++	p	==	pe

++	p	==	pe

++	p	==	pe

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

97	<=	(	*	p	)	&&	(	*	p	)	<=	122

yyTraceFILE	&&	pParser	->	yyidx	>=	0

i	<	0	||	i	>=	YY_SZ_ACTTAB

i	>=	0	&&	i	<	YY_SZ_ACTTAB

yyTraceFILE	&&	yypParser	->	yyidx	>	0

yyTraceFILE	&&	yyruleno	>=	0

yyact	==	YYNSTATE	+	YYNRULE	+	1

yyact	<	YYNSTATE	+	YYNRULE

yymajor	!=	YYNOCODE	&&	yypParser	->	yyidx	>=	0

rows	!=	-	1

tcgetattr	(	fd	,	&	orig_termios	)	==	-	1

~	(	BRKINT	|	ICRNL	|	INPCK	|	ISTRIP	|	IXON	)
~	BRKINT	|	ICRNL	|	INPCK	|	ISTRIP	|	IXON
~	(	ECHO	|	ICANON	|	IEXTEN	|	ISIG	)
~	ECHO	|	ICANON	|	IEXTEN	|	ISIG
rawmode	&&	tcsetattr	(	fd	,	TCSAFLUSH	,	&	orig_termios	)	!=	-	1

ioctl	(	1	,	TIOCGWINSZ	,	&	ws	)	==	-	1

enableRawMode	(	fd	)	==	-	1

sizeof	(	char	*	)	*	(	history_max_len	-	1	)
sizeof	(	char	*	)	*	history_max_len	-	1
++	p	==	pe

9	<=	(	*	p	)	&&	(	*	p	)	<=	13

97	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

9	<=	(	*	p	)	&&	(	*	p	)	<=	13

++	p	==	pe

9	<=	(	*	p	)	&&	(	*	p	)	<=	13

++	p	==	pe

++	p	==	pe

++	p	==	pe

9	<=	(	*	p	)	&&	(	*	p	)	<=	13

++	p	==	pe

9	<=	(	*	p	)	&&	(	*	p	)	<=	13

++	p	==	pe

++	p	==	pe

++	p	==	pe

9	<=	(	*	p	)	&&	(	*	p	)	<=	13

++	p	==	pe

9	<=	(	*	p	)	&&	(	*	p	)	<=	13

97	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

9	<=	(	*	p	)	&&	(	*	p	)	<=	13

97	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

9	<=	(	*	p	)	&&	(	*	p	)	<=	13

97	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

9	<=	(	*	p	)	&&	(	*	p	)	<=	13

97	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

9	<=	(	*	p	)	&&	(	*	p	)	<=	13

97	<=	(	*	p	)	&&	(	*	p	)	<=	122

++	p	==	pe

48	<=	(	*	p	)	&&	(	*	p	)	<=	57

rows	==	1	&&	cols	==	2

pid	!=	-	1

pid	==	-	1

(	list	->	qty	+	1	)	%	2	==	0
list	->	qty	+	1	%	2	==	0
rows	!=	-	1

rows	!=	-	1

rows	!=	-	1

p	->	yystksz	*	2	+	100

yyTraceFILE	&&	pParser	->	yyidx	>=	0

yyTraceFILE	&&	yypParser	->	yyidx	>	0

i	<	amt	-	1

rc	==	0	&&	ap1	->	type	==	REDUCE

p	->	nAction	+	n	>=	p	->	nActionAlloc

i	<	p	->	nAction	+	p	->	mnLookahead

k	<	0	||	k	>=	p	->	nAction

i	<	rp	->	nrhs	&&	rp	->	precsym	==	0

sp	->	type	!=	TERMINAL	||	sp	->	lambda	==	LEMON_FALSE

nap	&&	nap	->	sp	==	ap	->	sp

apx	->	type	==	SHIFT	&&	apy	->	type	==	SHIFT

apx	->	type	==	SHIFT	&&	apy	->	type	==	REDUCE

spy	==	0	||	spx	->	prec	<	0	||	spy	->	prec	<	0

spx	->	prec	==	spy	->	prec	&&	spx	->	assoc	==	RIGHT

spx	->	prec	==	spy	->	prec	&&	spx	->	assoc	==	LEFT

spx	->	prec	==	spy	->	prec	&&	spx	->	assoc	==	NONE

spx	->	prec	==	spy	->	prec	&&	spx	->	assoc	==	NONE

apx	->	type	==	REDUCE	&&	apy	->	type	==	REDUCE

spx	==	0	||	spy	==	0	||	spx	->	prec	<	0	||	spy	->	prec	<	0	||	spx	->	prec	==	spy	->	prec

apx	->	type	==	SH_RESOLVED	||	apx	->	type	==	RD_RESOLVED	||	apx	->	type	==	SSCONFLICT	||	apx	->	type	==	SRCONFLICT	||	apx	->	type	==	RRCONFLICT	||	apy	->	type	==	SH_RESOLVED	||	apy	->	type	==	RD_RESOLVED	||	apy	->	type	==	SSCONFLICT	||	apy	->	type	==	SRCONFLICT	||	apy	->	type	==	RRCONFLICT

apx	->	type	==	SH_RESOLVED	||	apx	->	type	==	RD_RESOLVED	||	apx	->	type	==	SSCONFLICT	||	apx	->	type	==	SRCONFLICT	||	apx	->	type	==	RRCONFLICT	||	apy	->	type	==	SH_RESOLVED	||	apy	->	type	==	RD_RESOLVED	||	apy	->	type	==	SSCONFLICT	||	apy	->	type	==	SRCONFLICT	||	apy	->	type	==	RRCONFLICT

i	<	amt	-	1

sp	->	rule	==	0	&&	sp	!=	lemp	->	errsym

i	<	max	-	1

i	<	LISTSIZE	-	1

argv	!=	0	&&	*	argv	!=	0

sizeof	(	struct	rule	)	+	sizeof	(	struct	symbol	*	)	*	psp	->	nrhs	+	sizeof	(	char	*	)	*	psp	->	nrhs

!	psp	->	gp	->	nolinenosflag	&&	psp	->	insertLineMacro

i	<	amt	-	1

76	/	(	maxlen	+	5	)
76	/	maxlen	+	5
(	lemp	->	nsymbol	+	ncolumns	-	1	)	/	ncolumns
lemp	->	nsymbol	+	ncolumns	-	1	/	ncolumns
lemp	->	vardest	!=	0	||	sp	->	destructor	!=	0

n	+	sizeof	(	zInt	)	*	2	+	used	>=	alloced

n	+	sizeof	(	zInt	)	*	2	+	used	+	200

n	--	>	0

rp	->	lhsalias	&&	strcmp	(	cp	,	rp	->	lhsalias	)	==	0

rp	->	lhsalias	&&	!	lhsused

maxdtlength	*	2	+	1

types	==	0	||	stddt	==	0

sp	->	type	!=	NONTERMINAL	||	(	sp	->	datatype	==	0	&&	lemp	->	vartype	==	0	)

lemp	->	tokentype	&&	strcmp	(	stddt	,	lemp	->	tokentype	)	==	0

(	hash	&	0x7fffffff	)	%	arraysize
hash	&	0x7fffffff	%	arraysize
lwr	>=	-	127	&&	upr	<=	127

lwr	>=	-	32767	&&	upr	<	32767

i	*	2	+	1

i	*	2	+	1

i	*	2	+	1

i	<	lemp	->	nstate	*	2

j	==	9	||	i	==	n	-	1

j	==	9	||	i	==	n	-	1

j	==	9	||	i	==	n	-	1

j	==	9	||	i	==	n	-	1

j	==	9	||	i	==	n	-	1

(	i	&	3	)	==	3
i	&	3	==	3
(	i	&	3	)	!=	0
i	&	3	!=	0
sp	==	0	||	sp	->	type	!=	TERMINAL

sp	==	0	||	sp	->	type	==	TERMINAL	||	sp	->	index	<=	0	||	sp	->	destructor	!=	0

sp	==	0	||	sp	->	type	==	TERMINAL	||	sp	->	destructor	==	0

sp2	&&	sp2	->	type	!=	TERMINAL	&&	sp2	->	destructor	&&	sp2	->	dtnum	==	sp	->	dtnum	&&	strcmp	(	sp	->	destructor	,	sp2	->	destructor	)	==	0

i	<	lemp	->	nterminal	&&	fgets	(	line	,	LINESIZE	,	in	)

ap	->	type	==	SHIFT	&&	ap	->	sp	==	lemp	->	wildcard

nbest	<	1	||	usesWildcard

ap	->	type	==	REDUCE	&&	ap	->	x	.	rp	==	rbest

ap	->	type	==	REDUCE	&&	ap	->	x	.	rp	==	rbest

e	>=	0	&&	e	<	size

e	>=	0	&&	e	<	size

h	*	13	+	*	(	x	++	)

(	sizeof	(	x1node	)	+	sizeof	(	x1node	*	)	)	*	1024
sizeof	(	x1node	)	+	sizeof	(	x1node	*	)	*	1024
ph	&	(	x1a	->	size	-	1	)

(	sizeof	(	x1node	)	+	sizeof	(	x1node	*	)	)	*	size
sizeof	(	x1node	)	+	sizeof	(	x1node	*	)	*	size
strhash	(	oldnp	->	data	)	&	(	size	-	1	)

ph	&	(	x1a	->	size	-	1	)

strhash	(	key	)	&	(	x1a	->	size	-	1	)

(	sizeof	(	x2node	)	+	sizeof	(	x2node	*	)	)	*	128
sizeof	(	x2node	)	+	sizeof	(	x2node	*	)	*	128
ph	&	(	x2a	->	size	-	1	)

(	sizeof	(	x2node	)	+	sizeof	(	x2node	*	)	)	*	size
sizeof	(	x2node	)	+	sizeof	(	x2node	*	)	*	size
strhash	(	oldnp	->	key	)	&	(	size	-	1	)

ph	&	(	x2a	->	size	-	1	)

strhash	(	key	)	&	(	x2a	->	size	-	1	)

x2a	&&	n	>	0	&&	n	<=	x2a	->	count

rc	==	0	&&	a	&&	b

h	*	571	+	a	->	rp	->	index	*	37	+	a	->	dot

(	sizeof	(	x3node	)	+	sizeof	(	x3node	*	)	)	*	128
sizeof	(	x3node	)	+	sizeof	(	x3node	*	)	*	128
ph	&	(	x3a	->	size	-	1	)

(	sizeof	(	x3node	)	+	sizeof	(	x3node	*	)	)	*	size
sizeof	(	x3node	)	+	sizeof	(	x3node	*	)	*	size
statehash	(	oldnp	->	key	)	&	(	size	-	1	)

ph	&	(	x3a	->	size	-	1	)

statehash	(	key	)	&	(	x3a	->	size	-	1	)

h	*	571	+	a	->	rp	->	index	*	37	+	a	->	dot

(	sizeof	(	x4node	)	+	sizeof	(	x4node	*	)	)	*	64
sizeof	(	x4node	)	+	sizeof	(	x4node	*	)	*	64
ph	&	(	x4a	->	size	-	1	)

(	sizeof	(	x4node	)	+	sizeof	(	x4node	*	)	)	*	size
sizeof	(	x4node	)	+	sizeof	(	x4node	*	)	*	size
confighash	(	oldnp	->	data	)	&	(	size	-	1	)

ph	&	(	x4a	->	size	-	1	)

confighash	(	key	)	&	(	x4a	->	size	-	1	)

x4a	==	0	||	x4a	->	count	==	0

p	->	yystksz	*	2	+	100

yyTraceFILE	&&	pParser	->	yyidx	>=	0

yyTraceFILE	&&	yypParser	->	yyidx	>	0

i	<	amt	-	1

rc	==	0	&&	ap1	->	type	==	REDUCE

p	->	nAction	+	n	>=	p	->	nActionAlloc

i	<	p	->	nAction	+	p	->	mnLookahead

k	<	0	||	k	>=	p	->	nAction

i	<	rp	->	nrhs	&&	rp	->	precsym	==	0

sp	->	type	!=	TERMINAL	||	sp	->	lambda	==	LEMON_FALSE

nap	&&	nap	->	sp	==	ap	->	sp

apx	->	type	==	SHIFT	&&	apy	->	type	==	SHIFT

apx	->	type	==	SHIFT	&&	apy	->	type	==	REDUCE

spy	==	0	||	spx	->	prec	<	0	||	spy	->	prec	<	0

spx	->	prec	==	spy	->	prec	&&	spx	->	assoc	==	RIGHT

spx	->	prec	==	spy	->	prec	&&	spx	->	assoc	==	LEFT

spx	->	prec	==	spy	->	prec	&&	spx	->	assoc	==	NONE

spx	->	prec	==	spy	->	prec	&&	spx	->	assoc	==	NONE

apx	->	type	==	REDUCE	&&	apy	->	type	==	REDUCE

spx	==	0	||	spy	==	0	||	spx	->	prec	<	0	||	spy	->	prec	<	0	||	spx	->	prec	==	spy	->	prec

apx	->	type	==	SH_RESOLVED	||	apx	->	type	==	RD_RESOLVED	||	apx	->	type	==	SSCONFLICT	||	apx	->	type	==	SRCONFLICT	||	apx	->	type	==	RRCONFLICT	||	apy	->	type	==	SH_RESOLVED	||	apy	->	type	==	RD_RESOLVED	||	apy	->	type	==	SSCONFLICT	||	apy	->	type	==	SRCONFLICT	||	apy	->	type	==	RRCONFLICT

apx	->	type	==	SH_RESOLVED	||	apx	->	type	==	RD_RESOLVED	||	apx	->	type	==	SSCONFLICT	||	apx	->	type	==	SRCONFLICT	||	apx	->	type	==	RRCONFLICT	||	apy	->	type	==	SH_RESOLVED	||	apy	->	type	==	RD_RESOLVED	||	apy	->	type	==	SSCONFLICT	||	apy	->	type	==	SRCONFLICT	||	apy	->	type	==	RRCONFLICT

i	<	amt	-	1

sp	->	rule	==	0	&&	sp	!=	lemp	->	errsym

i	<	max	-	1

i	<	LISTSIZE	-	1

argv	!=	0	&&	*	argv	!=	0

sizeof	(	struct	rule	)	+	sizeof	(	struct	symbol	*	)	*	psp	->	nrhs	+	sizeof	(	char	*	)	*	psp	->	nrhs

!	psp	->	gp	->	nolinenosflag	&&	psp	->	insertLineMacro

i	<	amt	-	1

76	/	(	maxlen	+	5	)
76	/	maxlen	+	5
(	lemp	->	nsymbol	+	ncolumns	-	1	)	/	ncolumns
lemp	->	nsymbol	+	ncolumns	-	1	/	ncolumns
lemp	->	vardest	!=	0	||	sp	->	destructor	!=	0

n	+	sizeof	(	zInt	)	*	2	+	used	>=	alloced

n	+	sizeof	(	zInt	)	*	2	+	used	+	200

n	--	>	0

rp	->	lhsalias	&&	strcmp	(	cp	,	rp	->	lhsalias	)	==	0

rp	->	lhsalias	&&	!	lhsused

maxdtlength	*	2	+	1

types	==	0	||	stddt	==	0

sp	->	type	!=	NONTERMINAL	||	(	sp	->	datatype	==	0	&&	lemp	->	vartype	==	0	)

lemp	->	tokentype	&&	strcmp	(	stddt	,	lemp	->	tokentype	)	==	0

(	hash	&	0x7fffffff	)	%	arraysize
hash	&	0x7fffffff	%	arraysize
lwr	>=	-	127	&&	upr	<=	127

lwr	>=	-	32767	&&	upr	<	32767

i	*	2	+	1

i	*	2	+	1

i	*	2	+	1

i	<	lemp	->	nstate	*	2

j	==	9	||	i	==	n	-	1

j	==	9	||	i	==	n	-	1

j	==	9	||	i	==	n	-	1

j	==	9	||	i	==	n	-	1

j	==	9	||	i	==	n	-	1

(	i	&	3	)	==	3
i	&	3	==	3
(	i	&	3	)	!=	0
i	&	3	!=	0
sp	==	0	||	sp	->	type	!=	TERMINAL

sp	==	0	||	sp	->	type	==	TERMINAL	||	sp	->	index	<=	0	||	sp	->	destructor	!=	0

sp	==	0	||	sp	->	type	==	TERMINAL	||	sp	->	destructor	==	0

sp2	&&	sp2	->	type	!=	TERMINAL	&&	sp2	->	destructor	&&	sp2	->	dtnum	==	sp	->	dtnum	&&	strcmp	(	sp	->	destructor	,	sp2	->	destructor	)	==	0

i	<	lemp	->	nterminal	&&	fgets	(	line	,	LINESIZE	,	in	)

ap	->	type	==	SHIFT	&&	ap	->	sp	==	lemp	->	wildcard

nbest	<	1	||	usesWildcard

ap	->	type	==	REDUCE	&&	ap	->	x	.	rp	==	rbest

ap	->	type	==	REDUCE	&&	ap	->	x	.	rp	==	rbest

e	>=	0	&&	e	<	size

e	>=	0	&&	e	<	size

h	*	13	+	*	(	x	++	)

(	sizeof	(	x1node	)	+	sizeof	(	x1node	*	)	)	*	1024
sizeof	(	x1node	)	+	sizeof	(	x1node	*	)	*	1024
ph	&	(	x1a	->	size	-	1	)

(	sizeof	(	x1node	)	+	sizeof	(	x1node	*	)	)	*	size
sizeof	(	x1node	)	+	sizeof	(	x1node	*	)	*	size
strhash	(	oldnp	->	data	)	&	(	size	-	1	)

ph	&	(	x1a	->	size	-	1	)

strhash	(	key	)	&	(	x1a	->	size	-	1	)

(	sizeof	(	x2node	)	+	sizeof	(	x2node	*	)	)	*	128
sizeof	(	x2node	)	+	sizeof	(	x2node	*	)	*	128
ph	&	(	x2a	->	size	-	1	)

(	sizeof	(	x2node	)	+	sizeof	(	x2node	*	)	)	*	size
sizeof	(	x2node	)	+	sizeof	(	x2node	*	)	*	size
strhash	(	oldnp	->	key	)	&	(	size	-	1	)

ph	&	(	x2a	->	size	-	1	)

strhash	(	key	)	&	(	x2a	->	size	-	1	)

x2a	&&	n	>	0	&&	n	<=	x2a	->	count

rc	==	0	&&	a	&&	b

h	*	571	+	a	->	rp	->	index	*	37	+	a	->	dot

(	sizeof	(	x3node	)	+	sizeof	(	x3node	*	)	)	*	128
sizeof	(	x3node	)	+	sizeof	(	x3node	*	)	*	128
ph	&	(	x3a	->	size	-	1	)

(	sizeof	(	x3node	)	+	sizeof	(	x3node	*	)	)	*	size
sizeof	(	x3node	)	+	sizeof	(	x3node	*	)	*	size
statehash	(	oldnp	->	key	)	&	(	size	-	1	)

ph	&	(	x3a	->	size	-	1	)

statehash	(	key	)	&	(	x3a	->	size	-	1	)

h	*	571	+	a	->	rp	->	index	*	37	+	a	->	dot

(	sizeof	(	x4node	)	+	sizeof	(	x4node	*	)	)	*	64
sizeof	(	x4node	)	+	sizeof	(	x4node	*	)	*	64
ph	&	(	x4a	->	size	-	1	)

(	sizeof	(	x4node	)	+	sizeof	(	x4node	*	)	)	*	size
sizeof	(	x4node	)	+	sizeof	(	x4node	*	)	*	size
confighash	(	oldnp	->	data	)	&	(	size	-	1	)

ph	&	(	x4a	->	size	-	1	)

confighash	(	key	)	&	(	x4a	->	size	-	1	)

x4a	==	0	||	x4a	->	count	==	0

_nacts	--	>	0

_lower	+	(	(	_upper	-	_lower	)	>>	1	)
_lower	+	(	_upper	-	_lower	)	>>	1
_keys	+	(	_klen	<<	1	)	-	2
_keys	+	_klen	<<	1	-	2
_lower	+	(	(	(	_upper	-	_lower	)	>>	1	)	&	~	1	)
_lower	+	(	(	_upper	-	_lower	)	>>	1	)	&	~	1
(	_mid	-	_keys	)	>>	1

_nacts	--	>	0

_nacts	--	>	0

++	p	!=	pe

yyTraceFILE	&&	pParser	->	yyidx	>=	0

i	<	0	||	i	>=	YY_SZ_ACTTAB

yyTraceFILE	&&	yypParser	->	yyidx	>	0

yyTraceFILE	&&	yyruleno	>=	0

yyact	==	YYNSTATE	+	YYNRULE	+	1

yyact	<	YYNSTATE	+	YYNRULE

yymajor	!=	YYNOCODE	&&	yypParser	->	yyidx	>=	0

chunk_size	==	-	1

(	r	*	16	)	+	c

chunk_size	<=	nread	-	i

state_allocation	+	(	(	16	-	misalign	)	&	0xf	)
state_allocation	+	(	16	-	misalign	)	&	0xf
state	->	block_counter	>	512	||	state	->	pos	>=	state	->	prf	.	output_len	||	state	->	pid	!=	getpid	(	)

p	==	-	1

(	op	==	0	||	op	==	1	)	&&	state
op	==	0	||	op	==	1	&&	state
got_fatal_err	!=	0	||	err	==	0

generator_param	==	0	||	generator_param	>	MAX_OUTPUT_LEN

(	(	(	uint64_t	)	random	(	)	)	<<	32	)	+	random	(	)
(	(	uint64_t	)	random	(	)	)	<<	32	+	random	(	)
(	i	+	1	)	%	4
i	+	1	%	4
state_allocation	+	(	(	16	-	misalign	)	&	0xf	)
state_allocation	+	(	16	-	misalign	)	&	0xf
state	->	block_counter	>	512	||	state	->	pos	>=	state	->	prf	.	output_len	||	state	->	pid	!=	getpid	(	)

0	<=	(	int	)	test_r	&&	(	int	)	test_r	<=	2

0	<=	(	int	)	test_r	&&	(	int	)	test_r	<=	2

opt_verbosity	>	0	&&	!	opt_forked

opt_verbosity	>	0	&&	!	opt_forked

opt_verbosity	>	0	&&	!	opt_forked

opt_verbosity	<=	0	&&	cur_test_name

i	<	N	-	16

!	memcmp	(	mem	+	i	,	buf	,	16	)

found	==	-	1	&&	u	==	TOTAL

0	==	(	++	m	%	32	)	&&	n

lport	<	1	||	lport	>	65535

client	.	full	&&	curtime	.	tv_sec	-	client	.	lastrecvd	.	tv_sec	>	TIMEOUT

ptype	!=	PKT_DATA	&&	ptype	!=	PKT_REQUEST

cp	->	addr	==	ntohl	(	cliaddr	.	sin_addr	.	s_addr	)	&&	cp	->	port	==	ntohs	(	cliaddr	.	sin_port	)	&&	cp	->	seq	==	ntohl	(	clipacketp	->	seq	)

lport	<	1	||	lport	>	65535

sockfd	==	-	1

(	val	>>	5	)	&	0x01

(	val	>>	6	)	^	0x02

(	val	>>	1	)	&	0x04

(	val	<<	1	)	&	0x08

(	val	<<	3	)	&	0x10

(	val	<<	5	)	&	0x20

(	val	<<	3	)	&	0x80

(	ch	>>	4	)	&	0x0f

(	tmp	==	0	)	||	(	*	tmp	)

(	tmp	==	0	)	||	(	*	tmp	)

code	<	100	||	code	>	700

code	<	100	||	code	>	700

i	<	len	&&	c1	==	BAD

i	<	len	&&	c2	==	BAD

(	c1	<<	2	)	|	(	(	c2	&	0x30	)	>>	4	)
(	c1	<<	2	)	|	(	c2	&	0x30	>>	4	)
i	<	len	&&	c3	==	BAD

(	(	c2	&	0x0f	)	<<	4	)	|	(	(	c3	&	0x3c	)	>>	2	)
(	(	c2	&	0x0f	)	<<	4	)	|	(	c3	&	0x3c	>>	2	)
i	<	len	&&	c4	==	BAD

(	(	c3	&	0x03	)	<<	6	)	|	c4
(	c3	&	0x03	<<	6	)	|	c4
param_no	!=	1	&&	param_no	!=	2

param_no	!=	1	&&	param_no	!=	2

param_no	!=	1	&&	param_no	!=	2

(	REG_EXTENDED	|	REG_ICASE	|	REG_NEWLINE	)	&	(	~	rflags	)
REG_EXTENDED	|	REG_ICASE	|	REG_NEWLINE	&	(	~	rflags	)
param_no	!=	1	&&	param_no	!=	2

param_no	!=	1	&&	param_no	!=	2

param_no	!=	1	&&	param_no	!=	2

param_no	!=	2	&&	param_no	!=	3

param_no	!=	2	&&	param_no	!=	3

param_no	!=	1	&&	param_no	!=	2

param_no	<	1	||	param_no	>	3

param_no	!=	1	&&	param_no	!=	2

param_no	!=	2	&&	param_no	!=	3

param_no	!=	2	&&	param_no	!=	3

param_no	!=	1	&&	param_no	!=	2

param_no	!=	1	&&	param_no	!=	2

int2reverse_hex	(	&	dst	,	&	str_len	,	ccitt	)	==	-	1

temp_sock	==	-	1

connect	(	temp_sock	,	&	to	->	s	,	sockaddru_len	(	*	to	)	)	==	-	1

msg	->	force_send_socket	&&	(	msg	->	force_send_socket	->	socket	!=	-	1	)

msg	->	force_send_socket	&&	msg	->	force_send_socket	->	socket	==	-	1

(	send_sock	==	0	)	||	(	send_sock	->	socket	!=	-	1	)

send_sock	->	socket	==	-	1

b_via	->	branch	==	0	||	b_via	->	branch	->	value	.	s	==	0	||	b_via	->	branch	->	value	.	len	==	0

update_sock_struct_from_via	(	to	,	msg	,	msg	->	via2	)	==	-	1

(	ret	!=	1	)	&&	(	*	h	)

(	ret	!=	1	)	&&	(	*	h	)

(	ip	->	af	!=	mask	->	af	)	||	(	ip	->	len	!=	mask	->	len	)

i	!=	-	1

rval	==	-	1

send_status_code	(	-	1	)	<	0

udp_init	(	udp_listen	)	==	-	1

do_suid	(	uid	,	gid	)	==	-	1

udp_init	(	si	)	==	-	1

do_suid	(	uid	,	gid	)	==	-	1

send_status_code	(	-	1	)	<	0

chd_rank	==	1	&&	startup_done

send_status_code	(	-	1	)	<	0

!	no_daemon_mode	&&	send_status_code	(	0	)	<	0

send_status_code	(	-	1	)	<	0

!	no_daemon_mode	&&	send_status_code	(	0	)	<	0

!	dont_fork	&&	send_status_code	(	-	1	)	<	0

init_pkg_mallocs	(	)	==	-	1

(	tmp	==	0	)	||	(	*	tmp	)

(	yyparse	(	)	!=	0	)	||	(	cfg_errors	)

config_check	>	1	&&	check_rls	(	)	!=	0

no_daemon_mode	+	dont_fork	>	1

init_shm_mallocs	(	)	==	-	1

shm_mem_size	+	pkg_mem_size	+	4	*	1024	*	1024

crt	+	len	>	end

crt	+	len	>	end

crt	+	len	+	1	>	end

crt	+	1	>	end

crt	+	len	>	end

tmp	&&	len	>	0

crt	+	len	+	1	>	end

crt	+	len	+	1	>	end

crt	+	len	+	1	>	end

crt	+	len	>	end

crt	+	len	>	end

crt	+	len	+	1	>	end

crt	+	1	>	end

crt	+	len	+	1	>	end

crt	+	len	+	1	>	end

crt	+	len	+	1	>	end

crt	+	len	+	1	>	end

msg	->	dst_uri	.	s	==	0	||	msg	->	dst_uri	.	len	<=	0

len	++	>=	max_while_loops

ret	>=	0	&&	val_number	>	0

i	>=	0	&&	j	>=	0

ret	%	denominator	+	1

!	answer	||	answer	==	bodylimit

!	server	||	!	server	->	h_addr

y	->	avl_balance	==	-	2

x	->	avl_balance	==	-	1

x	->	avl_balance	==	+	1

x	->	avl_balance	==	+	1

w	->	avl_balance	==	-	1

y	->	avl_balance	==	+	2

x	->	avl_balance	==	+	1

x	->	avl_balance	==	-	1

x	->	avl_balance	==	-	1

w	->	avl_balance	==	+	1

y	->	avl_balance	==	+	1

y	->	avl_balance	==	+	2

x	->	avl_balance	==	-	1

w	->	avl_balance	==	+	1

y	->	avl_balance	==	-	1

y	->	avl_balance	==	-	2

x	->	avl_balance	==	+	1

w	->	avl_balance	==	-	1

(	xlog_buf_size	+	1	)	*	sizeof	(	char	)
xlog_buf_size	+	1	*	sizeof	(	char	)
i	<	len	-	1

len	<=	0	||	s	==	0

foo	&&	foo	!=	lump

sizeof	(	char	)	*	(	len	+	1	)
sizeof	(	char	)	*	len	+	1
int2reverse_hex	(	&	p	,	&	size	,	msg	->	rcv	.	proto_reserved1	)	==	-	1

sizeof	(	char	)	*	(	len	+	1	)
sizeof	(	char	)	*	len	+	1
sizeof	(	char	)	*	(	len	+	1	)
sizeof	(	char	)	*	len	+	1
(	port	==	snd_s	->	port_no	)	&&	(	proto	==	snd_s	->	proto	)	&&	(	ip_addr_cmp	(	ip	,	&	snd_s	->	address	)	)

!	r	->	before	||	!	r	->	before	->	before

!	r	->	after	||	!	r	->	after	->	after

!	t	->	next	||	!	t	->	next	->	next

!	r	->	before	||	!	r	->	before	->	before

!	r	->	after	||	!	r	->	after	->	after

!	r	->	before	||	!	r	->	before	->	before

!	r	->	after	||	!	r	->	after	->	after

(	anchor	==	0	)	&&	body_delta

!	disable_503_translation	&&	msg	->	first_line	.	u	.	reply	.	statuscode	==	503

code	<	180	||	code	>=	300

code	<	180	||	code	>=	300

len	!=	(	unsigned	long	)	(	p	-	buf	)

int2reverse_hex	(	&	begin	,	&	size	,	hash_index	)	==	-	1

int2reverse_hex	(	&	begin	,	&	size	,	label	)	==	-	1

int2reverse_hex	(	&	begin	,	&	size	,	branch	)	==	-	1

send_status_code	(	-	1	)	<	0

i	*	(	src	->	h_length	+	sizeof	(	char	*	)	)	+	sizeof	(	char	*	)
i	*	src	->	h_length	+	sizeof	(	char	*	)	+	sizeof	(	char	*	)
(	(	char	*	)	dst	->	h_addr_list	)	+	(	i	+	1	)	*	sizeof	(	char	*	)
(	(	char	*	)	dst	->	h_addr_list	)	+	i	+	1	*	sizeof	(	char	*	)
sizeof	(	char	*	)	*	(	len	+	1	)
sizeof	(	char	*	)	*	len	+	1
sizeof	(	char	*	)	*	(	len	+	1	)
sizeof	(	char	*	)	*	len	+	1
sizeof	(	char	*	)	*	(	len	+	1	)
sizeof	(	char	*	)	*	len	+	1
sizeof	(	char	*	)	*	(	len	+	1	)
sizeof	(	char	*	)	*	len	+	1
dst	==	0	||	src	==	0	||	src_len	<=	0

dst	==	0	||	src	==	0	||	src_len	<=	0

i	+	1	<	src_len

(	c	<	32	)	||	(	c	>	126	)

*	p	<	32	||	*	p	>	126

*	p	<	32	||	*	p	>	126

rc	<	0	&&	errno	==	EINTR

rc	<	0	&&	errno	==	EINTR

rc	<	0	&&	errno	==	EINTR

ret	<	0	||	rc	<	0

ret	<	0	||	rc	<	0

p	==	-	1	||	pid_items	<=	0

kill	(	(	pid_t	)	p	,	0	)	==	0	||	errno	==	EPERM

p	==	-	1	||	pid_items	<=	0

(	lim	.	rlim_cur	==	RLIM_INFINITY	)	||	(	target	<=	lim	.	rlim_cur	)

(	lim	.	rlim_max	==	RLIM_INFINITY	)	||	(	target	<=	lim	.	rlim_max	)

p	==	lim	||	*	p	==	delim

sock_info	->	socket	==	-	1

setsockopt	(	sock_info	->	socket	,	SOL_SOCKET	,	SO_REUSEADDR	,	(	void	*	)	&	optval	,	sizeof	(	optval	)	)	==	-	1

setsockopt	(	sock_info	->	socket	,	IPPROTO_IP	,	IP_TOS	,	(	void	*	)	&	optval	,	sizeof	(	optval	)	)	==	-	1

bind	(	sock_info	->	socket	,	&	addr	->	s	,	sockaddru_len	(	*	addr	)	)	==	-	1

len	==	-	1

(	errno	==	EINTR	)	||	(	errno	==	EWOULDBLOCK	)	||	(	errno	==	ECONNREFUSED	)
errno	==	EINTR	||	errno	==	EWOULDBLOCK	||	errno	==	ECONNREFUSED
n	==	-	1

(	a	->	alias	.	len	==	len	)	&&	(	a	->	port	==	port	)	&&	(	a	->	proto	==	proto	)	&&	(	strncasecmp	(	a	->	alias	.	s	,	name	,	len	)	==	0	)

si	->	port_no	!=	port	&&	si	->	adv_port	!=	port

(	h_len	==	si	->	name	.	len	)	&&	(	strncasecmp	(	hname	,	si	->	name	.	s	,	si	->	name	.	len	)	==	0	)

(	h_len	==	si	->	adv_name_str	.	len	)	&&	(	strncasecmp	(	hname	,	si	->	adv_name_str	.	s	,	si	->	adv_name_str	.	len	)	==	0	)

ioctl	(	s	,	SIOCGIFCONF	,	&	ifc	)	==	-	1

(	lastlen	)	&&	(	ifc	.	ifc_len	==	lastlen	)

ioctl	(	s	,	SIOCGIFFLAGS	,	&	ifrcopy	)	!=	-	1

!	(	ifrcopy	.	ifr_flags	&	IFF_UP	)
!	ifrcopy	.	ifr_flags	&	IFF_UP
(	if_name	==	0	)	||	(	strncmp	(	if_name	,	ifr	.	ifr_name	,	sizeof	(	ifr	.	ifr_name	)	)	==	0	)

add_interfaces	(	si	->	name	.	s	,	AF_INET	,	si	->	port_no	,	si	->	proto	,	list	)	!=	-	1

(	si	->	port_no	==	l	->	port_no	)	&&	(	si	->	address	.	af	==	l	->	address	.	af	)	&&	(	memcmp	(	si	->	address	.	u	.	addr	,	l	->	address	.	u	.	addr	,	si	->	address	.	len	)	==	0	)

numberOfSockets	*	(	num_ip_octets	+	1	)	*	sizeof	(	int	)
numberOfSockets	*	num_ip_octets	+	1	*	sizeof	(	int	)
currentRow	*	(	num_ip_octets	+	1	)
currentRow	*	num_ip_octets	+	1
currentRow	*	(	num_ip_octets	+	1	)	+	1
currentRow	*	num_ip_octets	+	1	+	1
currentRow	*	(	num_ip_octets	+	1	)	+	2
currentRow	*	num_ip_octets	+	1	+	2
currentRow	*	(	num_ip_octets	+	1	)	+	3
currentRow	*	num_ip_octets	+	1	+	3
currentRow	*	(	num_ip_octets	+	1	)	+	4
currentRow	*	num_ip_octets	+	1	+	4
getsockopt	(	sock	,	SOL_SOCKET	,	buff_opt	,	(	void	*	)	&	ioptval	,	&	ioptvallen	)	==	-	1

setsockopt	(	sock	,	SOL_SOCKET	,	buff_opt	,	(	void	*	)	&	optval	,	sizeof	(	optval	)	)	==	-	1

getsockopt	(	sock	,	SOL_SOCKET	,	buff_opt	,	(	void	*	)	&	voptval	,	&	voptvallen	)	==	-	1

getsockopt	(	sock	,	SOL_SOCKET	,	buff_opt	,	(	void	*	)	&	foptval	,	&	foptvallen	)	==	-	1

!	msg	->	contact	||	!	msg	->	contact	->	body	.	s	||	msg	->	contact	->	body	.	len	<=	0

p	-	pv_local_buf	+	PV_FIELD_DELIM_LEN	+	1	>	PV_LOCAL_BUF_SIZE

idx	!=	0	&&	ct_h

parse_refer_to_header	(	msg	)	==	-	1

parse_diversion_header	(	msg	)	==	-	1

parse_rpid_header	(	msg	)	==	-	1

parse_pai_header	(	msg	)	==	-	1

p	-	pv_local_buf	+	PV_FIELD_DELIM_LEN	+	1	>	PV_LOCAL_BUF_SIZE

p	-	pv_local_buf	+	PV_FIELD_DELIM_LEN	+	1	>	PV_LOCAL_BUF_SIZE

p	-	pv_local_buf	+	hf	->	body	.	len	+	1	>	PV_LOCAL_BUF_SIZE

pvstate	==	2	||	pvstate	==	5

pvstate	==	2	||	pvstate	==	5

(	buf_itr	+	1	)	%	PV_PRINT_BUF_NO
buf_itr	+	1	%	PV_PRINT_BUF_NO
index	<	1	||	index	>	route_params_number

qtype	==	T_A	||	qtype	==	T_AAAA

ancount	--	>	0	&&	cp	<	eom	&&	!	had_error

3	*	2	+	4

(	qtype	==	T_A	||	qtype	==	T_AAAA	)	&&	type	==	T_CNAME
qtype	==	T_A	||	qtype	==	T_AAAA	&&	type	==	T_CNAME
n	>	buflen	||	n	>=	DNS_MAX_NAME

qtype	==	T_PTR	&&	type	==	T_CNAME

n	>	buflen	||	n	>=	DNS_MAX_NAME

n	!=	-	1

sizeof	(	align	)	-	(	(	u_long	)	bp	%	sizeof	(	align	)	)

sizeof	(	align	)	-	(	(	u_long	)	bp	%	sizeof	(	align	)	)

!	toobig	++

n	>	buflen	||	n	>=	DNS_MAX_NAME

cached_he	==	(	void	*	)	-	1

af	==	AF_INET6	&&	len	==	16	&&	(	!	memcmp	(	uaddr	,	mapped	,	sizeof	mapped	)	||	!	memcmp	(	uaddr	,	tunnelled	,	sizeof	tunnelled	)	)
af	==	AF_INET6	&&	len	==	16	&&	!	memcmp	(	uaddr	,	mapped	,	sizeof	mapped	)	||	!	memcmp	(	uaddr	,	tunnelled	,	sizeof	tunnelled	)
cached_he	==	(	void	*	)	-	1

(	(	*	p	)	&	0xc0	)	==	0xc0
(	*	p	)	&	0xc0	==	0xc0
(	rdata	+	6	)	>=	end

(	rdata	+	7	)	>=	end

(	rdata	+	7	+	naptr	->	flags_len	)	>=	end

(	rdata	+	7	+	naptr	->	flags_len	+	naptr	->	services_len	)	>=	end

(	rdata	+	7	+	naptr	->	flags_len	+	naptr	->	services_len	+	naptr	->	regexp_len	)	>=	end

naptr	->	repl_len	==	(	unsigned	int	)	-	1

rdata	+	4	>=	end

rdata	+	16	>=	end

rdata	+	1	+	len	>=	end

rdata	+	1	+	len	>=	end

(	rdata	+	1	+	ebl	->	separator_len	)	>=	end

ebl	->	apex_len	==	(	unsigned	int	)	-	1

head	==	(	void	*	)	-	1

(	r	<	answers_no	)	&&	(	p	<	end	)

(	p	+	2	+	2	+	4	+	2	)	>=	end

4	*	sizeof	(	unsigned	short	)	+	sizeof	(	unsigned	int	)	+	srv_rd	->	name_len	+	1

(	srv_rd	->	priority	<	crt_srv	->	priority	)	||	(	(	srv_rd	->	priority	==	crt_srv	->	priority	)	&&	(	(	srv_rd	->	weight	==	0	)	||	(	crt_srv	->	weight	!=	0	)	)	)
(	srv_rd	->	priority	<	crt_srv	->	priority	)	||	(	(	srv_rd	->	priority	==	crt_srv	->	priority	)	&&	(	srv_rd	->	weight	==	0	)	||	(	crt_srv	->	weight	!=	0	)	)
2	*	sizeof	(	unsigned	short	)	+	4	*	sizeof	(	unsigned	int	)	+	naptr_rd	->	flags_len	+	1	+	+	naptr_rd	->	services_len	+	1	+	naptr_rd	->	regexp_len	+	+	1	+	naptr_rd	->	repl_len	+	1

sizeof	(	unsigned	char	)	+	2	*	sizeof	(	unsigned	int	)	+	ebl_rd	->	apex_len	+	1	+	ebl_rd	->	separator_len	+	1

crt	&&	crt	->	next	&&	(	rd2srv	(	rd	)	->	priority	==	rd2srv	(	crt	->	next	)	->	priority	)

dn	&&	rd	->	next	&&	a2dns_node	(	rd	->	next	,	dn	)	==	-	1

naptr	->	repl_len	==	0	||	naptr	->	regexp_len	!=	0

port	&&	(	*	port	)	!=	0

rd	&&	srv2dns_node	(	rd	,	dn	)	!=	0

++	last_srv	->	idx	<	last_srv	->	no

id	==	avp	->	id	&&	(	flags	==	0	||	(	flags	&	avp	->	flags	)	)
id	==	avp	->	id	&&	flags	==	0	||	(	flags	&	avp	->	flags	)
avp	==	0	||	avp	->	next	==	0

id	<	0	&&	extra

b_idx	-	1	<	nr_branches

dset_state	==	0	||	idx	>=	nr_branches

dset_state	==	0	||	idx	>=	nr_branches

*	len	+	1	>	dset_len

!	first	||	!	last	||	!	ip_net

(	r	->	flags	==	q	->	flags	)	&&	(	r	->	port	==	q	->	port	)	&&	(	r	->	proto	==	q	->	proto	)	&&	(	ip_class_compare	(	&	r	->	ip_net	,	&	q	->	ip_net	)	==	1	)	&&	(	(	!	r	->	body	.	s	&&	!	q	->	body	.	s	)	||	(	(	r	->	body	.	len	==	q	->	body	.	len	)	&&	!	strncmp	(	r	->	body	.	s	,	q	->	body	.	s	,	q	->	body	.	len	)	)	)
(	r	->	flags	==	q	->	flags	)	&&	(	r	->	port	==	q	->	port	)	&&	(	r	->	proto	==	q	->	proto	)	&&	(	ip_class_compare	(	&	r	->	ip_net	,	&	q	->	ip_net	)	==	1	)	&&	(	!	r	->	body	.	s	&&	!	q	->	body	.	s	)	||	(	(	r	->	body	.	len	==	q	->	body	.	len	)	&&	!	strncmp	(	r	->	body	.	s	,	q	->	body	.	s	,	q	->	body	.	len	)	)
!	head	||	!	first	||	!	last

~	(	1	<<	n	)
~	1	<<	n
end	!=	(	_s	+	len	-	1	)

(	_tm	->	tm_mday	-	1	)	/	7	+	(	7	-	(	6	+	_tm	->	tm_wday	)	%	7	+	(	_tm	->	tm_mday	-	1	)	%	7	)	/	7
_tm	->	tm_mday	-	1	/	7	+	7	-	6	+	_tm	->	tm_wday	%	7	+	_tm	->	tm_mday	-	1	%	7	/	7
!	_in	||	!	_tm	||	strlen	(	_in	)	!=	15

!	_in	||	strlen	(	_in	)	<	2

_t	*	10	+	*	_p

_v	*	10	+	*	_p

_v	*	10	+	*	_p

!	_in	||	strlen	(	_in	)	!=	2

offset	+	len	>	msg	->	len

(	msg	->	eoh	)	&&	(	offset	>	(	unsigned	long	)	(	msg	->	eoh	-	msg	->	buf	)	)

offset	+	len	>	msg	->	len

(	msg	->	eoh	)	&&	(	offset	>	(	unsigned	long	)	(	msg	->	eoh	-	msg	->	buf	)	)

*	p	==	c	&&	with_sep

end	<	(	p	+	2	)

dest	-	rbuf	+	size	>=	REPLACE_BUFFER_SIZE	-	1

dest	-	rbuf	+	size	>=	REPLACE_BUFFER_SIZE	-	1

dest	-	rbuf	+	1	>=	REPLACE_BUFFER_SIZE	-	1

(	r	==	0	)	&&	se	->	replace_all

!	dest	||	!	file_name

!	node	||	!	node	->	value	.	len	||	!	node	->	value	.	s

!	node	||	!	node	->	value	.	len	||	!	node	->	value	.	s

(	i	+	1	)	%	50	==	0
i	+	1	%	50	==	0
!	id1	||	!	id2

id1	->	password	!=	0	&&	id2	->	password	!=	0

id1	->	password	!=	0	||	id2	->	password	!=	0

!	_s	||	!	_v

!	_s	||	!	_v

(	tmp	==	LLONG_MIN	||	tmp	==	LLONG_MAX	)	&&	errno	==	ERANGE
tmp	==	LLONG_MIN	||	tmp	==	LLONG_MAX	&&	errno	==	ERANGE
(	!	_s	)	||	(	!	_v	)

(	!	_s	)	||	(	!	_l	)	||	(	!	*	_l	)

ret	<	0	||	ret	>=	*	_l

(	!	_s	)	||	(	!	_l	)	||	(	!	*	_l	)

ret	<	0	||	ret	>=	*	_l

(	!	_s	)	||	(	!	_l	)	||	(	!	*	_l	)

ret	<	0	||	ret	>=	*	_l

(	!	_s	)	||	(	!	_v	)

(	!	_s	)	||	(	!	_l	)	||	(	*	_l	<	2	)

(	!	_s	)	||	(	!	_l	)	||	(	*	_l	<	2	)

i	==	(	_n	-	1	)

ret	<	0	||	ret	>=	(	_l	-	len	)

ret	<	0	||	ret	>=	(	_l	-	len	)

*	(	_b	+	len	++	)
*	_b	+	len	++
i	!=	(	_n	-	1	)

ret	<	0	||	ret	>=	(	_l	-	len	)

ret	<	0	||	ret	>=	(	_l	-	len	)

*	(	_b	+	len	++	)
*	_b	+	len	++
i	!=	(	_n	-	1	)

ret	<	0	||	ret	>=	(	_l	-	len	)

ret	<	0	||	ret	>=	(	_l	-	len	)

*	(	_b	+	len	++	)
*	_b	+	len	++
i	!=	(	_n	-	1	)

(	_l	-	len	)	>=	1

*	(	_b	+	len	++	)
*	_b	+	len	++
no_rows	==	-	1

!	id1	||	!	id2

p	<	end	&&	isspace	(	(	int	)	*	p	)

p	+	AUTHENTICATE_DIGEST_LEN	>=	end

(	*	(	_p	)	<<	24	)	+	(	*	(	_p	+	1	)	<<	16	)	+	(	*	(	_p	+	2	)	<<	8	)	+	*	(	_p	+	3	)
(	*	(	_p	)	<<	24	)	+	(	*	_p	+	1	<<	16	)	+	*	_p	+	2	<<	8	+	*	(	_p	+	3	)
!	isspace	(	(	int	)	*	p	)

p	<	end	&&	isspace	(	(	int	)	*	p	)

p	+	4	<	end

(	*	(	_p	)	<<	24	)	+	(	*	(	_p	+	1	)	<<	16	)	+	(	*	(	_p	+	2	)	<<	8	)	+	*	(	_p	+	3	)
*	(	_p	)	<<	24	+	*	_p	+	1	<<	16	+	*	_p	+	2	<<	8	+	*	(	_p	+	3	)
p	+	9	<	end	&&	LOWER4B	(	GET4B	(	p	+	4	)	)	==	0x72697468
p	+	9	<	end	&&	LOWER4B	(	GET4B	(	p	+	4	)	)	==	0x72697468
(	n	|	0xff	)	==	0x716f70ff
n	|	0xff	==	0x716f70ff
p	+	3	<	end

(	*	(	_p	)	<<	24	)	+	(	*	(	_p	+	1	)	<<	16	)	+	(	*	(	_p	+	2	)	<<	8	)	+	0xff
(	*	(	_p	)	<<	24	)	+	(	*	_p	+	1	<<	16	)	+	(	*	(	_p	+	2	)	<<	8	)	+	0xff
p	<	end	&&	!	isspace	(	(	int	)	*	p	)

p	<	end	&&	isspace	(	(	int	)	*	p	)

p	<	end	&&	isspace	(	(	int	)	*	p	)

p	+	1	>=	end

p	<	end	&&	!	isspace	(	(	int	)	*	p	)

p	<	end	&&	isspace	(	(	int	)	*	p	)

p	<	end	&&	isspace	(	(	int	)	*	p	)

auth	->	nonce	.	s	==	0	||	auth	->	realm	.	s	==	0

number	*	10	+	(	*	p	)

p	==	end	||	size	==	0

p	<	end	&&	is_mime_char	(	*	p	)
p	<	end	&&	is_mime_char	(	*	p	)
node	!=	-	1

node	!=	-	1

p	==	end	||	mark	==	p

node	!=	-	1

node	!=	-	1

node	!=	-	1

node	!=	-	1

ret	+	1	==	end

(	nr_mimes	+	1	)	*	sizeof	(	int	)
nr_mimes	+	1	*	sizeof	(	int	)
(	end	-	begin	)	<	4

*	(	val	+	0	)	+	(	*	(	val	+	1	)	<<	8	)	+	(	*	(	val	+	2	)	<<	16	)	+	(	*	(	val	+	3	)	<<	24	)
*	(	val	+	0	)	+	*	val	+	1	<<	8	+	(	*	val	+	2	<<	16	)	+	*	val	+	3	<<	24
!	start	||	!	value

buf	==	0	||	len	<=	0

!	nb_recs	||	(	nb_recs	&&	(	(	!	order	&&	(	i	>=	*	nb_recs	)	)	||	(	order	&&	(	i	<=	(	n	-	*	nb_recs	)	)	)	)	)
!	nb_recs	||	(	nb_recs	&&	(	!	order	&&	(	i	>=	*	nb_recs	)	)	||	(	order	&&	(	i	<=	(	n	-	*	nb_recs	)	)	)	)
++	i	<	n

i	--	>	0

(	unsigned	int	)	(	tmp	-	buf	)	<	len

p	+	3	<	end

p	+	1	<	end

p	+	3	<	end

p	+	6	<	end

pos	<	len	&&	IS_DELIM	(	p	)
pos	<	len	&&	IS_DELIM	(	p	)
*	(	val	+	0	)	+	(	*	(	val	+	1	)	<<	8	)	+	(	*	(	val	+	2	)	<<	16	)	+	(	*	(	val	+	3	)	<<	24	)
*	(	val	+	0	)	+	*	(	val	+	1	)	<<	8	+	*	val	+	2	<<	16	+	*	(	val	+	3	)	<<	24
pos	+	4	<=	len	&&	IS_DELIM	(	p	+	4	)
pos	+	4	<=	len	&&	IS_DELIM	(	p	+	4	)
pos	+	4	<=	len	&&	IS_DELIM	(	p	+	4	)
pos	+	4	<=	len	&&	IS_DELIM	(	p	+	4	)
pos	+	6	<=	len

pos	+	5	<=	len

pos	<	len	&&	!	IS_DELIM	(	p	)
pos	<	len	&&	!	IS_DELIM	(	p	)
(	tmp	>	buffer	)	&&	(	tmp	<	end	)

nl	+	1	<	buffer	+	len

nl	+	1	<	buffer	+	len

*	(	val	+	0	)	+	(	*	(	val	+	1	)	<<	8	)	+	(	*	(	val	+	2	)	<<	16	)	+	(	*	(	val	+	3	)	<<	24	)
*	val	+	0	+	*	val	+	1	<<	8	+	*	(	val	+	2	)	<<	16	+	(	*	val	+	3	<<	24	)
*	(	val	+	0	)	+	(	*	(	val	+	1	)	<<	8	)	+	(	*	(	val	+	2	)	<<	16	)
*	(	val	+	0	)	+	*	(	val	+	1	)	<<	8	+	*	(	val	+	2	)	<<	16
!	p	||	len	<=	0

pos	<	len	&&	is_space	(	*	p	)

pos	+	4	<	len

pos	+	9	<=	len

pos	<	len	&&	is_space	(	*	p	)

pos	<	len	&&	is_num	(	*	p	)

pos	<	len	&&	is_space	(	*	p	)

(	third	==	tmp	)	||	(	tmp	>=	end	)

(	tmp	==	third	)	||	(	tmp	>=	end	)

!	is_empty_end	(	tmp	,	tmp	+	len	-	offset	)

parse_diversion_header	(	msg	)	==	-	1

parse_method	(	cb	->	method	.	s	,	t	,	(	unsigned	int	*	)	&	cb	->	method_id	)	==	0

t	+	1	<	end

saved_status	==	S_EQUAL	||	saved_status	==	S_PARA_VALUE

_c	>=	65	&&	_c	<=	90

_c	>=	97	&&	_c	<=	122

_c	>=	48	&&	_c	<=	57

!	start	||	!	method

end	&&	max	<	3

end	&&	max	<	3

end	&&	max	<	6

end	&&	max	<	4

end	&&	max	<	6

end	&&	max	<	7

end	&&	max	<	6

end	&&	max	<	7

end	&&	max	<	5

end	&&	max	<	7

end	&&	max	<	5

end	&&	max	<	8

end	&&	max	<	9

end	&&	max	<	6

!	end	||	(	end	&&	len	<	max	)

rest	<	d2p	&&	no_eoh_found

p	>=	plimit	||	plimit	-	p	<	3

p	>=	plimit	||	plimit	-	p	<	3

n	<	0	||	n	>	128

p	<	line	+	len	-	1

state	==	PARSE_COMPILE_DEFS	&&	defs	==	1

d	<	i	+	1

d	<	max_len	+	9

max_y	/	2	+	1

max_y	/	2	+	2

max_y	/	2	+	3

max_y	/	2	+	4

max_y	/	2	-	2

max_y	/	4	+	actual_pos

max_x	/	2	-	19

d	<	i	+	1

d	<	max_len	+	15

should_scroll	&&	disp_start	>	0

should_scroll	&&	curopt	!=	0

curopt	==	(	disp_start	+	max_display	-	1	)

curopt	<	i	-	1

len	==	head	->	name	.	len	&&	!	strncasecmp	(	name	,	head	->	name	.	s	,	head	->	name	.	len	)

!	node	||	!	(	node	->	attributes	)

ret	==	-	1

!	node	||	!	node	->	value	.	len	||	!	node	->	value	.	s

(	errcode	>>	ERR_LIB_OFFSET	)	&	ERR_LIB_MASK

errcode	&	(	ERR_RFLAGS_MASK	<<	ERR_RFLAGS_OFFSET	)

(	ERR_GET_RFLAGS	(	errcode	)	&	ERR_RFLAG_FATAL	)	!=	0
ERR_GET_RFLAGS	(	errcode	)	&	ERR_RFLAG_FATAL	!=	0
(	ERR_GET_RFLAGS	(	errcode	)	&	ERR_RFLAG_COMMON	)	!=	0
ERR_GET_RFLAGS	(	errcode	)	&	ERR_RFLAG_COMMON	!=	0
pf	.	revents	&	POLLOUT	||	pf	.	revents	&	POLLIN

pf	.	revents	&	(	POLLERR	|	POLLHUP	|	POLLNVAL	)
pf	.	revents	&	POLLERR	|	POLLHUP	|	POLLNVAL
(	p	->	port	==	port	)	&&	ip_addr_cmp	(	&	p	->	addr	,	ip	)

(	p	->	name	.	len	==	0	)	&&	(	p	->	port	==	port	)	&&	ip_addr_cmp	(	&	p	->	addr	,	ip	)

(	errcode	>>	ERR_LIB_OFFSET	)	&	ERR_LIB_MASK

errcode	&	(	ERR_RFLAGS_MASK	<<	ERR_RFLAGS_OFFSET	)

(	ERR_GET_RFLAGS	(	errcode	)	&	ERR_RFLAG_FATAL	)	!=	0
ERR_GET_RFLAGS	(	errcode	)	&	ERR_RFLAG_FATAL	!=	0
(	ERR_GET_RFLAGS	(	errcode	)	&	ERR_RFLAG_COMMON	)	!=	0
(	ERR_GET_RFLAGS	(	errcode	)	&	ERR_RFLAG_COMMON	)	!=	0
si	->	socket	!=	-	1

n	<	0	||	n	>	tls_static_locks_no

i	==	-	1

d	->	ca_file	&&	load_ca	(	d	->	ctx	,	d	->	ca_file	)	<	0

sizeof	(	long	)	*	8	-	1

!	(	s	&	(	1UL	<<	(	sizeof	(	long	)	*	8	-	1	)	)	)
!	s	&	(	1UL	<<	(	sizeof	(	long	)	*	8	-	1	)	)
size	<	start	-	address

i	==	-	1

reload_domain_table	(	)	==	-	1

i	<	ret	+	nr_vals	+	n

i	<	ret	+	nr_vals	+	n

i	<	m	+	n

!	leg_info	&&	!	leg_bye_info

i	<	attr_cnt	-	2

i	<	ret	-	2

j	<	nr_vals	+	ret

j	<	nr_vals	+	ret

i	<	m	+	n

!	leg_info	&&	!	leg_bye_info

j	<	nr_vals	+	nr_bye_vals

j	<	nr_vals	+	nr_bye_vals

*	s	&&	isspace	(	(	int	)	*	s	)
s	&&	isspace	(	(	int	)	*	s	*	s	&&	isspace	(	(	int	)	*	s	)
*	s	&&	!	isspace	(	(	int	)	*	s	)	&&	EQUAL	!=	*	s
s	&&	!	isspace	(	(	int	)	*	s	)	&&	EQUAL	!=	*	*	s	&&	!	isspace	(	(	int	)	*	s	)	&&	EQUAL	!=	*	s
(	s	++	)	-	foo

(	s	++	)	-	foo

*	s	&&	isspace	(	(	int	)	*	s	)
s	&&	isspace	(	(	int	)	*	s	*	s	&&	isspace	(	(	int	)	*	s	)
*	s	&&	isspace	(	(	int	)	*	s	)
s	&&	isspace	(	(	int	)	*	s	*	s	&&	isspace	(	(	int	)	*	s	)
*	s	&&	isspace	(	(	int	)	*	s	)
s	&&	isspace	(	(	int	)	*	s	*	s	&&	isspace	(	(	int	)	*	s	)
*	s	&&	isspace	(	(	int	)	*	s	)
s	&&	isspace	(	(	int	)	*	s	*	s	&&	isspace	(	(	int	)	*	s	)
*	s	&&	isalpha	(	(	int	)	*	s	)
s	&&	isalpha	(	(	int	)	*	s	*	s	&&	isalpha	(	(	int	)	*	s	)
s	-	foo	==	REPLY_STR_LEN	&&	strncasecmp	(	foo	,	REPLY_STR_S	,	REPLY_STR_LEN	)	==	0

*	s	&&	isspace	(	(	int	)	*	s	)
s	&&	isspace	(	(	int	)	*	s	*	s	&&	isspace	(	(	int	)	*	s	)
*	s	&&	(	*	(	s	++	)	!=	SEPARATOR	||	*	s	==	0	)
*	s	&&	*	(	s	++	)	!=	SEPARATOR	||	*	s	==	0
accp	->	reason	.	s	++	,	accp	->	reason	.	len	--

get_to	(	msg	)	->	tag_value	.	s	!=	0	&&	get_to	(	msg	)	->	tag_value	.	len	!=	0

tmp	!=	-	1

pp	&&	!	nr

index1	==	-	1

index2	==	-	1

param_no	==	1	||	param_no	==	2

index	==	-	1

val_length	>	-	1

(	c	<<	4	)	|	d

(	ss	!=	str	)	&&	(	!	*	ss	)

(	e	!=	p	)	&&	(	*	n	>=	min	)	&&	(	*	n	<=	max	)

*	p	<	0x20	&&	*	p	!=	0x9	&&	*	p	!=	0xA	&&	*	p	!=	0xD

p	+	node	->	name	.	len	+	3	>	end

p	+	node	->	value	.	len	>	end

p	+	1	>	end

tree	->	code	<	200	||	tree	->	code	>=	300

tree	->	code	<	200	||	tree	->	code	>=	300

tree	->	code	<	200	||	tree	->	code	>=	300

tree	->	code	<	200	||	tree	->	code	>=	300

t	!=	(	time_t	)	(	-	1	)

tolower	(	*	p	++	)	==	tolower	(	*	s	)

(	abs	(	_DateTimeBias	)	%	3600	)	/	60

!	socketUnixP	->	userSuppliedFd	&&	socketUnixP	->	fd

rc	!=	-	1

rc	!=	-	1

rc	!=	-	1

i	--	>	0

srvP	->	uid	==	(	uid_t	)	-	1

srvP	->	gid	!=	(	gid_t	)	-	1

setgid	(	srvP	->	gid	)	==	(	-	1	)

setuid	(	srvP	->	uid	)	==	-	1

srvP	->	pidfile	!=	-	1

p	&&	p	->	pid	!=	pid

p	&&	p	->	nextInPoolP	!=	threadP

rc	<	0	&&	IS_ERR	(	EINTR	)
rc	<	0	&&	IS_ERR	(	EINTR	)
rc	<	0	&&	(	(	IS_ERR	(	EINTR	)	||	IS_ERR	(	EAGAIN	)	||	IS_ERR	(	EWOULDBLOCK	)	)	||	retries	--	>	0	)
rc	<	0	&&	(	(	IS_ERR	(	EINTR	)	||	IS_ERR	(	EAGAIN	)	||	IS_ERR	(	EWOULDBLOCK	)	)	||	retries	--	>	0	)
rc	<	0	&&	(	IS_ERR	(	EINTR	)	||	retries	--	>	0	)
rc	<	0	&&	IS_ERR	(	EINTR	)	||	retries	--	>	0
flags	==	-	1

hep_version	!=	1	&&	hep_version	!=	2

send_sock	==	0	||	send_sock	->	sock_str	.	s	==	0

port_no	<	1024	||	port_no	>	65536

!	(	nstate	==	1	||	nstate	==	0	)
!	nstate	==	1	||	nstate	==	0
!	(	nrecon	==	1	||	nrecon	==	0	)
!	nrecon	==	1	||	nrecon	==	0
*	p	&&	p	<	buf	+	len

p	>=	buf	+	len

p	<	buf	+	len

p	>=	buf	+	len

p	<	buf	+	len

(	var_cnt	+	1	)	*	sizeof	(	char	*	)
var_cnt	+	1	*	sizeof	(	char	*	)
!	(	msg	->	to	&&	get_to	(	msg	)	)
!	msg	->	to	&&	get_to	(	msg	)
!	WIFEXITED	(	status	)	||	WEXITSTATUS	(	status	)
WIFEXITED	(	status	)	||	WEXITSTATUS	(	status	!	WIFEXITED	(	status	)	||	WEXITSTATUS	(	status	)
msg	==	0	||	cmd	==	0

msg	==	0	||	cmd	==	0

msg	==	0	||	cmd	==	0

msg	==	0	||	cmd	==	0

kill_list	.	first_tl	.	next_tl	==	&	kill_list	.	last_tl	||	kill_list	.	first_tl	.	next_tl	->	time_out	>	ticks

tl	!=	end	&&	tl	->	time_out	<=	ticks

counter_len	!=	-	1

counter_len	!=	-	1

ptr	-	string	<	len

i	<	limit	&&	len	>	0

(	type_pref	<<	24	)	+	16777215
type_pref	<<	24	+	16777215
result	==	-	1

connect	(	mediaproxy_socket	.	sock	,	(	struct	sockaddr	*	)	&	addr	,	sizeof	(	addr	)	)	<	0

sent	<	cmd_len	&&	tries	<	3

bytes	==	-	1

(	mediaproxy_socket	.	timeout	%	1000	)	*	1000

count	==	-	1

bytes	==	-	1

len	<	session	.	supported_count	+	1

session	.	ip	.	s	&&	!	isnulladdr	(	session	.	ip	)
session	.	ip	.	s	&&	!	isnulladdr	(	session	.	ip	)
!	stream	.	local_ip	&&	removed_session_ip

stream	.	rtcp_port	.	len	>	0	&&	!	isnullport	(	stream	.	rtcp_port	)
stream	.	rtcp_port	.	len	>	0	&&	!	isnullport	(	stream	.	rtcp_port	)
stream	.	local_ip	&&	!	isnulladdr	(	stream	.	ip	)
stream	.	local_ip	&&	!	isnulladdr	(	stream	.	ip	)
!	stream	.	local_ip	&&	removed_session_ip

reply	->	REPLY_STATUS	>	100	&&	reply	->	REPLY_STATUS	<	300

(	int	)	(	long	)	*	_params	->	param	==	MPActive

load_tm_api	(	&	tm_api	)	==	0	&&	load_dlg_api	(	&	dlg_api	)	==	0

shm_rr	->	status	||	backup	!=	-	1

t_bu	&&	*	t_bu	!=	-	1

(	rr1	->	host	.	len	==	0	)	&&	(	rr2	->	host	.	len	>	0	)

(	rr1	->	host	.	len	>	0	)	&&	(	rr2	->	host	.	len	==	0	)

!	rr	->	status	&&	rr	->	backup

!	rr	->	backed_up	&&	(	rr	->	hash_index	!=	rule	->	hash_index	)	&&	rr	->	status

prepare_route_tree	(	)	==	-	1

prepare_route_tree	(	)	==	-	1

prepare_route_tree	(	)	==	-	1

(	param_no	==	3	)	||	(	param_no	==	4	)

(	param_no	==	3	)	||	(	param_no	==	4	)	||	(	param_no	==	5	)

(	param_no	==	1	)	||	(	param_no	==	2	)

!	global_data	||	!	*	global_data

!	(	fs	.	st_mode	&	S_IWOTH	)	&&	!	(	(	fs	.	st_mode	&	S_IWGRP	)	&&	(	fs	.	st_gid	==	getegid	(	)	)	)	&&	!	(	(	fs	.	st_mode	&	S_IWUSR	)	&&	(	fs	.	st_uid	==	geteuid	(	)	)	)
fs	.	st_mode	&	S_IWOTH	)	&&	!	(	(	fs	.	st_mode	&	S_IWGRP	)	&&	(	fs	.	st_gid	==	getegid	(	)	)	)	&&	!	(	(	fs	.	st_mode	&	S_IWUSR	)	&&	(	fs	.	st_uid	==	geteuid	(	)	)	!	(	fs	.	st_mode	&	S_IWOTH	)	&&	!	(	(	fs	.	st_mode	&	S_IWGRP	)	&&	(	fs	.	st_gid	==	getegid	(	)	)	)	&&	!	(	(	fs	.	st_mode	&	S_IWUSR	)	&&	(	fs	.	st_uid	==	geteuid	(	)	)	(	fs	.	st_mode	&	S_IWOTH	)	&&	!	(	(	fs	.	st_mode	&	S_IWGRP	)	&&	(	fs	.	st_gid	==	getegid	(	)	)	)	&&	!	(	(	fs	.	st_mode	&	S_IWUSR	)	&&	(	fs	.	st_uid	==	geteuid	(	)	)	!	(	fs	.	st_mode	&	S_IWOTH	)	&&	!	(	(	fs	.	st_mode	&	S_IWGRP	)	&&	(	fs	.	st_gid	==	getegid	(	)	)	)	&&	!	(	(	fs	.	st_mode	&	S_IWUSR	)	&&	(	fs	.	st_uid	==	geteuid	(	)	)	)
!	_m	->	contact	->	parsed	&&	parse_contact	(	_m	->	contact	)	<	0

!	(	*	_hdr	)	->	parsed	&&	parse_contact	(	*	_hdr	)	<	0

raw_sock	==	-	1

setsockopt	(	raw_sock	,	IPPROTO_IP	,	IP_HDRINCL	,	&	on	,	sizeof	(	on	)	)	==	-	1

sipping_flag	==	-	1

(	tests	&	NAT_UAC_TEST_V_RCVD	)	&&	received_test	(	msg	)

(	tests	&	NAT_UAC_TEST_C_1918	)	&&	(	contact_1918	(	msg	)	>	0	)

(	tests	&	NAT_UAC_TEST_S_1918	)	&&	sdp_1918	(	msg	)

(	tests	&	NAT_UAC_TEST_V_1918	)	&&	via_1918	(	msg	)

(	tests	&	NAT_UAC_TEST_C_RCVD	)	&&	contact_rcv	(	msg	)

(	tests	&	NAT_UAC_TEST_C_RPORT	)	&&	contact_rport	(	msg	)

level	&	(	ADD_ADIRECTION	|	ADD_ANORTPPROXY	)
level	&	ADD_ADIRECTION	|	ADD_ANORTPPROXY
(	sum	>>	16	)	+	(	sum	&	0xffff	)
(	sum	>>	16	)	+	sum	&	0xffff
(	sum	>>	16	)	+	(	sum	)
sum	>>	16	+	(	sum	)
!	(	local	>=	0	&&	local	<=	7	)
!	local	>=	0	&&	local	<=	7
!	o	->	finalized	&&	o	->	result

!	o	->	finalized	&&	o	->	my

o	->	finalized	||	!	o	->	result

result_type	&	SIPMYSQL_FETCH_ASSOC	&&	!	o	->	fields

!	o	->	finalized	&&	o	->	result_set_exist

!	o	->	finalized	&&	o	->	stmt

o	->	finalized	||	!	o	->	bind

o	->	finalized	||	!	o	->	bind

o	->	finalized	||	!	o	->	meta_result	||	!	o	->	result_set_exist

!	ret	&&	sipstate_filename	&&	sb	.	st_mtime	==	sipstate_time

!	ret	||	ret	>=	sizeof	(	buf	)

parse_headers	(	msg	,	~	0	,	0	)	<	0

!	msg	->	expires	||	parse_expires	(	msg	->	expires	)	<	0

expires	!=	0	&&	expires	!=	-	1

o	->	finalized	||	!	o	->	mc

o	->	finalized	||	!	o	->	mc

o	->	finalized	||	!	o	->	mc

o	->	finalized	||	!	o	->	mc

o	->	finalized	||	!	o	->	mc

!	o	->	finalized	&&	o	->	mc

o	->	finalized	||	!	o	->	mc

(	n	-	1	)	*	sizeof	(	struct	memcache_res	*	)
n	-	1	*	sizeof	(	struct	memcache_res	*	)
i	<	n	-	1

i	<	n	-	1

param_no	>	0	&&	param_no	<=	4

param_no	==	2	||	param_no	==	3

(	parse_sip_msg_uri	(	msg	)	<	0	)	||	(	!	msg	->	parsed_uri	.	user	.	s	)	||	(	msg	->	parsed_uri	.	user	.	len	>	MAXNUMBERLEN	)

(	parse_sip_msg_uri	(	msg	)	<	0	)	||	(	!	msg	->	parsed_uri	.	user	.	s	)	||	(	msg	->	parsed_uri	.	user	.	len	>	MAXNUMBERLEN	)

load_tm	(	&	tmb	)	==	-	1

load_sl	(	&	slb	)	==	-	1

!	tm_loaded	&&	!	sl_loaded

param_no	==	1	||	param_no	==	2

parse_headers	(	msg	,	headers	,	0	)	==	-	1

!	msg	->	from	->	parsed	&&	parse_from_header	(	msg	)	==	-	1

connect	(	callcontrol_socket	.	sock	,	(	struct	sockaddr	*	)	&	addr	,	sizeof	(	addr	)	)	<	0

sent	<	cmd_len	&&	tries	<	3

bytes	==	-	1

(	callcontrol_socket	.	timeout	%	1000	)	*	1000

count	==	-	1

bytes	==	-	1

(	int	)	(	long	)	*	_params	->	param	==	CCActive

res	!=	-	1

res	==	-	1

(	int	)	s	.	st_mtime	>	(	int	)	*	mt

len	==	-	1

len	==	-	1

slash	&&	slash	<	arond

r	>=	0	&&	r	<=	9

bind	(	fd	,	(	struct	sockaddr	*	)	&	sin	,	sizeof	(	struct	sockaddr_in	)	)	<	0

connect	(	fd	,	(	struct	sockaddr	*	)	&	sin	,	sizeof	(	struct	sockaddr_in	)	)	<	0

len	==	-	1

ndigits	>=	NDIG	-	1

(	fj	+	.03	)	*	10
fj	+	.03	*	10
++	*	--	p1

(	decpt	>=	0	&&	decpt	-	ndigit	>	4	)	||	(	decpt	<	0	&&	decpt	<	-	3	)

decpt	/	100	>	0

decpt	/	10	>	0

(	decpt	%	100	)	/	10

ndigit	++	<	decpt

magnitude	-	new_magnitude	*	10

decimal_point	++	<	0

decimal_point	--	>	0

precision	>	0	||	add_dp

precision	>	0	||	add_dp

(	1	<<	nbits	)	-	1
1	<<	nbits	-	1
!	islower	(	(	int	)	*	fmt	)
islower	(	(	int	)	*	fmt	!	islower	(	(	int	)	*	fmt	)
alternate_form	&&	i_num	!=	0

adjust_precision	&&	precision	<	s_len

adjust_width	&&	adjust	==	RIGHT	&&	min_width	>	s_len

adjust_width	&&	adjust	==	LEFT	&&	min_width	>	s_len

(	char	)	(	length	>>	(	56	-	(	i	*	8	)	)	)	&	0xff

conn	->	fd	!=	-	1

conn	->	domain	&&	!	strcasecmp	(	conn	->	domain	,	domain	)	&&	conn	->	type	==	type

cdata	&&	!	strcmp	(	cdata	,	db_key	(	local_secret	,	from	,	id	)	)

conn	->	type	==	CONN_OUTBOUND	&&	conn	->	fd	==	-	1

conn	->	fd	!=	-	1

conn	->	fd	!=	-	1	&&	FD_ISSET	(	conn	->	fd	,	&	fdset	)
->	fd	!=	-	1	&&	FD_ISSET	(	conn	->	fd	,	&	fdset	conn	->	fd	!=	-	1	&&	FD_ISSET	(	conn	->	fd	,	&	fdset	)
parse_from_header	(	msg	)	<	0	||	!	msg	->	from	->	parsed

msg	->	first_line	.	u	.	request	.	uri	.	s	&&	msg	->	first_line	.	u	.	request	.	uri	.	len	>	0

flag	==	0	||	flag	==	1

size	==	-	1

*	p	&&	isspace	(	(	int	)	*	p	)
p	&&	isspace	(	(	int	)	*	p	*	p	&&	isspace	(	(	int	)	*	p	)
!	isspace	(	(	int	)	*	p	)
isspace	(	(	int	)	*	p	!	isspace	(	(	int	)	*	p	)
*	p	&&	isspace	(	(	int	)	*	p	)
p	&&	isspace	(	(	int	)	*	p	*	p	&&	isspace	(	(	int	)	*	p	)
*	p	&&	isspace	(	(	int	)	*	p	)
p	&&	isspace	(	(	int	)	*	p	*	p	&&	isspace	(	(	int	)	*	p	)
*	p	&&	isspace	(	(	int	)	*	p	)
p	&&	isspace	(	(	int	)	*	p	*	p	&&	isspace	(	(	int	)	*	p	)
!	isspace	(	(	int	)	*	p	)
isspace	(	(	int	)	*	p	!	isspace	(	(	int	)	*	p	)
*	p	&&	isspace	(	(	int	)	*	p	)
p	&&	isspace	(	(	int	)	*	p	*	p	&&	isspace	(	(	int	)	*	p	)
*	p	&&	isspace	(	(	int	)	*	p	)
p	&&	isspace	(	(	int	)	*	p	*	p	&&	isspace	(	(	int	)	*	p	)
*	p	&&	isspace	(	(	int	)	*	p	)
p	&&	isspace	(	(	int	)	*	p	*	p	&&	isspace	(	(	int	)	*	p	)
*	p	&&	!	isspace	(	(	int	)	*	p	)
p	&&	!	isspace	(	(	int	)	*	p	*	p	&&	!	isspace	(	(	int	)	*	p	)
*	p	&&	isspace	(	(	int	)	*	p	)
p	&&	isspace	(	(	int	)	*	p	*	p	&&	isspace	(	(	int	)	*	p	)
!	id	||	!	id	->	username	||	!	*	id	->	username	||	!	id	->	password	||	!	*	id	->	password	||	!	id	->	database	||	!	*	id	->	database

!	id	->	host	||	!	*	id	->	host

++	p	,	--	len

!	tv	->	tv_usec	&&	!	tv	->	tv_sec

!	val	||	!	*	val

dv	&&	dv	<	(	(	double	)	MIN_TIMEOUT_MS	)	/	1000

!	synch_mode	&&	is_zero_tm	(	&	restore_tm	)

!	synch_mode	&&	is_zero_tm	(	&	restore_tm	)

cur	.	tv_sec	<	wtm	.	tv_sec	||	(	cur	.	tv_sec	==	wtm	.	tv_sec	&&	cur	.	tv_usec	<	wtm	.	tv_usec	)

(	unsigned	)	ret	>=	(	unsigned	)	*	_len

(	bl_size	+	1	)	*	sizeof	(	*	blacklists	)
bl_size	+	1	*	sizeof	(	*	blacklists	)
dsbl	->	bl	&&	add_list_to_head	(	dsbl	->	bl	,	dsbl_first	,	dsbl_last	,	1	,	0	)	!=	0

*	(	(	char	*	)	*	param	)	==	0

(	*	crt_idx	+	1	)	%	2
*	crt_idx	+	1	%	2
v	^	(	v	>>	3	)

v	^	(	v	>>	3	)

(	(	h	)	+	(	h	>>	11	)	)	+	(	(	h	>>	13	)	+	(	h	>>	23	)	)
(	(	h	)	+	h	>>	11	)	+	(	(	h	>>	13	)	+	(	h	>>	23	)	)
msg	->	proxy_auth	&&	!	msg	->	proxy_auth	->	parsed

msg	->	authorization	&&	!	msg	->	authorization	->	parsed

ds_id	==	-	1

(	ps	->	code	==	200	)	||	check_options_rplcode	(	ps	->	code	)

flags	==	-	1

1	==	param_no	||	2	==	param_no

*	s	&&	isspace	(	(	int	)	*	s	)
s	&&	isspace	(	(	int	)	*	s	*	s	&&	isspace	(	(	int	)	*	s	)
!	isspace	(	(	int	)	*	s	)
isspace	(	(	int	)	*	s	!	isspace	(	(	int	)	*	s	)
*	s	&&	isspace	(	(	int	)	*	s	)
s	&&	isspace	(	(	int	)	*	s	*	s	&&	isspace	(	(	int	)	*	s	)
*	s	&&	isspace	(	(	int	)	*	s	)
s	&&	isspace	(	(	int	)	*	s	*	s	&&	isspace	(	(	int	)	*	s	)
!	isspace	(	(	int	)	*	s	)
isspace	(	(	int	)	*	s	!	isspace	(	(	int	)	*	s	)
*	s	&&	isspace	(	(	int	)	*	s	)
s	&&	isspace	(	(	int	)	*	s	*	s	&&	isspace	(	(	int	)	*	s	)
*	s	&&	isspace	(	(	int	)	*	s	)
s	&&	isspace	(	(	int	)	*	s	*	s	&&	isspace	(	(	int	)	*	s	)
*	s	&&	isspace	(	(	int	)	*	s	)
s	&&	isspace	(	(	int	)	*	s	*	s	&&	isspace	(	(	int	)	*	s	)
app	->	name	.	len	==	len	&&	!	strncasecmp	(	app	->	name	.	s	,	name	,	len	)

sock	==	-	1

flags	==	-	1

fcntl	(	sock	,	F_SETFL	,	flags	|	O_NONBLOCK	)	==	-	1

t_get_trans_ident	(	msg	,	&	hash_index	,	&	label	)	==	-	1

msg	->	from	->	parsed	==	0	&&	parse_from_header	(	msg	)	<	0

msg	->	contact	->	parsed	==	0	&&	parse_contact	(	msg	->	contact	)	<	0

p_hdr	->	parsed	==	0	&&	parse_rr	(	p_hdr	)	!=	0

p_hdr	->	parsed	==	0	&&	parse_rr	(	p_hdr	)	!=	0

int2reverse_hex	(	&	s	,	&	l	,	(	int	)	msg	->	msg_flags	)	==	-	1

twi	->	action	.	len	+	12	>=	CMD_BUFFER_MAX

l	+	1	>=	IDBUF_LEN

e	==	-	1

write_to_fifo	(	vm_fifo	,	TWRITE_PARAMS	)	==	-	1

add_blind_uac	(	)	==	-	1

write_to_unixsock	(	socket	,	TWRITE_PARAMS	)	==	-	1

add_blind_uac	(	)	==	-	1

request	->	dst_uri	.	s	&&	request	->	dst_uri	.	len	>	0

p	>=	buf	+	len

tl	->	ld_tl	&&	tl	->	ld_tl	!=	tl

!	del_lump	(	req	,	req	->	h_via1	->	name	.	s	-	req	->	buf	,	req	->	h_via1	->	len	,	0	)

!	req	->	add_rm	&&	!	req	->	new_uri	.	s

SEND_BUFFER	(	request	)	==	-	1

trans	->	tmcb_hl	.	first	==	0	||	(	(	trans	->	tmcb_hl	.	reg_types	)	&	type	)	==	0
trans	->	tmcb_hl	.	first	==	0	||	(	trans	->	tmcb_hl	.	reg_types	)	&	type	==	0
req	->	dst_uri	.	len	==	-	1

trans	->	tmcb_hl	.	first	==	0	||	(	(	trans	->	tmcb_hl	.	reg_types	)	&	type	)	==	0
trans	->	tmcb_hl	.	first	==	0	||	(	trans	->	tmcb_hl	.	reg_types	)	&	type	==	0
!	ok	->	to	||	!	ok	->	to	->	parsed

!	s	||	!	n

(	code	!=	401	)	&&	(	code	!=	407	)

code	>=	300	&&	code	<	400

code	>=	180	&&	p_msg	->	to	&&	(	get_to	(	p_msg	)	->	tag_value	.	s	==	0	||	get_to	(	p_msg	)	->	tag_value	.	len	==	0	)
code	>=	180	&&	p_msg	->	to	&&	get_to	(	p_msg	)	->	tag_value	.	s	==	0	||	get_to	(	p_msg	)	->	tag_value	.	len	==	0
(	lowest_b	==	-	1	)	||	(	prio	<	lowest_s	)

new_code	>=	200	&&	new_code	<	300	&&	is_invite	(	Trans	)

is_hopbyhop_cancel	(	Trans	)	&&	new_code	>=	200

new_code	>=	600	&&	!	disable_6xx_block

picked_branch	==	-	2

picked_branch	==	-	1

t	->	relaied_reply_branch	==	-	2	&&	t	->	uas	.	status	>=	200

relayed_code	>=	180	&&	t	->	uas	.	request	->	to	&&	(	get_to	(	t	->	uas	.	request	)	->	tag_value	.	s	==	0	||	get_to	(	t	->	uas	.	request	)	->	tag_value	.	len	==	0	)
relayed_code	>=	180	&&	t	->	uas	.	request	->	to	&&	get_to	(	t	->	uas	.	request	)	->	tag_value	.	s	==	0	||	get_to	(	t	->	uas	.	request	)	->	tag_value	.	len	==	0
(	relayed_code	!=	401	)	&&	(	relayed_code	!=	407	)

t_check	(	p_msg	,	&	branch	)	==	-	1

is_invite	(	t	)	&&	(	(	msg_status	>=	300	)	||	(	is_local	(	t	)	&&	!	no_autoack	(	t	)	&&	msg_status	>=	200	)	)
is_invite	(	t	)	&&	(	msg_status	>=	300	)	||	(	is_local	(	t	)	&&	!	no_autoack	(	t	)	&&	msg_status	>=	200	)
!	onreply_avp_mode	||	!	has_reply_route

msg_status	<	200	&&	(	restart_fr_on_each_reply	||	(	(	last_uac_status	<	msg_status	)	&&	(	(	msg_status	>=	180	)	||	(	last_uac_status	==	0	)	)	)	)
msg_status	<	200	&&	restart_fr_on_each_reply	||	(	(	last_uac_status	<	msg_status	)	&&	(	msg_status	>=	180	)	||	(	last_uac_status	==	0	)	)
code	>=	180	&&	p_msg	->	to	&&	(	get_to	(	p_msg	)	->	tag_value	.	s	==	0	||	get_to	(	p_msg	)	->	tag_value	.	len	==	0	)
code	>=	180	&&	p_msg	->	to	&&	get_to	(	p_msg	)	->	tag_value	.	s	==	0	||	get_to	(	p_msg	)	->	tag_value	.	len	==	0
(	code	>=	200	)	&&	(	code	<	299	)

(	code	>=	200	)	&&	(	code	<=	299	)

(	code	<	200	)	||	(	code	>=	300	)

(	_code	<	200	)	||	(	_code	>	299	)

(	msg	->	from	==	0	)	||	(	msg	->	cseq	==	0	)	||	(	msg	->	to	==	0	)

p_cell	->	relaied_reply_branch	!=	-	2

is_ack	&&	e2e_ack_trans	==	0	&&	p_cell	->	uas	.	status	>=	200	&&	p_cell	->	uas	.	status	<	300

!	leave_new_locked	||	isACK

!	(	p_msg	->	via1	&&	p_msg	->	via1	->	branch	&&	p_msg	->	via1	->	branch	->	value	.	s	)
!	p_msg	->	via1	&&	p_msg	->	via1	->	branch	&&	p_msg	->	via1	->	branch	->	value	.	s
lret	==	-	2

e2eack_T	->	relaied_reply_branch	==	-	2

!	t_calc_branch	(	e2eack_T	,	e2eack_T	->	nr_of_outgoings	+	1	,	p_msg	->	add_to_branch_s	,	&	p_msg	->	add_to_branch_len	)

rt	==	-	1

rt	==	-	1

rt	==	-	1

s	==	0	||	*	s	==	0

param_no	>	0	&&	param_no	<	4

uac_init	(	)	==	-	1

t	->	relaied_reply_branch	==	-	2

t_check	(	msg	,	0	)	==	-	1

t_check	(	msg	,	0	)	==	-	1

p	-	pv_local_buf	+	PV_FIELD_DELIM_LEN	+	1	>	PV_LOCAL_BUF_SIZE

is_invite	(	Trans	)	&&	Trans	->	uas	.	status	==	200

lock_initialize	(	)	==	-	1

!	new	->	authorization	||	!	new	->	authorization	->	parsed

!	new	->	proxy_auth	||	!	new	->	proxy_auth	->	parsed

!	d	||	d	+	1	>=	needle	+	hf_avail

n	<	6	&&	node

n	<	6	&&	node

str2int	(	&	node	->	value	,	&	rpl_code	)	!=	0	||	rpl_code	>=	700

cur	->	name	.	len	==	id	->	name	.	len	&&	!	strncmp	(	cur	->	name	.	s	,	id	->	name	.	s	,	cur	->	name	.	len	)

poz	<	0	||	poz	>=	json_object_array_length	(	dest	)

attr	&&	scheme	==	0

*	s	&&	*	s	!=	end	&&	!	isspace	(	(	int	)	*	s	)
s	&&	*	s	!=	end	&&	!	isspace	(	(	int	)	*	s	*	s	&&	*	s	!=	end	&&	!	isspace	(	(	int	)	*	s	)
(	flags	<<	8	)	&	0xff00

p	==	0	||	len	==	0

*	p	==	0	||	len	<=	0

s	==	0	||	*	s	==	0

*	p	&&	isspace	(	(	int	)	*	p	)
p	&&	isspace	(	(	int	)	*	p	*	p	&&	isspace	(	(	int	)	*	p	)
!	isspace	(	(	int	)	*	p	)
isspace	(	(	int	)	*	p	!	isspace	(	(	int	)	*	p	)
*	p	&&	isspace	(	(	int	)	*	p	)
p	&&	isspace	(	(	int	)	*	p	*	p	&&	isspace	(	(	int	)	*	p	)
*	p	&&	isspace	(	(	int	)	*	p	)
p	&&	isspace	(	(	int	)	*	p	*	p	&&	isspace	(	(	int	)	*	p	)
!	isspace	(	(	int	)	*	p	)
isspace	(	(	int	)	*	p	!	isspace	(	(	int	)	*	p	)
*	p	&&	isspace	(	(	int	)	*	p	)
p	&&	isspace	(	(	int	)	*	p	*	p	&&	isspace	(	(	int	)	*	p	)
*	p	&&	isspace	(	(	int	)	*	p	)
p	&&	isspace	(	(	int	)	*	p	*	p	&&	isspace	(	(	int	)	*	p	)
!	isspace	(	(	int	)	*	p	)
isspace	(	(	int	)	*	p	!	isspace	(	(	int	)	*	p	)
*	p	&&	isspace	(	(	int	)	*	p	)
p	&&	isspace	(	(	int	)	*	p	*	p	&&	isspace	(	(	int	)	*	p	)
*	p	&&	isspace	(	(	int	)	*	p	)
p	&&	isspace	(	(	int	)	*	p	*	p	&&	isspace	(	(	int	)	*	p	)
p	-	s	!=	2	&&	p	-	s	!=	3

*	(	++	p	)	==	0

*	(	++	p	)	==	0

p	-	s	!=	2	&&	p	-	s	!=	3

*	(	++	p	)	==	0

p	!=	0	&&	*	p	!=	0

*	(	++	p	)	==	0

just_val_flags	==	-	1

(	buf_size	+	1	)	*	sizeof	(	char	)
buf_size	+	1	*	sizeof	(	char	)
p	==	0	||	(	p	!=	0	&&	p	-	s	>	1	)

set_ruri	(	msg	,	&	(	(	*	locs	)	->	addr	.	uri	)	)	==	-	1

stat	(	dtd_file	,	&	stat_t	)	==	-	1

access	(	dtd_file	,	R_OK	)	==	-	1

i	==	-	1

parse_from_header	(	msg	)	==	-	1

mime	==	-	1

disp	->	type	.	len	!=	CPL_SCRIPT_LEN	||	strncasecmp	(	disp	->	type	.	s	,	CPL_SCRIPT	,	CPL_SCRIPT_LEN	)

param	->	name	.	len	==	ACTION_PARAM_LEN	&&	!	strncasecmp	(	param	->	name	.	s	,	ACTION_PARAM	,	ACTION_PARAM_LEN	)

param	->	body	.	len	==	STORE_ACTION_LEN	&&	!	strncasecmp	(	param	->	body	.	s	,	STORE_ACTION	,	STORE_ACTION_LEN	)

do_script_action	(	msg	,	STORE_SCRIPT	)	==	-	1

param	->	body	.	len	==	REMOVE_ACTION_LEN	&&	!	strncasecmp	(	param	->	body	.	s	,	REMOVE_ACTION	,	REMOVE_ACTION_LEN	)

do_script_action	(	msg	,	REMOVE_SCRIPT	)	==	-	1

do_script_download	(	msg	)	==	-	1

fd	==	-	1

lseek	(	fd	,	0	,	SEEK_SET	)	==	-	1

n	==	-	1

fd	!=	-	1

fd	==	-	1

status	<	400	||	status	>=	700

c	==	-	1	||	foo	==	-	1

c	<<	4	|	foo

(	(	*	len	)	&	0x0001	)	==	1
(	*	len	)	&	0x0001	==	1
(	(	*	len	)	&	0x0001	)	==	1
(	*	len	)	&	0x0001	==	1
(	(	*	len	)	&	0x0001	)	==	1
(	*	len	)	&	0x0001	==	1
cmd	->	s2	.	s	==	0	||	cmd	->	s2	.	len	==	0

fd	==	-	1

i	<	sizeof	(	argv	)	/	sizeof	(	char	*	)

start	-	pos	<	4

start	-	pos	<	3

(	address	&	mask	)	==	(	ip	&	mask	)
address	&	mask	==	ip	&	mask
digit_bol	&&	isdigit	(	(	unsigned	char	)	*	r	)
&&	isdigit	(	(	unsigned	char	)	*	r	digit_bol	&&	isdigit	(	(	unsigned	char	)	*	r	)
digit_bol	&&	isdigit	(	(	unsigned	char	)	*	r	)
&&	isdigit	(	(	unsigned	char	)	*	r	digit_bol	&&	isdigit	(	(	unsigned	char	)	*	r	)
(	length	<	8	)	||	(	length	>	30	)

res	<<	(	32	-	length	)

pmatch	.	rm_so	==	-	1

i	==	-	1

pmatch	.	rm_so	==	-	1

!	contact	.	buf	||	(	contact	.	buf_len	<	contact	.	data_len	)

m	&&	parse_allow	(	m	)	!=	-	1

tcp_persistent_flag	!=	-	1

_m	->	expires	&&	!	_m	->	expires	->	parsed	&&	(	parse_expires	(	_m	->	expires	)	<	0	)

!	ptr	->	parsed	&&	(	parse_contact	(	ptr	)	<	0	)

!	l	||	!	l2

!	l	||	!	l2

!	l	||	!	l2

2	*	sizeof	(	unsigned	short	)	+	sizeof	(	unsigned	int	)

2	*	sizeof	(	unsigned	short	)	+	sizeof	(	unsigned	int	)

4	*	sizeof	(	unsigned	short	)	+	sizeof	(	unsigned	int	)

4	*	sizeof	(	unsigned	short	)	+	sizeof	(	unsigned	int	)

p	<	dec_rdata_buf	+	actual_len

2	*	sizeof	(	unsigned	short	)	+	sizeof	(	unsigned	int	)

2	*	sizeof	(	unsigned	short	)	+	sizeof	(	unsigned	int	)

4	*	sizeof	(	unsigned	short	)	+	sizeof	(	unsigned	int	)

4	*	sizeof	(	unsigned	short	)	+	sizeof	(	unsigned	int	)

description	==	DESC_REGEXP	||	description	==	DESC_REGEXP_COMPLEMENT

!	match	&&	cur	<	lmp	->	u	.	value	+	lmp	->	len

op	==	DELETE	&&	!	is_static

op	==	ADD_TO_FRONT	||	op	==	ADD_TO_BACK

op	==	ADD_TO_FRONT	&&	buff_len	>	0

op	==	ADD_TO_BACK	&&	buff_len	>	0

session	&&	!	match

*	(	ch	+	1	)	!=	10
*	ch	+	1	!=	10
(	*	start	!=	13	)	||	(	*	(	start	+	1	)	!=	10	)
(	*	start	!=	13	)	||	(	*	start	+	1	!=	10	)
(	len	>	3	)	&&	!	(	*	start	==	13	&&	*	(	start	+	1	)	==	10	&&	*	(	start	+	2	)	==	13	&&	*	(	start	+	3	)	==	10	)
(	len	>	3	)	&&	!	(	*	start	==	13	&&	*	(	start	+	1	)	==	10	&&	*	(	start	+	2	)	==	13	&&	*	start	+	3	==	10	)
(	len	>	0	)	&&	(	(	*	start	==	13	)	||	(	*	start	==	10	)	)
(	len	>	0	)	&&	(	*	start	==	13	)	||	(	*	start	==	10	)
del_lump	(	msg	,	start	-	msg	->	buf	,	len	,	0	)	==	0

r	!=	p	+	strlen	(	p	)

m	->	from_multi_part	==	0	&&	m	->	part_count	==	1	&&	m	->	first	->	content_type	==	0

parse_privacy	(	msg	)	==	-	1

m	->	from_multi_part	==	0	&&	m	->	part_count	==	1	&&	m	->	first	->	content_type	==	0

del_lump	(	msg	,	p	->	all_data	.	s	-	msg	->	buf	-	4	-	m	->	boundary	.	len	,	p	->	all_data	.	len	+	6	+	m	->	boundary	.	len	,	0	)	==	0

hdrs_len	+	1	<=	msg	->	len

msg	->	parsed_uri_ok	==	0	&&	parse_sip_msg_uri	(	msg	)	<	0

!	(	flags	&	SIP_PARSE_NOMF	)
!	flags	&	SIP_PARSE_NOMF
hdrs_len	+	1	<=	msg	->	len

(	flags	&	SIP_PARSE_HDR	)	&&	sip_validate_hdrs	(	msg	)	<	0

(	code_i	<	100	)	||	(	code_i	>	699	)

(	(	code_i	<	300	)	||	(	msg	->	REPLY_STATUS	<	300	)	)	&&	(	code_i	/	100	!=	msg	->	REPLY_STATUS	/	100	)
(	code_i	<	300	)	||	(	msg	->	REPLY_STATUS	<	300	)	&&	(	code_i	/	100	!=	msg	->	REPLY_STATUS	/	100	)
checkver	==	-	1

param_no	>	0	&&	param_no	<=	3

(	(	(	unsigned	short	)	maxt	)	<<	8	)	|	maxb

s	!=	0	&&	*	s	!=	0

re_s	==	0	||	strlen	(	re_s	)	==	0

(	max	>>	8	)	&	0xff

maxt	-	cts_added	>=	maxb

max	!=	-	1	&&	n	>	max

pmatch	.	rm_so	!=	-	1

pmatch	.	rm_so	!=	-	1

pmatch	.	rm_so	==	-	1

pmatch	.	rm_so	==	-	1

pmatch	.	rm_so	!=	-	1

pmatch	.	rm_so	!=	-	1

(	stringLength	+	1	)	*	sizeof	(	char	)
stringLength	+	1	*	sizeof	(	char	)
old_sigchld_handler	.	sa_handler	!=	SIG_IGN	&&	old_sigchld_handler	.	sa_handler	!=	SIG_DFL

snmpget_fd	==	-	1

sizeof	(	char	)	*	(	local_path_to_snmpget_length	+	snmpget_binary_name_length	+	1	)
sizeof	(	char	)	*	local_path_to_snmpget_length	+	snmpget_binary_name_length	+	1
(	currentYear	&	0xFF00	)	>>	8
currentYear	&	0xFF00	>>	8
(	dialog_major_threshold	>	-	1	)	&&	(	num_dialogs	>	dialog_major_threshold	)

new_threshold	<	-	1

flag	==	DLG_PUB_AB	||	flag	==	DLG_PUB_A

flag	==	DLG_PUB_AB	||	flag	==	DLG_PUB_B

flag	==	DLG_PUB_AB	||	flag	==	DLG_PUB_A

flag	==	DLG_PUB_AB	||	flag	==	DLG_PUB_B

name	==	0	||	*	name	==	0

len	--	,	c	++

ui	>=	8	*	sizeof	(	unsigned	int	)

8	*	sizeof	(	unsigned	int	)	-	1

n	<	(	8	*	sizeof	(	n	)	)

dlg_hash_size	==	(	1	<<	n	)

dlg_hash_size	<	(	1	<<	n	)

1	<<	(	n	-	1	)

1	<<	(	n	-	1	)

i	<	8	*	sizeof	(	size	)

size	&	(	1	<<	i	)

(	char	*	)	(	profile	->	counts	)	+	size	*	sizeof	(	int	)

profile	->	has_value	&&	!	profile	->	use_cached

del_lump	(	req	,	it	->	name	.	s	-	buf	,	it	->	len	,	0	)	==	0

del_lump	(	req	,	it	->	name	.	s	-	buf	,	it	->	len	,	0	)	==	0

int2reverse_hex	(	&	p	,	&	n	,	dlg	->	h_entry	)	==	-	1

int2reverse_hex	(	&	p	,	&	n	,	dlg	->	h_id	)	==	-	1

p	!=	(	(	(	char	*	)	dlg	)	+	len	)

cnt	&&	n	<	idx

cnt	&&	n	>=	idx	+	cnt

(	n	%	50	)	==	0

!	node	||	!	node	->	value	.	s	||	!	node	->	value	.	len

!	node	->	value	.	s	||	!	node	->	value	.	len	||	strno2int	(	&	node	->	value	,	&	h_entry	)	<	0

!	node	->	value	.	s	||	!	node	->	value	.	len	||	strno2int	(	&	node	->	value	,	&	h_id	)	<	0

int2reverse_hex	(	&	p	,	&	n	,	entry	)	==	-	1

int2reverse_hex	(	&	p	,	&	n	,	id	)	==	-	1

shutdown_done	||	dlg	==	0

shutdown_done	||	dlg	==	0

shutdown_done	||	dlg	==	0

shutdown_done	||	dlg	==	0

shutdown_done	||	dlg	==	0

update_dlg_timer	(	&	dlg	->	tl	,	dlg	->	lifetime	)	==	-	1

dst_leg	==	-	1	||	switch_cseqs	(	dlg	,	dst_leg	)	!=	0	||	update_cseqs	(	dlg	,	req	,	dst_leg	,	0	)

dst_leg	==	-	1	||	switch_cseqs	(	dlg	,	dst_leg	)	!=	0	||	update_cseqs	(	dlg	,	req	,	dst_leg	,	0	)

leg	->	route_set	.	len	!=	0	&&	leg	->	route_set	.	s

leg	->	route_set	.	len	!=	0	&&	leg	->	route_set	.	s

str2int	(	&	(	(	get_cseq	(	req	)	)	->	number	)	,	&	n	)	!=	0	||	str2int	(	&	(	leg	->	prev_cseq	)	,	&	m	)	!=	0	||	n	<=	m

(	dlg	->	user_flags	&	index	)	==	value
dlg	->	user_flags	&	index	==	value
create_cbs	&&	create_cbs	!=	POINTER_CLOSED_MARKER

load_cbs	&&	load_cbs	!=	POINTER_CLOSED_MARKER

load_cbs	&&	load_cbs	!=	POINTER_CLOSED_MARKER

dlg	->	cbs	.	first	==	0	||	(	(	dlg	->	cbs	.	types	)	&	type	)	==	0
dlg	->	cbs	.	first	==	0	||	(	dlg	->	cbs	.	types	)	&	type	==	0
tl	->	next	!=	0	||	tl	->	prev	!=	0

d_timer	->	first	.	next	==	&	(	d_timer	->	first	)	||	d_timer	->	first	.	next	->	timeout	>	time

tl	!=	end	&&	tl	->	timeout	<=	time

tl	==	end	&&	d_timer	->	first	.	next	->	prev

7	+	strlen	(	uri	)	*	sizeof	(	char	)

(	!	msg	->	event	)	||	(	msg	->	event	->	body	.	len	<=	0	)

!	msg	->	from	||	!	msg	->	from	->	body	.	s

load_tm	(	&	tmb	)	==	-	1

server_hsize	<	1	||	server_hsize	>	20	||	client_hsize	<	1	||	client_hsize	>	20

load_tm_api	(	&	tmb	)	==	-	1

!	msg	->	from	||	!	msg	->	from	->	body	.	s

pto	->	tag_value	.	s	!=	0	&&	pto	->	tag_value	.	len	!=	0

!	msg	->	from	||	!	msg	->	from	->	body	.	s

parse_method	(	tm_tran	->	method	.	s	,	tm_tran	->	method	.	s	+	tm_tran	->	method	.	len	,	&	method_value	)	<	0

!	pto	||	!	pto	->	tag_value	.	s	||	!	pto	->	tag_value	.	len

parse_method	(	t	->	method	.	s	,	t	->	method	.	s	+	t	->	method	.	len	,	&	method_id	)	<	0

!	msg	->	from	||	!	msg	->	from	->	body	.	s

!	msg	->	body_lumps	&&	!	msg	->	add_rm

msg	->	first_line	.	u	.	reply	.	statuscode	>	100	&&	msg	->	first_line	.	u	.	reply	.	statuscode	<	300

msg	->	first_line	.	u	.	reply	.	statuscode	>	399	&&	msg	->	first_line	.	u	.	reply	.	statuscode	<	700

qos_flag	==	-	1

qos	->	cbs	.	first	==	0	||	(	(	qos	->	cbs	.	types	)	&	type	)	==	0
qos	->	cbs	.	first	==	0	||	(	qos	->	cbs	.	types	)	&	type	==	0
(	errcode	>>	ERR_LIB_OFFSET	)	&	ERR_LIB_MASK

errcode	&	(	ERR_RFLAGS_MASK	<<	ERR_RFLAGS_OFFSET	)

(	ERR_GET_RFLAGS	(	errcode	)	&	ERR_RFLAG_FATAL	)	!=	0
ERR_GET_RFLAGS	(	errcode	)	&	ERR_RFLAG_FATAL	!=	0
(	ERR_GET_RFLAGS	(	errcode	)	&	ERR_RFLAG_COMMON	)	!=	0
ERR_GET_RFLAGS	(	errcode	)	&	ERR_RFLAG_COMMON	!=	0
useCrls	&&	(	!	crlList	)

(	verCert	!=	verCertWithSlash	)	&&	verCertWithSlash

!	dateHF	||	!	dateHFValue	||	!	msg

*	dateHFValue	==	-	1

!	dateHF	||	!	dateHFValue	||	!	msg

now	==	-	1

(	dateHFValue	>=	authCert_notBefore	)	&&	(	dateHFValue	<=	authCert_notAfter	)

!	digestString	||	!	msg

*	(	digestString	+	(	l	++	)	)
*	digestString	+	(	l	++	)
*	(	digestString	+	(	l	++	)	)
*	digestString	+	(	l	++	)
*	(	digestString	+	(	l	++	)	)
*	digestString	+	(	l	++	)
*	(	digestString	+	(	l	++	)	)
*	digestString	+	(	l	++	)
*	(	digestString	+	(	l	++	)	)
*	digestString	+	(	l	++	)
*	(	digestString	+	(	l	++	)	)
*	digestString	+	(	l	++	)
*	(	digestString	+	(	l	++	)	)
*	digestString	+	(	l	++	)
*	(	digestString	+	(	l	++	)	)
*	digestString	+	(	l	++	)
(	(	(	siglen	+	2	)	/	3	)	*	4	)	+	1
(	(	siglen	+	2	/	3	)	*	4	)	+	1
!	identityHF	||	!	msg

!	certp	||	!	msg	||	!	certchainp

!	begin	||	!	end

!	cert	||	!	certchain

!	cert	||	!	msg

!	cert	||	!	identityHF	||	!	msg

dateDelta	==	-	1

(	timeOfDateHF	<	certNotBefore	)	||	(	timeOfDateHF	>	certNotAfter	)

(	ASN1_UTCTIME_check	(	dateString	)	)	&&	(	dateString	->	length	==	13	)

(	ASN1_GENERALIZEDTIME_check	(	dateString	)	)	&&	(	dateString	->	length	==	15	)

now	==	-	1

!	cert	||	!	notBefore	||	!	notAfter

!	notBeforeSt	||	!	notAfterSt

*	notBefore	<	0	||	*	notAfter	<	0

!	fromHostname	||	!	certHostname

service_type	!=	-	1

http_method	<	0	||	http_method	>	1

url_len	-	index	>	0

v	^	(	v	>>	3	)

v	^	(	v	>>	3	)

(	(	h	)	+	(	h	>>	11	)	)	+	(	(	h	>>	13	)	+	(	h	>>	23	)	)
(	(	h	)	+	h	>>	11	)	+	(	h	>>	13	+	h	>>	23	)
len	==	-	1

len	==	-	1

p	<	from	+	strlen	(	from	)

ps	->	code	<	200	||	ps	->	code	>=	300

connect	(	sock	,	(	struct	sockaddr	*	)	&	address	,	sizeof	(	address	)	)	<	0

p	<	to	+	tol

p	>=	to	+	tol

len	==	-	1

ndigits	>=	NDIG	-	1

(	fj	+	.03	)	*	10
fj	+	.03	*	10
++	*	--	p1

(	decpt	>=	0	&&	decpt	-	ndigit	>	4	)	||	(	decpt	<	0	&&	decpt	<	-	3	)

decpt	/	100	>	0

decpt	/	10	>	0

(	decpt	%	100	)	/	10

ndigit	++	<	decpt

magnitude	-	new_magnitude	*	10

decimal_point	++	<	0

decimal_point	--	>	0

precision	>	0	||	add_dp

precision	>	0	||	add_dp

(	1	<<	nbits	)	-	1
1	<<	nbits	-	1
!	islower	(	(	int	)	*	fmt	)
islower	(	(	int	)	*	fmt	!	islower	(	(	int	)	*	fmt	)
alternate_form	&&	i_num	!=	0

adjust_precision	&&	precision	<	s_len

adjust_width	&&	adjust	==	RIGHT	&&	min_width	>	s_len

adjust_width	&&	adjust	==	LEFT	&&	min_width	>	s_len

(	char	)	(	length	>>	(	56	-	(	i	*	8	)	)	)	&	0xff

flag	==	0	||	flag	==	1

size	==	-	1

p	<	jd	+	n

p	<	jd	+	n	-	1

pa	&&	strlen	(	pa	)	>	0

!	als	||	strlen	(	als	)	<	2

p0	<	p	+	ll

p0	<	p	+	ll

sst_flag	==	-	1

(	msg	->	flags	&	sst_flag	)	!=	sst_flag
msg	->	flags	&	sst_flag	!=	sst_flag
minfo	.	min_se	&&	minfo	.	min_se	<	sst_min_se

msg	->	first_line	.	u	.	reply	.	statuscode	>	199	&&	msg	->	first_line	.	u	.	reply	.	statuscode	<	300

!	msg	||	!	minfo

(	code	==	200	)	||	check_options_rplcode	(	code	)

(	rank	==	1	)	&&	dr_reload_data	(	)	!=	0

dr_default_grp	!=	-	1

gw_attrs_avp	.	name	!=	-	1

gw_priprefix_avp	.	name	!=	-	1

carrier_id_avp	.	name	!=	-	1

carrier_attrs_avp	.	name	!=	-	1

size	-	first	>	1

gw_attrs_avp	.	name	!=	-	1

gw_priprefix_avp	.	name	!=	-	1

carrier_id_avp	.	name	!=	-	1

carrier_attrs_avp	.	name	!=	-	1

gw_attrs_avp	.	name	!=	-	1

gw_priprefix_avp	.	name	!=	-	1

rule_id_avp	.	name	!=	-	1

rule_attrs_avp	.	name	!=	-	1

rule_prefix_avp	.	name	!=	-	1

!	(	flags	&	DR_PARAM_INTERNAL_TRIGGERED	)
!	flags	&	DR_PARAM_INTERNAL_TRIGGERED
flags	&	~	DR_PARAM_RULE_FALLBACK
flags	&	~	DR_PARAM_RULE_FALLBACK
prefix_len	==	0	&&	rule_idx	==	0

flags	&	~	DR_PARAM_RULE_FALLBACK
flags	&	~	DR_PARAM_RULE_FALLBACK
rule_prefix_avp	.	name	!=	-	1

rule_attrs_avp	.	name	!=	-	1

rule_id_avp	.	name	!=	-	1

!	(	flags	&	DR_PARAM_INTERNAL_TRIGGERED	)
!	flags	&	DR_PARAM_INTERNAL_TRIGGERED
flags	&	~	DR_PARAM_RULE_FALLBACK
flags	&	~	DR_PARAM_RULE_FALLBACK
flags	&	~	DR_PARAM_RULE_FALLBACK
flags	&	~	DR_PARAM_RULE_FALLBACK
flags	&	~	DR_PARAM_RULE_FALLBACK
flags	&	~	DR_PARAM_RULE_FALLBACK
flags	&	~	DR_PARAM_RULE_FALLBACK
flags	&	~	DR_PARAM_RULE_FALLBACK
flags	&	~	DR_PARAM_RULE_FALLBACK
flags	&	~	DR_PARAM_RULE_FALLBACK
gw_attrs_avp	.	name	!=	-	1

gw_priprefix_avp	.	name	!=	-	1

rule_id_avp	.	name	!=	-	1

rule_attrs_avp	.	name	!=	-	1

rule_prefix_avp	.	name	!=	-	1

gw_priprefix_avp	.	name	!=	-	1

flags	&	DR_IFG_ATTRS_FLAG	&&	gw_attrs_avp	.	name	!=	-	1

(	bl_lists_size	+	1	)	*	sizeof	(	char	*	)
bl_lists_size	+	1	*	sizeof	(	char	*	)
drbl	->	bl	&&	add_list_to_head	(	drbl	->	bl	,	drbl_first	,	drbl_last	,	1	,	0	)	!=	0

tmp	&&	(	*	tmp	!=	0	)

l_ip	+	4	>=	GWABUF_MAX_SIZE

j	++	>=	*	rgidx

time_str	==	0	||	*	time_str	==	0

tmp	&&	(	*	tmp	!=	0	)

shortage	>	0	&&	len	>	shortage

shortage	>	0	&&	len	>	shortage

n	<	9	&&	node

nat_bflag	==	(	unsigned	int	)	-	1

nat_bflag	>=	8	*	sizeof	(	nat_bflag	)

lds	->	client_search_timeout	.	tv_sec	*	1000000	+	lds	->	client_search_timeout	.	tv_usec

(	client_search_timeout_ms	%	1000	)	*	1000

(	client_bind_timeout_ms	%	1000	)	*	1000

(	network_timeout_ms	%	1000	)	*	1000

(	lds	->	network_timeout	.	tv_sec	>	0	)	||	(	lds	->	network_timeout	.	tv_usec	>	0	)

(	lds	->	client_bind_timeout	.	tv_sec	==	0	)	&&	(	lds	->	client_bind_timeout	.	tv_usec	==	0	)

(	rc	>=	128	)	||	(	rc	<	0	)

lp	->	ldap_attr_name	.	len	+	1	==	arg_str_len

isspace	(	(	int	)	*	skip	)	&&	*	skip

!	isspace	(	(	int	)	*	(	last	-	1	)	)
!	isspace	(	(	int	)	*	last	-	1	)
2	*	ASCIILINESZ	+	1

i	<	n	+	un

code	!=	0	&&	i	<	2

pq_ptr	->	cols_out	==	-	1

*	_len	<	(	l	*	2	+	3	)

*	_len	<	(	l	*	2	+	3	)

i	<	1	||	i	>	3

!	prefix	||	!	suffix	||	!	term	||	!	r2

!	l	||	!	l2

!	l	||	!	l2

!	l	||	!	l2

!	hdr	||	!	term	||	!	suffix

!	l	||	!	l2

crt	&&	!	last

!	rrcb_hl	||	!	prior	||	(	prior	<	rrcb_hl	->	id	)

rcbp	->	next	&&	rcbp	->	next	->	id	<	prior

key2	&&	!	enable_double_rr

(	state	==	2	)	||	(	state	==	3	)

(	puri	->	maddr_val	.	len	)	>	(	RH_MADDR_PARAM_MAX_LEN	-	10	)

!	del_lump	(	_m	,	rem_off	-	_m	->	buf	,	rem_len	,	0	)

!	del_lump	(	_m	,	hdr	->	name	.	s	-	_m	->	buf	,	hdr	->	len	,	0	)

!	del_lump	(	_m	,	rem_off	-	_m	->	buf	,	rem_len	,	0	)

!	del_lump	(	_m	,	rem_off	-	_m	->	buf	,	rem_len	,	0	)

!	del_lump	(	_m	,	rem_off	-	_m	->	buf	,	rem_len	,	0	)

!	del_lump	(	_m	,	hdr	->	name	.	s	-	_m	->	buf	,	hdr	->	len	,	0	)

!	del_lump	(	_m	,	hdr	->	name	.	s	-	_m	->	buf	,	hdr	->	len	,	0	)

last_id	==	msg	->	id	&&	last_dir	!=	0

load_tm_api	(	&	tmb	)	==	-	1

reg_hsize	<	1	||	reg_hsize	>	20

!	c_ptr	->	parsed	&&	(	parse_contact	(	c_ptr	)	<	0	)

statuscode	<	400	&&	statuscode	>=	300

p	&&	len	>	0

(	++	i	)	%	reg_hsize

p	&&	len	>	0

(	!	_s	)	||	(	!	_l	)	||	(	*	_l	<	2	)

res	!=	-	1

res	==	-	1

!	_k	||	!	_klen

http_method	<	0	||	http_method	>	1

url_len	-	index	>	0

mod	<	0	&&	cmd	<	0

mi_http_recur_write_tree	(	pointer	,	buf	,	max_page_len	,	tree	->	kids	,	level	+	1	)	<	0

!	number	||	(	strlen	(	number	)	<	3	)

(	(	(	na	->	order	)	<<	16	)	+	na	->	pref	)	>	(	(	(	nb	->	order	)	<<	16	)	+	nb	->	pref	)
(	(	(	na	->	order	)	<<	16	)	+	na	->	pref	)	>	(	(	nb	->	order	)	<<	16	+	nb	->	pref	)
(	(	naptr	->	order	)	<<	16	)	+	naptr	->	pref
(	naptr	->	order	)	<<	16	+	naptr	->	pref
(	(	naptr	->	order	)	<<	16	)	+	naptr	->	pref
(	naptr	->	order	)	<<	16	+	naptr	->	pref
(	sdl	<	0	)	||	(	sdl	>	10	)

(	(	naptr	->	order	)	<<	16	)	+	naptr	->	pref
(	naptr	->	order	)	<<	16	+	naptr	->	pref
(	(	naptr	->	order	)	<<	16	)	+	naptr	->	pref
(	naptr	->	order	)	<<	16	+	naptr	->	pref
i	<	init_i	+	n

i	<	init_i	+	n

ps	->	code	==	481	||	ps	->	code	==	408

msg	->	event	&&	msg	->	event	->	body	.	len	>	0

!	msg	->	event	->	parsed	&&	(	parse_event	(	msg	->	event	)	<	0	)

msg	->	expires	&&	msg	->	expires	->	body	.	len	>	0

!	msg	->	expires	->	parsed	&&	(	parse_expires	(	msg	->	expires	)	<	0	)

msg	->	event	&&	msg	->	event	->	body	.	s	&&	msg	->	event	->	body	.	len	>	0

msg	->	event	&&	msg	->	event	->	body	.	len	>	0

!	msg	->	event	->	parsed	&&	(	parse_event	(	msg	->	event	)	<	0	)

ret	==	-	2

msg	->	expires	&&	msg	->	expires	->	body	.	len	>	0

!	msg	->	expires	->	parsed	&&	(	parse_expires	(	msg	->	expires	)	<	0	)

!	msg	->	from	||	!	msg	->	from	->	body	.	s

load_tm_api	(	&	tmb	)	==	-	1

(	j	%	50	)	==	0

pres_note	&&	strlen	(	pres_note	)	==	0

!	c	||	!	c	->	extra_data

index	==	-	1

(	rtpp_sets	+	1	)	*	sizeof	(	char	*	)
rtpp_sets	+	1	*	sizeof	(	char	*	)
(	len	+	1	)	*	sizeof	(	char	)
len	+	1	*	sizeof	(	char	)
*	p	&&	isspace	(	(	int	)	*	p	)

*	p	&&	!	isspace	(	(	int	)	*	p	)

rtpp_list	!=	0	&&	rtpp_list	->	id_set	!=	my_current_id

!	rtpp_no	||	!	list_version

rtpproxy_tout	!=	-	1

sizeof	(	char	)	*	(	strlen	(	pnode	->	rn_address	)	+	1	)
sizeof	(	char	)	*	strlen	(	pnode	->	rn_address	)	+	1
rval	==	-	1

rval	!=	-	1

rval	!=	-	1

rval	!=	-	1

connect	(	fd	,	(	struct	sockaddr	*	)	&	addr	,	sizeof	(	addr	)	)	<	0

!	(	*	rtpp_set_list	)	||	!	(	*	rtpp_set_list	)	->	rset_first

rtpp_list	!=	0	&&	rtpp_list	->	id_set	!=	id_set

my_version	!=	*	list_version	&&	update_rtpp_proxies	(	)	<	0

node	->	rn_disabled	&&	node	->	rn_recheck_ticks	<=	get_ticks	(	)

!	dlg	||	!	_params

!	dlg	||	!	_params

code	>=	200	&&	code	<	300

dlg_api	.	get_dlg	&&	!	dlg

!	offer	&&	has_sdp

offer	&&	!	has_sdp

!	offer	&&	!	has_sdp

!	t	||	!	p

proxied	!=	0	&&	force	==	0

asymmetric	!=	0	||	real	!=	0

!	cp	&&	!	create

err	>=	7	&&	err	<=	10

(	char	*	)	++	ap	>=	(	(	char	*	)	argv	+	sizeof	(	argv	)	)

port	<=	0	||	port	>	65535

port	!=	0	||	flookup	==	0

commip	&&	c1p	&&	!	c1p_altered

check_content_type	(	msg	)	==	-	1

!	_m	->	contact	->	parsed	&&	parse_contact	(	_m	->	contact	)	<	0

!	(	*	_hdr	)	->	parsed	&&	parse_contact	(	*	_hdr	)	<	0

socket_fd	==	-	1

socket_fd	==	-	1

setsockopt	(	socket_fd	,	SOL_SOCKET	,	SO_REUSEADDR	,	(	void	*	)	&	optval	,	sizeof	(	optval	)	)	==	-	1

bind	(	socket_fd	,	saddr	,	len	)	==	-	1

listen	(	socket_fd	,	10	)	==	-	1

rtpp_lst	->	mode	==	0	&&	!	strcmp	(	rtpp_lst	->	addr	,	s_un	->	sun_path	)

rtpp_lst	->	mode	==	1	&&	memcmp	(	rtpp_lst	->	addr	,	&	s_in	->	sin_addr	.	s_addr	,	4	)	==	0

rtpp_lst	->	mode	==	6	&&	memcmp	(	rtpp_lst	->	addr	,	s_in6	->	sin6_addr	.	s6_addr	,	16	)	==	0

nr_events	&&	i	<	nfds

(	p	<	buffer	+	len	)	&&	IS_DIGIT	(	*	p	)

(	p	<	buffer	+	len	)	&&	!	IS_DIGIT	(	*	p	)
(	p	<	buffer	+	len	)	&&	!	IS_DIGIT	(	*	p	)
!	rtpp_server	||	!	rtpp_server	->	h_addr

!	rtpp_server	||	!	rtpp_server	->	h_addr

(	v1	<	-	1	)	||	(	v1	>	1	)

_msg	->	parsed_uri_ok	==	0	&&	parse_sip_msg_uri	(	_msg	)	<	0

contact	->	registration_expire	&&	now	>	contact	->	registration_expire

contact	->	subscription_expire	&&	now	>	contact	->	subscription_expire

!	contact	->	registration_expire	&&	!	contact	->	subscription_expire	&&	!	contact	->	dialogs

*	(	char	*	)	key	++	<<	ctr

(	ctr	+	1	)	%	sizeof	(	char	*	)
ctr	+	1	%	sizeof	(	char	*	)
!	msg	->	contact	->	parsed	&&	parse_contact	(	msg	->	contact	)	<	0

param	->	code	>=	200	&&	param	->	code	<	300

param	->	code	>=	200	&&	param	->	code	<	300

param	->	code	>=	200	&&	param	->	code	<	300

(	i	%	keepalive_interval	)	!=	iteration

(	iteration	+	1	)	%	keepalive_interval
iteration	+	1	%	keepalive_interval
now	>	rtime	&&	now	>	stime

(	!	(	body	->	method_id	&	(	0x01	<<	i	)	)	)	&&	i	<	32
(	!	body	->	method_id	&	(	0x01	<<	i	)	)	&&	i	<	32
i	==	paylen	-	1

i	==	paylen	-	1

i	<	paylen	-	1

i	>	0	&&	i	==	lastlast

i	<=	(	hlen	-	nlen	)

i	>	(	hlen	-	nlen	)

i	==	paylen	-	1

!	(	jain_ping_config	||	servlet_ping_config	)
!	jain_ping_config	||	servlet_ping_config
(	ta	->	begin	+	ta	->	count	)	>	ta	->	size

string	==	0	||	*	string	==	0

!	pings_lost_s	&&	(	*	(	string	+	1	)	)
!	pings_lost_s	&&	(	*	string	+	1	)
!	ping_timeout_s	&&	(	*	(	string	+	1	)	)
!	ping_timeout_s	&&	(	*	string	+	1	)
!	(	ping_period_s	&&	pings_lost_s	&&	ping_timeout_s	)
!	ping_period_s	&&	pings_lost_s	&&	ping_timeout_s
*	ping_period	<=	0	||	*	pings_lost	<=	0	||	*	ping_timeout	<=	0

jain_ping_period	-	(	(	now	.	tv_sec	-	last_jain	.	tv_sec	)	*	1000	+	(	now	.	tv_usec	-	last_jain	.	tv_usec	)	/	1000	)
jain_ping_period	-	(	now	.	tv_sec	-	last_jain	.	tv_sec	*	1000	+	(	now	.	tv_usec	-	last_jain	.	tv_usec	)	/	1000	)
servlet_ping_period	-	(	(	now	.	tv_sec	-	last_servlet	.	tv_sec	)	*	1000	+	(	now	.	tv_usec	-	last_servlet	.	tv_usec	)	/	1000	)
servlet_ping_period	-	(	now	.	tv_sec	-	last_servlet	.	tv_sec	*	1000	+	(	now	.	tv_usec	-	last_servlet	.	tv_usec	)	/	1000	)
jain_ping_period	&&	(	(	now	.	tv_sec	-	last_jain	.	tv_sec	)	*	1000	+	(	now	.	tv_usec	-	last_jain	.	tv_usec	)	/	1000	)	>=	jain_ping_period
jain_ping_period	&&	(	now	.	tv_sec	-	last_jain	.	tv_sec	*	1000	+	now	.	tv_usec	-	last_jain	.	tv_usec	/	1000	)	>=	jain_ping_period
servlet_ping_period	&&	(	(	now	.	tv_sec	-	last_servlet	.	tv_sec	)	*	1000	+	(	now	.	tv_usec	-	last_servlet	.	tv_usec	)	/	1000	)	>=	servlet_ping_period
servlet_ping_period	&&	(	now	.	tv_sec	-	last_servlet	.	tv_sec	*	1000	+	(	now	.	tv_usec	-	last_servlet	.	tv_usec	)	/	1000	)	>=	servlet_ping_period
(	the_as	->	u	.	as	.	jain_pings	.	end	+	1	)	%	the_as	->	u	.	as	.	jain_pings	.	size
the_as	->	u	.	as	.	jain_pings	.	end	+	1	%	the_as	->	u	.	as	.	jain_pings	.	size
len	==	(	*	entry	)	->	name	.	len	&&	!	memcmp	(	(	*	entry	)	->	name	.	s	,	parameter	,	len	)

ret	==	-	1

ret	==	-	1

pipe	(	c_pipe	)	==	-	1

1	+	i	*	sizeof	(	unsigned	int	)

1	+	i	*	sizeof	(	unsigned	int	)

1	+	i	*	sizeof	(	unsigned	int	)

j	==	paylen	-	1

p	==	start	||	*	p	==	0

p	==	start	||	*	p	==	0

i	==	paylen	-	1

i	==	paylen	-	1

(	i	/	100	)	>	14

(	t2	->	tv_sec	-	t1	->	tv_sec	)	*	1000	+	(	t2	->	tv_usec	-	t1	->	tv_usec	)	/	1000
t2	->	tv_sec	-	t1	->	tv_sec	*	1000	+	(	t2	->	tv_usec	-	t1	->	tv_usec	)	/	1000
p	==	0	||	*	p	==	0

port	==	(	char	*	)	0	||	*	port	==	0

setsockopt	(	stats_fd	,	SOL_SOCKET	,	SO_REUSEADDR	,	(	void	*	)	&	optval	,	sizeof	(	optval	)	)	==	-	1

(	bind	(	stats_fd	,	(	struct	sockaddr	*	)	&	su	,	sizeof	(	struct	sockaddr_in	)	)	)	==	-	1

listen	(	stats_fd	,	10	)	==	-	1

stats_fd	!=	-	1

sock	==	-	1

i	==	-	1

retrn	==	-	1

retrn	==	-	2

k	>	(	STATS_BUF_SIZE	-	j	)

k	>	STATS_BUF_SIZE	-	j

k	>	STATS_BUF_SIZE	-	j

body	&	(	j	<	15	)

hdrstart	-	msg	<	0

(	hdrstart	-	msg	)	>	mlen

hdr	->	len	>	(	1	<<	16	)

parse_via	(	hdr	->	body	.	s	,	hdr	->	body	.	s	+	hdr	->	body	.	len	+	1	,	viabody	)	==	0

parse_cseq	(	hdr	->	name	.	s	,	hdr	->	body	.	s	+	hdr	->	body	.	len	+	1	,	cseqbody	)	==	0

paramstart	==	0	||	paramlen	==	0

j	%	2	==	0

i	<	paylen	-	1

(	(	now	.	tv_sec	-	last	.	tv_sec	)	*	1000	)	+	(	(	now	.	tv_usec	-	last	.	tv_usec	)	/	1000	)
(	now	.	tv_sec	-	last	.	tv_sec	*	1000	)	+	(	(	now	.	tv_usec	-	last	.	tv_usec	)	/	1000	)
(	the_table	->	begin	+	i	)	%	the_table	->	size
the_table	->	begin	+	i	%	the_table	->	size
(	now	.	tv_sec	-	tmp	->	sent	.	tv_sec	)	*	1000	+	(	now	.	tv_usec	-	tmp	->	sent	.	tv_usec	)	/	1000
now	.	tv_sec	-	tmp	->	sent	.	tv_sec	*	1000	+	now	.	tv_usec	-	tmp	->	sent	.	tv_usec	/	1000
(	the_table	->	begin	+	i	)	%	the_table	->	size
the_table	->	begin	+	i	%	the_table	->	size
(	now	.	tv_sec	-	tmp	->	sent	.	tv_sec	)	*	1000	+	(	now	.	tv_usec	-	tmp	->	sent	.	tv_usec	)	/	1000
now	.	tv_sec	-	tmp	->	sent	.	tv_sec	*	1000	+	now	.	tv_usec	-	tmp	->	sent	.	tv_usec	/	1000
(	k	+	1	)	%	the_table	->	size
k	+	1	%	the_table	->	size
!	(	get_from	(	my_msg	)	)	||	!	(	get_from	(	my_msg	)	->	tag_value	.	s	)	||	!	(	get_from	(	my_msg	)	->	tag_value	.	len	)

k	+	VIA_LEN	<	headers_len

!	hf	->	parsed	&&	0	>	parse_rr	(	hf	)

(	len	+	hf	->	len	)	<	headers_len

(	len	+	hf	->	len	)	<	headers_len

!	ev_info	||	!	ev_info	->	who

k	+	3	*	i

(	k	-	u	-	1	)	/	3
k	-	u	-	1	/	3
k	==	j	-	1

k	<	i	+	(	j	*	3	)

k	==	(	i	+	3	*	j	-	3	)

k	<	i	+	(	j	*	3	)

k	<	i	+	(	j	*	3	)

i	+	(	j	*	3	)	+	l	+	3

k	<	i	+	(	j	*	3	)

i	+	(	j	*	3	)	+	l	+	3

j	<	(	as_nr	+	unc_as_nr	+	3	-	1	)

poll_events	==	-	1

(	i	<	as_nr	)	&&	poll_events

k	<	(	as_nr	+	unc_as_nr	)

i	<	unc_as_nr	&&	poll_events

k	<	(	unc_as_nr	-	1	)

k	<	(	unc_as_nr	-	1	)

address	->	af	!=	AF_INET	&&	address	->	af	!=	AF_INET6

i	==	-	1

tries	++	>	MAX_WRITE_TRIES

j	==	-	1

(	wheremax	-	*	idx	)	<	49

len	==	-	2

as	->	name	.	len	==	len	&&	!	memcmp	(	name1	,	as	->	name	.	s	,	len	)

namelen	>	dstlen	||	namelen	==	0

sock	==	-	1

sock	!=	-	1

i	==	paylen	-	1

i	==	paylen	-	1

i	==	paylen	-	1

i	==	paylen	-	1

i	==	paylen	-	1

i	<	paylen	-	1

*	_len	<	(	l	*	2	+	3	)

*	_len	<	(	l	*	2	+	3	)

*	_len	<	(	l	*	2	+	3	)

(	*	at	>=	32	)	&&	(	*	at	<=	126	)

at	+	3	>=	over

at	+	1	>=	over

at	+	1	>=	over

moni_capture_on	&&	!	moni_port_start

(	heph	->	hp_v	!=	1	&&	heph	->	hp_v	!=	2	)	||	hl	!=	heph	->	hp_l

(	unsigned	long	long	)	heptime	->	tv_sec	*	1000000	+	heptime	->	tv_usec

(	unsigned	long	long	)	tvb	.	tv_sec	*	1000000	+	tvb	.	tv_usec

msg	->	pai	&&	(	parse_pai_header	(	msg	)	==	0	)

msg	->	ppi	&&	(	parse_ppi_header	(	msg	)	==	0	)

msg	->	contact	->	parsed	==	0	&&	parse_contact	(	msg	->	contact	)	==	-	1

sock	==	-	1

ip	&&	proto	==	IPPROTO_IPIP

sock	!=	-	1

len	==	-	1

len	<	(	sizeof	(	struct	ip	)	+	sizeof	(	struct	udphdr	)	+	offset	)

(	udph_start	+	udp_len	)	!=	end

(	udph_start	+	udp_len	)	>	end

tmp	<	(	(	double	)	(	prob	)	/	100	)

(	*	param	==	0	)	||	(	param_no	!=	1	&&	param_no	!=	2	)

time_str	==	0	||	*	time_str	==	0

max_limit	<	1	||	max_limit	>	MAXFWD_UPPER_LIMIT

code	<	1	||	code	>	MAXFWD_UPPER_LIMIT

len	==	-	1

modpath	&&	(	strlen	(	modpath	)	>	0	)

j	<	4	&&	i	<	end

c	<<	(	18	-	6	*	j	)

!	dlg	&&	force_dialog

(	msg	->	msg_flags	&	uac_flag	)	==	0
msg	->	msg_flags	&	uac_flag	==	0
(	restore_uri	(	msg	,	0	,	1	/*from*/	)	+	restore_uri	(	msg	,	1	,	0	/*to*/	)	)	!=	-	2

!	t	||	!	t	->	uas	.	request	||	!	p	->	rpl

!	t	||	!	t	->	uas	.	request	||	!	p	->	rpl

!	auth_username_avp	||	!	auth_password_avp	||	!	auth_realm_avp

!	force_dialog	&&	!	uac_rrb	.	append_fromtag

i	<	2	*	n	-	1

buf_len	<	(	total_len	+	num_len	)

pool	&&	(	pool_pid	!=	pid	)

!	id1	||	!	id2

mi_xmlrpc_http_recur_write_tree	(	pointer	,	buf	,	max_page_len	,	tree	->	kids	,	level	+	1	)	<	0

b2bl_hsize	<	1	||	b2bl_hsize	>	20

!	msg	->	to	||	!	msg	->	to	->	body	.	s

!	msg	->	from	||	!	msg	->	from	->	body	.	s

statuscode	>=	200	&&	statuscode	<	300

statuscode	==	481	||	statuscode	==	408

msg	->	first_line	.	u	.	reply	.	statuscode	==	401	&&	msg	->	www_authenticate

msg	->	first_line	.	u	.	reply	.	statuscode	==	407	&&	msg	->	proxy_authenticate

entity_no	!=	0	&&	entity_no	!=	1

stack	->	i	>=	(	AVPSTACKSIZE	-	1	)

(	(	(	na	->	order	)	<<	16	)	+	na	->	pref	)	>	(	(	(	nb	->	order	)	<<	16	)	+	nb	->	pref	)
(	(	na	->	order	)	<<	16	+	na	->	pref	)	>	(	(	(	nb	->	order	)	<<	16	)	+	nb	->	pref	)
next_naptr	&&	(	next_naptr	->	order	==	naptr	->	order	)	&&	IS_D2PNAPTR	(	next_naptr	)
next_naptr	&&	(	next_naptr	->	order	==	naptr	->	order	)	&&	IS_D2PNAPTR	(	next_naptr	)
(	bl_size	+	1	)	*	sizeof	(	*	blacklists	)
bl_size	+	1	*	sizeof	(	*	blacklists	)
lbbl	->	bl	&&	add_list_to_head	(	lbbl	->	bl	,	lbbl_first	,	lbbl_last	,	1	,	0	)	!=	0

*	(	(	char	*	)	*	param	)	==	0

(	code	==	200	)	||	check_options_rplcode	(	code	)

n	<	3	&&	node

(	bit	/	(	8	*	sizeof	(	unsigned	int	)	)	)	+	1

(	(	size	+	BITMAP_UNIT	-	1	)	/	BITMAP_UNIT	)	*	BITMAP_UNIT
(	size	+	BITMAP_UNIT	-	1	/	BITMAP_UNIT	)	*	BITMAP_UNIT
(	size	-	res	->	bitmap_size	)	*	sizeof	(	unsigned	int	)
size	-	res	->	bitmap_size	*	sizeof	(	unsigned	int	)
bit	%	(	(	unsigned	int	)	(	8	*	sizeof	(	unsigned	int	)	)	)

1	<<	(	bit	%	(	8	*	sizeof	(	unsigned	int	)	)	)
1	<<	(	bit	%	8	*	sizeof	(	unsigned	int	)	)
2	+	2	*	sizeof	(	struct	lb_dst	*	)

lb_set_resource_bitmask	(	res	,	data	->	dst_no	)	==	-	1

(	i	<	rl	->	n	)	&&	res

~	(	1	<<	j	)
~	1	<<	j
j	==	8	*	sizeof	(	unsigned	int	)

j	==	8	*	sizeof	(	unsigned	int	)

(	grp	==	-	1	)	||	(	dst	->	group	==	grp	)

(	i	<	rl	->	n	)	&&	res

!	msg	->	from	||	!	msg	->	from	->	body	.	s

!	msg	->	expires	->	parsed	&&	(	parse_expires	(	msg	->	expires	)	<	0	)

load_tm	(	&	tmb	)	==	-	1

!	msg	->	from	||	!	msg	->	from	->	body	.	s

ps	->	rpl	->	expires	&&	msg	->	expires	->	body	.	len	>	0

!	msg	->	expires	->	parsed	&&	(	parse_expires	(	msg	->	expires	)	<	0	)

status	!=	OFFB_STATUS_OK	&&	status	!=	OFFB_STATUS_NO_DIALOG

sign	*	(	(	m	+	h	*	60	)	*	60	)
sign	*	(	m	+	h	*	60	*	60	)
load_sig_api	(	&	xml_sigb	)	==	-	1

force_active	==	0	&&	!	integrated_xcap_server

port	<	0	||	port	>	65535

force_active	==	0	&&	!	integrated_xcap_server

!	t1	&&	!	t2

cell	->	sms	&&	!	(	--	(	cell	->	sms	->	ref	)	)

strlen	(	phone	)	!=	cell	->	sms	->	to	.	len	||	strncmp	(	phone	,	cell	->	sms	->	to	.	s	,	cell	->	sms	->	to	.	len	)

status	>=	0	&&	status	<	32

!	(	status	&	TIOCM_CTS	)
!	status	&	TIOCM_CTS
available	>	MAX_BUF	-	buf_len	-	1

ptr	!=	buf	+	buf_len

max	-	1	<	answer_e	-	answer_s

(	success	==	0	)	&&	(	retries	<	20	)

position	<	len	-	1

7	*	character	+	bit

converted	&	(	1	<<	bit	)

~	(	1	<<	pdubitposition	)
~	1	<<	pdubitposition
2	*	character	+	1

2	*	(	pdubyteposition	+	1	)
2	*	pdubyteposition	+	1
2	*	(	pdubyteposition	+	1	)
2	*	pdubyteposition	+	1
2	*	character	+	1

id	*	10	+	*	(	p	++	)

pdu_len	/	2	-	1

err_code	<	2	&&	retries	<	mdm	->	retry

sms_id	==	-	1

checkmodem	(	mdm	)	==	-	1

pdu	+	(	octetcounter	<<	1	)	+	2
pdu	+	octetcounter	<<	1	+	2
(	c	>>	1	)	&	127

pdu	+	(	octetcounter	<<	1	)	+	2
pdu	+	octetcounter	<<	1	+	2
end	==	position	+	7

!	*	end	||	end	-	beginning	<	4

!	*	end	||	end	-	beginning	<	4

!	out	&&	j	<	10

octet2bin	(	pdu	)	*	2	-	2

ret	==	-	1

n	==	-	1

net_nr	==	-	1

arg_end	-	arg	-	2	==	3

arg_end	-	arg	-	2	==	7

arg_end	-	arg	-	2	==	5

arg_end	-	arg	-	2	==	3

p	==	start	||	*	p	==	0

p	==	start	||	*	p	==	0

p	==	start	||	*	p	==	0

p	==	start	||	*	p	==	0

p	==	start	||	*	p	==	0

mdm_nr	==	-	1

p	==	start	||	*	p	==	0

net_nr	==	-	1

net_nr	==	-	1

si	->	port_no_str	.	len	&&	si	->	port_no	!=	5060

parse_config_lines	(	)	==	-	1

global_init	(	)	==	-	1

k	<	k1	/	2

ret_code	==	-	1

!	(	--	(	sms_messg	->	ref	)	)

p	<	sms	->	ascii	+	sms	->	userdatalength	&&	no_sip_addr_begin	(	*	p	)

p	+	9	>=	sms	->	ascii	+	sms	->	userdatalength

p	<	sms	->	ascii	+	sms	->	userdatalength	&&	is_in_sip_addr	(	*	p	)

p	<	sms	->	ascii	+	sms	->	userdatalength	&&	is_in_sip_addr	(	*	p	)

p	<	sms	->	ascii	+	sms	->	userdatalength	&&	no_sip_addr_begin	(	*	p	)

p	+	9	>=	sms	->	ascii	+	sms	->	userdatalength

res	==	2	&&	old	==	48

openmodem	(	mdm	)	==	-	1

counter	<	net	->	max_sms_per_call	&&	!	empty_pipe

k	<=	used_mem	&&	i	<=	max_mem

!	repl_comp	->	replacement	.	s	||	repl_comp	->	replacement	.	len	==	0

2	*	match_nb	+	1

string_res	!=	0	&&	regexp_res	!=	0

(	string_res	|	regexp_res	)	==	0
string_res	|	regexp_res	==	0
2	*	i	+	1

param_no	!=	1	&&	param_no	!=	2

!	msg	->	to	||	!	msg	->	to	->	body	.	s

!	msg	->	from	||	!	msg	->	from	->	body	.	s

msg	->	expires	&&	msg	->	expires	->	body	.	len	>	0

msg	->	expires	&&	msg	->	expires	->	body	.	len	>	0

ticks	%	(	ms_check_time	*	ms_clean_period	)	<	ms_check_time
ticks	%	ms_check_time	*	ms_clean_period	<	ms_check_time
!	src	||	!	dst	||	dlen	<=	0

slen	==	-	1

j	+	2	>=	dlen

j	+	1	>=	dlen

!	src	||	len	<=	0

(	p	<	end	)	&&	(	f	!=	flag	)

param_no	!=	1	&&	param_no	!=	2

force_single_dialog	&&	(	j	!=	1	)

version_len	>=	MAX_INT_LEN	+	2

sign	*	(	(	m	+	h	*	60	)	*	60	)
sign	*	(	m	+	h	*	60	*	60	)
!	(	0	<	port1	&&	port1	<	65536	)
!	0	<	port1	&&	port1	<	65536
!	(	0	<	port2	&&	port2	<	65536	)
!	0	<	port2	&&	port2	<	65536
-	5	<=	rc	&&	rc	<=	-	2

rc	==	-	6

start	<	pmax	&&	isspace	(	(	int	)	*	start	)
<	pmax	&&	isspace	(	(	int	)	*	start	start	<	pmax	&&	isspace	(	(	int	)	*	start	)
!	isspace	(	(	int	)	*	p	)
isspace	(	(	int	)	*	p	!	isspace	(	(	int	)	*	p	)
p	!=	pmax	&&	isspace	(	(	int	)	*	p	)
!=	pmax	&&	isspace	(	(	int	)	*	p	p	!=	pmax	&&	isspace	(	(	int	)	*	p	)
!	isspace	(	(	int	)	*	p	)
isspace	(	(	int	)	*	p	!	isspace	(	(	int	)	*	p	)
start	+	1	!=	p

p	!=	pmax	&&	isspace	(	(	int	)	*	p	)
!=	pmax	&&	isspace	(	(	int	)	*	p	p	!=	pmax	&&	isspace	(	(	int	)	*	p	)
ret	==	-	1

(	mi_fifo_uid	!=	-	1	)	||	(	mi_fifo_gid	!=	-	1	)

fcntl	(	mi_fifo_read	,	F_SETFL	,	opt	&	(	~	O_NONBLOCK	)	)	==	-	1

(	lst	.	st_dev	!=	fst	.	st_dev	)	||	(	lst	.	st_ino	!=	fst	.	st_ino	)

!	pipe_name	||	*	pipe_name	==	0

fifofd	==	-	1

(	errno	==	EINTR	)	||	(	errno	==	EAGAIN	)
(	errno	==	EINTR	)	||	errno	==	EAGAIN
mi_rpl	!=	0	||	done

*	(	file_sep	+	1	)	==	0
*	file_sep	+	1	==	0
n	<	0	&&	errno	!=	ENOENT

!	mi_fifo_reply_dir	||	*	mi_fifo_reply_dir	==	0

n	<	0	&&	errno	!=	ENOENT

p	+	node	->	name	.	len	+	3	>	end

p	+	node	->	value	.	len	>	end

p	+	1	>	end

*	_len	<	(	l	*	2	+	3	)

*	_len	<	(	l	*	2	+	3	)

*	_len	<	(	l	*	2	+	3	)

url_len	-	index	==	0

port_no	<	1024	||	port_no	>	MAX_NB_PORT

n	<	0	&&	errno	!=	ENOENT

n	<	0	&&	errno	!=	ENOENT

start	<	pmax	&&	isspace	(	(	int	)	*	start	)
<	pmax	&&	isspace	(	(	int	)	*	start	start	<	pmax	&&	isspace	(	(	int	)	*	start	)
!	isspace	(	(	int	)	*	p	)
isspace	(	(	int	)	*	p	!	isspace	(	(	int	)	*	p	)
p	!=	(	pmax	-	1	)

p	==	(	pmax	-	1	)

p	!=	pmax	&&	isspace	(	(	int	)	*	p	)
!=	pmax	&&	isspace	(	(	int	)	*	p	p	!=	pmax	&&	isspace	(	(	int	)	*	p	)
!	isspace	(	(	int	)	*	p	)
isspace	(	(	int	)	*	p	!	isspace	(	(	int	)	*	p	)
start	+	1	!=	p

p	!=	pmax	&&	isspace	(	(	int	)	*	p	)
!=	pmax	&&	isspace	(	(	int	)	*	p	p	!=	pmax	&&	isspace	(	(	int	)	*	p	)
p	==	pmax	&&	!	newline_found

(	uid	!=	-	1	)	||	(	gid	!=	-	1	)

flags	==	-	1

mi_rpl	!=	0	||	done

ret	==	-	1

(	errno	==	EINTR	)	||	(	errno	==	EAGAIN	)	||	(	errno	==	EWOULDBLOCK	)	||	(	errno	==	ECONNREFUSED	)
errno	==	EINTR	||	errno	==	EAGAIN	||	errno	==	EWOULDBLOCK	||	errno	==	ECONNREFUSED
p	+	node	->	name	.	len	+	3	>	end

p	+	node	->	value	.	len	>	end

p	+	1	>	end

rd_consistency_level	<	1	||	rd_consistency_level	>	8

wr_consistency_level	<	1	||	wr_consistency_level	>	8

(	!	msg	->	event	)	||	(	msg	->	event	->	body	.	len	<=	0	)

!	msg	->	from	||	!	msg	->	from	->	body	.	s

expires	>	-	1

load_tm_api	(	&	tmb	)	==	-	1

xcap_port	<	0	||	xcap_port	>	65535

msg	->	event	&&	msg	->	event	->	body	.	len	>	0

!	msg	->	event	->	parsed	&&	(	parse_event	(	msg	->	event	)	<	0	)

!	p	||	p	==	host

!	host	||	len	<=	0

sock	==	-	1

flags	==	-	1

fcntl	(	sock	,	F_SETFL	,	flags	|	O_NONBLOCK	)	==	-	1

sockets	.	unix_sock	==	-	1

sockets	.	udp_sock	==	-	1

param_no	==	1	||	param_no	==	2

code	>=	300	&&	code	<	400

ret	==	-	1

(	result	==	-	1	)	&&	(	msg	->	parsed_uri	.	params	.	len	>	0	)

result	==	-	1

(	_osp_work_mode	<	0	)	||	(	_osp_work_mode	>	1	)

(	_osp_service_type	<	0	)	||	(	_osp_service_type	>	1	)

_osp_report_nid	<	0	||	_osp_report_nid	>	3

_osp_token_format	<	0	||	_osp_token_format	>	2

(	_osp_dnid_location	<	0	)	||	(	_osp_dnid_location	>	2	)

!	(	_osp_dnid_param	&&	*	_osp_dnid_param	)
!	_osp_dnid_param	&&	*	_osp_dnid_param
(	_osp_work_mode	==	1	)	&&	_osp_srcdev_avp	&&	*	_osp_srcdev_avp

myint	>=	8	*	sizeof	(	*	gflags	)

(	(	unsigned	long	)	8	*	sizeof	(	*	gflags	)	)	-	1

(	(	*	gflags	)	&	flag	)	==	flag
(	*	gflags	)	&	flag	==	flag
connect	(	sockfd	,	(	const	struct	sockaddr	*	)	&	serv_addr	,	sizeof	(	serv_addr	)	)	<	0

n	==	-	1	&&	errno	!=	EINTR	&&	errno	!=	EAGAIN

ptr	<	source	+	msg_len

ptr	+	AVP_HDR_SIZE	(	0x80	)	>	source	+	msg_len

source	+	msg_len	<	ptr	+	avp_data_len

res	==	-	1

msg	->	parsed_uri_ok	==	0	&&	parse_sip_msg_uri	(	msg	)	<	0

ret	==	-	1

data	==	0	||	length	==	0

!	node	->	pattern	||	!	pattern

(	node	->	port	==	0	||	node	->	port	==	port	)	&&	ip_addr_cmp	(	ip	,	node	->	ip	)
node	->	port	==	0	||	node	->	port	==	port	&&	ip_addr_cmp	(	ip	,	node	->	ip	)
(	0	<	colon	)	&&	(	colon	+	1	<	i	)

(	!	(	msg	->	from	)	->	parsed	)	&&	(	parse_from_header	(	msg	)	<	0	)

idx	==	-	1

(	!	(	msg	->	from	)	->	parsed	)	&&	(	parse_from_header	(	msg	)	<	0	)

idx	==	-	1

*	param	&&	strlen	(	(	char	*	)	*	param	)

*	param	&&	strlen	(	(	char	*	)	*	param	)

*	param	&&	strlen	(	(	char	*	)	*	param	)

*	param	&&	strlen	(	(	char	*	)	*	param	)

reload_address_table	(	)	==	-	1

group	==	-	1

ret	<	0	||	ret	>	MAX_HOSTPORT_SIZE

index	==	-	1

ret	==	-	1

del_lump	(	_m	,	h	->	name	.	s	-	_m	->	buf	,	len	,	0	)	==	0

32	+	(	int	)	(	95.0	*	rand	(	)	/	(	RAND_MAX	+	1.0	)	)
32	+	(	int	)	(	95.0	*	rand	(	)	/	RAND_MAX	+	1.0	)
(	nonce_expire	+	1	)	*	sizeof	(	int	)
nonce_expire	+	1	*	sizeof	(	int	)
(	nonce_expire	+	1	)	*	sizeof	(	int	)
nonce_expire	+	1	*	sizeof	(	int	)
rpid_avp_name	==	-	1

rpid_avp_name	==	-	1

rpid_avp_name	==	-	1

i	*	2	+	1

i	*	2	+	1

res	==	-	1

index	==	-	1

i	>	size	/	4

!	_n	||	!	_l

limit	<=	0	||	limit	>=	100

!	rl_param	||	!	rl_param	->	node	||	!	rl_param	->	root

(	++	rl_param	->	counter	%	50	)	==	0

1.0	-	(	(	double	)	d_idle	)	/	(	double	)	d_total

int_err	<	0	||	err	<	0

(	*	pid_kp	)	*	err	+	(	*	pid_ki	)	*	int_err	+	(	*	pid_kd	)	*	dif_err

n	<	8	*	sizeof	(	unsigned	int	)

!	node	->	value	.	s	||	!	node	->	value	.	len	||	node	->	value	.	len	>=	5

!	node	->	value	.	s	||	!	node	->	value	.	len	||	node	->	value	.	len	>=	5

!	node	->	value	.	s	||	!	node	->	value	.	len	||	node	->	value	.	len	>=	5

!	msg	->	from	||	!	msg	->	from	->	body	.	s

i	<	n	-	1

i	<	n	-	1

i	<	n	-	1

cur_line	==	-	1

col_count	==	0	||	line_count	==	0

delim_count	!=	(	line_count	+	1	)	*	col_count
delim_count	!=	line_count	+	1	*	col_count
cur_line	==	-	1

db_op	==	HTTPDB_QUERY	||	db_op	==	HTTPDB_CUSTOM

started	&&	db_op	!=	HTTPDB_QUERY

db_op	!=	HTTPDB_QUERY	&&	db_op	!=	HTTPDB_CUSTOM

db_op	==	HTTPDB_QUERY	||	db_op	==	HTTPDB_CUSTOM

1	<<	(	b	&	0x07	)
1	<<	b	&	0x07
kid	&&	byte_pos	<	ip_len

is_list_empty	(	timer	)	||	(	ll2ipnode	(	timer	->	next	)	->	expires	>	ticks	)

m	!=	1	&&	m	!=	2

m	!=	1	&&	m	!=	2

s	!=	1	&&	s	!=	2

x	&&	(	x	>=	1.0e6	||	x	<	1.0e-5	)
x	&&	x	>=	1.0e6	||	x	<	1.0e-5
DB_STR	==	0	&&	DB_DATETIME	==	1

DB_STR	==	0	&&	DB_DATETIME	==	1

!	p	||	p	==	uri

!	p	||	p	==	uri

!	*	++	p

*	req	&&	isspace	(	(	unsigned	char	)	*	req	)
req	&&	isspace	(	(	unsigned	char	)	*	req	*	req	&&	isspace	(	(	unsigned	char	)	*	req	)
!	*	p	||	!	isspace	(	(	unsigned	char	)	*	p	)
*	p	||	!	isspace	(	(	unsigned	char	)	*	p	!	*	p	||	!	isspace	(	(	unsigned	char	)	*	p	)
optind	==	argc	-	1

opt	==	-	2

sock	==	-	1

mkstemp	(	name	)	==	-	1

unlink	(	name	)	==	-	1

len	==	-	1

unlink	(	name	)	==	-	1

unlink	(	name	)	==	-	1

sock	==	-	1

sock	==	-	1

(	max	-	min	)	>=	0

i	<	len	&&	!	done

abs	(	cr	-	lf	)	!=	1

len	==	-	1

len	==	-	1

sock	==	-	1

sy	==	y	+	6

checkSum	==	-	1

dt	>	(	30	*	60	)

reader_nb	<	0	||	reader_nb	>=	nbReaders

reader_nb	<	0	||	reader_nb	>=	nbReaders

rv	<	0	&&	errno	==	EINTR

rv	<	0	&&	errno	==	EINTR

blen	<	(	strlen	(	lbuf	)	+	1	)

num	--	==	0

ret	<	0	&&	errno	==	EINTR

ret	<	0	&&	errno	==	EINTR

ret	<	0	&&	errno	==	EINTR

ret	>	0	&&	sent	<	length

ret	<	0	&&	(	errno	==	EINTR	||	errno	==	EAGAIN	)
ret	<	0	&&	errno	==	EINTR	||	errno	==	EAGAIN
sk	==	-	1

s	==	-	1

(	strlen	(	name	)	+	1	)	>	sizeof	(	a	.	un	.	sun_path	)

s	==	-	1

newS	!=	-	1

s	==	-	1

(	strlen	(	name	)	+	1	)	>	sizeof	(	a	.	un	.	sun_path	)

s	==	-	1

(	len	+	ret	)	>	*	datalen

~	(	ECHO	|	ICANON	|	IEXTEN	|	ISIG	)
~	ECHO	|	ICANON	|	IEXTEN	|	ISIG
~	(	BRKINT	|	ICRNL	|	INPCK	|	ISTRIP	|	IXON	)
~	BRKINT	|	ICRNL	|	INPCK	|	ISTRIP	|	IXON
~	(	CSIZE	|	PARENB	)
~	CSIZE	|	PARENB
(	offset	>>	7	)	&	0x0e

(	command	*	8	)	+	0x40

(	(	command	&	0x07	)	*	8	)	+	0x44
(	command	&	0x07	*	8	)	+	0x44
len	+	2	>	*	lenr

(	command	*	8	)	+	0x30

(	(	command	&	0x07	)	*	8	)	+	0x34
(	command	&	0x07	*	8	)	+	0x34
len	+	2	>	*	lenr

len	+	2	>	*	lenr

len	+	2	>	*	lenr

len	+	2	>	*	lenr

(	len	&	7	)	!=	0
len	&	7	!=	0
--	Rest	==	0

(	addr	&	(	Offset	^	0xff	)	)	==	addr
(	addr	&	Offset	^	0xff	)	==	addr
len	+	2	>	*	lenr

len	+	2	>	*	lenr

(	addr	&	(	Offset	^	0xff	)	)	==	addr
(	addr	&	Offset	^	0xff	)	==	addr
bytesWritten	==	-	ENODEV

buf_len	>=	len	&&	(	(	*	ptr	)	&	0x80	)

!	t1	&&	(	(	*	ptr	)	&	0x0f	)	!=	0
!	t1	&&	(	*	ptr	)	&	0x0f	!=	0
buf_len	!=	len	+	len1

*	ptr	!=	0	&&	!	warm

1	<<	(	Dx	&	0x0f	)
1	<<	Dx	&	0x0f
(	Dx	&	0x0f	)	>	1
Dx	&	0x0f	>	1
(	Dx	&	0x0f	)	!=	1	&&	(	protocol	!=	1	||	(	Dx	&	0x0e	)	!=	0x0e	)
Dx	&	0x0f	!=	1	&&	protocol	!=	1	||	Dx	&	0x0e	!=	0x0e
1	<<	(	Dx	&	0x0f	)
1	<<	Dx	&	0x0f
(	Dx	&	0x0f	)	==	1
Dx	&	0x0f	==	1
(	TB3	&	0x0f	)	>	0x05
TB3	&	0x0f	>	0x05
(	1	<<	(	TB3	&	0x0f	)	)	<=	TC1	+	1	&&	TC1	!=	0xff
(	1	<<	TB3	&	0x0f	)	<=	TC1	+	1	&&	TC1	!=	0xff
*	ptr	++	!=	0

error	==	2	||	(	error	==	1	&&	warm	)

warm	==	1	&&	error	==	1

(	TA1	&	0x0f	)	==	0x06
TA1	&	0x0f	==	0x06
TA1	!=	0x96	||	(	protocol	&	1	)	||	TC1	==	0xff

(	TA1	&	0xf0	)	|	0x05

specific	==	0	&&	hasTA1

tot_size	+	2	>	*	lenr

++	error	>	2

++	error	>	2

++	error	>	2

++	error	>	2

++	error	>	2

++	error	>	2

++	error	>	2

*	dad	==	1	&&	*	sad	==	2

lenc	!=	4	&&	lenc	!=	5

atr_len	+	2	>	*	lenr

hist_len	+	2	>	*	lenr

atr_len	+	2	>	*	lenr

hist_len	+	2	>	*	lenr

atr_len	+	2	>	*	lenr

hist_len	+	2	>	*	lenr

(	key	!=	10	&&	key	!=	11	)	||	charlen	==	1

*	lenr	<	i	+	2

PinLength	/	2	+	(	PinLength	&	1	)
PinLength	/	2	+	PinLength	&	1
(	taglen	-	7	-	PinPosition	)	*	2
taglen	-	7	-	PinPosition	*	2
PinLength	/	2	+	(	PinLength	&	1	)	+	PinPosition
PinLength	/	2	+	PinLength	&	1	+	PinPosition
PinLength	<	4	||	PinLength	>	12

PinLength	/	2	+	(	PinLength	&	1	)
PinLength	/	2	+	PinLength	&	1
5	+	PinLength	*	2

(	taglen	-	8	-	PinPositionNew	)	*	2
taglen	-	8	-	PinPositionNew	*	2
PinLength	/	2	+	(	PinLength	&	1	)	+	PinPositionOld
PinLength	/	2	+	PinLength	&	1	+	PinPositionOld
PinLength	/	2	+	(	PinLength	&	1	)	+	PinPositionNew
PinLength	/	2	+	PinLength	&	1	+	PinPositionNew
PinPositionNew	>	240	||	PinPositionOld	>	240

PinLength	<	4	||	PinLength	>	12

(	*	tag44	&	0xf0	)	==	0x90
*	tag44	&	0xf0	==	0x90
*	dad	==	0	&&	*	sad	==	2

(	ret	!=	CT_API_RV_OK	)	||	(	sad	!=	CT_API_AD_CT	)

lenr	==	24	+	2

lenr	==	25	+	2

(	ret	!=	CT_API_RV_OK	)	||	(	sad	!=	CT_API_AD_CT	)

lenr	==	24	+	2

lenr	==	25	+	2

idx	+	5	>=	*	pLen

idx	+	3	>=	*	pLen

idx	+	apduLength	+	2	>=	*	pLen

idx	+	4	>=	*	pLen

idx	+	5	>=	*	pLen

nMktPinPositionStart	==	0	||	nMktPinPositionStart	==	1

nMktPinBlockSizeInBytes	!=	0	&&	nMktPinBlockSizeInBytes	!=	6	&&	nMktPinBlockSizeInBytes	!=	7

idx	+	3	>=	*	pLen

idx	+	apduLength	+	2	>=	*	pLen

idx	+	4	>=	*	pLen

str_return_size	<	(	strtmplen	+	1	)

(	ac	-	i	+	1	)	*	sizeof	(	struct	in_addr	)
ac	-	i	+	1	*	sizeof	(	struct	in_addr	)
!	child_died	&&	!	killed	&&	(	num	==	0	||	seq	<	num	)
!	child_died	&&	!	killed	&&	num	==	0	||	seq	<	num
n	<	0	&&	errno	==	ENOBUFS

n	<	0	&&	errno	==	EINTR

len	<	hl	+	ICMP_MINLEN

icp	->	icmp_type	==	ICMP_ECHOREPLY	&&	icp	->	icmp_id	==	htons	(	pid	&	0xFFFF	)

len	<	hl	+	8	+	ohl	+	ICMP_MINLEN

oldicp	->	icmp_type	==	ICMP_ECHO	&&	oldicp	->	icmp_id	==	htons	(	pid	&	0xFFFF	)

(	sum	>>	16	)	+	(	sum	&	0xffff	)
sum	>>	16	+	(	sum	&	0xffff	)
sec	*	1000	+	(	usec	/	1000	)

*	ptr	&&	!	isspace	(	*	ptr	)

sa	->	name	&&	(	strcmp	(	name	,	sa	->	name	)	!=	0	)	&&	(	strcmp	(	alias	,	sa	->	name	)	!=	0	)

--	refcount	==	0

strcmp	(	name	,	dev	->	dev_name	)	==	0	||	strcmp	(	name	,	dev	->	alias	)	==	0

!	st	->	attr	||	!	st	->	val

i	+	1	<	argc

i	+	1	<	argc

i	+	1	<	argc

i	+	1	<	argc

i	+	1	<	argc

i	+	1	<	argc

(	cport	>=	0	)	||	(	cvlan	>=	0	)

i	+	1	<	argc

cport	>	-	1	&&	cvlan	>	-	1

cmd	==	CMD_GET	||	cmd	==	CMD_SET

cvlan	>	-	1

cport	>=	0	||	cvlan	>=	0

(	af	==	AF_INET	&&	*	mask	>	32	)	||	(	af	==	AF_INET6	&&	*	mask	>	128	)

(	unsigned	char	*	)	(	&	v6	.	s6_addr	)	+	(	v6it	>>	3	)
(	unsigned	char	*	)	(	&	v6	.	s6_addr	)	+	v6it	>>	3
(	unsigned	char	*	)	(	&	v4	.	s_addr	)	+	(	v4it	>>	3	)
(	unsigned	char	*	)	(	&	v4	.	s_addr	)	+	v4it	>>	3
128	>>	(	v6it	&	0x07	)
128	>>	v6it	&	0x07
128	>>	(	v4it	&	0x07	)
128	>>	v4it	&	0x07
(	unsigned	char	*	)	(	&	v6	.	s6_addr	)	+	(	v6it	>>	2	)
(	unsigned	char	*	)	(	&	v6	.	s6_addr	)	+	v6it	>>	2
128	>>	(	v6it	&	0x07	)
128	>>	v6it	&	0x07
(	word	<<	shift	)	|	(	word	>>	(	32	-	shift	)	)

(	val	>>	bits	)	|	(	val	<<	(	32	-	bits	)	)

--	r	==	0

--	r	==	0

1	+	(	(	ivofs_vec	>>	2	*	ivofs_idx	)	&	0x3	)
1	+	(	ivofs_vec	>>	2	*	ivofs_idx	)	&	0x3
(	ivofs_idx	+	1	)	%	16
ivofs_idx	+	1	%	16
(	EAD_ENC_PAD	-	(	len	%	EAD_ENC_PAD	)	)	%	EAD_ENC_PAD
EAD_ENC_PAD	-	(	len	%	EAD_ENC_PAD	)	%	EAD_ENC_PAD
!	len	||	(	len	%	EAD_ENC_PAD	>	0	)

tn	.	tv_sec	<	to	.	tv_sec	+	timeout

i	+	63	<	inputLen

(	i	&	0x0f	)	==	0
i	&	0x0f	==	0
--	n	>=	0

ep	<	(	sp	+	8	)

(	val	>>	bits	)	|	(	val	<<	(	32	-	bits	)	)

--	r	==	0

--	r	==	0

i	+	63	<	inputLen

(	i	&	0x0f	)	==	0
i	&	0x0f	==	0
--	n	>=	0

ep	<	(	sp	+	8	)

enable	==	!	!	(	sockflags	&	O_NONBLOCK	)
enable	==	!	!	sockflags	&	O_NONBLOCK
(	timeout	%	1000	)	*	1000

(	nid	!=	0xffff	)	&&	(	ntohs	(	msg	->	nid	)	!=	nid	)

(	max	>	0	)	&&	(	res	>=	max	)

bind	(	s	,	(	struct	sockaddr	*	)	&	local	,	sizeof	(	local	)	)	<	0

1	<<	(	window	-	1	)

wstart	-	i	<	0

fsize	<	MIN_BASIS_BITS	||	fsize	>	BASIS_BITS

(	j	+	len	)	>	63

i	+	63	<	len

j	==	-	1

1	<<	(	window	-	1	)

wstart	-	i	<	0

(	bits	+	7	)	/	8
bits	+	7	/	8
(	bits	-	1	)	%	8
bits	-	1	%	8
3	<<	(	bit	-	1	)

~	(	mask	<<	1	)
~	mask	<<	1
~	(	mask	<<	1	)
~	mask	<<	1
(	al	==	0	)	||	(	nl	==	0	)

st	.	st_ino	==	pinode	&&	st	.	st_dev	==	pdev

(	count	>>	3	)	^	(	count	>>	6	)	^	ocount

(	buffer	<<	3	)	^	count

i	<	loop	-	1

count	<	max	-	1

index	<=	0	||	index	>	t_getprecount	(	)

--	j	>	0

(	al	==	0	)	||	(	bl	==	0	)

--	nb	<=	0

--	nb	<=	0

--	nb	<=	0

--	nb	<=	0

i	++	>=	max

i	++	>=	max

i	++	>=	max

i	++	>=	max

--	num	==	0

--	num	==	0

--	num	==	0

--	num	==	0

--	num	==	0

--	num	==	0

--	num	==	0

--	num	==	0

--	n	==	0

--	n	==	0

--	n	==	0

--	n	==	0

--	count	==	0

--	n	<=	0

--	n	<=	0

--	n	<=	0

--	n	<=	0

n	--	>	0

m	--	==	0

i	--	>	0

arg	&&	arglen	>	0

rssi	==	0	||	rssi_count	==	0

-	(	rssi	/	rssi_count	)
-	rssi	/	rssi_count
id	->	vendor_id	>	0	&&	id	->	device_id	>	0

c	->	auth_algs	&&	!	c	->	wpa_version

c	->	pair_ciphers	&	(	1	<<	i	)

c	->	group_ciphers	&	(	1	<<	i	)

c	->	auth_suites	&	(	1	<<	i	)

c	->	auth_algs	&	(	1	<<	i	)

rate	==	0	||	rate_count	==	0

rssi	==	0	||	rssi_count	==	0

-	(	rssi	/	rssi_count	)
-	rssi	/	rssi_count
quality	==	0	||	quality_count	==	0

c	->	wpa_version	||	(	c	->	auth_algs	&&	c	->	pair_ciphers	)

ret	==	-	1

read	(	fd	,	buffer	,	sizeof	(	buffer	)	-	1	)	>	0

(	freq	-	2407	)	/	5
freq	-	2407	/	5
freq	>=	4910	&&	freq	<=	4980

(	freq	-	4000	)	/	5
freq	-	4000	/	5
(	freq	-	5000	)	/	5
freq	-	5000	/	5
(	channel	*	5	)	+	2407

channel	>=	182	&&	channel	<=	196

(	channel	*	5	)	+	4000

(	channel	*	5	)	+	5000

matched_if	&&	!	strcmp	(	lkey	,	key	)

numtry	++	<	5

phyidx	>	-	1

(	ifidx	<	0	)	||	(	cifidx	<	ifidx	)

signal	<	-	110

signal	>	-	40

sl	->	e	->	crypto	.	enabled	&&	!	sl	->	e	->	crypto	.	wpa_version

rssi	<	-	110

rssi	>	-	40

(	pointer	+	event_len	)	>	stream	->	end

(	token_len	!=	extra_len	)	&&	(	extra_len	>=	4	)

(	alt_token_len	+	8	)	==	extra_len

(	pointer	+	event_len	)	<=	(	stream	->	current	+	iwe	->	len	)

ioctl_socket	==	-	1

ioctl_socket	>	-	1

len	/	2	-	0x800

(	rate	%	1000	)	/	100

c	->	auth_algs	&&	!	c	->	wpa_version

20	+	r	->	is_40mhz	*	20

argc	>	1	&&	argc	<	3

(	q	+	rule	->	boffset	)	*	rule	->	bfactor
q	+	rule	->	boffset	*	rule	->	bfactor
q	>=	rule	->	minq	&&	q	<=	rule	->	maxq

argc	<	9	||	(	(	argc	-	4	)	%	5	!=	0	)
argc	<	9	||	(	argc	-	4	%	5	!=	0	)
q	<	q0	-	s	||	q	>	q0	+	s

q	==	-	1	&&	q0	==	-	1

(	t	>>	16	)	&	0xff

(	t	>>	8	)	&	0xff

on	&&	!	(	ifr	.	ifr_flags	&	IFF_PROMISC	)
on	&&	!	ifr	.	ifr_flags	&	IFF_PROMISC
!	on	&&	(	ifr	.	ifr_flags	&	IFF_PROMISC	)

!	sec	||	!	usec

num_item	*	(	len_item	+	sizeof	(	struct	ringbuf_entry	)	)
num_item	*	len_item	+	sizeof	(	struct	ringbuf_entry	)
r	->	buf	+	(	r	->	fill	++	*	r	->	slen	)

r	->	buf	+	(	(	(	r	->	fill	+	i	)	%	r	->	len	)	*	r	->	slen	)
r	->	buf	+	(	(	r	->	fill	+	i	%	r	->	len	)	*	r	->	slen	)
ringsz	<	(	3	*	pktcap	)

pktcap	<=	(	sizeof	(	radiotap_hdr_t	)	+	LEN_IEEE802_11_HDR	)

!	streaming	&&	!	output

bind	(	capture_sock	,	(	struct	sockaddr	*	)	&	local	,	sizeof	(	local	)	)	==	-	1

pktlen	<=	sizeof	(	radiotap_hdr_t	)	||	le16	(	rhdr	->	it_len	)	>=	pktlen

(	filter_data	&&	(	frametype	&	FRAMETYPE_MASK	)	==	FRAMETYPE_DATA	)	||	(	filter_beacon	&&	(	frametype	&	FRAMETYPE_MASK	)	==	FRAMETYPE_BEACON	)
(	filter_data	&&	frametype	&	FRAMETYPE_MASK	==	FRAMETYPE_DATA	)	||	(	filter_beacon	&&	(	frametype	&	FRAMETYPE_MASK	)	==	FRAMETYPE_BEACON	)
!	addr	||	(	strlen	(	s	)	>=	sizeof	(	addr	->	buf	.	v4	)	)

(	p	==	r	)	||	(	*	r	!=	0	)	||	(	addr	->	prefix	>	32	)

p	==	addr	->	buf	.	v4	+	1

(	uint32_t	)	(	x	+	y	)	<	x

(	uint32_t	)	(	x	-	y	)	>	x

~	(	(	1	<<	(	32	-	n	->	prefix	)	)	-	1	)
~	1	<<	(	32	-	n	->	prefix	)	-	1
(	1	<<	(	32	-	n	->	prefix	)	)	-	1
1	<<	(	32	-	n	->	prefix	)	-	1
a	->	addr	.	v4	.	s_addr	&	htonl	(	~	(	(	1	<<	(	32	-	a	->	prefix	)	)	-	1	)	)
a	->	addr	.	v4	.	s_addr	&	htonl	(	~	(	1	<<	(	32	-	a	->	prefix	)	-	1	)	)
b	->	addr	.	v4	.	s_addr	&	htonl	(	~	(	(	1	<<	(	32	-	a	->	prefix	)	)	-	1	)	)
b	->	addr	.	v4	.	s_addr	&	htonl	(	~	1	<<	(	32	-	a	->	prefix	)	-	1	)
(	b	->	prefix	>=	a	->	prefix	)	&&	(	net1	==	net2	)

~	(	(	1	<<	(	32	-	n	->	prefix	)	)	-	1	)
~	1	<<	(	32	-	n	->	prefix	)	-	1
(	(	x	>=	0x0A000000	)	&&	(	x	<=	0x0AFFFFFF	)	)	||	(	(	x	>=	0xAC100000	)	&&	(	x	<=	0xAC1FFFFF	)	)	||	(	(	x	>=	0xC0A80000	)	&&	(	x	<=	0xC0A8FFFF	)	)

(	x	>=	0xA9FE0000	)	&&	(	x	<=	0xA9FEFFFF	)

1	<<	(	32	-	b	->	prefix	)

1	<<	(	32	-	b	->	prefix	)

(	x	>>	16	)	&	0xFF

(	x	>>	8	)	&	0xFF

!	addr	||	(	strlen	(	s	)	>=	sizeof	(	addr	->	buf	.	v6	)	)

(	p	==	r	)	||	(	*	r	!=	0	)	||	(	addr	->	prefix	>	128	)

p	==	addr	->	buf	.	v4	+	1

idx	--	>	0

idx	--	>	0

(	b	->	prefix	-	1	)	/	8
b	->	prefix	-	1	/	8
idx	--	>	0

(	b	->	prefix	-	1	)	/	8
b	->	prefix	-	1	/	8
idx	--	>	0

i	<	(	128	-	n	->	prefix	)	/	8
i	<	128	-	n	->	prefix	/	8
(	128	-	n	->	prefix	)	%	8
128	-	n	->	prefix	%	8
~	(	(	1	<<	(	(	128	-	n	->	prefix	)	%	8	)	)	-	1	)
~	(	1	<<	(	(	128	-	n	->	prefix	)	%	8	)	-	1	)
(	128	-	n	->	prefix	)	/	8
128	-	n	->	prefix	/	8
~	(	(	1	<<	(	(	128	-	n	->	prefix	)	%	8	)	)	-	1	)
~	1	<<	(	128	-	n	->	prefix	%	8	)	-	1
(	b	->	prefix	>=	n	->	prefix	)	&&	(	net1	==	net2	)	&&	(	(	i	==	15	)	||	!	memcmp	(	&	x	->	s6_addr	,	&	y	->	s6_addr	,	15	-	i	)	)
(	b	->	prefix	>=	n	->	prefix	)	&&	(	net1	==	net2	)	&&	(	i	==	15	)	||	!	memcmp	(	&	x	->	s6_addr	,	&	y	->	s6_addr	,	15	-	i	)
(	r	>	s	)	&&	(	*	r	==	0	)

1	<<	(	b	->	prefix	-	a	->	prefix	)

!	dev1	||	!	dev2

(	ep	->	speed_hi	<<	16	)	|	ep	->	speed

(	ETHTOOL_RX_FLOW_SPEC_RING_VF	&	ring_cookie	)	>>	ETHTOOL_RX_FLOW_SPEC_RING_VF_OFF
ETHTOOL_RX_FLOW_SPEC_RING_VF	&	ring_cookie	>>	ETHTOOL_RX_FLOW_SPEC_RING_VF_OFF
(	page	<<	8	)	|	REG_MII_PAGE_ENABLE

(	reg	<<	8	)	|	op

(	robo	.	devid	==	ROBO_DEVICE_ID_5395	)	||	(	robo	.	devid	==	ROBO_DEVICE_ID_5397	)	||	(	robo	.	devid	==	ROBO_DEVICE_ID_5398	)

!	robo	.	dev	->	netdev_ops	||	!	robo	.	dev	->	netdev_ops	->	ndo_do_ioctl

(	mii	->	phy_id	!=	ROBO_PHY_ADDR	)	&&	(	mii	->	phy_id	!=	ROBO_PHY_ADDR_BCM63XX	)	&&	(	mii	->	phy_id	!=	ROBO_PHY_ADDR_TG3	)

phyid	==	0xffffffff	||	phyid	==	0x55210022

val16	&	(	1	<<	14	)

(	robo	.	devid	==	ROBO_DEVICE_ID_5395	)	||	(	robo	.	devid	==	ROBO_DEVICE_ID_53115	)	||	(	robo	.	devid	==	ROBO_DEVICE_ID_53125	)

(	robo	.	devid	==	ROBO_DEVICE_ID_5395	)	||	(	robo	.	devid	==	ROBO_DEVICE_ID_53115	)	||	(	robo	.	devid	==	ROBO_DEVICE_ID_53125	)

(	robo	.	devid	==	ROBO_DEVICE_ID_5395	)	||	(	robo	.	devid	==	ROBO_DEVICE_ID_53115	)	||	(	robo	.	devid	==	ROBO_DEVICE_ID_53125	)

priv	->	nr	==	(	drv_num	-	1	)

s	&&	!	isspace	(	*	buf	)	&&	(	*	buf	!=	0	)

(	bits	+	7	)	/	8
bits	+	7	/	8
mask	&&	bits	>	0

(	bits	+	7	)	/	8
bits	+	7	/	8
mask	&&	bits	>	0

(	0x06	<<	4	)	|	(	(	table	&	0x01	)	<<	3	|	(	addr	&	64	)	>>	6	)
(	0x06	<<	4	)	|	(	table	&	0x01	<<	3	|	addr	&	64	>>	6	)
(	addr	&	63	)	<<	2
addr	&	63	<<	2
(	0x05	<<	5	)	|	(	addr	>>	3	)

(	addr	<<	5	)	|	(	__u8	)	(	val	>>	11	)

(	nr	<	0	)	||	(	nr	>	15	)

c	&	(	1	<<	4	)

(	(	c	&	(	0xf	<<	10	)	)	>>	10	)	==	nr
(	c	&	(	0xf	<<	10	)	>>	10	)	==	nr
~	(	1	<<	5	)
~	1	<<	5
~	(	(	1	<<	1	)	|	(	1	<<	2	)	|	(	1	<<	3	)	)
~	(	1	<<	1	)	|	(	1	<<	2	)	|	(	1	<<	3	)
adm_rreg	(	0	,	0x11	)	&	(	1	<<	5	)

~	(	1	<<	5	)
~	1	<<	5
mtd	->	type	==	MTD_NANDFLASH	||	mtd	->	type	==	MTD_MLCNANDFLASH

!	ptr	||	(	ptr	==	(	void	*	)	-	1	)

trx	->	magic	!=	TRX_MAGIC	||	trx	->	len	<	sizeof	(	struct	trx_header	)

mtd	->	type	==	MTD_NANDFLASH	||	mtd	->	type	==	MTD_MLCNANDFLASH

(	errno	==	EINTR	)	||	(	errno	==	EAGAIN	)
(	errno	==	EINTR	)	||	errno	==	EAGAIN
w	+	buflen	>	e

!	image_check	(	imagefd	,	device	)	&&	!	force

i	<	n_new	-	1

desc	->	hdr	.	flash_base	>	last_fb	->	hdr	.	flash_base	&&	desc	->	hdr	.	flash_base	<	offset

end	-	(	last	-	desc	)	*	sizeof	(	struct	fis_image_desc	)
end	-	last	-	desc	*	sizeof	(	struct	fis_image_desc	)
desc	<	first	+	n_new

mtd	->	type	==	MTD_NANDFLASH	||	mtd	->	type	==	MTD_MLCNANDFLASH

mtd	->	type	==	MTD_NANDFLASH	||	mtd	->	type	==	MTD_MLCNANDFLASH

!	ptr	||	(	ptr	==	(	void	*	)	-	1	)

size	-	(	ofs	%	size	)

size	-	(	ofs	%	size	)

*	dir	&&	(	de	->	pino	==	1	)	&&	!	strncmp	(	(	char	*	)	de	->	name	,	dir	,	de	->	nsize	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

i	<	port_cell	->	port_num	&&	i	<	2

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

vcc	->	qos	.	aal	!=	ATM_AAL5	&&	vcc	->	qos	.	aal	!=	ATM_AAL0

(	(	uni_cell_header	->	pti	==	ATM_PTI_SEGF5	||	uni_cell_header	->	pti	==	ATM_PTI_E2EF5	)	&&	find_vpivci	(	uni_cell_header	->	vpi	,	uni_cell_header	->	vci	)	<	0	)	||	(	(	uni_cell_header	->	vci	==	0x03	||	uni_cell_header	->	vci	==	0x04	)	&&	find_vpi	(	uni_cell_header	->	vpi	)	<	0	)
(	uni_cell_header	->	pti	==	ATM_PTI_SEGF5	||	uni_cell_header	->	pti	==	ATM_PTI_E2EF5	&&	find_vpivci	(	uni_cell_header	->	vpi	,	uni_cell_header	->	vci	)	<	0	)	||	(	uni_cell_header	->	vci	==	0x03	||	uni_cell_header	->	vci	==	0x04	&&	find_vpi	(	uni_cell_header	->	vpi	)	<	0	)
sk_wmem_alloc_get	(	sk_atm	(	vcc	)	)	&&	!	atm_may_send	(	vcc	,	size	)

++	(	p_conn	->	tx_desc_pos	)	==	dma_tx_descriptor_length

++	loop_count	==	1000

header	->	pti	==	ATM_PTI_SEGF5	||	header	->	pti	==	ATM_PTI_E2EF5

header	->	vci	==	0x03	||	header	->	vci	==	0x04

++	loop_count	==	1000

++	g_atm_priv_data	.	aal_desc_pos	==	dma_rx_descriptor_length

MBOX_IGU3_ISR_ISR	(	queue	)	&&	count	>	0

(	(	qsb_clk	*	qsb_tstep	)	>>	5	)	/	qos	->	txtp	.	max_pcr	+	1
(	qsb_clk	*	qsb_tstep	)	>>	5	/	qos	->	txtp	.	max_pcr	+	1
(	(	qsb_clk	*	qsb_tstep	)	>>	5	)	/	max_pcr	+	1
(	qsb_clk	*	qsb_tstep	)	>>	5	/	max_pcr	+	1
(	(	qsb_clk	*	qsb_tstep	)	>>	5	)	/	qos	->	txtp	.	scr	+	1
(	qsb_clk	*	qsb_tstep	)	>>	5	/	qos	->	txtp	.	scr	+	1
(	(	unsigned	int	)	g_atm_priv_data	.	tx_skb_base	+	3	)	&	~	3

ret	==	-	EBUSY

port_num	--	>	0

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

ndev	>=	0	&&	ndev	<	ARRAY_SIZE	(	g_net_dev	)

skb_headroom	(	skb	)	<	sizeof	(	struct	sk_buff	*	)	+	byteoff	||	skb_cloned	(	skb	)

skb_headroom	(	skb	)	>=	sizeof	(	struct	sk_buff	*	)	+	byteoff

budget	--	>	0

(	1	<<	g_wanqos_en	)	-	1
1	<<	g_wanqos_en	-	1
q_step	-	(	q_accum	+	(	p_step	>>	1	)	)	/	p_step
q_step	-	q_accum	+	p_step	>>	1	/	p_step
ret	==	-	EBUSY

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

ndev	>=	0	&&	ndev	<	ARRAY_SIZE	(	g_net_dev	)

ndev	>=	0	&&	ndev	<	ARRAY_SIZE	(	g_net_dev	)

ndev	>=	0	&&	ndev	<	ARRAY_SIZE	(	g_net_dev	)

ndev	>=	0	&&	ndev	<	ARRAY_SIZE	(	g_net_dev	)

work_done	<	work_to_do	&&	WRX_DMA_CHANNEL_CONFIG	(	ndev	)	->	vlddes	>	0

ndev	>=	0	&&	ndev	<	ARRAY_SIZE	(	g_net_dev	)

ndev	>=	0	&&	ndev	<	ARRAY_SIZE	(	g_net_dev	)

ndev	>=	0	&&	ndev	<	ARRAY_SIZE	(	g_net_dev	)

++	(	p_itf	->	tx_desc_pos	)	==	dma_tx_descriptor_length

desc	->	own	||	!	desc	->	c

MBOX_IGU3_ISR_ISR	(	itf	+	16	)	&&	count	>	0

MBOX_IGU3_ISR_ISR	(	itf	)	&&	count	>	0

p	++	,	rlen	--

rx_max_packet_size	>	65536	-	1

(	(	unsigned	int	)	g_ptm_priv_data	.	tx_skb_base	+	3	)	&	~	3

ret	==	-	EBUSY

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	sctx	->	dbn	<<	4	)	>	SHA1_HMAC_DBN_TEMP_SIZE

(	sctx	->	count	>>	3	)	&	0x3f

(	j	+	len	)	>	63

i	+	63	<	len

(	sctx	->	count	>>	3	)	&	0x3f

key_len	!=	16	&&	key_len	!=	24	&&	key_len	!=	32

key_len	/	8	-	2

key_len	==	128	/	8

key_len	==	192	/	8

key_len	==	256	/	8

key_len	!=	16	&&	key_len	!=	24	&&	key_len	!=	32

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

keylen	/	8	+	1

!	src	||	!	dst

keylen	/	8	+	1

(	mctx	->	dbn	<<	4	)	>	MD5_HMAC_DBN_TEMP_SIZE

i	--	>	0

(	cycles	+	4	)	/	8
cycles	+	4	/	8
!	err	&&	desc	->	suite	.	aead	.	dec	.	vecs

(	start	+	end	)	/	2
start	+	end	/	2
i	<	0	&&	j	<	0

i	<	0	&&	j	<	0

(	cycles	+	4	)	/	8
cycles	+	4	/	8
mode	>	300	&&	mode	<	400

mode	>	300	&&	mode	<	400

mode	>	300	&&	mode	<	400

mode	>	300	&&	mode	<	400

mode	>	300	&&	mode	<	400

mode	>	300	&&	mode	<	400

mode	>	300	&&	mode	<	400

mode	>	300	&&	mode	<	400

mode	>	300	&&	mode	<	400

mode	>	300	&&	mode	<	400

mode	>	300	&&	mode	<	400

mode	>	300	&&	mode	<	400

mode	>	300	&&	mode	<	400

mode	>	300	&&	mode	<	400

mode	>	300	&&	mode	<	400

mode	>	300	&&	mode	<	400

mode	>	300	&&	mode	<	400

(	sctx	->	count	>>	3	)	&	0x3f

(	j	+	len	)	>	63

i	+	63	<	len

(	sctx	->	count	>>	3	)	&	0x3f

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

key_len	/	8	-	2

key_len	==	128	/	8

key_len	==	192	/	8

key_len	==	256	/	8

!	src	||	!	dst

keylen	!=	16	&&	keylen	!=	24	&&	keylen	!=	32

keylen	!=	16	&&	keylen	!=	24	&&	keylen	!=	32

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

item	!=	_epqh_list	&&	item	!=	item	->	next

++	count	>	10000

++	count	>	10000	&&	(	_num	==	0	||	_num	==	0x10	)
++	count	>	10000	&&	_num	==	0	||	_num	==	0x10
++	count	>	10000

++	count	>	100000

++	count	>	100000

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	i	%	16	)	<	3

(	end	-	start	)	*	sizeof	(	u_int32_t	)
end	-	start	*	sizeof	(	u_int32_t	)
fd	!=	-	1

end	<	buflen	/	sizeof	(	u_int32_t	)

prop0	>=	(	9	*	5	)

(	posSlot	>>	1	)	-	1
posSlot	>>	1	-	1
--	numDirectBits	!=	0

--	numDirectBits	!=	0

!	(	statbuf	.	st_mode	&	S_IWUSR	)
!	statbuf	.	st_mode	&	S_IWUSR
option	==	-	1

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

time	<=	0	||	time	>	60

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

!	!	(	state	^	button	->	active_low	)
!	!	state	^	button	->	active_low
--	i	>=	0

--	i	>=	0

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	col	->	r	&	0xf8	)	|	(	col	->	g	&	0xfc	)	>>	5
(	col	->	r	&	0xf8	)	|	col	->	g	&	0xfc	>>	5
(	col	->	g	&	0xfc	)	<<	3	|	(	col	->	b	&	0xf8	)	>>	3
col	->	g	&	0xfc	<<	3	|	(	col	->	b	&	0xf8	)	>>	3
(	col	->	a	&	0x80	)	|	(	col	->	r	&	0xf8	)	>>	1	|	(	col	->	g	&	0xf8	)	>>	6
(	col	->	a	&	0x80	)	|	(	col	->	r	&	0xf8	)	>>	1	|	col	->	g	&	0xf8	>>	6
(	col	->	g	&	0xf8	)	<<	2	|	(	col	->	b	&	0xf8	)	>>	3
col	->	g	&	0xf8	<<	2	|	col	->	b	&	0xf8	>>	3
pixf	->	pixenum	!=	CLUT4	&&	pixf	->	pixenum	!=	CLUT8

(	r	->	col	->	r	)	<<	4	|	(	r	->	col	->	r	&	0xf	)

videoram	+	(	(	(	(	r	->	y	*	vids	->	width	)	+	r	->	x	)	*	bpp	)	>>	3	)
videoram	+	(	(	r	->	y	*	vids	->	width	)	+	r	->	x	*	bpp	)	>>	3
(	vids	->	width	*	bpp	)	>>	3

pixf	->	pixenum	==	CLUT4	||	pixf	->	pixenum	==	CLUT8

pixf	->	pixenum	==	CLUT4	||	pixf	->	pixenum	==	CLUT8

pixf	->	pixenum	==	CLUT4	||	pixf	->	pixenum	==	CLUT8

pixf	->	pixenum	==	CLUT4	||	pixf	->	pixenum	==	CLUT8

argc	!=	0	&&	argc	>	4

i	<	(	sizeof	(	pixname	)	/	sizeof	(	char	*	)	)

fmode	==	-	1

smode	==	-	1

fmode	!=	-	1

smode	!=	-	1	&&	i_size	!=	smode

(	i_size	%	4	)	==	3

stat	==	-	2

stat	==	-	1

4	-	(	(	int	)	ptr	%	4	)

++	i	<	argc

++	i	<	argc

(	i	+	1	)	<	argc

(	ep	->	speed_hi	<<	16	)	|	ep	->	speed

(	ETHTOOL_RX_FLOW_SPEC_RING_VF	&	ring_cookie	)	>>	ETHTOOL_RX_FLOW_SPEC_RING_VF_OFF
ETHTOOL_RX_FLOW_SPEC_RING_VF	&	ring_cookie	>>	ETHTOOL_RX_FLOW_SPEC_RING_VF_OFF
ioctl	(	robo	->	fd	,	SIOCGETCPHYRD	,	(	caddr_t	)	&	robo	->	ifr	)	<	0

ioctl	(	robo	->	fd	,	SIOCSETCPHYWR	,	(	caddr_t	)	&	robo	->	ifr	)	<	0

(	page	<<	8	)	|	REG_MII_PAGE_ENABLE

(	reg	<<	8	)	|	op

(	mdio_read	(	robo	,	ROBO_PHY_ADDR	,	REG_MII_ADDR	)	&	3	)	==	0
mdio_read	(	robo	,	ROBO_PHY_ADDR	,	REG_MII_ADDR	)	&	3	==	0
mdio_read	(	robo	,	ROBO_PHY_ADDR	,	REG_MII_DATA0	)	+	(	mdio_read	(	robo	,	ROBO_PHY_ADDR	,	REG_MII_DATA0	+	1	)	<<	16	)
mdio_read	(	robo	,	ROBO_PHY_ADDR	,	REG_MII_DATA0	)	+	mdio_read	(	robo	,	ROBO_PHY_ADDR	,	REG_MII_DATA0	+	1	)	<<	16
phyid	==	0xffffffff	||	phyid	==	0x55210022

(	i	+	1	)	<	argc

++	i	<	argc

++	i	<	argc

++	i	<	argc

++	i	<	argc

++	i	<	argc

++	i	<	argc

(	i	+	1	)	<	argc

++	i	<	argc

++	i	<	argc

(	i	+	1	)	<	argc

(	i	+	1	)	<	argc

++	i	<	argc

val16	&	(	1	<<	7	)

val16	&	(	1	<<	6	)

val16	&	(	1	<<	5	)

(	bus	&&	(	e	->	bus_num	==	*	bus	)	&&	(	e	->	dev_num	==	*	dev	)	)	||	(	vid	&&	(	e	->	vendor_id	==	*	vid	)	&&	(	e	->	product_id	==	*	pid	)	)	||	(	product	&&	!	strcasecmp	(	e	->	product_name	,	product	)	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

c	&	(	1	<<	i	)

(	bcdnum	%	16	)	*	fac

(	decnum	%	10	)	*	fac

(	val	>>	8	)	&	0xff

(	val	>>	16	)	&	0xff

(	val	>>	24	)	&	0xff

(	s	.	st_mode	&	S_IFBLK	)	==	0
s	.	st_mode	&	S_IFBLK	==	0
(	s	.	st_mode	&	S_IFREG	)	==	0
s	.	st_mode	&	S_IFREG	==	0
from	+	60	*	60	*	24	*	days

(	(	digit	>>	i	)	&	0xFF	)	!=	0
(	digit	>>	i	)	&	0xFF	!=	0
byte	<	4	and	(	(	u_val	>>	(	(	byte	-	1	)	*	8	)	)	&	0xFF	)	==	0x80
byte	<	4	and	(	u_val	>>	(	byte	-	1	*	8	)	)	&	0xFF	==	0x80
(	u_val	>>	(	(	i	-	1	)	*	8	)	)	&	0xFF
(	u_val	>>	(	i	-	1	*	8	)	)	&	0xFF
is_err	==	-	1

type	<=	0	||	type	>	maxtype

sizeof	(	struct	nlattr	*	)	*	(	maxtype	+	1	)
sizeof	(	struct	nlattr	*	)	*	maxtype	+	1
msg	->	nm_protocol	==	-	1

4	+	2	*	128

4	+	3	*	128

4	+	2	*	94	*	94

4	+	2	*	94	*	94

4	+	2	*	94	*	157

4	+	2	*	126	*	190

4	+	2	*	2	*	94	*	94

*	s	<	0xff	&&	strcasecmp	(	s	+	1	,	name	)

0	|	(	t	<<	1	)	|	(	f	<<	8	)

1	|	(	t	<<	1	)	|	(	m	<<	8	)

(	(	*	s	>>	1	)	==	0x60	)	&&	(	(	*	(	s	+	1	)	>>	6	)	==	0x02	)
(	(	*	s	>>	1	)	==	0x60	)	&&	(	(	*	s	+	1	>>	6	)	==	0x02	)
(	*	s	==	0xE0	)	&&	(	(	*	(	s	+	1	)	>>	5	)	==	0x04	)	&&	(	(	*	(	s	+	2	)	>>	6	)	==	0x02	)
(	*	s	==	0xE0	)	&&	(	(	*	s	+	1	>>	5	)	==	0x04	)	&&	(	(	*	s	+	2	>>	6	)	==	0x02	)
(	*	s	==	0xF0	)	&&	(	(	*	(	s	+	1	)	>>	4	)	==	0x08	)	&&	(	(	*	(	s	+	2	)	>>	6	)	==	0x02	)	&&	(	(	*	(	s	+	3	)	>>	6	)	==	0x02	)
(	*	s	==	0xF0	)	&&	(	(	*	(	s	+	1	)	>>	4	)	==	0x08	)	&&	(	(	*	s	+	2	>>	6	)	==	0x02	)	&&	(	(	*	s	+	3	>>	6	)	==	0x02	)
(	n	==	3	)	&&	(	*	s	==	0xED	)	&&	(	*	(	s	+	1	)	>=	0xA0	)	&&	(	*	(	s	+	1	)	<=	0xBF	)
(	n	==	3	)	&&	(	*	s	==	0xED	)	&&	(	*	s	+	1	>=	0xA0	)	&&	(	*	(	s	+	1	)	<=	0xBF	)
(	n	==	3	)	&&	(	*	s	==	0xEF	)	&&	(	*	(	s	+	1	)	==	0xBF	)	&&	(	*	(	s	+	2	)	>=	0xBE	)	&&	(	*	(	s	+	2	)	<=	0xBF	)
(	n	==	3	)	&&	(	*	s	==	0xEF	)	&&	(	*	s	+	1	==	0xBF	)	&&	(	*	s	+	2	>=	0xBE	)	&&	(	*	s	+	2	<=	0xBF	)
(	*	in	&	0xE0	)	==	0xC0
*	in	&	0xE0	==	0xC0
(	*	in	&	0xF0	)	==	0xE0
*	in	&	0xF0	==	0xE0
(	*	in	&	0xF8	)	==	0xF0
*	in	&	0xF8	==	0xF0
(	*	in	&	0xFC	)	==	0xF8
*	in	&	0xFC	==	0xF8
(	*	in	&	0xFE	)	==	0xFC
*	in	&	0xFE	==	0xFC
n	>	1	&&	n	<	5

*	in	<	0x80	||	*	in	>	0xBF

(	cd	>>	1	)	&	127

(	param	&	PARAM_MODE	)	==	GET
param	&	PARAM_MODE	==	GET
(	param	&	PARAM_MODE	)	==	SET
param	&	PARAM_MODE	==	SET
(	param	&	PARAM_MODE	)	==	SET
param	&	PARAM_MODE	==	SET
(	param	&	PARAM_MODE	)	==	GET
param	&	PARAM_MODE	==	GET
(	param	&	PARAM_MODE	)	==	GET
param	&	PARAM_MODE	==	GET
(	param	&	PARAM_MODE	)	==	GET
param	&	PARAM_MODE	==	GET
(	param	&	PARAM_MODE	)	==	GET
param	&	PARAM_MODE	==	GET
(	ioc	>>	16	)	&	0xffff

list	->	count	--	-	1

wl_ioctl	(	interface	,	(	ioc	>>	16	)	&	0xffff	,	wlbuf	,	sizeof	(	wlbuf	)	)	==	0

(	param	&	PARAM_MODE	)	==	GET
param	&	PARAM_MODE	==	GET
(	param	&	PARAM_MODE	)	!=	SET
param	&	PARAM_MODE	!=	SET
(	param	&	PARAM_MODE	)	!=	SET
param	&	PARAM_MODE	!=	SET
(	param	&	PARAM_MODE	)	==	SET
param	&	PARAM_MODE	==	SET
end	&&	!	(	*	end	)

(	debug	>	0	)	&&	(	ret	!=	0	)

(	argc	>	1	)	&&	(	!	(	call	->	param	&	NOARG	)	)
(	argc	>	1	)	&&	(	!	call	->	param	&	NOARG	)
fromstdin	&&	!	feof	(	stdin	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

*	str	++	!=	0

base	<	2	||	base	>	16

type	&	SIGN	&&	num	<	0

!	(	type	&	(	ZEROPAD	+	LEFT	)	)
!	type	&	(	ZEROPAD	+	LEFT	)
size	--	>	0

!	(	type	&	LEFT	)
!	type	&	LEFT
size	--	>	0

i	<	precision	--

i	--	>	0

size	--	>	0

(	addr	&	0xF0000000	)	==	0x20000000
addr	&	0xF0000000	==	0x20000000
(	*	cp	<	0x20	)	||	(	*	cp	>	0x7e	)

i	<	(	p	->	len	/	512	)

512	*	(	i	&	0xFF	)
512	*	i	&	0xFF
(	crc1	&	0x0000FF00	)	>>	8
crc1	&	0x0000FF00	>>	8
(	crc1	&	0x00FF0000	)	>>	16
crc1	&	0x00FF0000	>>	16
(	crc1	&	0xFF000000	)	>>	24
crc1	&	0xFF000000	>>	24
(	int	)	(	*	(	char	*	)	(	AddressToDownload	+	SizeToDownload	)	)	+	(	int	)	(	*	(	char	*	)	(	AddressToDownload	+	SizeToDownload	+	1	)	<<	8	)	+	(	int	)	(	*	(	char	*	)	(	AddressToDownload	+	SizeToDownload	+	2	)	<<	16	)	+	(	int	)	(	*	(	char	*	)	(	AddressToDownload	+	SizeToDownload	+	3	)	<<	24	)

(	sizeToRead	/	4	)	+	1

(	data	&	0x000000ff	)	<<	24	|	(	data	&	0x0000ff00	)	<<	8	|	(	data	&	0x00ff0000	)	>>	8	|	(	data	&	0xff000000	)	>>	24
data	&	0x000000ff	<<	24	|	(	data	&	0x0000ff00	)	<<	8	|	(	data	&	0x00ff0000	)	>>	8	|	(	data	&	0xff000000	)	>>	24
index	<	512	/	4

AddrToWrite	==	-	1

AddrToWrite	==	-	1

(	1	<<	led	)	&	0x7

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

master	->	read	(	master	,	offset	,	sizeof	(	buf	)	,	&	len	,	buf	)	||	len	!=	sizeof	(	buf	)

(	(	len	/	(	master	->	erasesize	*	8	)	)	+	1	)	*	master	->	erasesize	*	8
(	len	/	(	master	->	erasesize	*	8	)	)	+	1	*	master	->	erasesize	*	8
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	bytes_in_buf	>=	4	)	&&	(	fifo_fill_lev	>	0	)

(	bytes_in_buf	>	0	)	&&	(	fifo_fill_lev	>	0	)

(	tmp_val	>>	(	8	*	(	rx_valid_cnt	-	i	-	1	)	)	)	&	0xff
(	tmp_val	>>	(	8	*	rx_valid_cnt	-	i	-	1	)	)	&	0xff
fill	>	fifo_space	*	4

i	<	fill	/	4

fill	&	~	0x3

(	fifo_space	>	0	)	&	(	fill	>	1	)

(	fifo_space	>	0	)	&	(	fill	>	0	)

(	inode	==	(	struct	inode	*	)	0	)	||	(	inode	==	(	struct	inode	*	)	1	)

(	inode	==	(	struct	inode	*	)	0	)	||	(	inode	==	(	struct	inode	*	)	1	)

(	(	ifx_ssc_clock	>>	1	)	/	baud	)	-	1
(	ifx_ssc_clock	>>	1	/	baud	)	-	1
(	inode	==	(	struct	inode	*	)	0	)	||	(	inode	==	(	struct	inode	*	)	1	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	int	)	(	*	ppos	)	/	(	(	int	)	7	)	==	16

i	%	2	!=	0

(	(	Tp	*	(	Bpn	+	1	)	-	1	)	*	Mp	*	Lp	*	4	)	/	(	Tp	*	(	Kp	*	Mp	+	Rp	)	)
(	(	Tp	*	Bpn	+	1	-	1	)	*	Mp	*	Lp	*	4	)	/	(	Tp	*	(	Kp	*	Mp	+	Rp	)	)
(	(	Tp	*	(	Bpn	+	1	)	-	1	)	*	Mp	*	Lp	*	4	)	/	(	Tp	*	(	Kp	*	Mp	+	Rp	)	)
(	Tp	*	Bpn	+	1	-	1	*	Mp	*	Lp	*	4	)	/	(	Tp	*	(	Kp	*	Mp	+	Rp	)	)
(	(	SNRMds	&	0xff	)	*	1000	)	/	256
(	SNRMds	&	0xff	*	1000	)	/	256
(	SNRMds	>>	8	)	&	0xff

(	SNRMds_remain	%	100	)	>=	50

(	SNRMds_remain	/	100	)	+	1

FarendData_acquire_time	.	tv_sec	==	0	||	time_now	.	tv_sec	-	FarendData_acquire_time	.	tv_sec	>=	1

index	+	size	>=	1024

index	+	size	>=	256

index	+	size	>=	128

index	+	size	>=	512

index	+	size	>=	256

index	+	size	>=	128

index	+	size	>=	64

index	+	size	>=	32

index	+	size	>=	64

index	+	size	>=	32

index	+	size	>=	64

(	(	int	)	(	(	time_fini	.	tv_sec	-	time_now	.	tv_sec	)	*	1000	)	)	+	(	(	int	)	(	(	time_fini	.	tv_usec	-	time_now	.	tv_usec	)	/	1000	)	)
(	(	int	)	(	time_fini	.	tv_sec	-	time_now	.	tv_sec	*	1000	)	)	+	(	(	int	)	(	(	time_fini	.	tv_usec	-	time_now	.	tv_usec	)	/	1000	)	)
i	%	2	==	0

i	<	PCM_CHANNEL_NUM	/	2

i	%	2	==	1

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

quot	/	2	-	1

ser	->	type	!=	PORT_UNKNOWN	&&	ser	->	type	!=	PORT_AMAZONASC

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

!	(	ntohl	(	magic	)	==	0x27051956	)
!	ntohl	(	magic	)	==	0x27051956
mymtd	->	size	==	0x01000000	&&	mymtd	->	erasesize	==	0x00020000

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

!	(	addr	&	0x200	)
!	addr	&	0x200
(	val	&	0x7000	)	>>	12
val	&	0x7000	>>	12
(	val	&	0x7000	)	>>	12
val	&	0x7000	>>	12
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	ep	->	speed_hi	<<	16	)	|	ep	->	speed

(	ETHTOOL_RX_FLOW_SPEC_RING_VF	&	ring_cookie	)	>>	ETHTOOL_RX_FLOW_SPEC_RING_VF_OFF
ETHTOOL_RX_FLOW_SPEC_RING_VF	&	ring_cookie	>>	ETHTOOL_RX_FLOW_SPEC_RING_VF_OFF
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	bus	->	number	!=	0	)	||	(	devfn	>	0x7f	)	||	(	devfn	==	0	)	||	(	devfn	==	0x20	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

start_addr	&	~	(	lsize	-	1	)
start_addr	&	~	lsize	-	1
(	start_addr	+	size	-	1	)	&	~	(	lsize	-	1	)
(	start_addr	+	size	-	1	)	&	~	lsize	-	1
10	*	width	+	Ctod	(	*	fmt	++	)

prec	*	10	+	Ctod	(	*	fmt	++	)

i	<	length	-	1

i	<	length	-	len

negFlag	&&	!	ladjust

i	<	length	-	1

prop0	>=	(	9	*	5	)

(	posSlot	>>	1	)	-	1
posSlot	>>	1	-	1
--	numDirectBits	!=	0

--	numDirectBits	!=	0

(	(	UART_READ	(	UART_LSR	)	)	&	UART_LSR_THRE	)	==	0
(	UART_READ	(	UART_LSR	)	)	&	UART_LSR_THRE	==	0
(	(	UART_READ	(	UART_LSR	)	)	&	UART_LSR_THRE	)	==	0
(	UART_READ	(	UART_LSR	)	)	&	UART_LSR_THRE	==	0
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	curVal	&	0xff	)	!=	*	dp
curVal	&	0xff	!=	*	dp
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

list_empty	(	&	m	->	transfers	)	||	list_is_last	(	m	->	transfers	.	next	,	&	m	->	transfers	)	||	!	list_is_last	(	m	->	transfers	.	next	->	next	,	&	m	->	transfers	)

t	->	tx_buf	&&	!	t	->	verify

rbspi	->	busy	||	(	rbspi	->	cs_wait	>=	0	&&	rbspi	->	cs_wait	!=	m	->	spi	->	chip_select	)

spi	->	mode	&	~	(	SPI_CS_HIGH	)

spi	->	bits_per_word	!=	8	&&	spi	->	bits_per_word	!=	0

rbspi	->	cs_wait	==	spi	->	chip_select	&&	!	rbspi	->	busy

(	rbspi	->	ahb_freq	-	1	)	/	(	2	*	hz_max	)
rbspi	->	ahb_freq	-	1	/	(	2	*	hz_max	)
(	rbspi	->	ahb_freq	+	500	)	/	1000
rbspi	->	ahb_freq	+	500	/	1000
2	*	(	div	+	1	)
2	*	div	+	1
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

cpld	->	config	&	~	mask

(	cpld	->	config	^	config	)	&	0xff
cpld	->	config	^	config	&	0xff
(	addr	>>	16	)	&	0xff

(	addr	>>	8	)	&	0xff

(	cpld	->	config	>>	offset	)	&	1

!	!	value	<<	offset

!	!	value	<<	offset

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	nfc	->	irq_status	&	AR934X_NFC_IRQ_MASK	)	!=	0
nfc	->	irq_status	&	AR934X_NFC_IRQ_MASK	!=	0
column	==	-	1

page_addr	!=	-	1

retries	++	<	AR934X_NFC_DMA_RETRIES

nfc	->	buf_index	+	len	>	nfc	->	buf_size

nfc	->	buf_index	+	len	>	nfc	->	buf_size

chip	->	chipsize	>	(	32	<<	20	)

chip	->	chipsize	>	(	2	<<	16	)

chip	->	chipsize	>	(	128	<<	20	)

chip	->	chipsize	>	(	8	<<	16	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

!	!	(	offset	&	NXP_74HC153_S0_MASK	)
!	!	offset	&	NXP_74HC153_S0_MASK
!	!	(	offset	&	NXP_74HC153_S1_MASK	)
!	!	offset	&	NXP_74HC153_S1_MASK
(	ret	&	0x8000	)	==	0x0000
ret	&	0x8000	==	0x0000
port	>=	0	&&	port	<=	NUM_PORTS

addr	==	-	1

addr	==	-	1

!	ag71xx_get_pdata	(	ag	)	->	is_ar724x	||	ag71xx_has_ar8216	(	ag	)

ring	->	curr	-	ring	->	dirty	>	0

ring	->	curr	==	(	ring	->	dirty	+	ring	->	size	)

(	ring	->	curr	-	ring	->	dirty	)	<	(	ring	->	size	*	3	)	/	4

(	ring	->	dirty	+	ring	->	size	)	==	ring	->	curr

(	ep	->	speed_hi	<<	16	)	|	ep	->	speed

(	ETHTOOL_RX_FLOW_SPEC_RING_VF	&	ring_cookie	)	>>	ETHTOOL_RX_FLOW_SPEC_RING_VF_OFF
ETHTOOL_RX_FLOW_SPEC_RING_VF	&	ring_cookie	>>	ETHTOOL_RX_FLOW_SPEC_RING_VF_OFF
as	->	vlan_tagged	&	(	1	<<	i	)

~	(	1	<<	p	->	id	)
~	1	<<	p	->	id
~	(	1	<<	p	->	id	)
~	1	<<	p	->	id
ag	->	duplex	!=	phydev	->	duplex	||	ag	->	speed	!=	phydev	->	speed

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	ret	&	0x8000	)	==	0x0000
ret	&	0x8000	==	0x0000
port	>=	0	&&	port	<=	NUM_PORTS

addr	==	-	1

addr	==	-	1

10	*	width	+	Ctod	(	*	fmt	++	)

prec	*	10	+	Ctod	(	*	fmt	++	)

i	<	length	-	1

i	<	length	-	len

negFlag	&&	!	ladjust

i	<	length	-	1

(	(	unsigned	int	)	get_byte	(	)	)	+	(	(	unsigned	int	)	get_byte	(	)	<<	8	)	+	(	(	unsigned	int	)	get_byte	(	)	<<	16	)	+	(	(	unsigned	int	)	get_byte	(	)	<<	24	)
(	(	unsigned	int	)	get_byte	(	)	)	+	(	unsigned	int	)	get_byte	(	)	<<	8	+	(	unsigned	int	)	get_byte	(	)	<<	16	+	(	unsigned	int	)	get_byte	(	)	<<	24
(	posSlot	>>	1	)	-	1
posSlot	>>	1	-	1
--	numDirectBits	!=	0

--	numDirectBits	!=	0

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	trigger_data	->	mode	&	(	MODE_TX	|	MODE_RX	)	)	!=	0	&&	trigger_data	->	link_up
trigger_data	->	mode	&	MODE_TX	|	MODE_RX	!=	0	&&	trigger_data	->	link_up
(	dev_get_flags	(	trigger_data	->	net_dev	)	&	IFF_LOWER_UP	)	!=	0
dev_get_flags	(	trigger_data	->	net_dev	)	&	IFF_LOWER_UP	!=	0
new_mode	==	-	1

!	trigger_data	->	link_up	||	!	trigger_data	->	net_dev	||	(	trigger_data	->	mode	&	(	MODE_TX	|	MODE_RX	)	)	==	0
!	trigger_data	->	link_up	||	!	trigger_data	->	net_dev	||	trigger_data	->	mode	&	MODE_TX	|	MODE_RX	==	0
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

!	td	->	usb_dev	||	td	->	interval	==	0

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	ep	->	speed_hi	<<	16	)	|	ep	->	speed

(	ETHTOOL_RX_FLOW_SPEC_RING_VF	&	ring_cookie	)	>>	ETHTOOL_RX_FLOW_SPEC_RING_VF_OFF
ETHTOOL_RX_FLOW_SPEC_RING_VF	&	ring_cookie	>>	ETHTOOL_RX_FLOW_SPEC_RING_VF_OFF
vlan	==	-	1

--	i	>	0

priv	->	vlan_tagged	&	(	1	<<	port	)

timeout	--	<=	0

priv	->	vlan_tagged	&	(	1	<<	i	)

~	(	1	<<	p	->	id	)
~	1	<<	p	->	id
~	(	1	<<	p	->	id	)
~	1	<<	p	->	id
!	priv	->	chip	->	mib_decs	||	!	priv	->	chip	->	num_mibs

--	priv	->	use_count	>	0

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	index	&	RTL8366S_PORT_VLAN_CTRL_MASK	)	<<	RTL8366S_PORT_VLAN_CTRL_SHIFT	(	port	)
(	index	&	RTL8366S_PORT_VLAN_CTRL_MASK	)	<<	RTL8366S_PORT_VLAN_CTRL_SHIFT	(	port	)
vlan	==	0	||	vlan	>=	max

1	<<	(	val	->	port_vlan	+	3	)

!	(	cb	->	fill	(	cb	,	arg	)	<	0	)
!	cb	->	fill	(	cb	,	arg	)	<	0
!	attr	||	!	attr	->	set

!	attr	||	!	attr	->	get

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	id	+	1	)	%	2
id	+	1	%	2
(	id	+	1	)	%	2
id	+	1	%	2
(	id	+	1	)	%	2
id	+	1	%	2
0x000e	+	0x20	*	(	_p	)

(	mib	->	offset	+	1	)	%	4
mib	->	offset	+	1	%	4
(	index	&	RTL8367B_VLAN_PVID_CTRL_MASK	)	<<	RTL8367B_VLAN_PVID_CTRL_SHIFT	(	port	)
(	index	&	RTL8367B_VLAN_PVID_CTRL_MASK	)	<<	RTL8367B_VLAN_PVID_CTRL_SHIFT	(	port	)
vlan	==	0	||	vlan	>=	max

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	index	&	RTL8366RB_PORT_VLAN_CTRL_MASK	)	<<	RTL8366RB_PORT_VLAN_CTRL_SHIFT	(	port	)
index	&	RTL8366RB_PORT_VLAN_CTRL_MASK	<<	RTL8366RB_PORT_VLAN_CTRL_SHIFT	(	port	)
vlan	==	0	||	vlan	>=	max

val	->	value	.	i	>	0	&&	val	->	value	.	i	<	RTL8366RB_BDTH_SW_MAX

(	val	->	value	.	i	-	1	)	/	RTL8366RB_BDTH_UNIT
val	->	value	.	i	-	1	/	RTL8366RB_BDTH_UNIT
val	->	value	.	i	|	(	RTL8366RB_QOS_DEFAULT_PREIFG	<<	RTL8366RB_IB_PREIFG_OFFSET	)

val	->	value	.	i	>	0	&&	val	->	value	.	i	<	RTL8366RB_BDTH_SW_MAX

(	val	->	value	.	i	-	1	)	/	RTL8366RB_BDTH_UNIT
val	->	value	.	i	-	1	/	RTL8366RB_BDTH_UNIT
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	ep	->	speed_hi	<<	16	)	|	ep	->	speed

(	ETHTOOL_RX_FLOW_SPEC_RING_VF	&	ring_cookie	)	>>	ETHTOOL_RX_FLOW_SPEC_RING_VF_OFF
ETHTOOL_RX_FLOW_SPEC_RING_VF	&	ring_cookie	>>	ETHTOOL_RX_FLOW_SPEC_RING_VF_OFF
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	id	+	1	)	%	2
id	+	1	%	2
(	id	+	1	)	%	2
id	+	1	%	2
(	id	+	1	)	%	2
id	+	1	%	2
0x000e	+	0x20	*	(	_p	)

(	mib	->	offset	+	1	)	%	4
mib	->	offset	+	1	%	4
(	index	&	RTL8367_VLAN_PVID_CTRL_MASK	)	<<	RTL8367_VLAN_PVID_CTRL_SHIFT	(	port	)
index	&	RTL8367_VLAN_PVID_CTRL_MASK	<<	RTL8367_VLAN_PVID_CTRL_SHIFT	(	port	)
vlan	==	0	||	vlan	>=	max

priv	->	vlan_tagged	&	(	1	<<	i	)

~	(	1	<<	p	->	id	)
~	1	<<	p	->	id
~	(	1	<<	p	->	id	)
~	1	<<	p	->	id
(	i	<<	1	)	&	priv	->	vlan_tagged

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

++	retry_cnt	>	RTL8366_SMI_ACK_RETRY_COUNT

(	port	>=	5	)	||	!	enabled

i	<	RTL8306_NUM_PORTS	-	1

i	<	RTL8306_NUM_PORTS	-	1

(	1	<<	i	)	==	cpu_mask

(	(	1	<<	RTL8306_NUM_PORTS	)	-	1	)	&	~	cpu_mask
(	1	<<	RTL8306_NUM_PORTS	-	1	)	&	~	cpu_mask
cpu_mask	|	(	1	<<	i	)

attr	->	id	+	(	val	->	port_vlan	*	attr	->	ofs	)

attr	->	id	+	(	val	->	port_vlan	*	attr	->	ofs	)

!	(	mask	&	(	1	<<	i	)	)
!	mask	&	(	1	<<	i	)
!	(	oldmask	&	(	1	<<	i	)	)
!	oldmask	&	(	1	<<	i	)
pdev	->	addr	!=	0	&&	pdev	->	addr	!=	4

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	ep	->	speed_hi	<<	16	)	|	ep	->	speed

(	ETHTOOL_RX_FLOW_SPEC_RING_VF	&	ring_cookie	)	>>	ETHTOOL_RX_FLOW_SPEC_RING_VF_OFF
ETHTOOL_RX_FLOW_SPEC_RING_VF	&	ring_cookie	>>	ETHTOOL_RX_FLOW_SPEC_RING_VF_OFF
(	id1	<<	6	)	|	(	(	id2	>>	10	)	&	0x3f	)

(	id2	>>	4	)	&	0x3f

~	(	1	<<	state	->	regs	->	ROUTER_EN_BIT	)
~	1	<<	state	->	regs	->	ROUTER_EN_BIT
~	(	1	<<	state	->	regs	->	TAG_VLAN_BIT	)
~	1	<<	state	->	regs	->	TAG_VLAN_BIT
~	(	(	state	->	regs	->	NUMLAN_GROUPS_MAX	-	1	)	<<	state	->	regs	->	NUMLAN_GROUPS_BIT	)
~	(	state	->	regs	->	NUMLAN_GROUPS_MAX	-	1	)	<<	state	->	regs	->	NUMLAN_GROUPS_BIT
(	state	->	num_vlans	-	1	)	<<	state	->	regs	->	NUMLAN_GROUPS_BIT

j	%	2	==	0

j	%	2	==	0

(	1	<<	state	->	regs	->	NUM_PORTS	)	-	1
1	<<	state	->	regs	->	NUM_PORTS	-	1
state	->	add_tag	&	(	1	<<	j	)

state	->	remove_tag	&	(	1	<<	j	)

(	1	<<	state	->	regs	->	NUM_PORTS	)	-	1
1	<<	state	->	regs	->	NUM_PORTS	-	1
(	state	->	add_tag	>>	b	)	&	1

i	<	state	->	regs	->	NUM_PORTS	-	1

state	->	add_tag	&	(	1	<<	val	->	port_vlan	)

state	->	remove_tag	&	(	1	<<	val	->	port_vlan	)

state	->	remove_tag	&	(	1	<<	val	->	port_vlan	)

~	(	1	<<	val	->	port_vlan	)
~	1	<<	val	->	port_vlan
~	(	1	<<	val	->	port_vlan	)
~	1	<<	val	->	port_vlan
~	(	1	<<	12	)
~	1	<<	12
~	(	1	<<	13	)
~	1	<<	13
speed	&	(	1	<<	11	)

speed	&	(	1	<<	11	)

speed	&	(	1	<<	10	)

ctrl	&	(	1	<<	12	)

!	(	status	&	(	1	<<	5	)	)
!	status	&	(	1	<<	5	)
ctrl	&	(	1	<<	13	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

!	is5325	(	dev	)	&&	!	is5365	(	dev	)

!	is5325	(	dev	)	&&	!	is5365	(	dev	)

!	(	vlan	->	members	&	BIT	(	i	)	)
!	vlan	->	members	&	BIT	(	i	)
!	(	vlan	->	untag	&	BIT	(	i	)	)
!	vlan	->	untag	&	BIT	(	i	)
!	(	BIT	(	port	)	&	dev	->	enabled_ports	)
!	BIT	(	port	)	&	dev	->	enabled_ports
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

!	!	(	state	^	button	->	active_low	)
!	!	state	^	button	->	active_low
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

!	p	||	chan	>=	p	->	nchan

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

ok	&&	!	done

increase	>	0	&&	smallIncreaseOk

!	alloc_failed	&&	blockIterator	>=	startIterator

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

!	inode	->	i_nlink	&&	!	is_bad_inode	(	inode	)

page	->	index	>	end_index	||	!	n_bytes

(	inode	->	i_size	+	511	)	>>	9

(	ipos	+	511	)	>>	9

(	inode	->	i_size	+	511	)	>>	9

options_str	&&	*	options_str	&&	!	error

(	sb	->	s_flags	&	MS_RDONLY	)	!=	0
sb	->	s_flags	&	MS_RDONLY	!=	0
!	mtd	->	erase	||	!	mtd	->	block_isbad	||	!	mtd	->	block_markbad	||	!	mtd	->	read	||	!	mtd	->	write

!	mtd	->	erase	||	!	mtd	->	read	||	!	mtd	->	write

buf	-	page	<	count

buf	-	page	<	count

!	done	&&	(	pos	<	count	)

end	>	buf	+	pos

allDone	&&	i	>=	0

!	hasData	&&	i	<	tnode_size_u32

hasData	==	0	&&	del0

i	<	10	&&	lowest	>	4

nBlocks	/	16	+	1

(	in_scan	>	0	)	&&	(	existingChunk	<=	0	||	(	(	existingSerial	+	1	)	&	3	)	==	newSerial	)
(	in_scan	>	0	)	&&	existingChunk	<=	0	||	(	existingSerial	+	1	)	&	3	==	newSerial
n	>	0	&&	chunkWritten	>=	0

pl	+	2	*	d

pn	-	2	*	d

i	<	n_bytes	&&	ok

i	<	n_bytes	&&	ok

(	~	col_parity	)	|	0x03

(	d0	|	d1	|	d2	)	==	0
d0	|	d1	|	d2	==	0
(	(	d0	^	(	d0	>>	1	)	)	&	0x55	)	==	0x55	&&	(	(	d1	^	(	d1	>>	1	)	)	&	0x55	)	==	0x55	&&	(	(	d2	^	(	d2	>>	1	)	)	&	0x54	)	==	0x54
(	d0	^	(	d0	>>	1	)	)	&	0x55	==	0x55	&&	(	d1	^	(	d1	>>	1	)	&	0x55	)	==	0x55	&&	(	(	d2	^	(	d2	>>	1	)	)	&	0x54	)	==	0x54
(	yaffs_count_bits	(	d0	)	+	yaffs_count_bits	(	d1	)	+	yaffs_count_bits	(	d2	)	)	==	1

(	cDelta	|	lDelta	|	lDeltaPrime	)	==	0
cDelta	|	lDelta	|	lDeltaPrime	==	0
lDelta	==	~	lDeltaPrime	&&	(	(	(	cDelta	^	(	cDelta	>>	1	)	)	&	0x15	)	==	0x15	)
lDelta	==	~	lDeltaPrime	&&	(	cDelta	^	(	cDelta	>>	1	)	&	0x15	==	0x15	)
(	yaffs_count_bits32	(	lDelta	)	+	yaffs_count_bits32	(	lDeltaPrime	)	+	yaffs_count_bits	(	cDelta	)	)	==	1

ecc	&&	ecc	<=	64

1	<<	(	ecc	&	7	)
1	<<	ecc	&	7
size	>	0	&&	(	size	<	xb_size	)	&&	(	pos	+	size	<	xb_size	)

pos	<	xb_size	-	sizeof	(	int	)

size	>	0	&&	(	size	<	xb_size	)	&&	(	pos	+	size	<	xb_size	)

pos	<	xb_size	-	sizeof	(	int	)

pos	>=	0	&&	pos	<	xb_size

pos	>=	0	&&	pos	<	xb_size

size	>	sizeof	(	int	)	&&	size	<=	xb_size	&&	(	pos	+	size	)	<	xb_size	&&	!	filled

ncopied	+	name_len	+	1	<	bsize

pos	<	xb_size	-	sizeof	(	int	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

!	allocator	||	!	allocator	->	tnode_cache

i	<	n_tnodes	-	1

i	<	n_obj	-	1

!	alloc_failed	&&	blockIterator	<=	endIterator

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

ones	>	RNDTEST_MONOBIT_MINONES	&&	ones	<	RNDTEST_MONOBIT_MAXONES

maxones	<	26	&&	maxzeros	<	26

sum	>=	1563181	&&	sum	<=	1576929

cap	->	cc_sessions	==	0	&&	cap	->	cc_koperations	==	0

2	*	crypto_drivers_num	<=	crypto_drivers_num

result	==	-	1

bufcnt	<	wantcnt	&&	bufcnt	<	NUM_INT

(	wantcnt	+	(	sizeof	(	int	)	*	8	)	)	/	(	sizeof	(	int	)	*	8	)
wantcnt	+	(	sizeof	(	int	)	*	8	)	/	(	sizeof	(	int	)	*	8	)
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

iov	++	,	iol	--

len	>	0	&&	i	<	skb_shinfo	(	skb	)	->	nr_frags

!	algo	||	!	*	algo

(	*	swd	)	->	sw_tfm	&&	!	IS_ERR	(	(	*	swd	)	->	sw_tfm	)

(	*	swd	)	->	sw_tfm	&&	!	IS_ERR	(	(	*	swd	)	->	sw_tfm	)

!	(	*	swd	)	->	sw_tfm	||	IS_ERR	(	(	*	swd	)	->	sw_tfm	)

(	cri	->	cri_klen	+	7	)	/	8
cri	->	cri_klen	+	7	/	8
(	cri	->	cri_klen	+	7	)	/	8
cri	->	cri_klen	+	7	/	8
(	cri	->	cri_klen	+	7	)	/	8
cri	->	cri_klen	+	7	/	8
(	*	swd	)	->	sw_type	&	(	SW_TYPE_HMAC	|	SW_TYPE_HASH	)
(	*	swd	)	->	sw_type	&	SW_TYPE_HMAC	|	SW_TYPE_HASH
(	cri	->	cri_klen	+	7	)	/	8
cri	->	cri_klen	+	7	/	8
len	+	sg_len	>	crd	->	crd_len

sg_len	<	crd	->	crd_len	&&	i	<	skb_shinfo	(	skb	)	->	nr_frags	&&	sg_num	<	SCATTERLIST_MAX

len	+	sg_len	>	crd	->	crd_len

sg_len	<	crd	->	crd_len	&&	sg_num	<	uiop	->	uio_iovcnt	&&	sg_num	<	SCATTERLIST_MAX

len	+	sg_len	>	crd	->	crd_len

crp	->	crp_ilen	-	crd	->	crd_inject	<	sw	->	u	.	hmac	.	sw_mlen

(	crd	->	crd_klen	+	7	)	/	8
crd	->	crd_klen	+	7	/	8
(	crd	->	crd_klen	+	7	)	/	8
crd	->	crd_klen	+	7	/	8
(	crd	->	crd_klen	+	7	)	/	8
crd	->	crd_klen	+	7	/	8
(	crd	->	crd_klen	+	7	)	/	8
crd	->	crd_klen	+	7	/	8
crp	->	crp_ilen	-	crd	->	crd_inject	<	sw	->	u	.	hmac	.	sw_mlen

!	ret	&&	olen	>	crd	->	crd_len

!	ret	&&	(	olen	+	crd	->	crd_inject	)	>	crp	->	crp_olen

hid	==	0	&&	typ	!=	0

cse	->	info	.	blocksize	&&	(	cop	->	len	%	cse	->	info	.	blocksize	)	!=	0

(	cse	->	info	.	blocksize	!=	0	)	+	(	cse	->	info	.	authsize	!=	0	)
cse	->	info	.	blocksize	!=	0	+	cse	->	info	.	authsize	!=	0
in	==	3	&&	out	==	1

in	==	6	&&	out	==	1

in	==	5	&&	out	==	2

in	==	7	&&	out	==	0

in	==	3	&&	out	==	1

find	->	crid	!=	-	1

sc	->	sc_ramsize	>=	(	1024	*	1024	)

sc	->	sc_irq	!=	-	1

1	+	(	(	sc	->	sc_ramsize	-	32768	)	/	ctxsize	)
1	+	(	sc	->	sc_ramsize	-	32768	/	ctxsize	)
dma	->	cmdu	==	0	&&	sc	->	sc_c_busy

dma	->	srcu	==	0	&&	sc	->	sc_s_busy

dma	->	dstu	==	0	&&	sc	->	sc_d_busy

dma	->	resu	==	0	&&	sc	->	sc_r_busy

i	++	,	u	--

mac	==	0	&&	cry	==	0

i	++	,	u	--

sc	->	sc_irq	!=	-	1

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

ses	->	ses_keysize	!=	128	&&	ses	->	ses_keysize	!=	192	&&	ses	->	ses_keysize	!=	256

(	(	encoffset	+	enccrd	->	crd_len	)	!=	(	macoffset	+	maccrd	->	crd_len	)	)	||	(	enccrd	->	crd_skip	<	maccrd	->	crd_skip	)

(	i	+	1	)	==	q	->	q_src_len

(	i	+	1	)	==	q	->	q_dst_len

(	q	->	q_has_dst	==	1	)	&&	q	->	q_dst_len	>	0

(	q	->	q_has_dst	==	1	)	&&	q	->	q_dst_len	>	0

(	desc	->	quad_cnt	+	1	)	/	2
desc	->	quad_cnt	+	1	/	2
(	(	macini	->	cri_klen	+	7	)	/	8	)	>	blksz
(	macini	->	cri_klen	+	7	/	8	)	>	blksz
(	macini	->	cri_klen	+	7	)	/	8
macini	->	cri_klen	+	7	/	8
sc	->	sc_lastchn	&	~	1

(	sc	->	sc_lastchn	+	1	)	%	sc	->	sc_num_channels
sc	->	sc_lastchn	+	1	%	sc	->	sc_num_channels
(	encini	->	cri_klen	-	63	)	/	64
encini	->	cri_klen	-	63	/	64
(	ses	->	keysz	+	1	)	*	8
ses	->	keysz	+	1	*	8
enccrd	&&	!	maccrd

!	enccrd	&&	maccrd

0xe0000000	+	(	sc	->	dma_pdev	->	devfn	<<	12	)
0xe0000000	+	sc	->	dma_pdev	->	devfn	<<	12
0xe0000000	+	(	sc	->	iob_pdev	->	devfn	<<	12	)
0xe0000000	+	sc	->	iob_pdev	->	devfn	<<	12
!	sc	->	dma_regs	||	!	sc	->	iob_regs

ring	->	irq	!=	-	1

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

++	(	sc	->	sc_back	)	==	sc	->	sc_ringtop

sc	->	sc_front	==	sc	->	sc_back	&&	sc	->	sc_nqchip	!=	0

maccrd	->	crd_skip	+	maccrd	->	crd_len	!=	oplen

++	(	sc	->	sc_spfree	)	==	sc	->	sc_springtop

++	(	sc	->	sc_dpfree	)	==	sc	->	sc_dpringtop

++	(	sc	->	sc_front	)	==	sc	->	sc_ringtop

++	re	==	sc	->	sc_ringtop

krp	->	krp_iparams	<	3	||	krp	->	krp_oparams	!=	1

i	<	(	mod_bits	+	7	)	/	8
i	<	mod_bits	+	7	/	8
(	res	->	crp_nbits	+	7	)	/	8
res	->	crp_nbits	+	7	/	8
sc	->	sc_irq	!=	-	1

sc	->	sc_irq	!=	-	1

(	encini	->	cri_klen	+	7	)	/	8
encini	->	cri_klen	+	7	/	8
(	macini	->	cri_klen	+	7	)	/	8
macini	->	cri_klen	+	7	/	8
(	macini	->	cri_klen	+	7	)	/	8
macini	->	cri_klen	+	7	/	8
(	chsel	+	1	)	&	(	sc	->	sc_num_channels	-	1	)

!	enccrd	&&	maccrd

(	enccrd	->	crd_klen	+	7	)	/	8
enccrd	->	crd_klen	+	7	/	8
sc	->	sc_irq	!=	-	1

(	cri	->	cri_klen	+	7	)	/	8
cri	->	cri_klen	+	7	/	8
(	cri	->	cri_klen	+	7	)	/	8
cri	->	cri_klen	+	7	/	8
(	cri	->	cri_klen	+	7	)	/	8
cri	->	cri_klen	+	7	/	8
(	cri	->	cri_klen	+	7	)	/	8
cri	->	cri_klen	+	7	/	8
(	cri	->	cri_klen	+	7	)	/	8
cri	->	cri_klen	+	7	/	8
(	cri	->	cri_klen	+	7	)	/	8
cri	->	cri_klen	+	7	/	8
(	cri	->	cri_klen	+	7	)	/	8
cri	->	cri_klen	+	7	/	8
(	cri	->	cri_klen	+	7	)	/	8
cri	->	cri_klen	+	7	/	8
(	cri	->	cri_klen	+	7	)	/	8
cri	->	cri_klen	+	7	/	8
(	cri	->	cri_klen	+	7	)	/	8
cri	->	cri_klen	+	7	/	8
(	(	IX_MBUF_MLEN	(	&	q	->	ixp_q_mbuf	)	*	8	)	+	72	+	511	)	/	8
(	IX_MBUF_MLEN	(	&	q	->	ixp_q_mbuf	)	*	8	)	+	72	+	511	/	8
ixp	->	ixp_ctx_id	!=	-	1

!	algo	||	!	*	algo

len	+	sg_len	>	crd	->	crd_len

sg_len	<	crd	->	crd_len	&&	i	<	skb_shinfo	(	skb	)	->	nr_frags	&&	sg_num	<	SCATTERLIST_MAX

len	+	sg_len	>	crd	->	crd_len

sg_len	<	crd	->	crd_len	&&	sg_num	<	uiop	->	uio_iovcnt	&&	sg_num	<	SCATTERLIST_MAX

len	+	sg_len	>	crd	->	crd_len

od	->	octo_encklen	/	8	-	1

od	->	octo_encklen	/	8	-	1

crypt_off	>	0	&&	auth_off	>	0

crypt_len	>	0	||	auth_len	>	0

crypt_off	>	0	&&	auth_off	>	0

crypt_len	>	0	||	auth_len	>	0

crypt_off	>	0	&&	auth_off	>	0

crypt_len	>	0	||	auth_len	>	0

crypt_off	>	0	&&	auth_off	>	0

crypt_len	>	0	||	auth_len	>	0

od	->	octo_encklen	/	8	-	1

crypt_off	>	0	&&	auth_off	>	0

crypt_off	>	0	&&	auth_len	>	0

od	->	octo_encklen	/	8	-	1

crypt_off	>	0	&&	auth_off	>	0

crypt_off	>	0	&&	auth_len	>	0

od	->	octo_encklen	/	8	-	1

crypt_off	>	0	&&	auth_off	>	0

crypt_off	>	0	&&	auth_len	>	0

od	->	octo_encklen	/	8	-	1

crypt_off	>	0	&&	auth_off	>	0

crypt_off	>	0	&&	auth_len	>	0

c	&&	i	<	2

!	macini	&&	!	encini

(	encini	->	cri_klen	+	7	)	/	8
encini	->	cri_klen	+	7	/	8
(	macini	->	cri_klen	+	7	)	/	8
macini	->	cri_klen	+	7	/	8
i	<	skb_shinfo	(	skb	)	->	nr_frags	&&	sg_num	<	SCATTERLIST_MAX

sg_len	<	crp	->	crp_ilen	&&	sg_num	<	uiop	->	uio_iovcnt	&&	sg_num	<	SCATTERLIST_MAX

(	enccrd	->	crd_klen	+	7	)	/	8
enccrd	->	crd_klen	+	7	/	8
(	maccrd	->	crd_klen	+	7	)	/	8
maccrd	->	crd_klen	+	7	/	8
od	->	octo_encklen	/	8	-	1

od	->	octo_encklen	/	8	-	1

crypt_off	>	0	&&	auth_off	>	0

crypt_len	>	0	||	auth_len	>	0

crypt_off	>	0	&&	auth_off	>	0

crypt_len	>	0	||	auth_len	>	0

crypt_off	>	0	&&	auth_off	>	0

crypt_len	>	0	||	auth_len	>	0

crypt_off	>	0	&&	auth_off	>	0

crypt_len	>	0	||	auth_len	>	0

od	->	octo_encklen	/	8	-	1

crypt_off	>	0	&&	auth_off	>	0

crypt_off	>	0	&&	auth_len	>	0

od	->	octo_encklen	/	8	-	1

crypt_off	>	0	&&	auth_off	>	0

crypt_off	>	0	&&	auth_len	>	0

od	->	octo_encklen	/	8	-	1

crypt_off	>	0	&&	auth_off	>	0

crypt_off	>	0	&&	auth_len	>	0

od	->	octo_encklen	/	8	-	1

crypt_off	>	0	&&	auth_off	>	0

crypt_off	>	0	&&	auth_len	>	0

tt_end	.	tv_usec	+	tt_end	.	tv_sec	*	1000000

tt_end	.	tv_usec	+	tt_end	.	tv_sec	*	1000000

crp	->	crp_ilen	>	64	*	1024

auth	&&	(	encrypt	||	decrypt	)
auth	&&	encrypt	||	decrypt
(	decrypt	)	&&	!	(	cesa_ocf_cur_ses	->	auth_tn_decrypt	)

(	encrypt	)	&&	!	(	cesa_ocf_cur_ses	->	encrypt_tn_auth	)

cesa_ocf_cur_ses	->	sid_encrypt	!=	-	1

cesa_ocf_cur_ses	->	sid_decrypt	!=	-	1

cesa_ocf_cur_ses	->	frag_wa_encrypt	!=	-	1

cesa_ocf_cur_ses	->	frag_wa_decrypt	!=	-	1

cesa_ocf_cur_ses	->	frag_wa_auth	!=	-	1

50	*	2	+	1

sizeof	(	cesaDataHexStr3	)	+	sizeof	(	cesaHmacMd5digestHex3	)	+	8	*	2	+	1

sizeof	(	cesaDataHexStr3	)	+	sizeof	(	cesaHmacSha1digestHex3	)	+	8	*	2	+	1

(	cesaCheckMode	==	CESA_FULL_CHECK_MODE	)	||	(	cesaCheckMode	==	CESA_FAST_CHECK_MODE	)

pTestSession	->	sid	!=	-	1

sid	==	-	1

pTestSession	->	sid	==	-	1

sid	==	-	1

pTestSession	->	sid	==	-	1

t	<	(	ROUNDS	+	1	)	*	BC
t	<	ROUNDS	+	1	*	BC
!	(	(	keyLen	==	128	)	||	(	keyLen	==	192	)	||	(	keyLen	==	256	)	)
!	(	keyLen	==	128	)	||	(	keyLen	==	192	)	||	(	keyLen	==	256	)
i	<	keyLen	/	8

16	*	i	+	4	*	j	+	t

16	*	i	+	4	*	j	+	t

keyLen	!=	128	&&	keyLen	!=	192	&&	keyLen	!=	256

16	*	i	+	4	*	j	+	t

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	++	trc_index	)	==	TRACE_ARR_LEN

(	1000000	-	(	(	plast	)	->	tv	.	tv_usec	)	)	+	(	(	p	->	tv	.	tv_sec	-	(	(	plast	)	->	tv	.	tv_sec	)	-	1	)	*	1000000	)	+	p	->	tv	.	tv_usec
(	1000000	-	(	(	plast	)	->	tv	.	tv_usec	)	)	+	(	p	->	tv	.	tv_sec	-	(	(	plast	)	->	tv	.	tv_sec	)	-	1	*	1000000	)	+	p	->	tv	.	tv_usec
tblIdx	<	(	256	/	4	)

tblIdx	<	(	256	/	4	)

queue	!=	-	1

(	macH	>>	24	)	&	0xff

(	macH	>>	16	)	&	0xff

(	macH	>>	8	)	&	0xff

(	macL	>>	8	)	&	0xff

(	macL	>>	i	)	&	0x1

(	macH	>>	(	i	-	32	)	)	&	0x1

queue	==	-	1

queue	==	-	1

queue	==	-	1

queue	==	-	1

queue	==	-	1

~	(	0xFF	<<	(	8	*	regOffset	)	)
~	0xFF	<<	(	8	*	regOffset	)
~	(	0xFF	<<	(	8	*	regOffset	)	)
~	0xFF	<<	(	8	*	regOffset	)
(	0x01	|	(	queue	<<	1	)	)	<<	(	8	*	regOffset	)
0x01	|	(	queue	<<	1	)	<<	(	8	*	regOffset	)
ETH_DA_FILTER_SPEC_MCAST_BASE	(	ethPortNum	)	+	tblOffset	*	4

queue	==	-	1

~	(	0xFF	<<	(	8	*	regOffset	)	)
~	0xFF	<<	(	8	*	regOffset	)
~	(	0xFF	<<	(	8	*	regOffset	)	)
~	0xFF	<<	(	8	*	regOffset	)
(	0x01	|	(	queue	<<	1	)	)	<<	(	8	*	regOffset	)
0x01	|	(	queue	<<	1	)	<<	(	8	*	regOffset	)
ETH_DA_FILTER_SPEC_MCAST_BASE	(	ethPortNum	)	+	tblOffset	*	4

queue	==	-	1

~	(	0xFF	<<	(	8	*	regOffset	)	)
~	0xFF	<<	(	8	*	regOffset	)
~	(	0xFF	<<	(	8	*	regOffset	)	)
~	0xFF	<<	(	8	*	regOffset	)
(	0x01	|	(	queue	<<	1	)	)	<<	(	8	*	regOffset	)
0x01	|	(	queue	<<	1	)	<<	(	8	*	regOffset	)
(	regData	>>	(	5	*	port	)	)	&	0x1f

ix	==	(	rxDescNum	-	1	)

ix	==	(	txDescNum	-	1	)

(	access	!=	4	)	&&	(	access	!=	2	)	&&	(	access	!=	1	)

j	<	(	access	*	2	+	1	)

(	i	*	3	)	-	1

(	(	unsigned	int	)	get_byte	(	)	)	+	(	(	unsigned	int	)	get_byte	(	)	<<	8	)	+	(	(	unsigned	int	)	get_byte	(	)	<<	16	)	+	(	(	unsigned	int	)	get_byte	(	)	<<	24	)
(	(	unsigned	int	)	get_byte	(	)	)	+	(	unsigned	int	)	get_byte	(	)	<<	8	+	(	unsigned	int	)	get_byte	(	)	<<	16	+	(	(	unsigned	int	)	get_byte	(	)	<<	24	)
(	posSlot	>>	1	)	-	1
posSlot	>>	1	-	1
--	numDirectBits	!=	0

--	numDirectBits	!=	0

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

crc32_le	(	~	0	,	(	unsigned	char	*	)	&	uhdr	,	sizeof	(	uhdr	)	)	^	(	~	0	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	(	bus	->	number	&	0xff	)	<<	16	)	|	(	(	devfn	&	0xff	)	<<	8	)	|	(	where	&	0xfc	)
(	bus	->	number	&	0xff	<<	16	)	|	(	devfn	&	0xff	<<	8	)	|	(	where	&	0xfc	)
(	where	&	3	)	<<	3
where	&	3	<<	3
(	where	&	2	)	<<	4
where	&	2	<<	4
(	(	unsigned	int	)	offset	%	4	)	==	0

(	(	unsigned	char	*	)	&	val	)	+	(	offset	++	&	3	)
(	(	unsigned	char	*	)	&	val	)	+	offset	++	&	3
(	(	unsigned	int	)	get_byte	(	)	)	+	(	(	unsigned	int	)	get_byte	(	)	<<	8	)	+	(	(	unsigned	int	)	get_byte	(	)	<<	16	)	+	(	(	unsigned	int	)	get_byte	(	)	<<	24	)
(	(	unsigned	int	)	get_byte	(	)	)	+	(	(	unsigned	int	)	get_byte	(	)	<<	8	)	+	(	(	unsigned	int	)	get_byte	(	)	<<	16	)	+	(	unsigned	int	)	get_byte	(	)	<<	24
(	rd	->	Code	<<	8	)	|	ReadByte

(	rd	->	Code	<<	8	)	|	ReadByte

(	rd	->	Code	<<	8	)	|	ReadByte

mi	-	(	1	<<	numLevels	)
mi	-	1	<<	numLevels
(	matchByte	>>	7	)	&	1

(	symbol	<<	1	)	|	bit

(	posSlot	>>	1	)	-	1
posSlot	>>	1	-	1
~	(	0x1	<<	13	)
~	0x1	<<	13
~	(	0x1	<<	14	)
~	0x1	<<	14
i	<	(	hw	->	len	-	1	)

i	<	(	hw	->	len	-	1	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

port	->	speed	==	phydev	->	speed	&&	port	->	duplex	==	phydev	->	duplex

i	==	RX_DESCS	-	1

++	index	==	TX_DESCS

desc	->	cown	&&	alloc_count	+	received	<	RX_DESCS	-	1

++	i	==	RX_DESCS

(	tx_ring	->	num_used	+	nr_desc	+	1	)	>=	TX_DESCS

(	index0	+	nr_desc	)	%	TX_DESCS
index0	+	nr_desc	%	TX_DESCS
(	index_last	+	1	)	%	TX_DESCS
index_last	+	1	%	TX_DESCS
(	index	+	1	)	%	TX_DESCS
index	+	1	%	TX_DESCS
(	index	+	1	)	%	TX_DESCS
index	+	1	%	TX_DESCS
i	==	(	RX_DESCS	-	1	)

i	==	(	TX_DESCS	-	1	)

~	(	MAC0_STATUS_CHANGE	|	MAC1_STATUS_CHANGE	|	MAC2_STATUS_CHANGE	|	MAC0_RX_ERROR	|	MAC1_RX_ERROR	|	MAC2_RX_ERROR	)
~	MAC0_STATUS_CHANGE	|	MAC1_STATUS_CHANGE	|	MAC2_STATUS_CHANGE	|	MAC0_RX_ERROR	|	MAC1_RX_ERROR	|	MAC2_RX_ERROR
(	port	->	id	<<	16	)	|	(	0x4	<<	9	)

(	(	port	->	id	+	1	)	<<	16	)	|	(	0x4	<<	9	)

(	port	->	id	<<	16	)	|	(	0x4	<<	9	)

(	(	port	->	id	+	1	)	<<	16	)	|	(	0x4	<<	9	)

!	(	plat	->	ports	&	(	1	<<	i	)	)
!	plat	->	ports	&	(	1	<<	i	)
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	epd	->	bEndpointAddress	&	USB_ENDPOINT_DIR_MASK	)	==	USB_DIR_IN
epd	->	bEndpointAddress	&	USB_ENDPOINT_DIR_MASK	==	USB_DIR_IN
(	epd	->	bEndpointAddress	&	USB_ENDPOINT_DIR_MASK	)	==	USB_DIR_OUT
epd	->	bEndpointAddress	&	USB_ENDPOINT_DIR_MASK	==	USB_DIR_OUT
(	epd	->	bmAttributes	&	USB_ENDPOINT_XFERTYPE_MASK	)	==	USB_ENDPOINT_XFER_BULK
epd	->	bmAttributes	&	USB_ENDPOINT_XFERTYPE_MASK	==	USB_ENDPOINT_XFER_BULK
(	epd	->	bmAttributes	&	USB_ENDPOINT_XFERTYPE_MASK	)	==	USB_ENDPOINT_XFER_CONTROL
epd	->	bmAttributes	&	USB_ENDPOINT_XFERTYPE_MASK	==	USB_ENDPOINT_XFER_CONTROL
(	epd	->	bmAttributes	&	USB_ENDPOINT_XFERTYPE_MASK	)	==	USB_ENDPOINT_XFER_INT
epd	->	bmAttributes	&	USB_ENDPOINT_XFERTYPE_MASK	==	USB_ENDPOINT_XFER_INT
(	epd	->	bmAttributes	&	USB_ENDPOINT_XFERTYPE_MASK	)	==	USB_ENDPOINT_XFER_ISOC
epd	->	bmAttributes	&	USB_ENDPOINT_XFERTYPE_MASK	==	USB_ENDPOINT_XFER_ISOC
0	==	ep	||	0	==	req

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	!	urb	->	transfer_buffer	)	||	!	urb	->	transfer_dma	||	urb	->	transfer_dma	==	0xffffffff

!	urb	->	aligned_transfer_buffer	||	urb	->	aligned_transfer_buffer_length	<	urb	->	transfer_buffer_length

retry	++	<	250

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	t_left	>	0	)	&&	(	j	<	8	)

frame	>	-	1

status	!=	-	1

++	count	>	1000

++	count	>	10000

++	count	>	10000

++	count	>	100000

++	count	>	10000

ndx	==	-	1

ret	==	256	+	999

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

msg	->	len	-	i	>=	4

!	(	msg	->	flags	&	I2C_M_RD	)
!	msg	->	flags	&	I2C_M_RD
!	request_mem_region	(	res	->	start	,	res	->	end	-	res	->	start	+	1	,	pdev	->	name	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	__raw_readl	(	cchip	->	base	+	GPIO_INPUT	)	>>	pin	)	&	0x1

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

start_addr	&	~	(	lsize	-	1	)
start_addr	&	~	lsize	-	1
(	start_addr	+	size	-	1	)	&	~	(	lsize	-	1	)
(	start_addr	+	size	-	1	)	&	~	lsize	-	1
10	*	width	+	Ctod	(	*	fmt	++	)

prec	*	10	+	Ctod	(	*	fmt	++	)

i	<	length	-	1

i	<	length	-	len

negFlag	&&	!	ladjust

i	<	length	-	1

(	(	UART_READ	(	UART_LSR	)	)	&	UART_LSR_THRE	)	==	0
(	UART_READ	(	UART_LSR	)	)	&	UART_LSR_THRE	==	0
(	(	UART_READ	(	UART_LSR	)	)	&	UART_LSR_THRE	)	==	0
(	UART_READ	(	UART_LSR	)	)	&	UART_LSR_THRE	==	0
(	(	UART_READ	(	UART_LSR	)	)	&	UART_LSR_THRE	)	==	0
(	UART_READ	(	UART_LSR	)	)	&	UART_LSR_THRE	==	0
(	(	UART_READ	(	UART_LSR	)	)	&	UART_LSR_THRE	)	==	0
(	UART_READ	(	UART_LSR	)	)	&	UART_LSR_THRE	==	0
prop0	>=	(	9	*	5	)

(	posSlot	>>	1	)	-	1
posSlot	>>	1	-	1
--	numDirectBits	!=	0

--	numDirectBits	!=	0

(	READREG	(	ASC_FSTAT	)	&	TXMASK	)	>>	TXOFFSET
READREG	(	ASC_FSTAT	)	&	TXMASK	>>	TXOFFSET
10	*	width	+	Ctod	(	*	fmt	++	)

prec	*	10	+	Ctod	(	*	fmt	++	)

i	<	length	-	1

i	<	length	-	len

negFlag	&&	!	ladjust

i	<	length	-	1

*	(	flash_base	+	flash_ofs	++	)
*	flash_base	+	flash_ofs	++
flash_base	+	(	flash_ofs	&	flash_ofs_mask	)
flash_base	+	flash_ofs	&	flash_ofs_mask
kofs	==	0	||	kofs	>	65536

prop0	>=	(	9	*	5	)

(	posSlot	>>	1	)	-	1
posSlot	>>	1	-	1
--	numDirectBits	!=	0

--	numDirectBits	!=	0

(	UART_READ	(	UART_REG_FLAG	)	&	UART_FLAG_TXFE	)	==	0
UART_READ	(	UART_REG_FLAG	)	&	UART_FLAG_TXFE	==	0
(	UART_READ	(	UART_REG_FLAG	)	&	UART_FLAG_TXFE	)	==	0
UART_READ	(	UART_REG_FLAG	)	&	UART_FLAG_TXFE	==	0
expect_close	&&	(	nowayout	==	0	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

trx_hdr	.	len	>	mtd	->	size	-	offset

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	ofs	&	BANK_START_MASK	)	>>	21
(	ofs	&	BANK_START_MASK	)	>>	21
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	desc	->	misc	>>	DESC_SRCPORT_SHIFT	)	&	DESC_SRCPORT_MASK

(	desc	->	misc	>>	DESC_PKTLEN_SHIFT	)	&	DESC_PKTLEN_MASK

(	desc	->	misc	&	DESC_IPCSUM_FAIL	)	!=	0
desc	->	misc	&	DESC_IPCSUM_FAIL	!=	0
cur_rxl	-	dirty_rxl	>	0

(	desc	->	buf1	&	DESC_EOR	)	|	DESC_OWN

(	desc	->	buf1	&	DESC_EOR	)	|	DESC_OWN	|	DESC_ADDR	(	skb	->	data	)
(	desc	->	buf1	&	DESC_EOR	)	|	DESC_OWN	|	DESC_ADDR	(	skb	->	data	)
dirty_rxl	+	RX_RING_SIZE	==	cur_rxl

(	pktlen	==	0	)	||	desc_ipcsum_fail	(	desc	)

cur_rxl	-	dirty_rxl	>	RX_RING_SIZE	/	4

(	++	dirty_txl	)	%	TX_RING_SIZE

(	cur_txl	-	dirty_txl	)	<	TX_QUEUE_LEN	-	4

num	-	1	==	i

cur_txl	==	dirty_txl	+	TX_QUEUE_LEN

*	prev	&&	*	prev	!=	td

1	<<	(	i	+	1	)

1	<<	(	i	-	7	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

*	prev	&&	*	prev	!=	td

1	<<	(	i	+	1	)

1	<<	(	i	-	7	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	(	bus	->	number	&	0xFF	)	<<	16	)	|	(	(	devfn	&	0xFF	)	<<	8	)	|	(	where	&	0xFC	)
(	bus	->	number	&	0xFF	<<	16	)	|	(	devfn	&	0xFF	<<	8	)	|	(	where	&	0xFC	)
(	where	&	3	)	<<	3
where	&	3	<<	3
(	where	&	2	)	<<	4
where	&	2	<<	4
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	ep	->	speed_hi	<<	16	)	|	ep	->	speed

(	ETHTOOL_RX_FLOW_SPEC_RING_VF	&	ring_cookie	)	>>	ETHTOOL_RX_FLOW_SPEC_RING_VF_OFF
ETHTOOL_RX_FLOW_SPEC_RING_VF	&	ring_cookie	>>	ETHTOOL_RX_FLOW_SPEC_RING_VF_OFF
len	+	9	>	CMDLINE_MAX

p	<	(	ptr	+	SEARCH_SPACE	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

readl_relaxed	(	mcs814x	->	regs	+	GPIO_PIN	)	&	(	1	<<	offset	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	ep	->	speed_hi	<<	16	)	|	ep	->	speed

(	ETHTOOL_RX_FLOW_SPEC_RING_VF	&	ring_cookie	)	>>	ETHTOOL_RX_FLOW_SPEC_RING_VF_OFF
ETHTOOL_RX_FLOW_SPEC_RING_VF	&	ring_cookie	>>	ETHTOOL_RX_FLOW_SPEC_RING_VF_OFF
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	ep	->	speed_hi	<<	16	)	|	ep	->	speed

(	ETHTOOL_RX_FLOW_SPEC_RING_VF	&	ring_cookie	)	>>	ETHTOOL_RX_FLOW_SPEC_RING_VF_OFF
ETHTOOL_RX_FLOW_SPEC_RING_VF	&	ring_cookie	>>	ETHTOOL_RX_FLOW_SPEC_RING_VF_OFF
phydev	->	link	&&	(	priv	->	old_duplex	!=	phydev	->	duplex	)

!	(	status	&	(	1	<<	30	)	)
!	status	&	(	1	<<	30	)
status	&	(	1	<<	31	)

(	!	(	status	&	(	1	<<	18	)	)	)	||	(	status	&	ERROR_FILTER_MASK	)
(	!	status	&	(	1	<<	18	)	)	||	(	status	&	ERROR_FILTER_MASK	)
status	&	(	1	<<	29	)

status	&	(	1	<<	27	)

status	&	(	1	<<	28	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	clk	->	usecount	==	0	)	&&	(	clk	->	ops	->	enable	)

(	clk	->	usecount	==	0	)	&&	(	clk	->	ops	->	enable	)

!	clk	->	ops	||	!	clk	->	ops	->	get_parent

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	!	*	flash_base	)	||	(	!	*	flash_end	)

!	bootcfg_name	||	!	flash_base	||	!	flash_end

!	end_ptr	||	!	base_ptr

i	<	sect_info	.	num_sects	&&	i	<	MAX_NUM_PARTITIONS

i	<	sect_info	.	num_sects	&&	i	<	MAX_NUM_PARTITIONS

(	(	unsigned	int	)	offset	%	4	)	==	0

(	(	unsigned	char	*	)	&	val	)	+	(	offset	++	&	3	)
(	(	unsigned	char	*	)	&	val	)	+	offset	++	&	3
(	(	struct	trx_header	*	)	data	)	->	magic	!=	TRX_MAGIC	&&	(	(	struct	trx_header	*	)	data	)	->	magic	!=	EDIMAX_PS_HEADER_MAGIC

(	(	unsigned	int	)	get_byte	(	)	)	+	(	(	unsigned	int	)	get_byte	(	)	<<	8	)	+	(	(	unsigned	int	)	get_byte	(	)	<<	16	)	+	(	(	unsigned	int	)	get_byte	(	)	<<	24	)
(	(	unsigned	int	)	get_byte	(	)	)	+	(	unsigned	int	)	get_byte	(	)	<<	8	+	(	(	unsigned	int	)	get_byte	(	)	<<	16	)	+	(	(	unsigned	int	)	get_byte	(	)	<<	24	)
(	rd	->	Code	<<	8	)	|	ReadByte

(	rd	->	Code	<<	8	)	|	ReadByte

(	rd	->	Code	<<	8	)	|	ReadByte

mi	-	(	1	<<	numLevels	)
mi	-	1	<<	numLevels
(	matchByte	>>	7	)	&	1

(	symbol	<<	1	)	|	bit

(	posSlot	>>	1	)	-	1
posSlot	>>	1	-	1
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	ep	->	speed_hi	<<	16	)	|	ep	->	speed

(	ETHTOOL_RX_FLOW_SPEC_RING_VF	&	ring_cookie	)	>>	ETHTOOL_RX_FLOW_SPEC_RING_VF_OFF
ETHTOOL_RX_FLOW_SPEC_RING_VF	&	ring_cookie	>>	ETHTOOL_RX_FLOW_SPEC_RING_VF_OFF
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

!	e1	||	!	e2

e1	->	left	.	sym	==	e2	->	left	.	sym	&&	e1	->	right	.	sym	==	e2	->	right	.	sym

dep	->	left	.	sym	==	sym	||	dep	->	right	.	sym	==	sym

(	last_line_length	+	extra_length	)	>	gs	->	max_width

*	p2	&&	!	isspace	(	*	p2	)
p2	&&	!	isspace	(	*	p2	*	p2	&&	!	isspace	(	*	p2	)
sym_has_value	(	sym	)	&&	!	sym_is_choice_value	(	sym	)

!	sym_is_optional	(	cs	)	&&	sym	==	ds

!	stat	(	name	,	&	st	)	&&	S_ISDIR	(	st	.	st_mode	)
stat	(	name	,	&	st	)	&&	S_ISDIR	(	st	.	st_mode	!	stat	(	name	,	&	st	)	&&	S_ISDIR	(	st	.	st_mode	)
!	env	||	!	*	env

fd	==	-	1

fd	==	-	1

def	==	cnt	++

!	child	->	sym	||	!	menu_is_visible	(	child	)

!	--	cnt

(	input_mode	==	silentoldconfig	||	input_mode	==	listnewconfig	||	input_mode	==	olddefconfig	)	&&	rootEntry	!=	menu
input_mode	==	silentoldconfig	||	input_mode	==	listnewconfig	||	input_mode	==	olddefconfig	&&	rootEntry	!=	menu
sym	&&	!	sym_has_value	(	sym	)

sym	->	name	&&	!	sym_is_choice_value	(	sym	)

!	conf_cnt	++

(	now	.	tv_sec	+	1	)	*	(	now	.	tv_usec	+	1	)
(	now	.	tv_sec	+	1	)	*	now	.	tv_usec	+	1
conf_cnt	&&	(	input_mode	!=	listnewconfig	&&	input_mode	!=	olddefconfig	)

(	output_file	||	conf_get_changed	(	)	)	&&	conf_write	(	output_file	)
output_file	||	conf_get_changed	(	)	&&	conf_write	(	output_file	)
show_all_options	&&	!	menu_has_prompt	(	menu	)

prop	&&	menu	!=	current_menu

menu_is_visible	(	child	)	&&	child	->	sym	==	def_sym

sym_has_value	(	sym	)	||	!	sym_is_changable	(	sym	)

sym_has_value	(	sym	)	||	!	sym_is_changable	(	sym	)

val	>=	sym_get_range_val	(	prop	->	expr	->	left	.	sym	,	10	)	&&	val	<=	sym_get_range_val	(	prop	->	expr	->	right	.	sym	,	10	)

val	>=	sym_get_range_val	(	prop	->	expr	->	left	.	sym	,	16	)	&&	val	<=	sym_get_range_val	(	prop	->	expr	->	right	.	sym	,	16	)

(	hash	^	*	s	)	*	0x01000193
hash	^	*	s	*	0x01000193
cnt	+	1	>=	size

sym2	&&	sym_is_choice_value	(	sym2	)	&&	prop_get_symbol	(	sym_get_choice_prop	(	sym2	)	)	==	choice

!	menu_validate_number	(	sym	,	prop	->	expr	->	left	.	sym	)	||	!	menu_validate_number	(	sym	,	prop	->	expr	->	right	.	sym	)

sym	&&	sym_is_choice	(	sym	)	&&	menu	->	sym	&&	!	sym_is_choice_value	(	menu	->	sym	)

menu	->	list	&&	(	!	menu	->	prompt	||	!	menu	->	prompt	->	text	)
menu	->	list	&&	!	menu	->	prompt	||	!	menu	->	prompt	->	text
sym_is_choice	(	sym	)	&&	!	parent	->	prompt

sym	&&	!	sym_is_optional	(	sym	)	&&	parent	->	prompt

menu	!=	&	rootmenu	&&	i	<	8

--	i	>=	0

head	&&	location	&&	menu	==	location

height	<	19	||	width	<	80

prompt_len	<=	width	-	x	*	2

i	<	y	+	height	+	1

(	!	in_paren	)	&&	isalpha	(	c	)	&&	strchr	(	exempt	,	c	)	==	0

i	++	==	n

(	height	<	item_no	)	&&	(	scroll	+	choice	<	item_no	-	1	)

width	/	2	-	11

(	width	-	list_width	)	/	2	-	1
width	-	list_width	/	2	-	1
(	list_width	-	check_x	)	/	2
list_width	-	check_x	/	2
choice	==	max_choice	-	1

scroll	+	choice	>=	item_count	(	)	-	1

end_reached	&&	!	passed_end

(	page	-	buf	)	*	100	/	strlen	(	buf	)
page	-	buf	*	100	/	strlen	(	buf	)
width	/	2	-	11

(	width	-	box_width	)	/	2
width	-	box_width	/	2
button	==	-	1

input_x	<	box_width	-	1

input_x	==	box_width	-	1

key	<	0x100	&&	isprint	(	key	)

input_x	==	box_width	-	1

button	==	-	1

width	/	2	-	10

(	height	<	item_no	)	&&	(	scroll	+	height	<	item_no	)

width	/	2	-	28

(	width	-	menu_width	)	/	2	-	1
width	-	menu_width	/	2	-	1
(	menu_width	-	70	)	/	2
menu_width	-	70	/	2
selected	&&	(	selected	==	item_data	(	)	)

(	scroll	<=	choice	)	&&	(	scroll	+	max_choice	>	choice	)	&&	(	scroll	>=	0	)	&&	(	scroll	+	max_choice	<=	item_count	(	)	)

choice	>=	item_count	(	)	-	max_choice	/	2

choice	-	max_choice	/	2

key	<	256	&&	isalpha	(	key	)

choice	<	2	&&	scroll

(	choice	>	max_choice	-	3	)	&&	(	scroll	+	max_choice	<	item_count	(	)	)

scroll	+	max_choice	<	item_count	(	)

choice	+	1	<	max_choice

lseek	(	fd	,	size	-	n	,	SEEK_SET	)	==	(	off_t	)	-	1

size	&&	!	n

c	==	-	1

cur_len	!=	sizeof	(	struct	trx_header	)	-	4

maxlen	&	(	ROUND	-	1	)

maxlen	&	(	ROUND	-	1	)

-	n2	>	cur_len

!	fwrite	(	buf	,	cur_len	,	1	,	out	)	||	fflush	(	out	)

3	*	sizeof	(	struct	fw_header	)	+	kernel_info	.	file_size	+	rootfs_info	.	file_size	+	3	*	sizeof	(	struct	fw_tail	)

c	==	-	1

(	offset	+	1	)	%	p_len
offset	+	1	%	p_len
optind	!=	argc	||	optind	==	1

(	total	%	align	)	==	0

align	-	(	total	%	align	)

align	==	0	||	(	(	(	section	->	raw_size	+	section	->	offset	)	%	align	)	==	0	)
align	==	0	||	(	(	section	->	raw_size	+	section	->	offset	%	align	)	==	0	)
(	section	->	raw_size	+	section	->	offset	)	%	align
section	->	raw_size	+	section	->	offset	%	align
align	==	0	||	(	(	(	section	->	raw_size	+	(	EXTRA_BLOCK	+	4	+	squash_padding	)	)	%	align	)	==	0	)
align	==	0	||	(	(	section	->	raw_size	+	(	EXTRA_BLOCK	+	4	+	squash_padding	)	%	align	)	==	0	)
(	section	->	raw_size	+	(	EXTRA_BLOCK	+	4	+	squash_padding	)	)	%	align
section	->	raw_size	+	(	EXTRA_BLOCK	+	4	+	squash_padding	)	%	align
(	(	crc	>>	24	)	^	*	cp	++	)	&	0xFF
(	crc	>>	24	)	^	*	cp	++	&	0xFF
~	crc	&	0xFFFFFFFF

(	(	crc	>>	24	)	^	*	cp	++	)	&	0xFF
(	crc	>>	24	)	^	*	cp	++	&	0xFF
(	(	crc	>>	24	)	^	length	)	&	0xFF
(	crc	>>	24	)	^	length	&	0xFF
~	crc	&	0xFFFFFFFF

(	(	crc	>>	24	)	^	*	cp	++	)	&	0xFF
(	crc	>>	24	)	^	*	cp	++	&	0xFF
(	(	crc	>>	24	)	^	*	cp	++	)	&	0xFF
(	crc	>>	24	)	^	*	cp	++	&	0xFF
(	(	crc	>>	24	)	^	length	)	&	0xFF
(	crc	>>	24	)	^	length	&	0xFF
~	crc	&	0xFFFFFFFF

(	index	<	0	)	||	(	index	>	25	)

index	<	0	||	index	>	25

(	option	<	0	)	||	(	option	>	25	)

(	fkd	<	0	)	||	(	ffd	<	0	)

(	(	lenk	-	1	+	JFFS2	)	/	JFFS2	)	*	JFFS2	-	lenk
(	lenk	-	1	+	JFFS2	/	JFFS2	)	*	JFFS2	-	lenk
(	(	lenk	-	1	+	JFFS2	)	/	JFFS2	)	*	JFFS2
(	lenk	-	1	+	JFFS2	/	JFFS2	)	*	JFFS2
(	(	argc	-	optind	)	<	1	)	&&	(	(	argc	-	optind	)	>	3	)

(	argc	-	optind	)	==	3

(	argc	-	optind	)	==	2

(	len	>>	8	)	&	0xff

(	len	>>	16	)	&	0xff

(	len	>>	24	)	&	0xff

(	ntohl	(	*	(	(	uint32_t	*	)	(	buf	+	0x8	)	)	)	==	MagicS	)	&&	(	(	ntohl	(	*	(	(	uint32_t	*	)	(	buf	+	0x4	)	)	)	==	MagicE	)	)

(	len	-	8	)	&	0xff

(	(	len	-	8	)	>>	8	)	&	0xff

(	(	len	-	8	)	>>	16	)	&	0xff

(	(	len	-	8	)	>>	24	)	&	0xff

buf	+	(	(	l0	>>	1	)	-	(	(	l0	&	0x6	)	>>	1	)	)
buf	+	(	l0	>>	1	-	(	l0	&	0x6	)	>>	1	)
(	sum	>>	8	)	&	0xff

(	sum	>>	16	)	&	0xff

(	sum	>>	24	)	&	0xff

(	j	+	1	)	%	keylen
j	+	1	%	keylen
(	i	+	1	)	%	state_len
i	+	1	%	state_len
4	-	ret	%	4

(	Count	%	32	)	==	0

Data	>>	(	i	*	8	)

~	CheckSum	+	1

Address	!=	(	AddressCurrent	+	1	)

Address	!=	(	AddressCurrent	+	1	)

!	isxdigit	(	*	scp	++	)
isxdigit	(	*	scp	++	!	isxdigit	(	*	scp	++	)
(	count	*	2	)	!=	strlen	(	pSrecLine	)

(	sts	)	&&	(	rlen	!=	-	1	)

c	==	-	1

(	crc	^	*	p	++	)	&	0xff
crc	^	*	p	++	&	0xff
hdr	.	len	==	0	&&	strncmp	(	buf	,	TRX_MAGIC	,	strlen	(	TRX_MAGIC	)	)	!=	0

(	strlen	(	p	->	name	)	!=	0	)	&&	(	strncmp	(	p	->	name	,	board_name	,	sizeof	(	board_name	)	)	!=	0	)

filelength	(	rootfsfile	)	+	kernel	->	partition_length	>	p	->	firmware_max_length

im	->	part_count	==	0	||	im	->	part_count	>	MAX_SECTIONS

len	==	0	||	len	>	16

md5_file	(	input_file_name	,	(	uint8_t	*	)	&	header	->	md5sum	)	<	0

i	<	sizeof	(	FIRMWARE_TYPES	)	/	sizeof	(	firmware_type	)

i	<	sizeof	(	FIRMWARE_TYPES	)	/	sizeof	(	firmware_type	)

n	<	1	<<	BPB

poly	^	(	crc	>>	1	)

endptr	==	optarg	||	*	endptr	!=	0

(	magic	>>	0	)	&	0xff

(	magic	>>	8	)	&	0xff

(	magic	>>	16	)	&	0xff

(	magic	>>	24	)	&	0xff

(	crc	>>	0	)	&	0xff

(	crc	>>	8	)	&	0xff

(	crc	>>	16	)	&	0xff

(	crc	>>	24	)	&	0xff

c	==	-	1

pos	>=	0	&&	rem	>	1	&&	hd_id

i	<	(	st	.	st_size	+	DNI_HDR_LEN	)

n	<	1	<<	BPB

poly	^	(	crc	>>	1	)

(	crc	^	*	data	++	)	&	0xFF
crc	^	*	data	++	&	0xFF
optind	!=	argc	||	optind	==	1

i	<	sizeof	(	p	)	/	sizeof	(	int	)

(	c	>>	1	)	^	e

(	t	^	*	p	++	)	&	0xff
t	^	*	p	++	&	0xff
(	ff	->	flags	&	BLOCK_FLAG_HAVEHDR	)	==	0
ff	->	flags	&	BLOCK_FLAG_HAVEHDR	==	0
(	b	->	addr	+	b	->	blocklen	)	>	flash_size

(	part	->	addr	+	part	->	size	)	>	flash_size

(	block	->	flags	&	BLOCK_FLAG_HAVEHDR	)	!=	0
block	->	flags	&	BLOCK_FLAG_HAVEHDR	!=	0
(	b	->	flags	&	BLOCK_FLAG_HAVEHDR	)	!=	0
b	->	flags	&	BLOCK_FLAG_HAVEHDR	!=	0
!	multiple_option	&&	prev_given	&&	(	*	prev_given	||	(	check_ambiguity	&&	*	field_given	)	)
!	multiple_option	&&	prev_given	&&	*	prev_given	||	(	check_ambiguity	&&	*	field_given	)
found	==	-	2

found	==	-	2

field_given	&&	*	field_given	&&	!	override

!	no_free	&&	*	string_field

c	==	-	1

fwrite	(	img	+	ROOTFS_START	,	1	,	ROOTFS_SIZE	,	fp	)	!=	ROOTFS_SIZE

fwrite	(	img	+	KERNEL_START	,	1	,	KERNEL_SIZE	,	fp	)	!=	KERNEL_SIZE

i	<	ROOTFS_START	+	ROOTFS_SIZE

fread	(	img	+	ROOTFS_START	,	1	,	size	,	fp	)	!=	size

i	<	KERNEL_START	+	KERNEL_SIZE

fread	(	img	+	KERNEL_START	,	1	,	size	,	fp	)	!=	size

(	sum	>>	8	)	&	0xff

i	+	1	>=	argc

i	+	1	>=	argc

i	+	1	>=	argc

i	+	1	>=	argc

i	+	1	>=	argc

(	do_read_rootfs	&&	do_write_rootfs	)	||	(	do_read_kernel	&&	do_write_kernel	)

j	*	16	+	i

j	*	16	+	i

*	size	!=	-	1

(	n	+	1	)	>=	argc

n	<	1	<<	BPB

poly	^	(	crc	>>	1	)

c	==	-	1

n	<	1	<<	BPB

poly	^	(	crc	>>	1	)

c	==	-	1

endptr	==	optarg	||	*	endptr	!=	0

0x84	+	reg	+	(	reg	<<	5	)
0x84	+	reg	+	reg	<<	5
4	*	(	argc	+	1	)
4	*	argc	+	1
i	*	4	+	0

i	*	4	+	1

i	*	4	+	2

i	*	4	+	3

offset	>	(	board	->	romio_offs	+	board	->	bootext_size	)

(	offset	-	board	->	romio_offs	)	<	board	->	bootext_size

c	==	-	1

c	==	-	1

c	==	-	1

c	==	-	1

~	(	alignment	-	1	)
~	alignment	-	1
~	t	+	1

~	css	->	val	+	1

c	==	-	1

crc	^	(	(	(	int	)	new	)	<<	8	)

(	(	crc16	>>	8	)	&	0xFF	)	|	(	(	crc16	<<	8	)	&	0xFF00	)

!	feof	(	from	)	&&	!	ferror	(	from	)

!	feof	(	fh	)	&&	!	ferror	(	fh	)

(	(	metasize	+	3	)	/	4	)	*	4
(	metasize	+	3	/	4	)	*	4
(	val	>>	24	)	&	0xff

(	val	>>	16	)	&	0xff

(	val	>>	8	)	&	0xff

(	val	>>	24	)	&	0xff

(	val	>>	16	)	&	0xff

(	val	>>	8	)	&	0xff

c	==	-	1

kernelfd	==	-	1

kernelsize	==	-	1

rootfsfd	==	-	1

rootfssize	==	-	1

outfd	==	-	1

kernelfd	!=	-	1

rootfsfd	!=	-	1

outfd	!=	-	1

~	(	alignment	-	1	)
~	alignment	-	1
~	t	+	1

~	css	->	val	+	1

!	is_empty_arg	(	p	)	&&	(	str2u8	(	p	,	&	block	->	padc	)	!=	0	)

c	==	-	1

c	==	-	1

p	-	signature	>	MAX_MODEL_NAME_LEN

c	==	-	1

kernel_info	.	file_size	>	layout	->	fw_max_len	-	sizeof	(	struct	fw_header	)

kernel_len	+	rootfs_info	.	file_size	>	layout	->	fw_max_len	-	sizeof	(	struct	fw_header	)

kernel_info	.	file_size	>	rootfs_ofs	-	sizeof	(	struct	fw_header	)

rootfs_info	.	file_size	>	(	layout	->	fw_max_len	-	rootfs_ofs	)

(	len	<	layout	->	fw_max_len	)	&&	(	pad_mask	!=	0	)

(	len	&	(	mask	-	1	)	)	==	0
len	&	(	mask	-	1	)	==	0
!	fwrite	(	buf	+	ntohl	(	hdr	->	kernel_ofs	)	,	ntohl	(	hdr	->	kernel_len	)	,	1	,	fp	)

!	fwrite	(	buf	+	ntohl	(	hdr	->	rootfs_ofs	)	,	ntohl	(	hdr	->	rootfs_len	)	,	1	,	fp	)

c	==	-	1

2	<<	(	(	10	*	exp	)	-	1	)

2	<<	(	(	10	*	exp	)	-	1	)

2	<<	(	(	10	*	exp	)	-	1	)

(	sect	%	sectors	)	+	1

s	|	(	(	c	>>	2	)	&	0xC0	)

sect	+	cyl_size	-	(	sect	%	cyl_size	)

(	(	sect	-	1	)	/	kb_align	+	1	)	*	kb_align
(	sect	-	1	)	/	kb_align	+	1	*	kb_align
(	i	+	1	)	==	active

(	(	long	)	start	+	(	long	)	len	)	*	512
(	long	)	start	+	(	long	)	len	*	512
(	active	<	0	)	||	(	active	>	4	)

argc	||	(	heads	<=	0	)	||	(	sectors	<=	0	)	||	!	filename

(	crc	^	*	data	++	)	&	0xFF
crc	^	*	data	++	&	0xFF
!	kernel	||	!	rootfs

cfefile	&&	!	feof	(	cfefile	)	&&	!	ferror	(	cfefile	)

kernelfile	&&	!	feof	(	kernelfile	)	&&	!	ferror	(	kernelfile	)

rootfsfile	&&	!	feof	(	rootfsfile	)	&&	!	ferror	(	rootfsfile	)

kernelfile	&&	!	feof	(	kernelfile	)	&&	!	ferror	(	kernelfile	)

rootfsfile	&&	!	feof	(	rootfsfile	)	&&	!	ferror	(	rootfsfile	)

(	reg3	&	0x80	)	>>	0
reg3	&	0x80	>>	0
(	reg2	&	0x80	)	>>	1
reg2	&	0x80	>>	1
(	reg3	&	0x40	)	>>	1
reg3	&	0x40	>>	1
(	reg2	&	0x40	)	>>	2
reg2	&	0x40	>>	2
(	reg3	&	0x20	)	>>	2
reg3	&	0x20	>>	2
(	reg2	&	0x20	)	>>	3
reg2	&	0x20	>>	3
(	reg3	&	0x10	)	>>	3
reg3	&	0x10	>>	3
(	reg2	&	0x10	)	>>	4
reg2	&	0x10	>>	4
(	reg3	&	0x08	)	<<	4
reg3	&	0x08	<<	4
(	reg2	&	0x08	)	<<	3
reg2	&	0x08	<<	3
(	reg3	&	0x04	)	<<	3
reg3	&	0x04	<<	3
(	reg2	&	0x04	)	<<	2
reg2	&	0x04	<<	2
(	reg3	&	0x02	)	<<	2
reg3	&	0x02	<<	2
(	reg2	&	0x02	)	<<	1
reg2	&	0x02	<<	1
(	reg3	&	0x01	)	<<	1
reg3	&	0x01	<<	1
(	reg2	&	0x01	)	<<	0
reg2	&	0x01	<<	0
(	(	~	reg1	)	<<	2	)	|	0x03

j	<	page_size	/	256

page_data	+	j	*	256

(	c	->	c0	&	65535	)	+	(	(	c	->	c0	>>	16	)	&	65535	)
(	c	->	c0	&	65535	)	+	(	c	->	c0	>>	16	)	&	65535
(	(	b	>>	16	)	+	b	)	&	65535
(	b	>>	16	+	b	)	&	65535
(	c	->	c1	&	65535	)	+	(	(	c	->	c1	>>	16	)	&	65535	)
c	->	c1	&	65535	+	(	(	c	->	c1	>>	16	)	&	65535	)
(	(	b	>>	16	)	+	b	)	&	65535
(	b	>>	16	+	b	)	&	65535
(	c	->	c1	<<	16	)	|	c	->	c0

~	checksum	+	1

(	char	)	(	atof	(	optarg	)	*	10	)	+	0x30

optind	!=	argc	||	optind	==	1

time	(	&	t	)	==	(	time_t	)	(	-	1	)

(	in_len	&	(	mask	-	1	)	)	==	0
in_len	&	(	mask	-	1	)	==	0
(	4	*	1024	)	|	(	8	*	1024	)	|	(	64	*	1024	)	|	(	128	*	1024	)

len	+	9	>	CMDLINE_MAX

p	<	(	ptr	+	SEARCH_SPACE	)

len	+	8	>	DTB_MAX

p	<	(	ptr	+	SEARCH_SPACE	)

offset	+	nbytes	>	64

offset	+	copy	<	64

value	==	-	1

(	!	line	)	||	(	exitcode	)

value	==	-	1

mtd	->	filesize	==	-	1

0x000000FF	&	(	value	>>	8	)

count	>	-	1

(	count	<	0	)	||	(	WEXITSTATUS	(	count	)	)

size	==	-	1

0x000000FF	&	(	i	>>	8	)

(	!	onlybin	)	&&	(	!	img_filename	)

(	!	exitcode	)	&&	(	f_par	)

(	!	exitcode	)	&&	(	par_filename	)

(	!	mtd_image	.	filename	)	&&	(	!	mtd_kernel	.	filename	||	!	mtd_rootfs	.	filename	)
(	!	mtd_image	.	filename	)	&&	!	mtd_kernel	.	filename	||	!	mtd_rootfs	.	filename
mtd_kernel	.	filename	&&	!	mtd_rootfs	.	filename

!	mtd_kernel	.	filename	&&	mtd_rootfs	.	filename

(	mtd_image	.	filename	)	&&	(	mtd_kernel	.	filename	||	mtd_rootfs	.	filename	)
(	mtd_image	.	filename	)	&&	mtd_kernel	.	filename	||	mtd_rootfs	.	filename
(	!	exitcode	)	&&	(	par_filename	)

(	!	exitcode	)	&&	(	!	onlybin	)	&&	(	!	zip_filename	)

(	!	exitcode	)	&&	(	f_img	)

argc	>	optind	+	1

argc	!=	optind	+	3

fd	<	0	&&	errno	==	EISDIR

err	==	ENOMEM	||	err	==	EMFILE	||	err	==	ENFILE

err	==	EROFS	||	err	==	ENOSPC

timeout	.	it_value	.	tv_sec	==	0	&&	timeout	.	it_value	.	tv_usec	==	0

err	==	ENOLCK	||	err	==	ENOMEM

w	==	-	1	&&	errno	!=	EINTR

w	==	-	1

!	e	->	callsign	||	strcmp	(	e	->	callsign	,	callsign	)	!=	0

!	e	->	name	||	strcmp	(	e	->	name	,	name	)	!=	0

!	e	->	destination	||	strcmp	(	e	->	destination	,	destination	)

!	e	->	callsign	||	strcmp	(	e	->	callsign	,	callsign	)	!=	0

!	e	->	name	||	strcmp	(	e	->	name	,	name	)	!=	0

!	e	->	destination	||	strcmp	(	e	->	destination	,	destination	)

accesslog_file	!=	-	666

state	->	fd	==	-	1

~	(	ICANON	|	ECHO	|	ECHOE	|	ISIG	)
~	ICANON	|	ECHO	|	ECHOE	|	ISIG
0x100	+	*	data	++

(	crc	^	c	)	&	1
crc	^	c	&	1
(	crc	>>	1	)	^	0x8408

i	+	8	*	j

j	*	8	+	i

sixbit	>=	1	&&	sixbit	<=	31

sixbit	>=	32	&&	sixbit	<=	63

(	float	)	air_temp	/	10.0	-	60.0

(	float	)	dew_point	/	10.0	-	20.0

(	float	)	water_level	/	10.0	-	10.0

(	float	)	water_temp	/	10.0	-	10.0

(	(	longitude	>>	27	)	&	1	)	==	1
(	longitude	>>	27	)	&	1	==	1
(	(	latitude	>>	26	)	&	1	)	==	1
(	latitude	>>	26	)	&	1	==	1
(	(	longitude	>>	27	)	&	1	)	==	1
(	longitude	>>	27	)	&	1	==	1
(	(	latitude	>>	26	)	&	1	)	==	1
(	latitude	>>	26	)	&	1	==	1
i	<	4	&&	pos	+	32	<=	bufferlen

(	(	longitude	>>	27	)	&	1	)	==	1
(	longitude	>>	27	)	&	1	==	1
(	(	latitude	>>	26	)	&	1	)	==	1
(	latitude	>>	26	)	&	1	==	1
i	<	4	&&	pos	+	30	<	bufferlen

bufferlen	<=	(	senlen	*	6	)

bufferlen	%	(	senlen	*	6	)	!=	0
bufferlen	%	senlen	*	6	!=	0
k	<	senlen	+	13	&&	bufferlen	>	pos

bufferlen	%	6	>	0

6	-	(	bufferlen	%	6	)

k	<	bufferlen	+	fillbits

i	&	(	1	<<	j	)

++	s	,	--	slen

(	key	^	*	s	)	&	0x7f
key	^	*	s	&	0x7f
(	key	^	*	s	)	&	0x7f
key	^	*	s	&	0x7f
np	==	NULL	||	*	np	==	NULL

upup	!=	NULL	&&	upup	->	leftlink	==	up

upup	!=	NULL	&&	upup	->	rightlink	==	up

(	*	a	++	)	*	(	*	b	++	)

f	->	buffer	+	f	->	pointer	++

!	isdigit	(	(	int	)	*	p	)
isdigit	(	(	int	)	*	p	!	isdigit	(	(	int	)	*	p	)
!	sound_in_file	&&	!	sound_device

i	>	-	1

i	>	-	1

(	curr	^	rx	->	prev	)	==	1
curr	^	rx	->	prev	==	1
rx	->	pll	<	(	0x10000	/	2	)

!	(	bit	^	rx	->	lastbit	)
!	bit	^	rx	->	lastbit
*	cmd	&&	isspace	(	(	int	)	*	cmd	)
cmd	&&	isspace	(	(	int	)	*	cmd	*	cmd	&&	isspace	(	(	int	)	*	cmd	)
*	cmd	&&	!	isspace	(	(	int	)	*	cmd	)
cmd	&&	!	isspace	(	(	int	)	*	cmd	*	cmd	&&	!	isspace	(	(	int	)	*	cmd	)
se	->	namelen	==	slen	&&	memcmp	(	se	->	name	,	s	,	slen	)	==	0

se	->	namelen	==	slen	&&	memcmp	(	se	->	name	,	s	,	slen	)	==	0

se	->	namelen	==	slen	&&	memcmp	(	se	->	name	,	s	,	slen	)	==	0

(	(	longitude	>>	27	)	&	1	)	==	1
(	longitude	>>	27	)	&	1	==	1
(	(	latitude	>>	26	)	&	1	)	==	1
(	latitude	>>	26	)	&	1	==	1
(	(	longitude	>>	27	)	&	1	)	==	1
(	longitude	>>	27	)	&	1	==	1
i	<	(	strlen	(	nmea	)	*	6	)

(	bokstav	>>	(	5	-	(	i	%	6	)	)	)	&	0x01

fd	==	-	1

m	>	(	r	-	1	)

m	>	(	r	-	1	)

(	sentencenumb	>	1	)	&&	(	(	previoussentence	)	!=	(	sentencenumb	-	1	)	)

j	<	(	r	-	start	-	m	)

shipd	.	type	!=	1	&&	shipd	.	type	!=	2	&&	shipd	.	type	!=	3	&&	shipd	.	type	!=	4

x	==	-	1	||	y	==	-	1

(	size	+	31	)	/	32
size	+	31	/	32
(	size	+	7	)	/	8
size	+	7	/	8
connect	(	sc	->	socket	,	(	struct	sockaddr	*	)	&	addr	,	sizeof	(	addr	)	)	!=	0

(	l	<	0	)	||	(	l	>=	MAX_LEN	)

(	i	+	4	)	<	l

(	i	+	4	)	<	l

i	+	nchunks	==	l

i	+	nchunks	==	l

(	i	+	4	)	==	l

(	i	+	4	)	==	l

(	char	*	)	tcph	+	tcph	->	doff	*	4

dstact	==	DSTACT_STRIP	||	(	dstact	==	DSTACT_AUTO	&&	!	is_stun	)

dstact	==	DSTACT_AUTO	&&	!	is_stun

(	prtspexp	->	loport	&	0x0001	)	!=	0	||	prtspexp	->	hiport	!=	prtspexp	->	loport	+	1
prtspexp	->	loport	&	0x0001	!=	0	||	prtspexp	->	hiport	!=	prtspexp	->	loport	+	1
rtcp_exp	&&	nf_ct_expect_related	(	rtcp_exp	)	!=	0

size	<	MIN_ACCEL_FILES	||	size	>	MAX_ACCEL_FILES

percentage	<=	0	||	percentage	>	50

1000	*	(	map_retries	+	1	)
1000	*	map_retries	+	1
++	map_retries	<	MAX_MAP_RETRIES

lock_file	==	-	1

(	char	*	)	to	+	count	*	(	sizeof	(	void	*	)	)

(	checksum	>>	16	)	&	0xffff

(	s2	<<	16	)	|	s1

p	-	filename	>	1

mem_usage_check	->	l_type	==	F_UNLCK	||	mem_usage_check	->	l_pid	<=	0

VCWD_STAT	(	file_path	,	&	statbuf	)	!=	-	1

--	parent_script_len	>	0

!	(	strcasecmp	(	entry	->	section	,	key	->	section	)	||	strcasecmp	(	entry	->	key	,	key	->	key	)	)
!	strcasecmp	(	entry	->	section	,	key	->	section	)	||	strcasecmp	(	entry	->	key	,	key	->	key	)
j	<	i	&&	!	die

result	<	0	&&	errno	!=	EEXIST

(	req	&	15	)	==	15
req	&	15	==	15
(	req	&	15	)	==	15
req	&	15	==	15
WM_PERSONALITY	==	WM_PERSONALITY_NETWM	&&	NETWM_HAS_FULLSCREEN

result	&&	i	<	items_read

8	==	fmt	||	16	==	fmt	||	32	==	fmt

len	*	fmt	<=	20	*	8

!	(	width	&&	height	&&	depth	)
!	width	&&	height	&&	depth
i	<	buffer_age	-	1

color	%	(	3	*	3	*	3	-	1	)	+	1
color	%	3	*	3	*	3	-	1	+	1
1.0	/	3.0	*	(	color	%	(	3	*	3	)	/	3	)
1.0	/	3.0	*	(	color	%	3	*	3	/	3	)
1.0	/	3.0	*	(	color	%	3	)
1.0	/	3.0	*	color	%	3
(	(	int	)	ceil	(	(	r	*	3	)	)	+	1	)	&	~	1

g_line	+	fy_start	*	g_size	+	fx_start

ylimit	>	sheight	/	2

(	sheight	+	1	)	/	2
sheight	+	1	/	2
xlimit	>	swidth	/	2

(	swidth	+	1	)	/	2
swidth	+	1	/	2
y	*	swidth	+	x

(	sheight	-	y	-	1	)	*	swidth	+	x
sheight	-	y	-	1	*	swidth	+	x
(	sheight	-	y	-	1	)	*	swidth	+	(	swidth	-	x	-	1	)
sheight	-	y	-	1	*	swidth	+	(	swidth	-	x	-	1	)
y	*	swidth	+	(	swidth	-	x	-	1	)

x_diff	>	0	&&	ylimit	>	0

pct	*	8.0	/	(	1.1	-	pct	)
pct	*	8.0	/	1.1	-	pct
prop_old	&&	!	strcmp	(	*	tgt	,	prop_old	)

-	1	==	pid

!	pc	||	pc	==	src

wid	<=	0	||	hei	<=	0

!	(	wid	%	2	&&	hei	%	2	)
!	wid	%	2	&&	hei	%	2
wid	>	16	||	hei	>	16

hei	/	2	*	wid	+	wid	/	2

i	<	wid	*	hei

pc	&&	*	pc	&&	i	<	max	-	1

endptr	&&	src	!=	endptr

endptr	&&	src	!=	endptr

endptr	&&	src	!=	endptr

endptr	&&	src	!=	endptr

!	endptr	||	endptr	==	src

val	>	100	||	val	<	0

composite_major	>	0	||	composite_minor	>=	2

!	endptr	||	pattern	+	offset	==	endptr

(	strlen	(	pattern	+	offset	)	+	1	)	*	sizeof	(	char	)
strlen	(	pattern	+	offset	)	+	1	*	sizeof	(	char	)
val	<	256	&&	val	>=	0

status	==	-	1	||	status	>	0

(	rand	(	)	%	slots	)	*	microseconds

(	wait_us	%	1000000	)	*	1000

code	==	10107	||	code	==	13435	||	code	==	13436	||	code	==	10054	||	code	==	10056	||	code	==	10058

!	(	w	>	1	||	w_str	)
!	w	>	1	||	w_str
fsync	&&	w	==	0

w_str	||	w	>	1

retval	!=	-	1

retval	!=	-	1

retval	!=	-	1

retval	!=	-	1

total	-	used	<	size

len2	==	len	-	4

(	buf	-	buf_start	)	*	width
buf	-	buf_start	*	width
i	<	buf	-	buf_start

i	+	3	<	len

i	+	2	<	len

i	+	1	<	len

received	<	size	&&	num	>	0

4096	<	(	size	-	received	)

ZEND_NUM_ARGS	(	)	<=	1	&&	!	inc

2	*	i	+	1

(	ts	*	256	)	+	x

(	pid	*	256	)	+	x

bytes_len	-	pos	>=	global_chunk_size

result	==	-	1

justOne	!=	-	1

chunk_id	==	-	1

(	i	*	2	)	+	1

(	saved_lo	+	size	)	&	0x1fffffff

size	&	~	(	unsigned	long	)	0x3f

select	(	tmp_socket	+	1	,	&	rset	,	&	wset	,	&	eset	,	&	tval	)	==	0

connected	==	-	1

read_field	&&	(	strcmp	(	read_field	,	field_name	)	!=	0	||	read_type	!=	type	)
read_field	&&	strcmp	(	read_field	,	field_name	)	!=	0	||	read_type	!=	type
read_field	&&	strcmp	(	read_field	,	field_name	)	==	0	&&	read_type	==	type

at	&&	colon	&&	at	-	colon	>	0

pos	+	1	==	question

db_start	&&	(	db_end	!=	db_start	)

name	+	1	==	value

status	==	-	1

sent	<	size	&&	status	>	0

4096	<	(	size	-	sent	)

status	==	-	1

status	==	-	1

received	<	size	&&	num	>	0

4096	<	(	size	-	received	)

(	(	long	)	(	dev	+	1	)	+	31	)	&	~	31

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	lockResult	==	0	)	||	(	rtusb_disconnect_by_rmmod	==	1	)

idx	++	<	100

(	header_length	-	2	)	/	256
header_length	-	2	/	256
(	header_length	-	2	)	%	256
header_length	-	2	%	256
(	!	qc_exists	)	&	a4_exists

qc_exists	&&	(	!	a4_exists	)

qc_exists	&&	!	a4_exists

qc_exists	&&	!	a4_exists

(	count	>>	24	)	&	0xff

(	count	>>	16	)	&	0xff

(	count	>>	8	)	&	0xff

pp	>=	parts	+	3	||	val	>	0xff

(	keyIdx	<	0	)	||	(	keyIdx	>=	NR_WEP_KEYS	)

(	index	>=	0	)	&&	(	index	<	4	)

(	kid	>	0	)	&&	(	kid	<=	4	)

idx	<	1	||	idx	>	4

strlen	(	rt28xxdir	)	>	(	sizeof	(	infname	)	-	100	)

fstat	(	fd	,	&	st	)	==	-	1

st	.	st_size	<=	0	||	st	.	st_size	>	1	*	1024	*	1024

authctxt	->	attempt	++	==	0

strcmp	(	user	,	authctxt	->	user	)	!=	0	||	strcmp	(	service	,	authctxt	->	service	)	!=	0

!	authctxt	->	valid	&&	authenticated

authenticated	&&	authctxt	->	pw	->	pw_uid	==	0	&&	!	auth_root_allowed	(	method	)

c	<	buf	+	len

l	<	HASH_FACTOR	(	len	/	SSH_BLOCKSIZE	)
l	<	HASH_FACTOR	(	len	/	SSH_BLOCKSIZE	)
reallocn	(	(	void	*	*	)	&	dctx	->	h	,	l	,	HASH_ENTRYSIZE	)	!=	0

c	<	buf	+	len

c	<	(	buf	+	len	)

(	i	+	1	)	&	(	dctx	->	n	-	1	)

first_unused_handle	==	-	1

num_handles	+	1	<=	num_handles

i	>=	0	&&	(	u_int	)	i	<	num_handles

handle_is_ok	(	handle	,	HANDLE_FILE	)	&&	bytes	>	0

handle_is_ok	(	handle	,	HANDLE_FILE	)	&&	bytes	>	0

readonly	&&	(	(	flags	&	O_ACCMODE	)	==	O_WRONLY	||	(	flags	&	O_ACCMODE	)	==	O_RDWR	)
readonly	&&	flags	&	O_ACCMODE	==	O_WRONLY	||	flags	&	O_ACCMODE	==	O_RDWR
r	==	-	1

r	==	-	1

r	==	-	1

r	==	-	1

r	==	-	1

r	==	-	1

r	==	-	1

r	==	-	1

lstat	(	oldpath	,	&	sb	)	==	-	1

link	(	oldpath	,	newpath	)	==	-	1

stat	(	newpath	,	&	st	)	==	-	1

rename	(	oldpath	,	newpath	)	==	-	1

unlink	(	oldpath	)	==	-	1

stat	(	newpath	,	&	sb	)	==	-	1

rename	(	oldpath	,	newpath	)	==	-	1

buf_len	<	msg_len	+	4

mask	<	0	||	mask	>	0777

mask	==	0	&&	errno	!=	0

getpeername	(	sock	,	(	struct	sockaddr	*	)	&	from	,	&	fromlen	)	<	0

sizeof	(	options	)	*	3	+	1

getsockopt	(	sock	,	ipproto	,	IP_OPTIONS	,	options	,	&	option_size	)	>=	0	&&	option_size	!=	0

text	+	i	*	3

sizeof	(	text	)	-	i	*	3

utmp_len	==	0	||	strlen	(	remote	)	>	utmp_len

getsockname	(	sock	,	(	struct	sockaddr	*	)	&	from	,	&	fromlen	)	<	0

getpeername	(	sock	,	(	struct	sockaddr	*	)	&	from	,	&	fromlen	)	<	0

buf_len	<	msg_len	+	4

howmany	(	max	+	1	,	NFDBITS	)	*	sizeof	(	fd_mask	)

n	==	-	1

n	==	-	1

len	<=	0	||	len	>	32

keybits	<	0	||	bits	!=	(	u_int	)	keybits

klen	>	0	&&	keylen	!=	(	u_int	)	klen

authenticated	&&	!	auth2_update_methods_lists	(	authctxt	,	auth_method	)

!	(	ent	->	flags	&	MON_AUTHDECIDE	)
!	ent	->	flags	&	MON_AUTHDECIDE
authctxt	->	pw	->	pw_uid	==	0	&&	!	auth_root_allowed	(	auth_method	)

ent	->	flags	&	(	MON_AUTHDECIDE	|	MON_ALOG	)
ent	->	flags	&	MON_AUTHDECIDE	|	MON_ALOG
pmonitor	->	m_log_recvfd	!=	-	1	&&	monitor_read_log	(	pmonitor	)	==	0

len	<=	4	||	len	>	8192

!	(	ent	->	flags	&	MON_PERMIT	)
!	ent	->	flags	&	MON_PERMIT
max	<	min	||	want	<	min	||	max	<	want

authctxt	->	attempt	++	!=	0

getpeername	(	ssh_packet_get_connection_in	(	ssh	)	,	(	struct	sockaddr	*	)	&	from	,	&	fromlen	)	<	0

socketpair	(	AF_UNIX	,	SOCK_STREAM	,	0	,	pair	)	==	-	1

pipe	(	pair	)	==	-	1

r	==	-	1	&&	errno	==	EINTR

ret	==	-	1	||	!	WIFEXITED	(	status	)	||	WEXITSTATUS	(	status	)	!=	0
==	-	1	||	!	WIFEXITED	(	status	)	||	WEXITSTATUS	(	status	)	!=	ret	==	-	1	||	!	WIFEXITED	(	status	)	||	WEXITSTATUS	(	status	)	!=	0
tcsetattr	(	fileno	(	stdin	)	,	TCSADRAIN	,	&	_saved_tio	)	==	-	1

tcgetattr	(	fileno	(	stdin	)	,	&	tio	)	==	-	1

~	(	ISTRIP	|	INLCR	|	IGNCR	|	ICRNL	|	IXON	|	IXANY	|	IXOFF	)
~	ISTRIP	|	INLCR	|	IGNCR	|	ICRNL	|	IXON	|	IXANY	|	IXOFF
~	(	ISIG	|	ICANON	|	ECHO	|	ECHOE	|	ECHOK	|	ECHONL	)
~	ISIG	|	ICANON	|	ECHO	|	ECHOE	|	ECHOK	|	ECHONL
tcsetattr	(	fileno	(	stdin	)	,	TCSADRAIN	,	&	tio	)	==	-	1

enc	==	-	1

EVP_Cipher	(	&	c	->	k1	,	dest	,	(	u_char	*	)	src	,	len	)	==	0	||	EVP_Cipher	(	&	c	->	k2	,	dest	,	dest	,	len	)	==	0	||	EVP_Cipher	(	&	c	->	k3	,	dest	,	dest	,	len	)	==	0

b64len	==	0	||	b64len	>	1024

ret	==	-	1

__b64_ntop	(	salt	,	len	,	uu_salt	,	sizeof	(	uu_salt	)	)	==	-	1	||	__b64_ntop	(	result	,	len	,	uu_result	,	sizeof	(	uu_result	)	)	==	-	1

match_hostname	(	host	,	cp	,	(	u_int	)	(	cp2	-	cp	)	)	!=	1

strncmp	(	hashed_host	,	cp	,	(	u_int	)	(	cp2	-	cp	)	)	!=	0

4	*	(	AES_MAXNR	+	1	)
4	*	AES_MAXNR	+	1
(	j	+	nbytes	)	>=	HASH_BUF_BYTES

nbytes	&	~	(	HASH_BUF_BYTES	-	1	)
nbytes	&	~	HASH_BUF_BYTES	-	1
(	hc	->	next_data_empty	+	(	L1_PAD_BOUNDARY	-	1	)	)	&	~	(	L1_PAD_BOUNDARY	-	1	)
(	hc	->	next_data_empty	+	L1_PAD_BOUNDARY	-	1	)	&	~	(	L1_PAD_BOUNDARY	-	1	)
(	MUL64	(	key_hi	,	cur_hi	)	+	x_hi	)	*	59	+	MUL64	(	key_lo	,	cur_lo	)
MUL64	(	key_hi	,	cur_hi	)	+	x_hi	*	59	+	MUL64	(	key_lo	,	cur_lo	)
(	t	&	m36	)	+	5	*	(	t	>>	36	)
t	&	m36	+	5	*	t	>>	36
ahc	->	ip_keys	+	(	i	*	4	)

(	8	*	STREAMS	+	4	)	*	sizeof	(	UINT64	)
8	*	STREAMS	+	4	*	sizeof	(	UINT64	)
buf	+	24	*	i

(	(	UINT64	)	0x01ffffffu	<<	32	)	+	0x01ffffffu
(	UINT64	)	0x01ffffffu	<<	32	+	0x01ffffffu
ahc	->	ip_keys	+	4	*	i

buf	+	(	8	*	i	+	4	)	*	sizeof	(	UINT64	)
buf	+	8	*	i	+	4	*	sizeof	(	UINT64	)
i	<	STREAMS	*	4

ctx	->	msg_len	+	len	<=	L1_KEY_LEN

bytes_hashed	+	len	>=	L1_KEY_LEN

fcntl	(	fd	,	F_SETFL	,	val	)	==	-	1

!	(	val	&	O_NONBLOCK	)
!	val	&	O_NONBLOCK
fcntl	(	fd	,	F_SETFL	,	val	)	==	-	1

getsockopt	(	fd	,	IPPROTO_TCP	,	TCP_NODELAY	,	&	opt	,	&	optlen	)	==	-	1

setsockopt	(	fd	,	IPPROTO_TCP	,	TCP_NODELAY	,	&	opt	,	sizeof	opt	)	==	-	1

r	==	-	1

r	==	-	1

slash	>	sizeof	(	user	)	-	1

ioctl	(	sock	,	SIOCGIFFLAGS	,	&	ifr	)	==	-	1

ioctl	(	sock	,	SIOCSIFFLAGS	,	&	ifr	)	==	-	1

ioctl	(	sock	,	SIOCSIFFLAGS	,	&	ifr	)	==	-	1

++	dupfd	<=	2

dup2	(	nullfd	,	dupfd	)	==	-	1

(	u_char	)	(	v	>>	56	)	&	0xff

(	u_char	)	(	v	>>	48	)	&	0xff

(	u_char	)	(	v	>>	40	)	&	0xff

(	u_char	)	(	v	>>	32	)	&	0xff

(	u_char	)	(	v	>>	24	)	&	0xff

(	u_char	)	(	v	>>	16	)	&	0xff

(	u_char	)	(	v	>>	8	)	&	0xff

(	u_char	)	(	v	>>	24	)	&	0xff

(	u_char	)	(	v	>>	16	)	&	0xff

(	u_char	)	(	v	>>	8	)	&	0xff

(	u_char	)	(	v	>>	8	)	&	0xff

(	diff	.	tv_sec	*	1000	)	+	(	diff	.	tv_usec	/	1000	)

(	ms	%	1000	)	*	1000

bw	->	thresh	<	bw	->	buflen	/	4

bw	->	thresh	>	bw	->	buflen	*	8

nanosleep	(	&	ts	,	&	rm	)	==	-	1

BN_mod_exp	(	g_v	,	grp_g	,	v	,	grp_p	,	bn_ctx	)	==	-	1

BN_mod_mul	(	tmp	,	x	,	h	,	grp_q	,	bn_ctx	)	==	-	1

BN_mod_sub	(	r	,	v	,	tmp	,	grp_q	,	bn_ctx	)	==	-	1

BN_mod_exp	(	gx_q	,	g_x	,	grp_q	,	grp_p	,	bn_ctx	)	==	-	1

BN_mod_exp	(	g_xh	,	g_x	,	h	,	grp_p	,	bn_ctx	)	==	-	1

BN_mod_exp	(	g_r	,	grp_g	,	r	,	grp_p	,	bn_ctx	)	==	-	1

BN_mod_mul	(	expected	,	g_r	,	g_xh	,	grp_p	,	bn_ctx	)	==	-	1

BN_sub	(	tmp	,	high	,	tmp	)	==	-	1

BN_rand_range	(	r	,	tmp	)	==	-	1

BN_add	(	r	,	r	,	tmp	)	==	-	1

j	>=	sizeof	(	h	)	-	1	||	i	==	len	-	1

BN_hex2bn	(	&	ret	->	p	,	grp_p	)	==	0	||	BN_hex2bn	(	&	ret	->	g	,	grp_g	)	==	0

end	>	(	void	*	)	(	(	u_char	*	)	mm	->	address	+	mm	->	size	)

pid	<	0	&&	errno	==	EINTR

i	<	sizeof	(	buf	)	-	1

pid	==	-	1

getuid	(	)	==	0	||	geteuid	(	)	==	0

pmonitor	->	m_pid	==	-	1

ssh_msg_send	(	fd	,	0	,	m	)	==	-	1

ssh_msg_recv	(	fd	,	m	)	==	-	1

ai	->	ai_family	!=	AF_INET	&&	ai	->	ai_family	!=	AF_INET6

set_nonblock	(	listen_sock	)	==	-	1

setsockopt	(	listen_sock	,	SOL_SOCKET	,	SO_REUSEADDR	,	&	on	,	sizeof	(	on	)	)	==	-	1

ret	<	0	&&	errno	!=	EINTR

unset_nonblock	(	*	newsock	)	==	-	1

pipe	(	startup_p	)	==	-	1

rexec_flag	&&	socketpair	(	AF_UNIX	,	SOCK_STREAM	,	0	,	config_s	)	==	-	1

parse_server_match_testspec	(	connection_info	,	optarg	)	==	-	1

test_flag	>=	2	&&	server_match_spec_complete	(	connection_info	)	==	0

test_flag	<	2	&&	server_match_spec_complete	(	connection_info	)	>=	0

debug_flag	&&	(	!	inetd_flag	||	rexeced_flag	)
debug_flag	&&	!	inetd_flag	||	rexeced_flag
!	(	debug_flag	||	inetd_flag	||	no_daemon_flag	)
!	debug_flag	||	inetd_flag	||	no_daemon_flag
!	debug_flag	&&	!	inetd_flag	&&	setsid	(	)	<	0

startup_pipe	==	-	1

startup_pipe	!=	-	1

startup_pipe	!=	-	1

!	(	cipher_mask_ssh1	(	0	)	&	(	1	<<	cipher_type	)	)
!	cipher_mask_ssh1	(	0	)	&	(	1	<<	cipher_type	)
use_privsep	&&	privsep_is_preauth	&&	pmonitor	->	m_pid	>	1

kill	(	pmonitor	->	m_pid	,	SIGKILL	)	!=	0	&&	errno	!=	ESRCH

rlen	>	INTBLOB_LEN	||	slen	>	INTBLOB_LEN

sshbuf_get_bignum2	(	sigbuf	,	sig	->	r	)	!=	0	||	sshbuf_get_bignum2	(	sigbuf	,	sig	->	s	)	!=	0

timeout	<=	0	||	count	<=	0

packet_length	!=	PACKET_MAX_SIZE	&&	mac	&&	mac	->	enabled

getpeername	(	state	->	connection_in	,	(	struct	sockaddr	*	)	&	from	,	&	fromlen	)	<	0

getpeername	(	state	->	connection_out	,	(	struct	sockaddr	*	)	&	to	,	&	tolen	)	<	0

fromlen	!=	tolen	||	memcmp	(	&	from	,	&	to	,	fromlen	)	!=	0

from	.	ss_family	!=	AF_INET	&&	from	.	ss_family	!=	AF_INET6

getsockname	(	ssh	->	state	->	connection_out	,	(	struct	sockaddr	*	)	&	to	,	&	tolen	)	<	0

8	-	len	%	8

(	u_int64_t	)	1	<<	(	enc	->	block_size	*	2	)

(	(	u_int64_t	)	1	<<	30	)	/	enc	->	block_size
(	u_int64_t	)	1	<<	30	/	enc	->	block_size
(	mac	&&	mac	->	enabled	&&	mac	->	etm	)	||	authlen

block_size	-	(	len	%	block_size	)

state	->	extra_pad	-	(	(	len	+	padlen	)	%	state	->	extra_pad	)
state	->	extra_pad	-	(	len	+	padlen	%	state	->	extra_pad	)
mac	&&	mac	->	enabled	&&	!	mac	->	etm

++	state	->	p_send	.	seqnr	==	0

state	->	packet_timeout_ms	!=	-	1

state	->	packet_timeout_ms	==	-	1

len	==	0	&&	cont

sshbuf_len	(	state	->	input	)	<	4	+	8

len	<	1	+	2	+	2	||	len	>	256	*	1024

(	len	+	8	)	&	~	7

sshbuf_len	(	state	->	input	)	<	4	+	padded_len

8	-	len	%	8

(	mac	&&	mac	->	enabled	&&	mac	->	etm	)	||	authlen

aadlen	&&	state	->	packlen	==	0

state	->	packlen	<	1	+	4	||	state	->	packlen	>	PACKET_MAX_SIZE

state	->	packlen	<	1	+	4	||	state	->	packlen	>	PACKET_MAX_SIZE

need	%	block_size	!=	0

sshbuf_len	(	state	->	input	)	<	aadlen	+	need	+	authlen	+	maclen

++	state	->	p_read	.	seqnr	==	0

(	state	->	packlen	+	4	)	/	block_size
state	->	packlen	+	4	/	block_size
len	==	-	1

len	==	0	&&	!	cont

state	->	packet_timeout_ms	!=	-	1

state	->	packet_timeout_ms	==	-	1

sshbuf_len	(	ssh	->	state	->	output	)	<	128	*	1024

s	<	4	*	1024	||	s	>	1024	*	1024

i	%	4	==	0

(	state	->	p_send	.	packets	>	MAX_PACKETS	)	||	(	state	->	p_read	.	packets	>	MAX_PACKETS	)	||	(	state	->	max_blocks_out	&&	(	state	->	p_send	.	blocks	>	state	->	max_blocks_out	)	)	||	(	state	->	max_blocks_in	&&	(	state	->	p_read	.	blocks	>	state	->	max_blocks_in	)	)

id	<	0	||	(	u_int	)	id	>=	channels_alloc

rfd	!=	-	1

wfd	!=	-	1	&&	wfd	!=	rfd

efd	!=	-	1	&&	efd	!=	rfd	&&	efd	!=	wfd

rfd	!=	-	1

wfd	!=	-	1

efd	!=	-	1

fd	!=	-	1

sshbuf_len	(	b	)	<	12	+	(	(	proto_len	+	3	)	&	~	3	)	+	(	(	data_len	+	3	)	&	~	3	)
sshbuf_len	(	b	)	<	12	+	(	proto_len	+	3	)	&	~	3	+	(	(	data_len	+	3	)	&	~	3	)
proto_len	!=	strlen	(	x11_saved_proto	)	||	memcmp	(	ucp	+	12	,	x11_saved_proto	,	proto_len	)	!=	0

data_len	!=	x11_fake_data_len	||	timingsafe_bcmp	(	ucp	+	12	+	(	(	proto_len	+	3	)	&	~	3	)	,	x11_fake_data	,	x11_fake_data_len	)	!=	0
data_len	!=	x11_fake_data_len	||	timingsafe_bcmp	(	ucp	+	12	+	(	proto_len	+	3	)	&	~	3	,	x11_fake_data	,	x11_fake_data_len	)	!=	0
ucp	+	12	+	(	(	proto_len	+	3	)	&	~	3	)
ucp	+	12	+	(	proto_len	+	3	)	&	~	3
ret	==	-	1

ret	==	-	1

have	<	nmethods	+	2

i	<	nmethods	+	2

have	<	sizeof	(	s5_req	)	+	1

s5_req	.	version	!=	0x05	||	s5_req	.	command	!=	SSH_SOCKS5_CONNECT	||	s5_req	.	reserved	!=	0x00

remote_port	==	-	1

setsockopt	(	fd	,	SOL_SOCKET	,	SO_REUSEADDR	,	&	on	,	sizeof	(	on	)	)	==	-	1

len	<	0	&&	(	errno	==	EINTR	||	errno	==	EAGAIN	)
len	<	0	&&	errno	==	EINTR	||	errno	==	EAGAIN
len	<	0	&&	(	errno	==	EINTR	||	errno	==	EAGAIN	)
len	<	0	&&	errno	==	EINTR	||	errno	==	EAGAIN
len	<	0	&&	(	errno	==	EINTR	||	errno	==	EAGAIN	)
len	<	0	&&	errno	==	EINTR	||	errno	==	EAGAIN
len	<	0	&&	(	errno	==	EINTR	||	errno	==	EAGAIN	)
len	<	0	&&	errno	==	EINTR	||	errno	==	EAGAIN
len	<	0	&&	(	errno	==	EINTR	||	errno	==	EAGAIN	)
len	<	0	&&	errno	==	EINTR	||	errno	==	EAGAIN
256	*	1024	)	if	(	need	>	CHANNEL_MUX_MAX_PACKET

len	<	0	&&	(	errno	==	EINTR	||	errno	==	EAGAIN	)
len	<	0	&&	errno	==	EINTR	||	errno	==	EAGAIN
(	euid	!=	0	)	&&	(	getuid	(	)	!=	euid	)

len	>	ssh_packet_get_maxsize	(	ssh	)	/	2

getnameinfo	(	ai	->	ai_addr	,	ai	->	ai_addrlen	,	ntop	,	sizeof	(	ntop	)	,	strport	,	sizeof	(	strport	)	,	NI_NUMERICHOST	|	NI_NUMERICSERV	)	!=	0

(	u_short	)	port	<	IPPORT_RESERVED	&&	!	is_root

idx	<	0	||	idx	>=	num_permitted_opens

allowedport	==	FWD_PERMIT_ANY_PORT	||	allowedport	==	requestedport

cctx	->	ai	->	ai_family	!=	AF_INET	&&	cctx	->	ai	->	ai_family	!=	AF_INET6

getnameinfo	(	cctx	->	ai	->	ai_addr	,	cctx	->	ai	->	ai_addrlen	,	ntop	,	sizeof	(	ntop	)	,	strport	,	sizeof	(	strport	)	,	NI_NUMERICHOST	|	NI_NUMERICSERV	)	!=	0

set_nonblock	(	sock	)	==	-	1

connect	(	sock	,	cctx	->	ai	->	ai_addr	,	cctx	->	ai	->	ai_addrlen	)	==	-	1	&&	errno	!=	EINPROGRESS

!	permit	||	!	permit_adm

ai	->	ai_family	!=	AF_INET	&&	ai	->	ai_family	!=	AF_INET6

connect	(	sock	,	(	struct	sockaddr	*	)	&	addr	,	sizeof	(	addr	)	)	==	0

sock	!=	-	1

data	+	2	*	i

i	%	4	==	0

!	pw	||	!	pw	->	pw_name

(	st	.	st_mode	&	(	S_IXOTH	|	S_IXUSR	|	S_IXGRP	)	)	==	0
st	.	st_mode	&	S_IXOTH	|	S_IXUSR	|	S_IXGRP	==	0
use_privsep	&&	!	mm_is_monitor	(	)	&&	!	authctxt	->	postponed

(	stp	->	st_uid	!=	0	&&	stp	->	st_uid	!=	uid	)	||	(	stp	->	st_mode	&	022	)	!=	0
(	stp	->	st_uid	!=	0	&&	stp	->	st_uid	!=	uid	)	||	stp	->	st_mode	&	022	!=	0
stat	(	buf	,	&	st	)	<	0	||	(	st	.	st_uid	!=	0	&&	st	.	st_uid	!=	uid	)	||	(	st	.	st_mode	&	022	)	!=	0
stat	(	buf	,	&	st	)	<	0	||	(	st	.	st_uid	!=	0	&&	st	.	st_uid	!=	uid	)	||	st	.	st_mode	&	022	!=	0
comparehome	&&	strcmp	(	homedir	,	buf	)	==	0

log_missing	||	errno	!=	ENOENT

EC_GROUP_cmp	(	EC_KEY_get0_group	(	a	->	ecdsa	)	,	EC_KEY_get0_group	(	b	->	ecdsa	)	,	bnctx	)	!=	0	||	EC_POINT_cmp	(	EC_KEY_get0_group	(	a	->	ecdsa	)	,	EC_KEY_get0_public_key	(	a	->	ecdsa	)	,	EC_KEY_get0_public_key	(	b	->	ecdsa	)	,	bnctx	)	!=	0

dgst_raw_len	*	3	+	1

(	dgst_raw_len	*	3	)	-	1

(	dgst_raw_len	/	2	)	+	1

(	i	+	1	<	rounds	)	||	(	dgst_raw_len	%	2	!=	0	)

(	i	+	1	)	<	rounds

(	2	*	i	)	+	1

(	2	*	i	)	+	1

(	2	*	i	)	+	1

(	key	->	cert	->	nprincipals	+	1	)	*	sizeof	(	*	key	->	cert	->	principals	)
key	->	cert	->	nprincipals	+	1	*	sizeof	(	*	key	->	cert	->	principals	)
sshbuf_get_bignum2	(	b	,	key	->	rsa	->	e	)	==	-	1	||	sshbuf_get_bignum2	(	b	,	key	->	rsa	->	n	)	==	-	1

sshbuf_get_bignum2	(	b	,	key	->	dsa	->	p	)	==	-	1	||	sshbuf_get_bignum2	(	b	,	key	->	dsa	->	q	)	==	-	1	||	sshbuf_get_bignum2	(	b	,	key	->	dsa	->	g	)	==	-	1	||	sshbuf_get_bignum2	(	b	,	key	->	dsa	->	pub_key	)	==	-	1

BN_num_bits	(	x	)	<=	BN_num_bits	(	order	)	/	2	||	BN_num_bits	(	y	)	<=	BN_num_bits	(	order	)	/	2

BN_cmp	(	x	,	tmp	)	>=	0	||	BN_cmp	(	y	,	tmp	)	>=	0

BN_num_bits	(	EC_KEY_get0_private_key	(	key	)	)	<=	BN_num_bits	(	order	)	/	2

pid	==	-	1	&&	errno	==	EINTR

*	idx	!=	-	1

len	!=	20	&&	len	!=	32

strlen	(	host	)	!=	len	-	1

strncasecmp	(	host	,	p	,	len	-	1	)	!=	0

(	fd	==	STDIN_FILENO	)	||	(	fd	==	STDOUT_FILENO	)

ssh_msg_send	(	STDOUT_FILENO	,	version	,	b	)	==	-	1

dup2	(	devnull	,	STDIN_FILENO	)	==	-	1

dup2	(	STDIN_FILENO	,	STDERR_FILENO	)	==	-	1

waitpid	(	pid	,	&	status	,	0	)	==	-	1

getgrouplist	(	user	,	base	,	groups_bygid	,	&	ngroups	)	==	-	1

bind	(	sock	,	(	struct	sockaddr	*	)	&	sunaddr	,	sizeof	(	sunaddr	)	)	<	0

sock	!=	-	1

compression_level	<	1	||	compression_level	>	9

getpeername	(	ssh_packet_get_connection_in	(	ssh	)	,	(	struct	sockaddr	*	)	&	from	,	&	fromlen	)	<	0

i	>=	envsize	-	1

++	lineno	>	1000

stat	(	nl	,	&	sb	)	==	-	1

chdir	(	path	)	==	-	1

chroot	(	path	)	==	-	1

getuid	(	)	==	0	||	geteuid	(	)	==	0

getuid	(	)	!=	pw	->	pw_uid	||	geteuid	(	)	!=	pw	->	pw_uid

i	<	ARGV_MAX	-	1

strlcpy	(	argv0	+	1	,	shell0	,	sizeof	(	argv0	)	-	1	)	>=	sizeof	(	argv0	)	-	1

sessions_first_unused	==	-	1

sessions_first_unused	>=	sessions_nalloc	||	sessions_first_unused	<	0

waitpid	(	do_cmd_pid	,	&	status	,	WUNTRACED	)	==	-	1	&&	errno	==	EINTR

waitpid	(	pid	,	&	status	,	0	)	==	-	1

!	WIFEXITED	(	status	)	||	WEXITSTATUS	(	status	)	!=	0
WIFEXITED	(	status	)	||	WEXITSTATUS	(	status	)	!=	!	WIFEXITED	(	status	)	||	WEXITSTATUS	(	status	)	!=	0
do_cmd_pid	==	-	1

pid	==	-	1

waitpid	(	pid	,	&	status	,	0	)	==	-	1

do_cmd_pid	!=	-	1	&&	errs	==	0

remin	!=	-	1

remout	!=	-	1

waitpid	(	do_cmd_pid	,	&	status	,	0	)	==	-	1

!	WIFEXITED	(	status	)	||	WEXITSTATUS	(	status	)	!=	0
WIFEXITED	(	status	)	||	WEXITSTATUS	(	status	)	!=	!	WIFEXITED	(	status	)	||	WEXITSTATUS	(	status	)	!=	0
i	<	argc	-	1

remin	==	-	1

i	<	argc	-	1

fd	!=	-	1

fd	!=	-	1

close	(	fd	)	<	0	&&	!	haderr

strlen	(	name	)	+	1	+	strlen	(	dp	->	d_name	)	>=	sizeof	(	path	)	-	1

stat	(	targ	,	&	stb	)	==	0	&&	S_ISDIR	(	stb	.	st_mode	)
(	targ	,	&	stb	)	==	0	&&	S_ISDIR	(	stb	.	st_mode	stat	(	targ	,	&	stb	)	==	0	&&	S_ISDIR	(	stb	.	st_mode	)
cp	<	buf	+	5

mkdir	(	np	,	mode	|	S_IRWXU	)	<	0
(	np	,	mode	|	S_IRWXU	)	<	mkdir	(	np	,	mode	|	S_IRWXU	)	<	0
i	+	amt	>	size

wrerr	==	NO	&&	(	!	exists	||	S_ISREG	(	stb	.	st_mode	)	)	&&	ftruncate	(	ofd	,	size	)	!=	0
==	NO	&&	!	exists	||	S_ISREG	(	stb	.	st_mode	)	&&	ftruncate	(	ofd	,	size	)	!=	wrerr	==	NO	&&	!	exists	||	S_ISREG	(	stb	.	st_mode	)	&&	ftruncate	(	ofd	,	size	)	!=	0
exists	||	omode	!=	mode

!	exists	&&	omode	!=	mode

omode	&	~	mask

close	(	ofd	)	==	-	1

setimes	&&	wrerr	==	NO

!	isalpha	(	c	)	&&	!	isdigit	(	c	)
(	c	)	&&	!	isdigit	(	c	!	isalpha	(	c	)	&&	!	isdigit	(	c	isalpha	(	c	)	&&	!	isdigit	(	c	!	isalpha	(	c	)	&&	!	isdigit	(	c	)
cctx	->	want_tty	&&	escape_char	!=	0xffffffff

ftype	!=	MUX_FWD_LOCAL	&&	ftype	!=	MUX_FWD_REMOTE	&&	ftype	!=	MUX_FWD_DYNAMIC

ftype	==	MUX_FWD_LOCAL	||	ftype	==	MUX_FWD_DYNAMIC

i	<	sizeof	(	rbuf	)	-	1

r	<	26	*	2

bind	(	muxserver_sock	,	(	struct	sockaddr	*	)	&	addr	,	addr	.	sun_len	)	==	-	1

muxserver_sock	!=	-	1

listen	(	muxserver_sock	,	64	)	==	-	1

dup2	(	devnull	,	STDIN_FILENO	)	==	-	1

mm_send_fd	(	fd	,	STDIN_FILENO	)	==	-	1	||	mm_send_fd	(	fd	,	STDOUT_FILENO	)	==	-	1	||	mm_send_fd	(	fd	,	STDERR_FILENO	)	==	-	1

dup2	(	devnull	,	STDIN_FILENO	)	==	-	1

mm_send_fd	(	fd	,	STDIN_FILENO	)	==	-	1	||	mm_send_fd	(	fd	,	STDOUT_FILENO	)	==	-	1

connect	(	sock	,	(	struct	sockaddr	*	)	&	addr	,	addr	.	sun_len	)	==	-	1

u	<	largebits	*	2

(	2	*	r	+	1	)	%	s
2	*	r	+	1	%	s
u	<	largebits	*	4

memory	!=	0	&&	(	memory	<	LARGE_MINIMUM	||	memory	>	LARGE_MAXIMUM	)
memory	!=	0	&&	memory	<	LARGE_MINIMUM	||	memory	>	LARGE_MAXIMUM
(	power	*	power	)	>>	(	SHIFT_WORD	-	TEST_POWER	)
(	power	*	power	)	>>	(	SHIFT_WORD	-	TEST_POWER	)
largewords	<=	(	largememory	<<	SHIFT_MEGAWORD	)
largewords	<=	(	largememory	<<	SHIFT_MEGAWORD	)
1L	<<	(	SHIFT_MEGAWORD	-	2	)
1L	<<	(	SHIFT_MEGAWORD	-	2	)
2	*	i	+	3

smallbase	<	(	SMALL_MAXIMUM	-	TINY_NUMBER	)
smallbase	<	(	SMALL_MAXIMUM	-	TINY_NUMBER	)
2	*	i	+	3

(	2	*	i	)	+	smallbase

BN_set_word	(	q	,	2	*	j	)	==	0

r	==	-	1	||	r	>=	MAXPATHLEN

(	u_int32_t	)	BN_num_bits	(	p	)	!=	(	in_size	+	1	)

r	==	3	||	r	==	7

generator_wanted	>	0	&&	generator_wanted	!=	generator_known

i	%	70	==	69

i	%	70	!=	69

kbdintctxt	->	devices	&&	!	kbdintctxt	->	device

verify_host_key	(	ssh	->	host	,	ssh	->	hostaddr	,	hostkey	)	==	-	1

authctxt	->	agent_fd	!=	-	1

authctxt	->	attempt	>	1	&&	!	authctxt	->	info_req_seen

sshbuf_len	(	stderr_buffer	)	>	0	&&	ssh_packet_not_very_much_data_to_write	(	ssh	)

sshbuf_len	(	stdout_buffer	)	>	0	&&	ssh_packet_not_very_much_data_to_write	(	ssh	)

sshbuf_len	(	stdin_buffer	)	<	buffer_high	&&	channel_not_very_much_buffered_data	(	)

fdin	!=	-	1	&&	sshbuf_len	(	stdin_buffer	)	>	0

max_time_milliseconds	==	0	||	client_alive_scheduled

1000	*	(	max_time_milliseconds	%	1000	)
1000	*	max_time_milliseconds	%	1000
ret	==	-	1

ret	==	0	&&	client_alive_scheduled

!	fdout_eof	&&	FD_ISSET	(	fdout	,	readset	)
fdout_eof	&&	FD_ISSET	(	fdout	,	readset	!	fdout_eof	&&	FD_ISSET	(	fdout	,	readset	)
len	<	0	&&	(	errno	==	EINTR	||	errno	==	EAGAIN	)
len	<	0	&&	errno	==	EINTR	||	errno	==	EAGAIN
!	fderr_eof	&&	FD_ISSET	(	fderr	,	readset	)
fderr_eof	&&	FD_ISSET	(	fderr	,	readset	!	fderr_eof	&&	FD_ISSET	(	fderr	,	readset	)
len	<	0	&&	(	errno	==	EINTR	||	errno	==	EAGAIN	)
len	<	0	&&	errno	==	EINTR	||	errno	==	EAGAIN
len	<	0	&&	(	errno	==	EINTR	||	errno	==	EAGAIN	)
len	<	0	&&	errno	==	EINTR	||	errno	==	EAGAIN
fdin_is_tty	&&	dlen	>=	1

!	(	tio	.	c_lflag	&	ECHO	)
!	tio	.	c_lflag	&	ECHO
fderr	!=	-	1

fderr	==	-	1

stdin_eof	&&	fdin	!=	-	1	&&	sshbuf_len	(	stdin_buffer	)	==	0

stdout_buffer_bytes	!=	0	&&	stdout_buffer_bytes	<	256	&&	stdout_buffer_bytes	!=	previous_stdout_buffer_bytes

fdout_eof	&&	fderr_eof	&&	!	ssh_packet_have_data_to_write	(	ssh	)	&&	sshbuf_len	(	stdout_buffer	)	==	0	&&	sshbuf_len	(	stderr_buffer	)	==	0

fdout	!=	-	1

fderr	!=	-	1

fdin	!=	-	1

pid	<	0	&&	errno	==	EINTR

!	rekeying	&&	ssh_packet_not_very_much_data_to_write	(	ssh	)

fdin	==	-	1

fdin	!=	-	1

*	s	==	*	pattern	&&	match_pattern	(	s	+	1	,	pattern	+	1	)

i	<	len	&&	subi	<	sizeof	(	sub	)	-	1

subi	>=	sizeof	(	sub	)	-	1

mip	==	-	1

mhost	==	0	&&	mip	==	0

(	errcode	>>	ERR_LIB_OFFSET	)	&	ERR_LIB_MASK

errcode	&	(	ERR_RFLAGS_MASK	<<	ERR_RFLAGS_OFFSET	)

(	ERR_GET_RFLAGS	(	errcode	)	&	ERR_RFLAG_FATAL	)	!=	0
(	ERR_GET_RFLAGS	(	errcode	)	&	ERR_RFLAG_FATAL	)	!=	0
(	ERR_GET_RFLAGS	(	errcode	)	&	ERR_RFLAG_COMMON	)	!=	0
ERR_GET_RFLAGS	(	errcode	)	&	ERR_RFLAG_COMMON	!=	0
!	oidmatch	||	!	hashmatch

pipe	(	pin	)	<	0	||	pipe	(	pout	)	<	0

rc	!=	-	1	||	errno	!=	EINTR

getsockopt	(	sockfd	,	SOL_SOCKET	,	SO_ERROR	,	&	optval	,	&	optlen	)	==	-	1

result	==	0	&&	*	timeoutp	>	0

ai	->	ai_family	!=	AF_INET	&&	ai	->	ai_family	!=	AF_INET6

getnameinfo	(	ai	->	ai_addr	,	ai	->	ai_addrlen	,	ntop	,	sizeof	(	ntop	)	,	strport	,	sizeof	(	strport	)	,	NI_NUMERICHOST	|	NI_NUMERICSERV	)	!=	0

sock	!=	-	1

sock	==	-	1

want_keepalive	&&	setsockopt	(	sock	,	SOL_SOCKET	,	SO_KEEPALIVE	,	(	void	*	)	&	on	,	sizeof	(	on	)	)	<	0

howmany	(	connection_in	+	1	,	NFDBITS	)	*	sizeof	(	fd_mask	)

i	<	sizeof	(	buf	)	-	1

rc	==	0	||	remaining	<=	0

rc	==	-	1

++	n	>	65536

remote_minor	==	3	||	remote_minor	==	4

ret	!=	-	1

(	ntohl	(	(	(	struct	sockaddr_in	*	)	hostaddr	)	->	sin_addr	.	s_addr	)	>>	24	)	==	IN_LOOPBACKNET

want_cert	&&	!	check_host_cert	(	hostname	,	host_key	)

pid	==	-	1

waitpid	(	pid	,	&	status	,	0	)	==	-	1

fstat	(	fd	,	&	st	)	==	-	1

strcasecmp	(	host	,	hostname	)	&&	strcmp	(	host	,	ipaddr	)	!=	0

bytes	>=	100	*	1000

(	bytes	+	512	)	/	1024
bytes	+	512	/	1024
(	bytes	+	512	)	/	1024
bytes	+	512	/	1024
(	long	long	)	(	bytes	+	5	)	/	100

(	long	long	)	(	bytes	+	5	)	/	10	%	10

(	bytes	+	512	)	/	1024
bytes	+	512	/	1024
(	bytes_per_second	*	AGE_FACTOR	)	+	(	cur_speed	*	(	1.0	-	AGE_FACTOR	)	)
(	bytes_per_second	*	AGE_FACTOR	)	+	(	cur_speed	*	1.0	-	AGE_FACTOR	)
len	>=	file_len	+	1

bytes_per_second	==	0	&&	bytes_left

ioctl	(	STDOUT_FILENO	,	TIOCGWINSZ	,	&	winsize	)	!=	-	1	&&	winsize	.	ws_col	!=	0

kex	->	max	<	kex	->	min	||	kex	->	nbits	<	kex	->	min	||	kex	->	max	<	kex	->	nbits

(	errcode	>>	ERR_LIB_OFFSET	)	&	ERR_LIB_MASK

errcode	&	(	ERR_RFLAGS_MASK	<<	ERR_RFLAGS_OFFSET	)

(	ERR_GET_RFLAGS	(	errcode	)	&	ERR_RFLAG_FATAL	)	!=	0
ERR_GET_RFLAGS	(	errcode	)	&	ERR_RFLAG_FATAL	!=	0
(	ERR_GET_RFLAGS	(	errcode	)	&	ERR_RFLAG_COMMON	)	!=	0
(	ERR_GET_RFLAGS	(	errcode	)	&	ERR_RFLAG_COMMON	)	!=	0
ac	>	0	&&	!	host

ac	--	,	av	++

fork_after_authentication_flag	&&	sshbuf_len	(	command	)	==	0	&&	!	no_shell_flag

dup2	(	devnull	,	STDIN_FILENO	)	==	-	1	||	dup2	(	devnull	,	STDOUT_FILENO	)	==	-	1

i	>	0	&&	success	==	0

in	<	0	||	out	<	0	||	err	<	0

pid	<	0	&&	errno	==	EINTR

pwtimeleft	!=	0	&&	pwtimeleft	<	pwwarntime

pwtimeleft	/	DAY	+	1

actimeleft	!=	0	&&	actimeleft	<	acwarntime

actimeleft	/	DAY	+	1

8	-	(	c	->	c_plen	&	7	)
8	-	c	->	c_plen	&	7
set_nonblock	(	s	)	==	-	1

connect	(	s	,	ai	->	ai_addr	,	ai	->	ai_addrlen	)	<	0	&&	errno	!=	EINPROGRESS

c	->	c_plen	+	8	-	(	c	->	c_plen	&	7	)
c	->	c_plen	+	8	-	c	->	c_plen	&	7
c	&&	(	c	->	c_tv	.	tv_sec	>	now	.	tv_sec	||	(	c	->	c_tv	.	tv_sec	==	now	.	tv_sec	&&	c	->	c_tv	.	tv_usec	>	now	.	tv_usec	)	)
c	&&	c	->	c_tv	.	tv_sec	>	now	.	tv_sec	||	(	c	->	c_tv	.	tv_sec	==	now	.	tv_sec	&&	c	->	c_tv	.	tv_usec	>	now	.	tv_usec	)
c	&&	(	c	->	c_tv	.	tv_sec	<	now	.	tv_sec	||	(	c	->	c_tv	.	tv_sec	==	now	.	tv_sec	&&	c	->	c_tv	.	tv_usec	<	now	.	tv_usec	)	)
c	&&	c	->	c_tv	.	tv_sec	<	now	.	tv_sec	||	(	c	->	c_tv	.	tv_sec	==	now	.	tv_sec	&&	c	->	c_tv	.	tv_usec	<	now	.	tv_usec	)
timeout	==	-	1	||	timeout	==	0

optind	==	argc	&&	!	fopt_count

(	errcode	>>	ERR_LIB_OFFSET	)	&	ERR_LIB_MASK

errcode	&	(	ERR_RFLAGS_MASK	<<	ERR_RFLAGS_OFFSET	)

(	ERR_GET_RFLAGS	(	errcode	)	&	ERR_RFLAG_FATAL	)	!=	0
ERR_GET_RFLAGS	(	errcode	)	&	ERR_RFLAG_FATAL	!=	0
(	ERR_GET_RFLAGS	(	errcode	)	&	ERR_RFLAG_COMMON	)	!=	0
ERR_GET_RFLAGS	(	errcode	)	&	ERR_RFLAG_COMMON	!=	0
8	-	(	sshbuf_len	(	buffer	)	%	8	)

(	st	.	st_mode	&	(	S_IFSOCK	|	S_IFCHR	|	S_IFIFO	)	)	==	0	&&	st	.	st_size	!=	(	off_t	)	sshbuf_len	(	blob	)
st	.	st_mode	&	S_IFSOCK	|	S_IFCHR	|	S_IFIFO	==	0	&&	st	.	st_size	!=	(	off_t	)	sshbuf_len	(	blob	)
(	st	.	st_uid	==	getuid	(	)	)	&&	(	st	.	st_mode	&	077	)	!=	0
(	st	.	st_uid	==	getuid	(	)	)	&&	st	.	st_mode	&	077	!=	0
ret	>	0	&&	!	resume_in_progress

(	double	)	tv	.	tv_sec	+	(	double	)	tv	.	tv_usec	/	1000000.0

i	%	4	==	0

data	+	2	*	i

sizeof	data	-	2	*	i

sshbuf_len	(	stdin_buffer	)	>	0	&&	ssh_packet_not_very_much_data_to_write	(	ssh	)

stdin_eof	&&	sshbuf_len	(	stdin_buffer	)	==	0

--	gc	->	ref_count	<=	0

sshbuf_len	(	stdout_buffer	)	<	buffer_high	&&	sshbuf_len	(	stderr_buffer	)	<	buffer_high	&&	channel_not_very_much_buffered_data	(	)

!	stdin_eof	&&	ssh_packet_not_very_much_data_to_write	(	ssh	)

session_closed	&&	!	channel_still_open	(	)	&&	!	ssh_packet_have_data_to_write	(	ssh	)

len	==	0	&&	cont	==	0

len	<	0	&&	(	errno	==	EAGAIN	||	errno	==	EINTR	)
len	<	0	&&	errno	==	EAGAIN	||	errno	==	EINTR
last_was_cr	&&	ch	==	escape_char

len	<	0	&&	(	errno	==	EAGAIN	||	errno	==	EINTR	)
len	<	0	&&	errno	==	EAGAIN	||	errno	==	EINTR
session_ident	!=	-	1

no_shell_flag	&&	received_signal	==	SIGTERM

len	<	0	||	(	u_int	)	len	!=	sshbuf_len	(	stdout_buffer	)

len	<	0	||	(	u_int	)	len	!=	sshbuf_len	(	stderr_buffer	)

id	==	-	1

!	arg	||	!	*	arg

linenum	!=	which	+	1

!	BN_sub	(	tmp	,	dh	->	p	,	BN_value_one	(	)	)	||	BN_cmp	(	dh_pub	,	tmp	)	!=	-	1

!	BN_rand	(	dh	->	priv_key	,	2	*	need	,	0	,	0	)	||	DH_generate_key	(	dh	)	==	0	||	tries	++	>	10

BN_hex2bn	(	&	dh	->	p	,	modulus	)	==	0	||	BN_hex2bn	(	&	dh	->	g	,	gen	)	==	0

fd	==	-	1

tcgetattr	(	fd	,	&	tio	)	==	-	1

tcgetattr	(	fd	,	&	tio	)	==	-	1

failure	!=	-	1	&&	cfsetispeed	(	&	tio	,	baud_to_speed	(	baud	)	)	==	-	1

failure	!=	-	1	&&	cfsetospeed	(	&	tio	,	baud_to_speed	(	baud	)	)	==	-	1

opcode	>	0	&&	opcode	<	128

opcode	>=	128	&&	opcode	<	160

opcode	>	0	&&	opcode	<	160

failure	==	-	1

tcsetattr	(	fd	,	TCSANOW	,	&	tio	)	==	-	1

sshbuf_len	(	buf	)	-	4	<	len

len	>	256	*	1024

socketpair	(	AF_UNIX	,	SOCK_STREAM	,	0	,	pair	)	==	-	1

fd	<	0	&&	pkcs11_start_helper	(	)	<	0

(	which	&	OPTIONS_EXTENSIONS	)	!=	0
which	&	OPTIONS_EXTENSIONS	!=	0
!	found	&&	(	which	&	OPTIONS_CRITICAL	)	!=	0
!	found	&&	which	&	OPTIONS_CRITICAL	!=	0
parse_option_list	(	k	->	cert	->	critical	,	pw	,	OPTIONS_CRITICAL	|	OPTIONS_EXTENSIONS	,	1	,	&	cert_no_port_forwarding_flag	,	&	cert_no_agent_forwarding_flag	,	&	cert_no_x11_forwarding_flag	,	&	cert_no_pty_flag	,	&	cert_no_user_rc	,	&	cert_forced_command	,	&	cert_source_address_done	)	==	-	1

r	==	-	1

len	<=	0	||	(	u_int	)	len	>	sizeof	(	buf	)

verify_host_key	(	host	,	hostaddr	,	host_key	)	==	-	1

--	p	->	refcount	<=	0

!	k11	->	provider	||	!	k11	->	provider	->	valid

pin	&&	login_required	&&	!	strlen	(	pin	)

(	bignum_bits	+	7	)	/	8
bignum_bits	+	7	/	8
sshkey_sign	(	key	,	&	sig	,	&	slen	,	data	,	sizeof	(	data	)	,	0	)	!=	0	||	sshkey_verify	(	key	,	sig	,	slen	,	data	,	sizeof	(	data	)	,	0	)	!=	0

(	len	%	4	)	==	3

fd	==	-	1

!	find_host	&&	(	hash_hosts	||	delete_host	)
!	find_host	&&	hash_hosts	||	delete_host
!	c	&&	!	ca

hash_hosts	&&	!	ca

!	c	&&	!	ca

unlink	(	old	)	==	-	1	&&	errno	!=	ENOENT

link	(	identity_file	,	old	)	==	-	1

rename	(	tmp	,	identity_file	)	==	-	1

fd	==	-	1

valid_from	==	0	&&	valid_to	==	0xffffffffffffffffULL

(	which	&	OPTIONS_EXTENSIONS	)	!=	0	&&	(	certflags_flags	&	CERTOPT_X_FWD	)	!=	0
which	&	OPTIONS_EXTENSIONS	!=	0	&&	(	certflags_flags	&	CERTOPT_X_FWD	)	!=	0
(	which	&	OPTIONS_EXTENSIONS	)	!=	0	&&	(	certflags_flags	&	CERTOPT_AGENT_FWD	)	!=	0
which	&	OPTIONS_EXTENSIONS	!=	0	&&	certflags_flags	&	CERTOPT_AGENT_FWD	!=	0
(	which	&	OPTIONS_EXTENSIONS	)	!=	0	&&	(	certflags_flags	&	CERTOPT_PORT_FWD	)	!=	0
which	&	OPTIONS_EXTENSIONS	!=	0	&&	(	certflags_flags	&	CERTOPT_PORT_FWD	)	!=	0
(	which	&	OPTIONS_EXTENSIONS	)	!=	0	&&	(	certflags_flags	&	CERTOPT_PTY	)	!=	0
(	which	&	OPTIONS_EXTENSIONS	)	!=	0	&&	certflags_flags	&	CERTOPT_PTY	!=	0
(	which	&	OPTIONS_EXTENSIONS	)	!=	0	&&	(	certflags_flags	&	CERTOPT_USER_RC	)	!=	0
which	&	OPTIONS_EXTENSIONS	!=	0	&&	(	certflags_flags	&	CERTOPT_USER_RC	)	!=	0
mul	==	-	1	&&	secs	>	now

now	+	(	u_int64_t	)	(	secs	*	mul	)

(	(	now	-	59	)	/	60	)	*	60
(	now	-	59	/	60	)	*	60
v00	||	!	in_critical

r	==	-	1

r	!=	-	1

stat	(	identity_file	,	&	sb	)	==	-	1

argc	<	1	&&	!	gen_krl

argc	>	0	&&	!	gen_krl	&&	!	check_krl

print_fingerprint	&&	(	delete_host	||	hash_hosts	)
print_fingerprint	&&	delete_host	||	hash_hosts
fd	==	-	1

kex	->	verify_host_key	(	server_host_key	,	ssh	)	==	-	1

hostkey_algorithm	==	dnskey_algorithm	&&	hostkey_digest_type	==	dnskey_digest_type

version	<	1	||	version	>	2

len	<=	0	||	len	>	32

deadline	==	0	||	deadline	<=	now

locked	&&	!	lock	&&	strcmp	(	passwd	,	lock_passwd	)	==	0

!	locked	&&	lock

msg_len	>	256	*	1024

sshbuf_len	(	e	->	input	)	<	msg_len	+	4

(	euid	!=	0	)	&&	(	getuid	(	)	!=	euid	)

len	==	-	1	&&	(	errno	==	EAGAIN	||	errno	==	EINTR	)
len	==	-	1	&&	errno	==	EAGAIN	||	errno	==	EINTR
len	==	-	1	&&	(	errno	==	EAGAIN	||	errno	==	EINTR	)
len	==	-	1	&&	errno	==	EAGAIN	||	errno	==	EINTR
parent_pid	!=	-	1	&&	getppid	(	)	!=	parent_pid

1	+	3	*	sizeof	pid

ac	>	0	&&	(	c_flag	||	k_flag	||	s_flag	||	d_flag	)
ac	>	0	&&	c_flag	||	k_flag	||	s_flag	||	d_flag
ac	==	0	&&	!	c_flag	&&	!	s_flag

kill	(	pid	,	SIGTERM	)	==	-	1

bind	(	sock	,	(	struct	sockaddr	*	)	&	sunaddr	,	sizeof	(	sunaddr	)	)	<	0

pid	==	-	1

setsid	(	)	==	-	1

mon	->	m_log_sendfd	==	-	1

msg_len	>	256	*	1024

*	activep	&&	*	intptr	==	-	1

*	activep	&&	*	intptr	==	-	1

*	activep	&&	*	intptr	==	-	1

*	activep	&&	*	uintptr	==	0

*	activep	&&	*	intptr	==	-	1

value	==	-	1

*	activep	&&	*	intptr	==	-	1

opcode	==	oLocalForward	||	opcode	==	oRemoteForward

*	activep	&&	*	intptr	==	-	1

*	activep	&&	*	intptr	==	-	1

*	activep	&&	*	intptr	==	-	1

*	activep	&&	*	intptr	==	-	1

*	activep	&&	*	intptr	==	-	1

fstat	(	fileno	(	f	)	,	&	sb	)	==	-	1

(	sb	.	st_uid	!=	0	&&	sb	.	st_uid	!=	getuid	(	)	)	||	(	sb	.	st_mode	&	022	)	!=	0
(	sb	.	st_uid	!=	0	&&	sb	.	st_uid	!=	getuid	(	)	)	||	sb	.	st_mode	&	022	!=	0
!	(	i	==	1	||	i	==	2	)
!	i	==	1	||	i	==	2
!	(	i	==	3	||	i	==	4	)
!	i	==	3	||	i	==	4
15	*	sizeof	(	int	)	-	4	*	sizeof	(	void	*	)	-	sizeof	(	size_t	)

waitpid	(	pid	,	&	status	,	0	)	==	-	1

!	args	||	!	*	args

stat	(	path	,	&	sb	)	==	-	1

g	.	gl_matchc	==	1	&&	dst

g	.	gl_matchc	>	1	&&	tmp_dst	&&	!	dst_is_dir

g	.	gl_matchc	==	1	&&	tmp_dst

!	(	lflag	&	LS_SHORT_VIEW	)
!	lflag	&	LS_SHORT_VIEW
ioctl	(	fileno	(	stdin	)	,	TIOCGWINSZ	,	&	ws	)	!=	-	1

width	/	(	m	+	2	)
width	/	m	+	2
lflag	&	(	SORT_FLAGS	|	LS_REVERSE_SORT	)
lflag	&	SORT_FLAGS	|	LS_REVERSE_SORT
!	(	lflag	&	LS_LONG_VIEW	)	&&	(	c	!=	1	)
!	lflag	&	LS_LONG_VIEW	&&	(	c	!=	1	)
ioctl	(	fileno	(	stdin	)	,	TIOCGWINSZ	,	&	ws	)	!=	-	1

!	(	lflag	&	LS_SHORT_VIEW	)
!	lflag	&	LS_SHORT_VIEW
width	/	(	m	+	2	)
width	/	m	+	2
!	(	lflag	&	LS_LONG_VIEW	)	&&	(	c	!=	1	)
!	lflag	&	LS_LONG_VIEW	&&	(	c	!=	1	)
strlen	(	arg	)	>	sizeof	(	argvs	)	-	1

(	size_t	)	argc	>=	sizeof	(	argv	)	/	sizeof	(	*	argv	)

state	==	MA_SQUOTE	||	state	==	MA_DQUOTE

j	>=	sizeof	(	argvs	)	-	5

state	==	MA_SQUOTE	||	state	==	MA_DQUOTE

state	==	MA_SQUOTE	||	state	==	MA_DQUOTE

state	==	MA_SQUOTE	||	state	==	MA_DQUOTE

j	>=	sizeof	(	argvs	)	-	3

cmdnum	==	-	1

argc	-	optidx	<	1

argc	-	optidx	>	1

argc	-	optidx	<	2

argc	-	optidx	<	1

argc	-	optidx	<	1

argc	-	optidx	>	0

argc	-	optidx	<	1

argc	-	optidx	<	2

err	!=	0	&&	err_abort

chdir	(	path1	)	==	-	1

mkdir	(	path1	,	0777	)	==	-	1

err	!=	0	&&	err_abort

err	!=	0	&&	err_abort

err_abort	&&	err	!=	0

ioctl	(	fileno	(	stdin	)	,	TIOCGWINSZ	,	&	ws	)	!=	-	1

width	/	(	m	+	2	)
width	/	m	+	2
i	+	1	<	filelen

tmplen	>	(	filelen	-	cesc	)

carg	==	1	&&	cursor	>	0

!	batchmode	&&	isatty	(	STDIN_FILENO	)

!	batchmode	&&	isatty	(	STDIN_FILENO	)

socketpair	(	AF_UNIX	,	SOCK_STREAM	,	0	,	inout	)	==	-	1

(	dup2	(	c_in	,	STDIN_FILENO	)	==	-	1	)	||	(	dup2	(	c_out	,	STDOUT_FILENO	)	==	-	1	)

optind	==	argc	||	argc	>	(	optind	+	2	)

kex	->	verify_host_key	(	server_host_key	,	ssh	)	==	-	1

(	0xffffffff	<<	(	32	-	l	)	)	&	0xffffffff

i	<	4	&&	l	>=	32

i	<	4	&&	l	!=	0

(	0xffffffff	<<	(	32	-	l	)	)	&	0xffffffff

addr_netmask	(	af	,	l	,	n	)	==	-	1	||	addr_invert	(	n	)	==	-	1

addr_hostmask	(	a	->	af	,	masklen	,	&	tmp_mask	)	==	-	1

addr_and	(	&	tmp_result	,	&	tmp_addr	,	&	tmp_mask	)	==	-	1

addr_pton	(	addrbuf	,	&	tmp	)	==	-	1

masklen_valid	(	tmp	.	af	,	masklen	)	==	-	1

addr_netmask	(	host	->	af	,	masklen	,	&	tmp_mask	)	==	-	1

addr_and	(	&	tmp_result	,	host	,	&	tmp_mask	)	==	-	1

r	==	-	2

strlen	(	cp	)	>	INET6_ADDRSTRLEN	+	3

r	==	-	1

r	==	-	2

(	conn	->	exts	&	SFTP_EXT_HARDLINK	)	==	0
conn	->	exts	&	SFTP_EXT_HARDLINK	==	0
(	conn	->	exts	&	SFTP_EXT_STATVFS	)	==	0
conn	->	exts	&	SFTP_EXT_STATVFS	==	0
local_fd	==	-	1

showprogress	&&	size	!=	0

num_req	>	0	||	max_req	>	0

size	>	0	&&	offset	>	size

pflag	&&	fchmod	(	local_fd	,	mode	)	==	-	1

utimes	(	local_path	,	tv	)	==	-	1

mkdir	(	dst	,	mode	)	==	-	1	&&	errno	!=	EEXIST

utimes	(	dst	,	tv	)	==	-	1

fstat	(	local_fd	,	&	sb	)	==	-	1

len	==	-	1

id	==	startid	||	len	==	0	||	id	-	ackid	>=	conn	->	num_requests

close	(	local_fd	)	==	-	1

stat	(	src	,	&	sb	)	==	-	1

lstat	(	new_src	,	&	sb	)	==	-	1

upload_dir_internal	(	conn	,	new_src	,	new_dst	,	pflag	,	printflag	,	depth	+	1	)	==	-	1

do_upload	(	conn	,	new_src	,	new_dst	,	pflag	)	==	-	1

buf	->	readonly	||	buf	->	refcount	>	1

buf	->	readonly	||	buf	->	refcount	>	1

sshbuf_check_sanity	(	buf	)	!=	0	||	buf	->	readonly	||	buf	->	refcount	>	1

user_groupslen	==	-	1

seteuid	(	pw	->	pw_uid	)	==	-	1

ai	->	ai_family	!=	AF_INET	&&	ai	->	ai_family	!=	AF_INET6

setsockopt	(	sock	,	SOL_SOCKET	,	SO_REUSEADDR	,	&	on	,	sizeof	(	on	)	)	==	-	1

ai	->	ai_family	!=	AF_INET	&&	ai	->	ai_family	!=	AF_INET6

connect	(	sock	,	ai	->	ai_addr	,	ai	->	ai_addrlen	)	<	0	&&	errno	!=	EINPROGRESS

s	->	client	.	fd	!=	-	1

s	->	server	.	fd	!=	-	1

acceptfd	!=	-	1

!	from	->	ssh	||	!	to	->	ssh

(	dump_packets	&&	type	!=	50	)	||	dump_packets	>	1

len	<	0	&&	(	errno	==	EINTR	||	errno	==	EAGAIN	)
len	<	0	&&	errno	==	EINTR	||	errno	==	EAGAIN
len	<	0	&&	(	errno	==	EINTR	||	errno	==	EAGAIN	)
len	<	0	&&	errno	==	EINTR	||	errno	==	EAGAIN
!	(	s	->	flags	&	SESSION_NEEDS_FLUSH	)
!	s	->	flags	&	SESSION_NEEDS_FLUSH
(	s	->	flags	&	SESSION_NEEDS_FLUSH	)	&&	!	pending

msg_len	>	256	*	1024

delete_file	(	agent_fd	,	file	,	key_only	)	==	-	1

add_file	(	agent_fd	,	file	,	key_only	)	==	-	1

delete_all	(	agent_fd	)	==	-	1

update_card	(	agent_fd	,	!	deleting	,	pkcs11provider	)	==	-	1

do_file	(	agent_fd	,	deleting	,	key_only	,	buf	)	==	-	1

a	->	hi	>=	b	->	lo	&&	a	->	lo	<=	b	->	hi

ers	->	lo	!=	0	&&	crs	->	hi	<	ers	->	lo	-	1

ers	->	hi	!=	(	u_int64_t	)	-	1	&&	crs	->	lo	>	ers	->	hi	+	1

sshkey_cert_is_legacy	(	key	)	||	key	->	cert	->	serial	==	0

(	cost_list	+	7	)	/	8
cost_list	+	7	/	8
(	cost_bitmap	+	7	)	/	8
cost_bitmap	+	7	/	8
(	cost_bitmap_restart	+	7	)	/	8
cost_bitmap_restart	+	7	/	8
(	cost_range	+	7	)	/	8
cost_range	+	7	/	8
serial	>	0	&&	serial_lo	+	serial	==	0

sshkey_cert_is_legacy	(	key	)	||	key	->	cert	->	serial	==	0

!	arg	||	!	*	arg

*	activep	&&	opcode	!=	sMatch

*	activep	==	0	&&	!	(	flags	&	SSHCFG_MATCH	)
*	activep	==	0	&&	!	flags	&	SSHCFG_MATCH
*	activep	&&	*	intptr	==	-	1

*	intptr	==	-	1

value	==	-	1

*	activep	&&	*	intptr	==	-	1

*	activep	&&	*	intptr	==	-	1

value	==	-	1

*	intptr	==	-	1

*	activep	&&	n	==	-	1

*	activep	&&	n	==	-	1

*	activep	&&	n	==	-	1

strlen	(	line	)	==	sizeof	(	line	)	-	1

ci	->	lport	==	-	1

!	ci	->	user	&&	!	ci	->	host	&&	!	ci	->	address

val	==	-	1

keybits	<	0	||	bits	!=	(	u_int	)	keybits

authenticated	==	-	1

!	authctxt	->	valid	&&	authenticated

authenticated	&&	authctxt	->	pw	->	pw_uid	==	0	&&	!	auth_root_allowed	(	meth	->	name	)

remote_major	==	1	&&	remote_minor	==	99

st	.	st_uid	!=	pw	->	pw_uid	||	st	.	st_gid	!=	gid

st	.	st_uid	==	pw	->	pw_uid	||	st	.	st_uid	==	0

(	st	.	st_mode	&	(	S_IRWXU	|	S_IRWXG	|	S_IRWXO	)	)	!=	mode
(	st	.	st_mode	&	S_IRWXU	|	S_IRWXG	|	S_IRWXO	)	!=	mode
(	st	.	st_mode	&	(	S_IRGRP	|	S_IROTH	)	)	==	0
st	.	st_mode	&	S_IRGRP	|	S_IROTH	==	0
setrlimit	(	RLIMIT_FSIZE	,	&	rl_zero	)	==	-	1

setrlimit	(	RLIMIT_NOFILE	,	&	rl_zero	)	==	-	1

setrlimit	(	RLIMIT_NPROC	,	&	rl_zero	)	==	-	1

BN_num_bits	(	p	)	<	kex	->	min	||	BN_num_bits	(	p	)	>	kex	->	max

kex	->	verify_host_key	(	server_host_key	,	ssh	)	==	-	1

fcntl	(	sock	,	F_SETFD	,	FD_CLOEXEC	)	==	-	1	||	connect	(	sock	,	(	struct	sockaddr	*	)	&	sunaddr	,	sizeof	(	sunaddr	)	)	<	0

keybits	<	0	||	bits	!=	(	u_int	)	keybits

!	server	->	kex	->	done	||	!	client	->	kex	->	done

(	(	(	fuzz_ullong	)	fuzz	->	o2	)	*	fuzz	->	slen	*	8	)	+	fuzz	->	o1

(	(	(	fuzz_ullong	)	fuzz	->	o2	)	*	fuzz	->	slen	)	+	fuzz	->	o1

fuzz	->	o2	<	sizeof	(	fuzz_b64chars	)	-	1

fuzz	->	o2	<	sizeof	(	fuzz_b64chars	)	-	1

(	fuzz	->	o1	*	(	fuzz_ullong	)	64	)	+	fuzz	->	o2

ret	->	slen	<	SIZE_MAX	/	8

ret	->	slen	<	SIZE_MAX	/	8

fuzz	->	o1	>=	fuzz	->	slen	*	8

fuzz	->	o2	>=	fuzz	->	slen	*	8

fuzz	->	strategy	==	0	||	fuzz_strategy_done	(	fuzz	)

fuzz	->	o1	/	8	<	fuzz	->	slen

fuzz	->	o1	/	8	<	fuzz	->	slen

1	<<	(	fuzz	->	o1	%	8	)

fuzz	->	o1	/	8	<	fuzz	->	slen

fuzz	->	o1	/	8	<	fuzz	->	slen

fuzz	->	o2	/	8	<	fuzz	->	slen

fuzz	->	o2	/	8	<	fuzz	->	slen

1	<<	(	fuzz	->	o1	%	8	)

1	<<	(	fuzz	->	o2	%	8	)

fuzz	->	o1	>=	fuzz	->	slen	*	8

fuzz	->	o2	<	sizeof	(	fuzz_b64chars	)	-	1

fuzz	->	o2	<	sizeof	(	fuzz_b64chars	)	-	1

fuzz	->	o2	>=	sizeof	(	fuzz_b64chars	)	-	1

fuzz_strategy_done	(	fuzz	)	&&	fuzz	->	strategies	==	0

i	<	sizeof	(	blob	)	*	8

1	<<	(	i	%	8	)

i	<	sizeof	(	blob	)	*	8

i	<	sizeof	(	blob	)	*	8

1	<<	(	i	%	8	)

1	<<	(	j	%	8	)

2	+	(	(	0xffff	+	7	)	/	8	)
2	+	(	0xffff	+	7	/	8	)
2	+	(	(	0xffff	+	7	)	/	8	)
2	+	(	0xffff	+	7	/	8	)
(	(	8191	+	2	)	/	3	)	*	4
(	8191	+	2	/	3	)	*	4
(	leakmalloc_options	&	OPT_EXIT_ON_LEAKS	)	!=	0
leakmalloc_options	&	OPT_EXIT_ON_LEAKS	!=	0
initialised	==	-	1

227	*	227	*	3	+	1

227	*	227	*	3	+	1

status	!=	-	1

flags	&	~	O_NONBLOCK

setsockopt	(	fdout	,	SOL_SOCKET	,	SO_BROADCAST	,	&	broadcast	,	sizeof	(	broadcast	)	)	==	-	1

setsockopt	(	sockfd	,	SOL_SOCKET	,	SO_RCVTIMEO	,	(	char	*	)	&	timeout	,	sizeof	(	timeout	)	)	<	0

numbytes	==	-	1	&&	EAGAIN	!=	errno	&&	EWOULDBLOCK	!=	errno

(	(	unsigned	long	)	(	(	struct	sockaddr_in	*	)	&	their_addr	)	->	sin_addr	.	s_addr	)	==	comms_get_address	(	)	.	s_addr

(	systemRunTime	%	3600	)	/	60

operator_get_floor	(	)	==	-	1

operator_get_floor	(	)	==	-	1

fabs	(	target	-	floor	)	<	0.00001

target	==	-	1

(	fabs	(	target	-	floor	)	<	0.00001	)	&&	target	>	-	1

target	==	-	1

fabs	(	target	-	floor	)	<	0.00001

target	<	floor	&&	target	>	-	1

target	>	floor	&&	target	!=	-	1

target	<	floor	&&	target	!=	-	1

target	==	(	int	)	floor	&&	target	!=	-	1

down	==	-	1

up	==	-	1

abs	(	floor	-	down	)	<	abs	(	floor	-	up	)

down	==	-	1

up	==	-	1

abs	(	floor	-	down	)	<	abs	(	floor	-	up	)

abs	(	floor	-	down	)	>	abs	(	floor	-	up	)

!	(	temp2	==	-	1	||	temp1	==	-	1	)
!	temp2	==	-	1	||	temp1	==	-	1
temp2	!=	-	1	&&	temp1	==	-	1

temp2	==	-	1	&&	temp1	!=	-	1

(	temp_target_above	==	-	1	)	^	(	temp_target_under	==	-	1	)

temp_target_above	==	-	1

(	temp_target_above	!=	-	1	)	&&	(	temp_target_under	!=	-	1	)

abs	(	floor	-	temp_target_above	)	==	abs	(	floor	-	temp_target_under	)

abs	(	floor	-	temp_target_above	)	>	abs	(	floor	-	temp_target_under	)

locked_target	==	-	1

target	==	-	1

target	==	-	1

target	==	-	1

temp_target_above	==	temp_target_under	&&	temp_target_above	==	floor

sign	*	n	*	pow	(	10.0	,	(	scale	+	subscale	*	signsubscale	)	)

fabs	(	d	)	<	1.0e-6	||	fabs	(	d	)	>	1.0e9

(	uc	>=	0xDC00	&&	uc	<=	0xDFFF	)	||	uc	==	0

uc	>=	0xD800	&&	uc	<=	0xDBFF

uc2	<	0xDC00	||	uc2	>	0xDFFF

0x10000	|	(	(	uc	&	0x3FF	)	<<	10	)	|	(	uc2	&	0x3FF	)
0x10000	|	(	uc	&	0x3FF	<<	10	)	|	(	uc2	&	0x3FF	)
(	uc	|	0x80	)	&	0xBF
uc	|	0x80	&	0xBF
(	uc	|	0x80	)	&	0xBF
uc	|	0x80	&	0xBF
(	uc	|	0x80	)	&	0xBF
uc	|	0x80	&	0xBF
(	unsigned	char	)	*	ptr	>	31

in	&&	*	in	&&	(	unsigned	char	)	*	in	<=	32

i	!=	numentries	-	1

i	!=	numentries	-	1

i	<	depth	-	1

!	zco	||	!	zco	->	urlv_new	||	!	zco	->	urlv_new	->	len

!	zco	->	get_pending	&&	!	zco	->	list_pending	&&	zco	->	list_wanted

!	zco	->	get_pending	&&	!	zco	->	list_pending	&&	!	zco	->	list_wanted

zr	->	running	&&	!	_zreactor_run_step	(	zr	)

n	<=	0	&&	errno	==	EINTR

n	*	fact	(	n	-	1	)

(	end	-	start	)	/	(	size	-	1	)
end	-	start	/	size	-	1
(	float	)	(	t2	-	t1	)	/	CLOCKS_PER_SEC

cmp	<	0	&&	unlikely	(	PyErr_Occurred	(	)	)

cmp	<	0	&&	unlikely	(	PyErr_Occurred	(	)	)

func	->	self	||	func	->	func	.	flags	&	__Pyx_CYFUNCTION_STATICMETHOD

cyfunc	->	flags	&	__Pyx_CYFUNCTION_CCLASS	&&	!	static_specialized

(	start	+	end	)	/	2
start	+	end	/	2
unlikely	(	!	code_line	)	||	unlikely	(	!	__pyx_code_cache	.	entries	)

(	start1	<	end2	)	&&	(	start2	<	end1	)

(	result	==	-	1	)	&&	unlikely	(	PyErr_Occurred	(	)	)

-	1	!=	~	0

!	a	||	!	b

a	->	size	!=	b	->	size	||	a	->	typegroup	!=	b	->	typegroup	||	a	->	is_unsigned	!=	b	->	is_unsigned	||	a	->	ndim	!=	b	->	ndim

!	(	a	->	fields	&&	b	->	fields	)
!	a	->	fields	&&	b	->	fields
field_a	->	offset	!=	field_b	->	offset	||	!	__pyx_typeinfo_cmp	(	field_a	->	type	,	field_b	->	type	)

metric	<	0	||	metric	>	16

metric	<	0	||	metric	>	16

daemon_mode	&&	daemon	(	0	,	0	)	<	0

(	!	ripng_if_ipv6_lladdress_check	(	ifp	)	)	&&	(	ri	->	enable_network	||	ri	->	enable_interface	)
(	!	ripng_if_ipv6_lladdress_check	(	ifp	)	)	&&	ri	->	enable_network	||	ri	->	enable_interface
IN6_ARE_ADDR_EQUAL	(	&	rinfo	->	from	,	&	from	->	sin6_addr	)	&&	(	rinfo	->	ifindex	==	ifp	->	ifindex	)

(	same	&&	rinfo	->	metric	!=	rte	->	metric	)	||	rte	->	metric	<	rinfo	->	metric

hoplimit	>=	0	&&	hoplimit	!=	255

(	(	len	-	4	)	%	20	)	!=	0
(	len	-	4	%	20	)	!=	0
if_is_loopback	(	ifp	)	||	!	if_is_up	(	ifp	)

if_is_loopback	(	ifp	)	||	!	if_is_up	(	ifp	)

(	random	(	)	%	5	)	+	1

(	rand	(	)	%	(	time	+	1	)	)	-	(	time	/	2	)
(	rand	(	)	%	time	+	1	)	-	(	time	/	2	)
!	rinfo	||	!	aggregate

num	==	(	rtemax	-	1	)

IPV4_ADDR_SAME	(	&	rinfo	->	from	,	&	from	->	sin_addr	)	&&	(	rinfo	->	ifindex	==	ifp	->	ifindex	)

(	ifc	->	address	->	prefixlen	!=	rp	->	p	.	prefixlen	)	&&	(	rp	->	p	.	prefixlen	!=	32	)

(	random	(	)	%	5	)	+	1

(	rand	(	)	%	(	(	jitter_input	*	2	)	+	1	)	)	-	jitter_input
(	rand	(	)	%	(	jitter_input	*	2	)	+	1	)	-	jitter_input
(	ri	->	enable_network	||	ri	->	enable_interface	)	&&	ri	->	passive
ri	->	enable_network	||	ri	->	enable_interface	&&	ri	->	passive
metric	<	0	||	metric	>	16

metric	<	0	||	metric	>	16

daemon_mode	&&	daemon	(	0	,	0	)	<	0

ioctl	(	circuit	->	fd	,	FIONREAD	,	(	caddr_t	)	&	bytestoread	)	<	0

adj	->	ipv4_addrs	&&	listcount	(	adj	->	ipv4_addrs	)	>	0

adj	->	area_addrs	&&	listcount	(	adj	->	area_addrs	)	>	0

adj	->	ipv4_addrs	&&	listcount	(	adj	->	ipv4_addrs	)	>	0

(	start	>=	0	)	&&	(	end	>=	start	)	&&	(	end	-	start	)	<	16

(	ifp	->	ifindex	&	0xff	)	|	0x80

circuit	->	area	->	min_bcast_mtu	==	0	||	ISO_MTU	(	circuit	)	<	circuit	->	area	->	min_bcast_mtu

circuit	->	ip_addrs	&&	listcount	(	circuit	->	ip_addrs	)	>	0

circuit	->	interface	&&	!	if_is_broadcast	(	circuit	->	interface	)

i	==	(	len	-	1	)

(	pos	-	dotted	)	<	dotlen	&&	len	<	20

(	pos	-	dotted	)	!=	nextdotpos

dotlen	-	(	pos	-	dotted	)	<	2

(	isxdigit	(	(	int	)	*	pos	)	)	&&	(	isxdigit	(	(	int	)	*	(	pos	+	1	)	)	)
(	isxdigit	(	(	int	)	*	pos	)	)	&&	(	isxdigit	(	(	int	)	*	pos	+	1	)	)
(	(	pos	-	dotted	)	!=	4	)	&&	(	(	pos	-	dotted	)	!=	9	)

(	isxdigit	(	(	int	)	*	pos	)	)	&&	(	isxdigit	(	(	int	)	*	(	pos	+	1	)	)	)
(	isxdigit	(	(	int	)	*	pos	)	)	&&	(	isxdigit	(	(	int	)	*	pos	+	1	)	)
nlpids	->	count	-	i	>	1

timer	-	(	timer	*	(	100	-	jitter	)	)	/	100
timer	-	(	timer	*	100	-	jitter	)	/	100
16	*	3	+	5

16	*	1	+	5

(	i	%	16	)	==	1

(	i	%	16	)	==	0

(	i	%	8	)	==	0

(	(	(	te_ipv4_reach	->	control	&	0x3F	)	-	1	)	>>	3	)	+	1
(	te_ipv4_reach	->	control	&	0x3F	-	1	)	>>	3	+	1
(	stream_get_size	(	stream	)	-	stream_get_endp	(	stream	)	)	/	257
stream_get_size	(	stream	)	-	stream_get_endp	(	stream	)	/	257
height_left	==	0	||	height_right	==	0

p1	->	family	==	p2	->	family	&&	p1	->	prefixlen	==	p2	->	prefixlen	&&	memcmp	(	&	p1	->	u	.	prefix	,	&	p2	->	u	.	prefix	,	PSIZE	(	p1	->	prefixlen	)	)	==	0

parent	&&	parent	->	Adj_N	&&	listcount	(	parent	->	Adj_N	)	>	0

v	->	d_N	==	vertex	->	d_N	&&	v	->	type	>	vertex	->	type

!	(	circuit	->	is_type	&	level	)
!	circuit	->	is_type	&	level
!	(	newtype	&	circuit	->	area	->	is_type	)
!	newtype	&	circuit	->	area	->	is_type
!	adj	||	!	adj	->	circuit	||	!	adj	->	circuit	->	area

!	circuit	||	!	circuit	->	area

addr1	->	addr_len	==	addr2	->	addr_len	&&	!	memcmp	(	addr1	->	area_addr	,	addr2	->	area_addr	,	(	int	)	addr1	->	addr_len	)

(	circuit_t	&	level	)	==	level
circuit_t	&	level	==	level
!	adj	||	adj	->	level	!=	hdr	->	circuit_t

!	(	lsp	->	level	&	circuit	->	is_type	)
!	lsp	->	level	&	circuit	->	is_type
addr	->	addr_len	<	8	||	addr	->	addr_len	>	20

tm	->	tm_yday	-	(	(	tm	->	tm_yday	/	7	)	*	7	)

argv	&&	strlen	(	argv	)	>	3

fd	==	-	1

flags	!=	-	1

flags	&	~	O_NONBLOCK

dler	.	addr	-	(	u_char	*	)	&	dler

fd	==	-	1

fd	==	-	1

fd	==	-	1

dlpiaddr	(	fd	,	circuit	->	u	.	bc	.	snpa	)	==	-	1

dlpibind	(	fd	)	==	-	1

index	+	1	==	flags	->	maxindex

LSP_FRAGMENT	(	lsp	->	lsp_header	->	lsp_id	)	==	0	&&	lsp	->	lspu	.	frags

!	FRAG_NEEDED	(	lsp	->	pdu	,	frag_thold	,	listcount	(	*	from	)	*	tlvsize	+	2	)
!	FRAG_NEEDED	(	lsp	->	pdu	,	frag_thold	,	listcount	(	*	from	)	*	tlvsize	+	2	)
!	FRAG_NEEDED	(	lsp	->	pdu	,	frag_thold	,	tlvsize	+	2	)
!	FRAG_NEEDED	(	lsp	->	pdu	,	frag_thold	,	tlvsize	+	2	)
circuit	->	ip_router	&&	circuit	->	ip_addrs	&&	circuit	->	ip_addrs	->	count	>	0

(	ipv4	->	prefixlen	+	7	)	/	8
ipv4	->	prefixlen	+	7	/	8
lsp	->	tlv_data	.	is_neighs	&&	listcount	(	lsp	->	tlv_data	.	is_neighs	)	>	0

lsp	->	tlv_data	.	te_is_neighs	&&	listcount	(	lsp	->	tlv_data	.	te_is_neighs	)	>	0

lsp	->	tlv_data	.	es_neighs	&&	listcount	(	lsp	->	tlv_data	.	es_neighs	)	>	0

internal_seed	%	2	==	0

(	internal_seed	*	A	)	&	B

ch	<	2	||	ch	>	n

n	+	(	n	-	2	)	/	(	ch	-	1	)
n	+	n	-	2	/	ch	-	1
2	*	seed	+	1

3	*	seed	+	1

(	(	i	-	1	)	%	(	ch	-	1	)	)	!=	0
(	i	-	1	%	(	ch	-	1	)	)	!=	0
k	<=	m	-	mc

internal_seed	%	2	==	0

(	internal_seed	*	A	)	&	B

ch	<	1	||	ch	>	n

2	*	seed	+	1

3	*	seed	+	1

(	(	i	-	1	)	%	ch	)	!=	0
(	i	-	1	%	ch	)	!=	0
k	<=	m	-	mc

internal_seed	%	2	==	0

(	internal_seed	*	A	)	&	B

(	double	)	X	*	(	double	)	Y	+	1

(	(	X	-	x	-	1	)	+	(	ih	-	1	)	)	/	ih
(	X	-	x	-	1	)	+	(	ih	-	1	)	/	ih
2	*	seed	+	1

(	1	+	x	)	*	pn
1	+	x	*	pn
(	1	+	x	)	*	(	(	1	+	x	)	*	ps	)
1	+	x	*	(	1	+	x	*	ps	)
3	*	seed	+	1

y	<	Y	-	1

x	<	X	-	1

count	<	ix	&&	xn	<	X

internal_seed	%	2	==	0

(	internal_seed	*	A	)	&	B

type	==	REM	&&	ospf6_route_is_best	(	request	)	&&	request	->	next	&&	ospf6_route_is_same	(	request	,	request	->	next	)

a	->	bdrouter	==	a	->	router_id	&&	b	->	bdrouter	!=	b	->	router_id

a	->	bdrouter	!=	a	->	router_id	&&	b	->	bdrouter	==	b	->	router_id

a	->	drouter	==	a	->	router_id	&&	b	->	drouter	!=	b	->	router_id

a	->	drouter	!=	a	->	router_id	&&	b	->	drouter	==	b	->	router_id

prefix	->	prefix_length	==	0	||	current	+	OSPF6_PREFIX_SIZE	(	prefix	)	>	end

prefix	->	prefix_length	==	0	||	current	+	OSPF6_PREFIX_SIZE	(	prefix	)	>	end

current	<	end	&&	prefix_num

op	->	prefix_length	==	0	||	current	+	OSPF6_PREFIX_SIZE	(	op	)	>	end

end	<	current	+	OSPF6_PREFIX_SIZE	(	op	)

end	<	current	+	OSPF6_PREFIX_SIZE	(	op	)

p	+	sizeof	(	u_int32_t	)	<=	OSPF6_MESSAGE_END	(	oh	)

p	<	OSPF6_MESSAGE_END	(	oh	)	&&	p	+	OSPF6_LSA_SIZE	(	p	)	<=	OSPF6_MESSAGE_END	(	oh	)

p	+	sizeof	(	u_int32_t	)	<=	OSPF6_MESSAGE_END	(	oh	)

on	->	prev_drouter	==	on	->	router_id	||	on	->	drouter	==	on	->	router_id

on	->	prev_bdrouter	==	on	->	router_id	||	on	->	bdrouter	==	on	->	router_id

hello	->	drouter	==	on	->	router_id	&&	hello	->	bdrouter	==	htonl	(	0	)

ntohl	(	dbdesc	->	seqnum	)	!=	on	->	dbdesc_seqnum	+	1

!	oi	->	mtu_ignore	&&	ntohs	(	dbdesc	->	ifmtu	)	!=	oi	->	ifmtu

declared_num_lsas	&&	counted_lsas	!=	declared_num_lsas

p	<	OSPF6_MESSAGE_END	(	oh	)	&&	p	+	OSPF6_LSA_SIZE	(	p	)	<=	OSPF6_MESSAGE_END	(	oh	)

p	-	sendbuf	+	sizeof	(	u_int32_t	)	>	ospf6_packet_max	(	oi	)

on	->	lsupdate_list	->	count	==	0	&&	on	->	retrans_list	->	count	==	0

(	p	-	sendbuf	+	(	unsigned	int	)	OSPF6_LSA_SIZE	(	lsa	->	header	)	)	>	ospf6_packet_max	(	on	->	ospf6_if	)

(	p	-	sendbuf	+	(	unsigned	int	)	OSPF6_LSA_SIZE	(	lsa	->	header	)	)	>	ospf6_packet_max	(	on	->	ospf6_if	)

on	->	lsupdate_list	->	count	!=	0	||	on	->	retrans_list	->	count	!=	0

(	p	-	sendbuf	+	(	(	unsigned	int	)	OSPF6_LSA_SIZE	(	lsa	->	header	)	)	)	>	ospf6_packet_max	(	oi	)

key	->	prefixlen	%	8	==	0

node	&&	node	->	p	.	prefixlen	<=	p	->	prefixlen	&&	prefix_match	(	&	node	->	p	,	p	)

on	->	ospf6_if	->	drouter	==	on	->	router_id	||	on	->	ospf6_if	->	bdrouter	==	on	->	router_id

buffer	+	strlen	(	buffer	)	<	end

buffer	+	strlen	(	buffer	)	<	end

buffer	+	strlen	(	buffer	)	<	end

oi	&&	oi	->	area	&&	oi	->	area	==	area

old	&&	!	OSPF6_LSA_IS_DIFFER	(	lsa	,	old	)

from	&&	from	->	ospf6_if	==	oi	&&	(	from	->	router_id	==	oi	->	drouter	||	from	->	router_id	==	oi	->	bdrouter	)
from	&&	from	->	ospf6_if	==	oi	&&	from	->	router_id	==	oi	->	drouter	||	from	->	router_id	==	oi	->	bdrouter
rem	&&	!	ospf6_lsa_compare	(	rem	,	lsa	)

link_error	==	0	&&	num	==	table	->	count

link_error	==	0	&&	num	==	table	->	count

node	&&	node	->	p	.	prefixlen	<	prefix	->	prefixlen	&&	prefix_match	(	&	node	->	p	,	prefix	)

isprefix	&&	!	match

vty_port	<=	0	||	vty_port	>	0xffff

daemon_mode	&&	daemon	(	0	,	0	)	<	0

nexthop	->	gate	.	ipv4	.	s_addr	==	sockunion2ip	(	qgate	)	||	nexthop	->	rgate	.	ipv4	.	s_addr	==	sockunion2ip	(	qgate	)

select	&&	select	==	fib

retval	==	-	1

retval	==	-	1

nl	!=	&	netlink_cmd	&&	h	->	nlmsg_pid	==	netlink_cmd	.	snl	.	nl_pid

NLMSG_ALIGN	(	n	->	nlmsg_len	)	+	len	>	maxlen

RTA_ALIGN	(	rta	->	rta_len	)	+	len	>	maxlen

NLMSG_ALIGN	(	n	->	nlmsg_len	)	+	len	>	maxlen

!	CONNECTED_PEER	(	ifc	)	&&	ifc	->	destination

daemon_mode	&&	daemon	(	0	,	0	)	<	0

p	->	u	.	prefix4	.	s_addr	==	0	&&	p	->	prefixlen	==	0

ret	>=	0	&&	status	==	0

cur_state	==	ZFPM_STATE_IDLE	||	cur_state	==	ZFPM_STATE_CONNECTING

cur_state	==	ZFPM_STATE_ACTIVE	||	cur_state	==	ZFPM_STATE_CONNECTING

zfpm_g	->	state	==	ZFPM_STATE_IDLE	||	zfpm_g	->	state	==	ZFPM_STATE_ACTIVE	||	zfpm_g	->	state	==	ZFPM_STATE_CONNECTING

!	(	rn	&&	rn	->	info	)
!	rn	&&	rn	->	info
bandwidth	<	1	||	bandwidth	>	10000000

*	--	p	==	0	&&	p	>=	lim

!	vty_port	||	!	config_file

daemon_mode	&&	daemon	(	0	,	0	)	<	0

!	nhi	.	gateway	&&	nhi	.	if_index	==	0

src	&&	!	ri	->	pref_src

tm	->	tm_yday	-	(	(	tm	->	tm_yday	/	7	)	*	7	)

tm	->	tm_yday	-	(	(	tm	->	tm_yday	/	7	)	*	7	)

(	(	maxseq	/	5	)	*	5	)	+	5

seq	>=	0	&&	pentry	->	seq	!=	seq

pentry	->	seq	==	-	1

!	pentry	->	le	&&	!	pentry	->	ge

new	->	seq	==	-	1

prefix_same	(	&	pentry	->	prefix	,	&	new	->	prefix	)	&&	pentry	->	type	==	new	->	type	&&	pentry	->	le	==	new	->	le	&&	pentry	->	ge	==	new	->	ge	&&	pentry	->	seq	!=	seq

lenum	&&	genum	>	lenum

!	any	&&	genum

!	any	&&	lenum

dtype	==	summary_display	||	dtype	==	detail_display

dtype	==	sequential_display	&&	pentry	->	seq	!=	seqnum

dtype	==	detail_display	||	dtype	==	sequential_display

dtype	==	detail_display	||	dtype	==	summary_display

type	==	normal_display	||	type	==	first_match_display

type	==	normal_display	||	type	==	first_match_display

(	(	height	*	(	width	+	2	)	)	/	b	->	size	)	+	10
(	(	height	*	width	+	2	)	/	b	->	size	)	+	10
data	&&	(	height	>	0	)

b	->	tail	&&	(	b	->	tail	->	sp	<	b	->	tail	->	cp	)	&&	!	no_more_flag

b	->	head	&&	(	b	->	head	->	sp	==	b	->	head	->	cp	)

!	dist1	->	ifname	&&	!	dist2	->	ifname

(	size	&	(	size	-	1	)	)	==	0
size	&	(	size	-	1	)	==	0
hb	->	key	&	(	new_size	-	1	)

(	hash	*	33	)	^	(	unsigned	int	)	*	str	++

backet	->	key	==	key	&&	(	*	hash	->	hash_cmp	)	(	backet	->	data	,	data	)

node	&&	node	->	p	.	prefixlen	<=	p	->	prefixlen	&&	prefix_match	(	&	node	->	p	,	p	)

node	->	parent	->	l_left	==	node	&&	node	->	parent	->	l_right

node	->	parent	&&	node	!=	limit

node	->	parent	->	l_left	==	node	&&	node	->	parent	->	l_right

node	->	parent	->	l_left	==	node	&&	node	->	parent	->	l_right

!	(	cycles	%	wq	->	cycles	.	granularity	)	&&	thread_should_yield	(	thread	)
!	cycles	%	wq	->	cycles	.	granularity	&&	thread_should_yield	(	thread	)
fd	!=	-	1

!	(	zprivs	->	user	||	zprivs	->	group	||	zprivs	->	cap_num_p	||	zprivs	->	cap_num_i	)
!	zprivs	->	user	||	zprivs	->	group	||	zprivs	->	cap_num_p	||	zprivs	->	cap_num_i
--	prec	>	0

(	len	--	>	0	)	&&	*	src

connect	(	fd	,	(	struct	sockaddr	*	)	&	addr	,	sizeof	(	addr	)	)	<	0

s	<	buf	+	sizeof	(	buf	)

pref	==	0	||	pref	>	65535

pref	==	0	||	pref	>	65535

(	sum	>>	16	)	+	(	sum	&	0xffff	)
sum	>>	16	+	(	sum	&	0xffff	)
p1	->	family	==	p2	->	family	&&	p1	->	prefixlen	==	p2	->	prefixlen

p1	->	family	!=	p2	->	family	||	p1	->	prefixlen	!=	p2	->	prefixlen

p1	->	family	!=	p2	->	family	||	!	length

pos	*	8	+	bit

0xffffffffULL	<<	(	32	-	masklen	)

0xffffffffU	<<	(	32	-	masklen	)

p	->	prefix	.	s_addr	==	0	&&	p	->	prefixlen	==	0

!	isdigit	(	(	int	)	*	str	)

mfilter	->	type	==	mnew	->	type	&&	filter	->	addr	.	s_addr	==	new	->	addr	.	s_addr	&&	filter	->	addr_mask	.	s_addr	==	new	->	addr_mask	.	s_addr	&&	filter	->	mask	.	s_addr	==	new	->	mask	.	s_addr	&&	filter	->	mask_mask	.	s_addr	==	new	->	mask_mask	.	s_addr

mfilter	->	type	==	mnew	->	type	&&	filter	->	addr	.	s_addr	==	new	->	addr	.	s_addr	&&	filter	->	addr_mask	.	s_addr	==	new	->	addr_mask	.	s_addr

filter	->	exact	==	new	->	exact	&&	mfilter	->	type	==	mnew	->	type	&&	prefix_same	(	&	filter	->	prefix	,	&	new	->	prefix	)

p	->	prefixlen	==	0	&&	!	filter	->	exact

key	->	accept	.	end	==	-	1

key	->	send	.	end	==	-	1

queue	->	size	+	2	>=	queue	->	array_size	&&	!	pqueue_expand	(	queue	)

++	dots	>	3

0777	&	~	PIDFILE_MASK

--	n	>=	0

!	isdigit	(	(	int	)	*	str	)

str	-	sp	>	3

!	isdigit	(	(	int	)	*	str	)

str	-	sp	>	3

!	isdigit	(	(	int	)	*	str	)

p	-	range	>	DECIMAL_STRLEN_MAX

p	-	range	>	DECIMAL_STRLEN_MAX

val	<	min	||	val	>	max

thread	->	u	.	sands	.	tv_sec	-	relative_time	.	tv_sec	>	0

!	timer_wait	||	(	timeval_cmp	(	*	timer_wait	,	*	timer_wait_bg	)	>	0	)

len	<	0	||	len	>=	size

len	>	-	1

len	>	-	1	&&	len	<	size

ctl	->	len	+	1	>=	sizeof	(	buf	)

(	s	>	buf	)	&&	isspace	(	(	int	)	*	(	s	-	1	)	)
(	s	>	buf	)	&&	isspace	(	(	int	)	*	s	-	1	)
vty	->	length	<	2	||	vty	->	cp	<	1

vty	->	iac_sb_in_progress	&&	!	vty	->	iac

(	vty	->	lines	==	0	)	&&	vty	->	t_read

vty_config	==	1	&&	vty	->	config	==	1

p	==	pend	||	*	p	==	succeed

*	p	++	*	BYTEWIDTH	-	1

1	<<	(	j	%	BYTEWIDTH	)

j	<	(	1	<<	BYTEWIDTH	)

*	p	++	*	BYTEWIDTH	-	1

1	<<	(	j	%	BYTEWIDTH	)

j	<	(	1	<<	BYTEWIDTH	)

j	<	(	1	<<	BYTEWIDTH	)

j	<	(	1	<<	BYTEWIDTH	)

(	re_opcode_t	)	*	p	!=	on_failure_jump	&&	(	re_opcode_t	)	*	p	!=	succeed_n

p	+	j	<	pend

startpos	<	0	||	startpos	>	total_size

bufp	->	used	>	0	&&	range	>	0

re_compile_fastmap	(	bufp	)	==	-	2

fastmap	&&	startpos	<	total_size	&&	!	bufp	->	can_be_null

startpos	<	size1	&&	startpos	+	range	>=	size1

size1	==	0	||	startpos	>=	size1

range	>=	0	&&	startpos	==	total_size	&&	fastmap	&&	!	bufp	->	can_be_null

val	==	-	2

!	(	regstart	&&	regend	&&	old_regstart	&&	old_regend	&&	reg_info	&&	best_regstart	&&	best_regend	&&	reg_dummy	&&	reg_info_dummy	)
!	regstart	&&	regend	&&	old_regstart	&&	old_regend	&&	reg_info	&&	best_regstart	&&	best_regend	&&	reg_dummy	&&	reg_info_dummy
pos	<	0	||	pos	>	size1	+	size2

size2	==	0	&&	string1	!=	NULL

size1	>	0	&&	pos	<=	size1

!	best_regs_set	||	best_match_p

best_regs_set	&&	!	best_match_p

d	>=	string1	&&	d	<=	end1

regs	->	start	==	NULL	||	regs	->	end	==	NULL

regs	->	start	==	NULL	||	regs	->	end	==	NULL

*	d	++	!=	(	char	)	*	p	++

(	re_opcode_t	)	*	(	p	-	1	)	==	charset_not
(	re_opcode_t	)	*	p	-	1	==	charset_not
c	<	(	unsigned	)	(	*	p	*	BYTEWIDTH	)

1	+	c	/	BYTEWIDTH

1	<<	(	c	%	BYTEWIDTH	)

just_past_start_mem	==	p	-	1

(	p	+	2	)	<	pend

mcnt	<	0	&&	(	re_opcode_t	)	*	p1	==	on_failure_jump

r	<	(	unsigned	)	*	p	+	(	unsigned	)	*	(	p	+	1	)
r	<	(	unsigned	)	*	p	+	(	unsigned	)	*	p	+	1
mcnt	>	dend2	-	d2

p1	<	pend	&&	(	re_opcode_t	)	*	p1	==	no_op

p1	<	pend	&&	(	re_opcode_t	)	*	p1	==	start_memory

p2	+	2	<	pend	&&	(	(	re_opcode_t	)	*	p2	==	stop_memory	||	(	re_opcode_t	)	*	p2	==	start_memory	)
p2	+	2	<	pend	&&	(	re_opcode_t	)	*	p2	==	stop_memory	||	(	re_opcode_t	)	*	p2	==	start_memory
p2	+	6	<	pend	&&	(	re_opcode_t	)	*	p2	==	dummy_failure_jump

(	re_opcode_t	)	*	p2	==	exactn	||	(	bufp	->	newline_anchor	&&	(	re_opcode_t	)	*	p2	==	endline	)

5	+	c	/	BYTEWIDTH

1	<<	(	c	%	BYTEWIDTH	)

(	re_opcode_t	)	*	p2	==	charset

(	d	)	==	string2	-	1

(	d	)	==	string2	-	1

(	d	)	==	string2	-	1

(	d	)	==	string2	-	1

(	d	)	==	string2	-	1

!	WORDCHAR_P	(	d	-	1	)
!	WORDCHAR_P	(	d	-	1	)
!	AT_STRINGS_BEG	(	d	)	&&	WORDCHAR_P	(	d	-	1	)	&&	(	!	WORDCHAR_P	(	d	)	||	AT_STRINGS_END	(	d	)	)
!	AT_STRINGS_BEG	(	d	)	&&	WORDCHAR_P	(	d	-	1	)	&&	(	!	WORDCHAR_P	(	d	)	||	AT_STRINGS_END	(	d	)	)
(	d	)	==	string2	-	1

(	d	)	==	string2	-	1

(	is_a_jump_n	&&	(	re_opcode_t	)	*	p1	==	succeed_n	)	||	(	!	is_a_jump_n	&&	(	re_opcode_t	)	*	p1	==	on_failure_jump	)

d	>=	string1	&&	d	<=	end1

!	alt_match_null_string_p	(	p1	,	p1	+	mcnt	-	3	,	reg_info	)

(	re_opcode_t	)	*	p1	!=	on_failure_jump

!	alt_match_null_string_p	(	p1	,	p1	+	mcnt	,	reg_info	)

!	rt	||	!	prefix

!	rn	||	!	rn	->	info

or	->	type	==	newor	->	type	&&	or	->	cost	==	newor	->	cost

!	ospf_route_exist_new_table	(	cmprt	,	(	struct	prefix_ipv4	*	)	&	rn	->	p	)

!	ospf_route_exist_new_table	(	cmprt	,	(	struct	prefix_ipv4	*	)	&	rn	->	p	)

!	ospf_route_match_same	(	ospf	->	old_table	,	(	struct	prefix_ipv4	*	)	&	rn	->	p	,	or	)

!	ospf_route_match_same	(	ospf	->	old_table	,	(	struct	prefix_ipv4	*	)	&	rn	->	p	,	or	)

!	IS_ROUTER_LSA_BORDER	(	lsa	)	&&	!	IS_ROUTER_LSA_EXTERNAL	(	lsa	)

v	->	distance	>	cur_or	->	cost	||	IPV4_ADDR_CMP	(	&	cur_or	->	u	.	std	.	origin	->	id	,	&	lsa	->	header	.	id	)	>	0

type	&	(	0x01	<<	i	)

*	metric	<	0	&&	*	metric	>	16777214

self	==	0	||	IS_LSA_SELF	(	lsa	)

i	<	ntohs	(	rl	->	links	)	&&	len	>	0

best	->	cost	==	or	->	cost	&&	IPV4_ADDR_CMP	(	&	best	->	u	.	std	.	area_id	,	&	or	->	u	.	std	.	area_id	)	<	0

!	rt	||	!	prefix

(	or	->	cost	!=	newor	->	cost	)	||	(	or	->	u	.	ext	.	type2_cost	!=	newor	->	u	.	ext	.	type2_cost	)

p	->	family	==	co	->	address	->	family	&&	!	ospf_if_table_lookup	(	ifp	,	co	->	address	)	&&	ospf_network_match_iface	(	co	,	p	)

(	area	->	ospf	->	router_id	.	s_addr	!=	0	)	&&	if_is_operative	(	ifp	)

!	ospf	||	ospf	->	router_id	.	s_addr	==	0

state	==	0	||	nbr	->	state	==	state

!	lsa	||	!	*	lsa

!	is_prefix_default	(	(	struct	prefix_ipv4	*	)	&	ei	->	p	)

!	changed	&&	!	force

rt_recalc	&&	!	IS_LSA_SELF	(	new	)

rt_recalc	&&	!	IS_LSA_SELF	(	new	)

IS_LSA_MAXAGE	(	lsa	)	&&	!	ospf_lsa_is_self_originated	(	ospf	,	lsa	)

IS_LSA_MAXAGE	(	l1	)	&&	!	IS_LSA_MAXAGE	(	l2	)

!	IS_LSA_MAXAGE	(	l1	)	&&	IS_LSA_MAXAGE	(	l2	)

IS_LSA_MAXAGE	(	l1	)	&&	!	IS_LSA_MAXAGE	(	l2	)

IS_LSA_MAXAGE	(	l2	)	&&	!	IS_LSA_MAXAGE	(	l1	)

ret	<	0	||	newbuflen	<	0	||	newbuflen	<	(	int	)	buflen

oi	->	ifp	&&	oi	->	ifp	->	ifindex	==	path	->	ifindex

++	vl_area	->	full_vls	==	1

--	vl_area	->	full_vls	==	0

oi	->	network_lsa_self	&&	oi	->	full_nbrs	==	0

rn	->	info	&&	rn	->	info	==	lsa

daemon_mode	&&	daemon	(	0	,	0	)	<	0

!	IS_SET_DD_M	(	dd	->	flags	)	&&	!	IS_SET_DD_M	(	nbr	->	dd_flags	)

dd	->	options	==	nbr	->	last_recv	.	options	&&	dd	->	flags	==	nbr	->	last_recv	.	flags	&&	dd	->	dd_seqnum	==	htonl	(	nbr	->	last_recv	.	dd_seqnum	)

!	IS_SET_DD_MS	(	dd	->	flags	)	&&	!	IS_SET_DD_I	(	dd	->	flags	)	&&	ntohl	(	dd	->	dd_seqnum	)	==	nbr	->	dd_seqnum	&&	IPV4_ADDR_CMP	(	&	nbr	->	router_id	,	&	oi	->	ospf	->	router_id	)	<	0

(	IS_SET_DD_MS	(	nbr	->	dd_flags	)	&&	ntohl	(	dd	->	dd_seqnum	)	!=	nbr	->	dd_seqnum	)	||	(	!	IS_SET_DD_MS	(	nbr	->	dd_flags	)	&&	ntohl	(	dd	->	dd_seqnum	)	!=	nbr	->	dd_seqnum	+	1	)

length	+	ntohs	(	find	->	data	->	length	)	>	ospf_packet_max	(	oi	)

IS_LSA_MAXAGE	(	lsa	)	&&	!	current	&&	ospf_check_nbr_status	(	oi	->	ospf	)

(	IPV4_ADDR_SAME	(	&	out_if	->	address	->	u	.	prefix4	,	&	lsa	->	data	->	id	)	)	&&	(	!	(	IPV4_ADDR_SAME	(	&	oi	->	ospf	->	router_id	,	&	lsa	->	data	->	adv_router	)	)	)

nbr	->	d_router	.	s_addr	!=	0	&&	IPV4_ADDR_SAME	(	&	nbr	->	d_router	,	&	oi	->	address	->	u	.	prefix4	)	&&	IPV4_ADDR_SAME	(	&	nbr	->	bd_router	,	&	oi	->	address	->	u	.	prefix4	)

PRIORITY	(	oi	)	==	0	&&	IPV4_ADDR_CMP	(	&	DR	(	oi	)	,	&	nbr	->	address	.	u	.	prefix4	)	&&	IPV4_ADDR_CMP	(	&	BDR	(	oi	)	,	&	nbr	->	address	.	u	.	prefix4	)

!	rn	->	info	||	rn	->	info	==	oi

lsa_pos	>=	oi	->	lsa_pos_beg	&&	lsa_pos	<	oi	->	lsa_pos_end

!	rn	||	!	rn	->	info

values1	->	metric	==	values2	->	metric	&&	values1	->	metric_type	==	values2	->	metric_type

(	(	v1	->	distance	-	v2	->	distance	)	==	0	)	&&	(	v1	->	type	!=	v2	->	type	)

vp	->	parent	==	root	&&	vp	->	nexthop

ospf	->	backbone	&&	ospf	->	backbone	==	area

(	ht	-	elapsed	)	<	ospf	->	spf_delay

i	>=	0	&&	i	<	numxroutes

maxxroutes	>	8	&&	numxroutes	<	maxxroutes	/	4

(	p	+	g	)	/	2
p	+	g	/	2
route	->	neigh	==	neigh	&&	memcmp	(	route	->	nexthop	,	nexthop	,	16	)	==	0

(	route_slots	-	n	)	*	sizeof	(	struct	babel_route	*	)
route_slots	-	n	*	sizeof	(	struct	babel_route	*	)
i	>=	0	&&	i	<	route_slots

i	<	route_slots	-	1

(	route_slots	-	i	-	1	)	*	sizeof	(	struct	babel_route	*	)
route_slots	-	i	-	1	*	sizeof	(	struct	babel_route	*	)
max_route_slots	>	8	&&	route_slots	<	max_route_slots	/	4

r	->	neigh	->	ifp	==	ifp	&&	(	!	v4only	||	v4mapped	(	r	->	nexthop	)	)
r	->	neigh	->	ifp	==	ifp	&&	!	v4only	||	v4mapped	(	r	->	nexthop	)
i	>=	0	&&	i	<	route_slots

i	>=	0	&&	i	<	route_slots

route	->	installed	&&	old	!=	new

seqno_compare	(	seqno	,	src	->	seqno	)	>	0	||	(	src	->	seqno	==	seqno	&&	refmetric	<	src	->	metric	)

!	route_expired	(	r	)	&&	(	!	feasible	||	route_feasible	(	r	)	)	&&	(	!	exclude	||	r	->	neigh	!=	exclude	)	&&	(	route_metric	(	r	)	<	route_metric	(	route	)	)
!	route_expired	(	r	)	&&	!	feasible	||	route_feasible	(	r	)	&&	!	exclude	||	r	->	neigh	!=	exclude	&&	(	route_metric	(	r	)	<	route_metric	(	route	)	)
(	4	*	interval	)	/	100	+	interval	/	50

!	feasible	&&	route	->	installed

force	||	!	route	||	route_metric	(	route	)	>=	metric	+	512

allow_duplicates	<	0	||	xroute	->	metric	>=	allow_duplicates

route_metric	(	installed	)	>=	route_metric	(	route	)	+	64

newmetric	>	oldmetric	&&	oldmetric	<	6	*	256	&&	diff	>=	512

newmetric	<	oldmetric	&&	diff	<	1024

newmetric	>=	oldmetric	+	512

newmetric	>=	oldmetric	+	288

better_route	&&	route_metric	(	better_route	)	<=	route_metric	(	route	)	-	96

do_daemonise	&&	daemonise	(	)	<	0

fd	>=	0	&&	rc	<	0

rc	==	3	&&	s	>=	0	&&	s	<=	0xFFFF

rc	<	0	||	rc	>=	100

value	*	3	/	4	+	random	(	)	%	(	value	/	2	)
value	*	3	/	4	+	random	(	)	%	value	/	2
s1	->	tv_sec	-	s2	->	tv_sec	>	2000000

(	unsigned	)	(	s1	->	tv_sec	-	s2	->	tv_sec	)	*	1000	+	(	(	int	)	s1	->	tv_usec	-	s2	->	tv_usec	)	/	1000
(	unsigned	)	(	s1	->	tv_sec	-	s2	->	tv_sec	)	*	1000	+	(	int	)	s1	->	tv_usec	-	s2	->	tv_usec	/	1000
(	unsigned	)	(	s1	->	tv_usec	-	s2	->	tv_usec	)	/	1000u

s	->	tv_sec	+	msecs	/	1000

s	->	tv_usec	+	(	msecs	%	1000	)	*	1000

d	->	tv_sec	==	0	||	timeval_compare	(	d	,	s	)	>	0

d	->	tv_sec	==	0	||	d	->	tv_sec	>	secs

in	*	1000	+	fl

memcmp	(	address	,	prefix	,	plen	/	8	)	!=	0

plen	%	8	==	0

0xFF	<<	(	8	-	(	plen	%	8	)	)

plen	%	8	!=	0

(	0xFF	<<	(	8	-	(	plen	%	8	)	)	)	&	0xFF

(	i	+	1	)	%	4
i	+	1	%	4
(	i	+	1	)	%	4
i	+	1	%	4
plen	>=	96	&&	v4mapped	(	prefix	)

(	i	+	1	)	%	4
i	+	1	%	4
(	msecs	%	1000	)	*	1000

(	plen	+	7	)	/	8
plen	+	7	/	8
omitted	>	4	||	pb	>	4	||	(	pb	>	omitted	&&	len	<	pb	-	omitted	)

omitted	>	16	||	(	pb	>	omitted	&&	len	<	pb	-	omitted	)

pb	>	8	&&	len	<	pb	-	8

i	+	1	>	alen

i	+	len	>	alen

bodylen	+	4	>	packetlen

i	+	1	>	bodylen

i	+	len	>	bodylen

neigh	!=	unicast_neighbour	||	unicast_buffered	+	len	+	2	>=	MIN	(	UNICAST_BUFSIZE	,	babel_get_if_nfo	(	neigh	->	ifp	)	->	bufsize	)

unicast_neighbour	==	neigh	&&	unicast_buffered	>=	bytes	+	2

plen	>=	96	&&	v4mapped	(	prefix	)

real_plen	==	128	&&	memcmp	(	real_prefix	+	8	,	id	,	8	)	==	0

(	real_plen	+	7	)	/	8	-	omit
real_plen	+	7	/	8	-	omit
a	->	plen	>=	96	&&	v4mapped	(	a	->	prefix	)

b	->	plen	>=	96	&&	v4mapped	(	b	->	prefix	)

!	v4a	&&	a	->	plen	==	128	&&	memcmp	(	a	->	prefix	+	8	,	a	->	id	,	8	)	==	0

!	v4b	&&	b	->	plen	==	128	&&	memcmp	(	b	->	prefix	+	8	,	b	->	id	,	8	)	==	0

babel_route_ifp	->	channel	>	0	&&	babel_route_ifp	->	channel	<=	255

plen	>=	96	&&	v4mapped	(	prefix	)

plen	>=	96	&&	v4mapped	(	prefix	)

plen	>=	96	&&	v4mapped	(	prefix	)

(	(	plen	-	96	)	+	7	)	/	8
(	plen	-	96	)	+	7	/	8
(	plen	+	7	)	/	8
plen	+	7	/	8
plen	>=	96	&&	v4mapped	(	prefix	)

(	(	plen	-	96	)	+	7	)	/	8
(	plen	-	96	)	+	7	/	8
(	plen	+	7	)	/	8
plen	+	7	/	8
memcmp	(	id	,	route	->	src	->	id	,	8	)	!=	0	||	seqno_compare	(	seqno	,	route	->	seqno	)	<=	0

route	&&	memcmp	(	id	,	route	->	src	->	id	,	8	)	==	0	&&	seqno_minus	(	seqno	,	route	->	seqno	)	>	100

!	successor	||	successor	==	neigh

!	successor	||	successor	==	neigh

plen	>=	96	&&	v4mapped	(	pref	)

newmetric	==	metric	&&	memcmp	(	newgate	,	gate	,	16	)	==	0	&&	newifindex	==	ifindex

memcmp	(	address	,	neigh	->	address	,	16	)	==	0	&&	neigh	->	ifp	==	ifp

neigh	->	hello_seqno	>=	0	&&	neigh	->	reach	>	0

missed_hellos	<	-	8

(	neigh	->	reach	&	0xFC00	)	!=	0xFC00
neigh	->	reach	&	0xFC00	!=	0xFC00
(	neigh	->	reach	&	0xBF00	)	==	0x8000
neigh	->	reach	&	0xBF00	==	0x8000
(	a	==	0xC000	&&	b	==	0	)	||	(	a	==	0	&&	b	==	0x3000	)

(	neigh	->	reach	&	0xFC00	)	==	0xC000
neigh	->	reach	&	0xFC00	==	0xC000
neigh	->	ihu_interval	>	0	&&	delay	<	neigh	->	ihu_interval	*	10U	*	3U

delay	>=	180000	||	(	neigh	->	reach	&	0xFFF0	)	==	0	||	(	neigh	->	ihu_interval	>	0	&&	delay	>=	neigh	->	ihu_interval	*	10U	*	10U	)
delay	>=	180000	||	neigh	->	reach	&	0xFFF0	==	0	||	(	neigh	->	ihu_interval	>	0	&&	delay	>=	neigh	->	ihu_interval	*	10U	*	10U	)
(	reach	&	0xFFF0	)	==	0	||	delay	>=	180000
reach	&	0xFFF0	==	0	||	delay	>=	180000
(	(	reach	&	0x8000	)	>>	2	)	+	(	(	reach	&	0x4000	)	>>	1	)	+	(	reach	&	0x3FFF	)
reach	&	0x8000	>>	2	+	(	(	reach	&	0x4000	)	>>	1	)	+	(	reach	&	0x3FFF	)
(	0x8000	*	babel_get_if_nfo	(	neigh	->	ifp	)	->	cost	)	/	(	sreach	+	1	)
(	0x8000	*	babel_get_if_nfo	(	neigh	->	ifp	)	->	cost	)	/	sreach	+	1
(	cost	*	(	delay	-	20000	)	+	10000	)	/	20000
cost	*	delay	-	20000	+	10000	/	20000
(	reach	&	0xC000	)	==	0xC000
reach	&	0xC000	==	0xC000
(	reach	&	0xC000	)	==	0
reach	&	0xC000	==	0
(	a	*	b	+	128	)	>>	8

tv	->	tv_sec	==	0	&&	tv	->	tv_usec	==	0

timeout	->	tv_sec	*	1000	+	timeout	->	tv_usec	/	1000

resend	->	kind	==	kind	&&	resend	->	plen	==	plen	&&	memcmp	(	resend	->	prefix	,	prefix	,	16	)	==	0

id	&&	memcmp	(	resend	->	id	,	id	,	8	)	==	0	&&	seqno_compare	(	resend	->	seqno	,	seqno	)	>	0

memcmp	(	request	->	id	,	id	,	8	)	!=	0	||	seqno_compare	(	request	->	seqno	,	seqno	)	<=	0

memcmp	(	request	->	id	,	id	,	8	)	==	0	&&	seqno_compare	(	request	->	seqno	,	seqno	)	>	0

memcmp	(	request	->	id	,	id	,	8	)	!=	0	||	seqno_compare	(	request	->	seqno	,	seqno	)	<=	0

!	resend_expired	(	request	)	&&	request	->	delay	>	0	&&	request	->	max	>	0

!	resend_expired	(	resend	)	&&	resend	->	delay	>	0	&&	resend	->	max	>	0

(	dmn	->	connect_tries	>	1	)	&&	(	dmn	->	state	!=	DAEMON_UP	)

gs	.	numdown	+	IS_UP	(	gs	.	special	)	<	gs	.	numdaemons
gs	.	numdown	+	IS_UP	(	gs	.	special	)	<	gs	.	numdaemons
(	gs	.	special	->	state	==	DAEMON_UP	)	&&	(	gs	.	phase	==	PHASE_NONE	)

(	gs	.	phase	!=	PHASE_NONE	)	||	gs	.	numpids

(	gs	.	mode	!=	MODE_MONITOR	)	&&	(	gs	.	mode	!=	MODE_SEPARATE_RESTART	)

(	gs	.	mode	!=	MODE_MONITOR	)	&&	(	gs	.	mode	!=	MODE_SEPARATE_RESTART	)

(	gs	.	mode	==	MODE_GLOBAL_RESTART	)	||	(	gs	.	mode	==	MODE_SEPARATE_RESTART	)

gs	.	unresponsive_restart	&&	(	gs	.	mode	==	MODE_MONITOR	)

!	gs	.	restart_command	||	gs	.	start_command	||	gs	.	stop_command

!	gs	.	restart_command	||	!	gs	.	start_command	||	!	gs	.	stop_command

100	+	(	random	(	)	%	900	)

(	(	gs	.	mode	==	MODE_PHASED_ZEBRA_RESTART	)	||	(	gs	.	mode	==	MODE_PHASED_ALL_RESTART	)	)	&&	!	strcmp	(	dmn	->	name	,	special	)
(	gs	.	mode	==	MODE_PHASED_ZEBRA_RESTART	)	||	(	gs	.	mode	==	MODE_PHASED_ALL_RESTART	)	&&	!	strcmp	(	dmn	->	name	,	special	)
(	(	gs	.	mode	==	MODE_PHASED_ZEBRA_RESTART	)	||	(	gs	.	mode	==	MODE_PHASED_ALL_RESTART	)	)	&&	!	gs	.	special
(	gs	.	mode	==	MODE_PHASED_ZEBRA_RESTART	)	||	(	gs	.	mode	==	MODE_PHASED_ALL_RESTART	)	&&	!	gs	.	special
gs	.	special	&&	(	gs	.	numdaemons	<	2	)

(	i	%	ITERS_LATER	)	==	0

(	i	%	ITERS_ERR	)	==	0

n	--	>	0

(	hn	->	i	%	ITERS_PRINT	)	==	0

daemon_mode	&&	daemon	(	0	,	0	)	<	0

(	sp	->	does_loop	&&	aspath_loop_check	(	as	,	sp	->	does_loop	)	==	0	)	||	(	sp	->	doesnt_loop	&&	aspath_loop_check	(	as	,	sp	->	doesnt_loop	)	!=	0	)	||	(	aspath_private_as_check	(	as	)	!=	sp	->	private_as	)	||	(	aspath_firstas_check	(	as	,	sp	->	first	)	&&	sp	->	first	==	0	)

!	ret	&&	t	->	validate_afi

!	etmp	||	strcmp	(	str1	,	str2	)

(	i	%	ITERS_LATER	)	==	0

(	i	%	ITERS_ERR	)	==	0

(	i	%	ITERS_PRINT	)	==	0

ret	.	c0	+	*	(	p	++	)

(	(	len	-	off	-	1	)	*	c0	-	c1	)	%	255
len	-	off	-	1	*	c0	-	c1	%	255
(	x	<<	8	)	+	y
x	<<	8	+	y
(	(	len	-	off	-	1	)	*	c0	-	c1	)	%	255
len	-	off	-	1	*	c0	-	c1	%	255
(	x	<<	8	)	|	(	y	&	0xff	)

(	len	-	off	)	*	(	c0	)
len	-	off	*	(	c0	)
(	x	<<	8	)	|	(	y	&	0xff	)

(	len	-	off	)	*	(	c0	)
len	-	off	*	(	c0	)
(	x	<<	8	)	|	(	y	&	0xff	)

(	len	-	off	)	*	(	c0	)
len	-	off	*	(	c0	)
(	x	<<	8	)	|	(	y	&	0xff	)

(	len	-	off	)	*	(	c0	)
len	-	off	*	(	c0	)
(	x	<<	8	)	|	(	y	&	0xff	)

(	(	int	)	(	len	-	off	-	1	)	*	(	int	)	c0	-	(	int	)	c1	)	%	255
(	int	)	(	len	-	off	-	1	)	*	(	int	)	c0	-	(	int	)	c1	%	255
(	x	<<	8	)	|	(	y	&	0xff	)

c0	+	*	(	p	++	)

(	init_len	-	off	)	*	c0
init_len	-	off	*	c0
(	x	<<	8	)	|	(	y	&	0xFF	)

c0	+	*	(	p	++	)

c0	==	0	&&	c1	==	0

(	sum	>>	16	)	+	(	sum	&	0xffff	)
sum	>>	16	+	sum	&	0xffff
(	sum	&	0xffff	)	+	(	sum	>>	16	)
sum	&	0xffff	+	sum	>>	16
(	rand	>>	(	j	*	8	)	)	&	0xff

in_csum_res	!=	in_csum	||	in_csum	!=	in_csum_rfc

ospfd_vals	.	a	.	c0	==	isisd_vals	.	a	.	c0	&&	ospfd_vals	.	a	.	c1	==	isisd_vals	.	a	.	c1

(	i	+	1	)	%	8
i	+	1	%	8
(	numnulls	==	3	)	&&	(	nbytes	==	1	)

i	<	nbytes	&&	numnulls	<	3

(	numnulls	>=	3	)	&&	(	i	<	nbytes	)

daemon_mode	&&	daemon	(	0	,	0	)	<	0

!	active	&&	peer_active	(	peer	)

!	active	&&	peer_active	(	peer	)

--	bgp	->	lock	==	0

!	set	&&	peer_group_active	(	peer	)

!	peer	->	update_source	&&	!	peer	->	update_if

peer	->	password	&&	strcmp	(	peer	->	password	,	password	)	==	0

zlookup	->	sock	!=	-	1

!	compare	&&	ae1	&&	ae2	&&	(	ae1	->	mp_nexthop_len	==	ae2	->	mp_nexthop_len	)

!	prev	||	!	mpath

!	attr	&&	!	binfo	->	mpath

mp_node	&&	(	listgetdata	(	mp_node	)	==	cur_mpath	)

cur_mpath	&&	(	!	mp_node	||	(	bgp_info_mpath_cmp	(	cur_mpath	,	listgetdata	(	mp_node	)	)	<	0	)	)
cur_mpath	&&	!	mp_node	||	(	bgp_info_mpath_cmp	(	cur_mpath	,	listgetdata	(	mp_node	)	)	<	0	)
old_best	&&	(	old_best	!=	new_best	)

!	all_digit	(	p	+	1	)

(	rand	(	)	%	(	time	+	1	)	)	-	(	time	/	2	)
(	rand	(	)	%	time	+	1	)	-	(	time	/	2	)
peer	->	v_start	>=	(	60	*	2	)

!	isdigit	(	(	int	)	*	p	)

!	digit	||	!	separator

!	keyword_included	||	keyword

str_pnt	+	ECOMMUNITY_STR_DEFAULT_LEN	>=	str_size

i	<	ecom1	->	size	&&	j	<	ecom2	->	size

(	(	double	)	penalty	/	damp	->	reuse_limit	-	1.0	)	*	damp	->	scale_factor
(	double	)	penalty	/	damp	->	reuse_limit	-	1.0	*	damp	->	scale_factor
(	damp	->	reuse_offset	+	index	)	%	damp	->	reuse_list_size
damp	->	reuse_offset	+	index	%	damp	->	reuse_list_size
(	damp	->	reuse_offset	+	1	)	%	damp	->	reuse_list_size
damp	->	reuse_offset	+	1	%	damp	->	reuse_list_size
bdi	->	penalty	<=	damp	->	reuse_limit	/	2.0

(	rn	==	bdi	->	rn	)	&&	(	binfo	==	bdi	->	binfo	)

bdi	->	penalty	>	damp	->	reuse_limit	/	2.0

bdi	->	penalty	<=	damp	->	reuse_limit	/	2.0

reuse_max_ratio	>	j	&&	j	!=	0

(	double	)	damp	->	reuse_index_size	/	(	reuse_max_ratio	-	1	)
(	double	)	damp	->	reuse_index_size	/	reuse_max_ratio	-	1
!	damp	||	!	bdi

(	len	+	SEGMENT_STR_LEN	(	seg	)	)	>	str_size
(	len	+	SEGMENT_STR_LEN	(	seg	)	)	>	str_size
!	seg	||	seg	->	length	==	0

(	seg	->	length	-	written	)	>	AS_SEGMENT_MAX

match	!=	minlen	||	match	!=	seg1	->	length	||	seg1	->	length	!=	seg2	->	length

!	(	aspath	&&	aspath	->	segments	)
!	aspath	&&	aspath	->	segments
!	(	aspath	&&	aspath	->	segments	)
!	aspath	&&	aspath	->	segments
!	(	aspath	&&	aspath	->	segments	)
!	aspath	&&	aspath	->	segments
exclseg	&&	!	skip_as

exclseg	&&	!	skip_as

!	(	aspath1	&&	aspath2	)
!	aspath1	&&	aspath2
seg	&&	hops	>	0

!	(	aspath1	&&	aspath2	)
!	aspath1	&&	aspath2
!	(	aspath1	->	segments	&&	aspath2	->	segments	)
!	aspath1	->	segments	&&	aspath2	->	segments
!	(	aspath	&&	aspath	->	segments	)
!	aspath	&&	aspath	->	segments
(	!	seg1	&&	seg2	)	||	(	seg1	&&	!	seg2	)

peer	->	v_start	>=	(	60	*	2	)

peer	->	v_start	>=	(	60	*	2	)

nbytes	==	-	2

(	interval	<	86400	)	&&	(	(	86400	%	interval	)	==	0	)

tm	->	tm_sec	+	60	*	tm	->	tm_min	+	60	*	60	*	tm	->	tm_hour

interval	-	secs_into_day	%	interval

interval	==	bgp_dump	->	interval	&&	type	==	bgp_dump	->	type	&&	path	&&	bgp_dump	->	filename	&&	!	strcmp	(	path	,	bgp_dump	->	filename	)

s	->	getp	<	len	-	16

asfilter	->	type	==	new	->	type	&&	strcmp	(	asfilter	->	reg_str	,	new	->	reg_str	)	==	0

cluster1	->	length	==	cluster2	->	length	&&	memcmp	(	cluster1	->	list	,	cluster2	->	list	,	cluster1	->	length	)	==	0

transit1	->	length	==	transit2	->	length	&&	memcmp	(	transit1	->	val	,	transit2	->	val	,	transit1	->	length	)	==	0

attr1	->	flag	==	attr2	->	flag	&&	attr1	->	origin	==	attr2	->	origin	&&	attr1	->	nexthop	.	s_addr	==	attr2	->	nexthop	.	s_addr	&&	attr1	->	aspath	==	attr2	->	aspath	&&	attr1	->	community	==	attr2	->	community	&&	attr1	->	med	==	attr2	->	med	&&	attr1	->	local_pref	==	attr2	->	local_pref

ae1	&&	ae2	&&	ae1	->	aggregator_as	==	ae2	->	aggregator_as	&&	ae1	->	aggregator_addr	.	s_addr	==	ae2	->	aggregator_addr	.	s_addr	&&	ae1	->	weight	==	ae2	->	weight

attr	->	aspath	&&	!	attr	->	aspath	->	refcnt

attr	->	community	&&	!	attr	->	community	->	refcnt

attre	->	ecommunity	&&	!	attre	->	ecommunity	->	refcnt

attre	->	cluster	&&	!	attre	->	cluster	->	refcnt

attre	->	transit	&&	!	attre	->	transit	->	refcnt

!	use32bit	&&	aspath_has_as4	(	aspath	)

attr	->	community	->	size	*	4	>	255

attre	->	ecommunity	->	size	*	8	>	255

ecom_tr_size	*	8	>	255

attr	->	community	->	size	*	4	>	255

pnt	+	hdr	->	length	+	2	>	end

stream_get_getp	(	s	)	+	2	>	capd_end

i	<	com1	->	size	&&	j	<	com2	->	size

memcmp	(	com1	->	val	,	com2	->	val	,	com1	->	size	*	4	)	==	0

sp	&&	sp	>	arg

element	->	posX	==	-	1

element	->	posX	+	element	->	width	<=	X1

element	->	posY	+	element	->	height	>	Y

one	->	posX	+	one	->	width	!=	two	->	posX

i	<	one	->	width	&&	i	<	two	->	width

element	->	posX	!=	-	1

X	+	element	->	width	>	maxX

element	->	posY	+	element	->	height	>	maxY

element2	->	posX	!=	-	1

tempX	+	element2	->	width	>	X	+	element	->	width

element2	->	height	>	maxY	-	baseY

element2	->	height	>	maxY	-	tempY

element2	->	posX	+	element2	->	width	>	biggestX	&&	element2	->	width	!=	element	->	width

element	->	posX	+	element	->	width	>	X

element	->	posY	+	element	->	height	>	Y

(	100.0	*	best_score	/	totalarea	)	-	100.0

element	->	posX	+	element	->	width	>	maxX

element	->	posY	+	element	->	height	>	maxY

element	->	posX	==	-	1

direction	==	-	1	||	direction	==	1

0.5	-	(	aw	/	bw	)	/	2

0.5	-	(	ah	/	bh	)	/	2

0.5	+	(	aw	/	bw	)	/	2

0.5	+	(	ah	/	bh	)	/	2

(	ABS	(	rotation	)	-	(	(	int	)	(	ABS	(	rotation	)	/	180	)	*	180.0	)	)	/	90.0
ABS	(	rotation	)	-	(	(	int	)	(	ABS	(	rotation	)	/	180	)	*	180.0	)	/	90.0
bw	+	(	bh	-	bw	)	*	factor
bw	+	bh	-	bw	*	factor
bh	+	(	bw	-	bh	)	*	factor
bh	+	bw	-	bh	*	factor
bw	/	bh	<	aw	/	ah

(	(	1023LL	+	44LL	)	<<	52	)	+	(	1LL	<<	51	)	+	f
(	1023LL	+	44LL	)	<<	52	+	1LL	<<	51	+	f
u	.	d	-	(	3LL	<<	43	)
u	.	d	-	3LL	<<	43
d	+	(	3LL	<<	(	51	-	8	)	)
d	+	3LL	<<	(	51	-	8	)
clutter_x11_untrap_x_errors	(	)	||	result	!=	Success

*	(	char	*	)	&	myint	==	1

(	x	<<	8	)	|	(	x	>>	8	)

(	x	<<	24	)	|	(	(	x	&	0xff00	)	<<	8	)	|	(	(	x	&	0xff0000	)	>>	8	)	|	(	x	>>	24	)
(	x	<<	24	)	|	(	x	&	0xff00	<<	8	)	|	(	(	x	&	0xff0000	)	>>	8	)	|	(	x	>>	24	)
result	==	Success	&&	type	!=	None

(	i	+	1	)	*	500
i	+	1	*	500
(	fd	>=	STDIN_FILENO	)	&&	(	fd	<=	STDERR_FILENO	)

sizeof	(	long	)	*	(	2	+	size	*	6	)
sizeof	(	long	)	*	2	+	size	*	6
w	==	0	||	h	==	0

!	(	gravity	&	SHADE_LEFT	)
!	gravity	&	SHADE_LEFT
!	(	gravity	&	SHADE_TOP	)
!	gravity	&	SHADE_TOP
!	d	->	pixmap	||	!	d	->	buffer_pixmap

err	!=	Success	||	result	!=	Success

err	!=	Success	||	result	!=	Success

width	!=	d	->	client_width	||	height	!=	d	->	client_height

!	button	||	button	==	1

xevent	->	xbutton	.	button	==	4	||	xevent	->	xbutton	.	button	==	5

(	j	+	nFile	)	*	sizeof	(	char	*	)
j	+	nFile	*	sizeof	(	char	*	)
(	length	-	5	)	*	sizeof	(	char	)
length	-	5	*	sizeof	(	char	)
!	offset	&&	length	>	i

i	+	1	<	argc

i	+	1	<	argc

i	+	1	<	argc

i	+	1	<	argc

*	binding	&&	!	isalnum	(	*	binding	)
binding	&&	!	isalnum	(	*	binding	*	binding	&&	!	isalnum	(	*	binding	)
*	binding	&&	!	isalnum	(	*	binding	)
binding	&&	!	isalnum	(	*	binding	*	binding	&&	!	isalnum	(	*	binding	)
!	offset	&&	length	>	i

srcLength	>	0	&&	length	>	0

(	height	-	i	-	1	)	*	width	*	4
height	-	i	-	1	*	width	*	4
sizeof	(	char	)	*	(	n	+	1	)
sizeof	(	char	)	*	n	+	1
sizeof	(	char	)	*	(	length	+	1	)
sizeof	(	char	)	*	length	+	1
sizeof	(	char	)	*	(	strlen	(	group	)	+	7	)
sizeof	(	char	)	*	strlen	(	group	)	+	7
sizeof	(	char	)	*	(	length	+	valueLength	+	1	)
sizeof	(	char	)	*	length	+	valueLength	+	1
(	*	len	+	1	)	*	sizeof	(	char	)
*	len	+	1	*	sizeof	(	char	)
i	<	nOutput	-	1

pixmap	==	0	&&	i	<	2

status	==	Success	&&	prop

actualType	==	pixmapAtom	&&	actualFormat	==	32	&&	nItems	==	1

result	==	Success	&&	propData

result	==	Success	&&	propData

result	==	Success	&&	propData

result	==	Success	&&	propData

result	==	Success	&&	data

!	tx	&&	!	ty

nDesktop	<	1	||	nDesktop	>=	0xffffffff

x	+	(	width	>>	1	)
x	+	width	>>	1
y	+	(	height	>>	1	)
y	+	height	>>	1
left	>	right	||	top	>	bottom

(	right	-	left	)	*	(	bottom	-	top	)
right	-	left	*	bottom	-	top
ai0	*	B	(	0	,	0	)	+	ai1	*	B	(	1	,	0	)	+	ai2	*	B	(	2	,	0	)	+	ai3	*	B	(	3	,	0	)

ai0	*	B	(	0	,	1	)	+	ai1	*	B	(	1	,	1	)	+	ai2	*	B	(	2	,	1	)	+	ai3	*	B	(	3	,	1	)

ai0	*	B	(	0	,	2	)	+	ai1	*	B	(	1	,	2	)	+	ai2	*	B	(	2	,	2	)	+	ai3	*	B	(	3	,	2	)

ai0	*	B	(	0	,	3	)	+	ai1	*	B	(	1	,	3	)	+	ai2	*	B	(	2	,	3	)	+	ai3	*	B	(	3	,	3	)

x	*	x	+	y	*	y	+	z	*	z

(	one_c	*	xx	)	+	c

(	one_c	*	xy	)	-	zs

(	one_c	*	zx	)	+	ys

(	one_c	*	xy	)	+	zs

(	one_c	*	yy	)	+	c

(	one_c	*	yz	)	-	xs

(	one_c	*	zx	)	-	ys

(	one_c	*	yz	)	+	xs

(	one_c	*	zz	)	+	c

!	keysym	&&	index	<	keysymsPerKeycode

keysym	==	XK_Alt_L	||	keysym	==	XK_Alt_R

keysym	==	XK_Meta_L	||	keysym	==	XK_Meta_R

keysym	==	XK_Super_L	||	keysym	==	XK_Super_R

keysym	==	XK_Hyper_L	||	keysym	==	XK_Hyper_R

compositeMajor	==	0	&&	compositeMinor	<	2

focus	==	None	||	focus	==	PointerRoot

3	+	nMatrix	*	2

x1	<	x2	&&	y1	<	y2

dFlags	&	(	IconPixmapHint	|	IconMaskHint	)
dFlags	&	IconPixmapHint	|	IconMaskHint
result	==	Success	&&	data

result	==	Success	&&	data

result	==	Success	&&	data

result	==	Success	&&	data

result	==	Success	&&	data

result	==	Success	&&	data

result	==	Success	&&	data

result	==	Success	&&	data

result	==	Success	&&	data

value	<<	16	|	value

result	==	Success	&&	data

result	==	Success	&&	data

width	+	borderWidth	*	2

height	+	borderWidth	*	2

!	result	||	actualWidth	!=	pw	||	actualHeight	!=	ph

result	==	Success	&&	n	&&	data

result	==	Success	&&	data

mask	&	(	CWWidth	|	CWHeight	)
mask	&	CWWidth	|	CWHeight
xwc	->	height	+	oldBorderWidth	*	2

xwc	->	width	+	oldBorderWidth	*	2

(	mask	&	CWX	)	&&	(	xwc	->	x	==	oldX	)
mask	&	CWX	)	&&	(	xwc	->	x	==	oldX	(	mask	&	CWX	)	&&	(	xwc	->	x	==	oldX	)
(	mask	&	CWY	)	&&	(	xwc	->	y	==	oldY	)
mask	&	CWY	)	&&	(	xwc	->	y	==	oldY	(	mask	&	CWY	)	&&	(	xwc	->	y	==	oldY	)
(	mask	&	CWWidth	)	&&	(	xwc	->	width	==	oldWidth	)
mask	&	CWWidth	)	&&	(	xwc	->	width	==	oldWidth	(	mask	&	CWWidth	)	&&	(	xwc	->	width	==	oldWidth	)
(	mask	&	CWHeight	)	&&	(	xwc	->	height	==	oldHeight	)
mask	&	CWHeight	)	&&	(	xwc	->	height	==	oldHeight	(	mask	&	CWHeight	)	&&	(	xwc	->	height	==	oldHeight	)
xwcm	&	(	CWX	|	CWWidth	)
xwcm	&	CWX	|	CWWidth
xwcm	&	(	CWY	|	CWHeight	)
xwcm	&	CWY	|	CWHeight
(	newX	-	xwc	->	x	)	*	direction
newX	-	xwc	->	x	*	direction
(	newY	-	xwc	->	y	)	*	direction
newY	-	xwc	->	y	*	direction
xwcm	&	(	CWWidth	|	CWHeight	)
xwcm	&	CWWidth	|	CWHeight
(	flags	&	PBaseSize	)	&&	(	flags	&	PMinSize	)
&	PBaseSize	)	&&	(	flags	&	PMinSize	(	flags	&	PBaseSize	)	&&	(	flags	&	PMinSize	flags	&	PBaseSize	)	&&	(	flags	&	PMinSize	(	flags	&	PBaseSize	)	&&	(	flags	&	PMinSize	)
(	flags	&	PAspect	)	&&	hints	->	min_aspect	.	y	>	0	&&	hints	->	max_aspect	.	x	>	0
flags	&	PAspect	)	&&	hints	->	min_aspect	.	y	>	0	&&	hints	->	max_aspect	.	x	>	(	flags	&	PAspect	)	&&	hints	->	min_aspect	.	y	>	0	&&	hints	->	max_aspect	.	x	>	0
min_aspect_x	*	height	>	width	*	min_aspect_y

height	-	width	*	min_aspect_y	/	min_aspect_x

height	-	delta	>=	min_height

height	*	min_aspect_x	/	min_aspect_y	-	width

width	+	delta	<=	max_width

width	*	max_aspect_y	>	max_aspect_x	*	height

width	-	height	*	max_aspect_x	/	max_aspect_y

width	-	delta	>=	min_width

width	*	min_aspect_y	/	min_aspect_x	-	height

height	+	delta	<=	max_height

width	!=	oldWidth	||	height	!=	oldHeight

result	==	Success	&&	data

maskImage	&&	!	XGetPixel	(	maskImage	,	i	,	j	)

result	==	Success	&&	data

i	+	2	<	n

iw	*	ih	+	2

iw	>	2048	||	ih	>	2048	||	iw	*	ih	+	2	>	n	-	i

j	<	iw	*	ih

(	red	*	alpha	)	>>	8

(	green	*	alpha	)	>>	8

(	blue	*	alpha	)	>>	8

(	alpha	<<	24	)	|	(	red	<<	16	)	|	(	green	<<	8	)	|	(	blue	<<	0	)

!	mask	||	nFunctionList	==	1

strlen	(	data	)	+	count	*	(	strlen	(	prefix	)	+	1	)	+	1
strlen	(	data	)	+	count	*	strlen	(	prefix	)	+	1	+	1
needle	&&	(	!	first	||	needle	<	first	)
needle	&&	!	first	||	needle	<	first
n	>	-	1	&&	n	<	size

n	>	-	1

n	>	-	1	&&	n	<	size

n	>	-	1

(	bindMods	&	modMask	)	==	0
bindMods	&	modMask	==	0
event	->	xcrossing	.	mode	!=	NotifyGrab	&&	event	->	xcrossing	.	mode	!=	NotifyUngrab	&&	event	->	xcrossing	.	detail	!=	NotifyInferior

edgeWindow	&&	edgeWindow	!=	event	->	xcrossing	.	window

event	->	xbutton	.	button	==	Button1	||	event	->	xbutton	.	button	==	Button2	||	event	->	xbutton	.	button	==	Button3

event	->	xconfigurerequest	.	value_mask	&	(	CWX	|	CWY	|	CWWidth	|	CWHeight	|	CWBorderWidth	)
event	->	xconfigurerequest	.	value_mask	&	CWX	|	CWY	|	CWWidth	|	CWHeight	|	CWBorderWidth
event	->	xfocus	.	detail	==	NotifyDetailNone	||	(	event	->	xfocus	.	mode	==	NotifyNormal	&&	event	->	xfocus	.	detail	==	NotifyInferior	)

(	amount	*	zs	->	velocity	+	adjust	)	/	(	amount	+	1.0f	)
amount	*	zs	->	velocity	+	adjust	/	amount	+	1.0f
fabs	(	d	)	<	0.02f	&&	fabs	(	zs	->	velocity	)	<	0.005f

~	(	1	<<	zs	->	zoomOutput	)
~	1	<<	zs	->	zoomOutput
oWidth	/	(	box	.	x2	-	box	.	x1	)
oWidth	/	box	.	x2	-	box	.	x1
(	(	oWidth	/	2.0f	)	-	x1	)	/	oWidth
(	oWidth	/	2.0f	)	-	x1	/	oWidth
(	(	oHeight	/	2.0f	)	-	y1	)	/	oHeight
(	oHeight	/	2.0f	)	-	y1	/	oHeight
0.5f	-	x	*	scale

0.5f	-	y	*	scale

zs	->	x1	<	zs	->	x2	&&	zs	->	y1	<	zs	->	y2

(	zs	->	x1	+	zs	->	x2	)	/	2.0f	+	0.5f
zs	->	x1	+	zs	->	x2	/	2.0f	+	0.5f
(	zs	->	y1	+	zs	->	y2	)	/	2.0f	+	0.5f
zs	->	y1	+	zs	->	y2	/	2.0f	+	0.5f
zs	->	zoomed	&	(	1	<<	output	)

zs	->	zoomed	&	(	1	<<	output	)

box	.	x1	+	(	x0	*	(	box	.	x2	-	box	.	x1	)	-	x0	*	w	+	0.5f	)
box	.	x1	+	(	x0	*	box	.	x2	-	box	.	x1	-	x0	*	w	+	0.5f	)
box	.	y1	+	(	y0	*	(	box	.	y2	-	box	.	y1	)	-	y0	*	h	+	0.5f	)
box	.	y1	+	(	y0	*	box	.	y2	-	box	.	y1	-	y0	*	h	+	0.5f	)
zs	->	zoomed	&	(	1	<<	output	)

oWidth	/	(	box	.	x2	-	box	.	x1	)
oWidth	/	box	.	x2	-	box	.	x1
zs	->	zoomed	&	(	1	<<	output	)

oWidth	/	(	box	.	x2	-	box	.	x1	)
oWidth	/	box	.	x2	-	box	.	x1
zs	->	zoomed	&	(	1	<<	output	)

(	alpha	<<	24	)	|	(	red	<<	16	)	|	(	green	<<	8	)	|	(	blue	<<	0	)

color_type	==	PNG_COLOR_TYPE_GRAY	&&	depth	<	8

color_type	==	PNG_COLOR_TYPE_GRAY	||	color_type	==	PNG_COLOR_TYPE_GRAY_ALPHA

(	(	GRID_WIDTH	-	1	)	/	2	*	width	)	/	(	float	)	(	GRID_WIDTH	-	1	)
(	GRID_WIDTH	-	1	/	2	*	width	)	/	(	float	)	(	GRID_WIDTH	-	1	)
(	(	GRID_HEIGHT	-	1	)	/	2	*	height	)	/	(	float	)	(	GRID_HEIGHT	-	1	)
(	GRID_HEIGHT	-	1	/	2	*	height	)	/	(	float	)	(	GRID_HEIGHT	-	1	)
(	GRID_HEIGHT	-	1	)	/	2
GRID_HEIGHT	-	1	/	2
(	GRID_WIDTH	-	1	)	/	2
GRID_WIDTH	-	1	/	2
(	(	GRID_WIDTH	-	1	)	/	2	*	width	)	/	(	float	)	(	GRID_WIDTH	-	1	)
(	GRID_WIDTH	-	1	/	2	*	width	)	/	(	float	)	(	GRID_WIDTH	-	1	)
(	GRID_WIDTH	-	1	)	/	2
GRID_WIDTH	-	1	/	2
x	+	(	gridX	*	width	)	/	(	GRID_WIDTH	-	1	)
x	+	(	gridX	*	width	)	/	GRID_WIDTH	-	1
y	+	(	gridY	*	height	)	/	(	GRID_HEIGHT	-	1	)
y	+	(	gridY	*	height	)	/	GRID_HEIGHT	-	1
x	+	(	gridX	*	width	)	/	gw

y	+	(	gridY	*	height	)	/	gh

gridY	==	GRID_HEIGHT	-	1

gridX	==	GRID_WIDTH	-	1

x	+	w	/	2

y	+	h	/	2

(	(	float	)	width	)	/	(	GRID_WIDTH	-	1	)
(	(	float	)	width	)	/	GRID_WIDTH	-	1
(	(	float	)	height	)	/	(	GRID_HEIGHT	-	1	)
(	(	float	)	height	)	/	GRID_HEIGHT	-	1
object	->	velocity	.	x	<	0.0f	&&	object	->	position	.	x	<	object	->	vertEdge	.	attract

object	->	velocity	.	x	>	0.0f	&&	object	->	position	.	x	>	object	->	vertEdge	.	attract

object	->	velocity	.	y	<	0.0f	&&	object	->	position	.	y	<	object	->	horzEdge	.	attract

object	->	velocity	.	y	>	0.0f	&&	object	->	position	.	y	>	object	->	horzEdge	.	attract

(	1	-	u	)	*	(	1	-	u	)	*	(	1	-	u	)
1	-	u	*	(	1	-	u	)	*	(	1	-	u	)
3	*	u	*	(	1	-	u	)	*	(	1	-	u	)
3	*	u	*	1	-	u	*	(	1	-	u	)
3	*	u	*	u	*	(	1	-	u	)
3	*	u	*	u	*	1	-	u
(	1	-	v	)	*	(	1	-	v	)	*	(	1	-	v	)
1	-	v	*	1	-	v	*	1	-	v
3	*	v	*	(	1	-	v	)	*	(	1	-	v	)
3	*	v	*	1	-	v	*	1	-	v
3	*	v	*	v	*	(	1	-	v	)
3	*	v	*	v	*	1	-	v
j	*	GRID_WIDTH	+	i

j	*	GRID_WIDTH	+	i

dx	*	dx	+	dy	*	dy

i	==	0	||	distance	<	minDistance

ws	->	wobblyWindows	&	(	WobblyInitial	|	WobblyVelocity	)
ws	->	wobblyWindows	&	WobblyInitial	|	WobblyVelocity
3	+	nMatrix	*	2

(	(	x2	-	x1	-	1	)	/	gridW	)	+	1
(	x2	-	x1	-	1	/	gridW	)	+	1
(	(	y2	-	y1	-	1	)	/	gridH	)	+	1
(	y2	-	y1	-	1	/	gridH	)	+	1
y	<	ih	-	1

x	<	iw	-	1

(	x	-	wx	)	/	width
x	-	wx	/	width
(	y	-	wy	)	/	height
y	-	wy	/	height
!	ww	->	grabbed	&&	ww	->	model	->	anchorObject

-	x1	*	source	->	dimension	.	width

-	y1	*	source	->	dimension	.	height

dx	*	xScale	+	0.5f

dy	*	yScale	+	0.5f

0.5f	+	(	strength	/	2.0f	)

(	radius	*	2	)	+	1

j	<	i	-	1

(	n	-	2	)	/	6
n	-	2	/	6
-	bs	->	filterRadius	*	2

-	bs	->	filterRadius	*	2

function	->	param	==	param	&&	function	->	target	==	target

function	->	param	==	param	&&	function	->	target	==	target	&&	function	->	unit	==	unit	&&	function	->	numITC	==	numITC	&&	function	->	startTC	==	startTC

(	bs	->	maxTemp	/	2	)	-	4	>	(	bs	->	numTexop	+	(	bs	->	numTexop	-	numITC	)	)	*	2
(	bs	->	maxTemp	/	2	)	-	4	>	bs	->	numTexop	+	(	bs	->	numTexop	-	numITC	)	*	2
(	(	bs	->	maxTemp	/	2	)	-	4	)	/	4
(	bs	->	maxTemp	/	2	)	-	4	/	4
i	<	numIndirectOp	*	2

i	<	numIndirectOp	*	2

MIN	(	(	j	+	1	)	*	numIndirectOp	,	bs	->	numTexop	)	-	base
MIN	(	j	+	1	*	numIndirectOp	,	bs	->	numTexop	)	-	base
(	i	*	2	)	+	1

startTC	+	(	(	i	+	base	)	*	2	)
startTC	+	(	i	+	base	*	2	)
(	i	*	2	)	+	1

startTC	+	1	+	(	(	i	+	base	)	*	2	)
startTC	+	1	+	(	i	+	base	*	2	)
(	i	*	2	)	+	1

(	i	*	2	)	+	1

i	<	end	*	2

base	+	(	i	/	2	)

glGetError	(	)	!=	GL_NO_ERROR	||	errorPos	!=	-	1

bs	->	maxTemp	-	1	>	(	bs	->	numTexop	+	(	bs	->	numTexop	-	numITC	)	)	*	2
bs	->	maxTemp	-	1	>	bs	->	numTexop	+	(	bs	->	numTexop	-	numITC	)	*	2
(	bs	->	maxTemp	-	1	)	/	4
bs	->	maxTemp	-	1	/	4
(	i	*	2	)	+	1

(	i	*	2	)	+	1

MIN	(	(	j	+	1	)	*	numIndirectOp	,	bs	->	numTexop	)	-	base
MIN	(	j	+	1	*	numIndirectOp	,	bs	->	numTexop	)	-	base
(	i	*	2	)	+	1

(	(	i	+	base	)	*	2	)	+	1
(	i	+	base	*	2	)	+	1
(	i	*	2	)	+	1

(	(	i	+	base	)	*	2	)	+	2
(	i	+	base	*	2	)	+	2
(	i	*	2	)	+	1

(	i	*	2	)	+	1

i	<	end	*	2

base	+	(	i	/	2	)

vert	+	(	stride	*	i	)

(	i	*	3	)	+	1

(	i	*	3	)	+	2

i	<	nVertices	/	4

screen	+	(	i	*	4	*	2	)

j	<	8	*	nQuadCombine

!	bs	->	blurOcclusion	&&	bw	->	clip	->	numRects

strlen	(	d	->	d_name	)	==	14	+	nDigits

function	->	param	==	param	&&	function	->	unit	==	unit	&&	function	->	target	==	target

i	<	dHeight	-	1

j	<	dWidth	-	1

dt	*	(	D	(	d10	,	j	)	+	D	(	d12	,	j	)	+	D	(	d11	,	j	-	1	)	+	D	(	d11	,	j	+	1	)	-	4.0f	*	D	(	d11	,	j	)	)
dt	*	(	D	(	d10	,	j	)	+	D	(	d12	,	j	)	+	D	(	d11	,	j	-	1	)	+	D	(	d11	,	j	+	1	)	-	4.0f	*	D	(	d11	,	j	)	)
(	2.0f	*	D	(	d11	,	j	)	-	D	(	d01	,	j	)	+	accel	)	*	fade
(	2.0f	*	D	(	d11	,	j	)	-	D	(	d01	,	j	)	+	accel	)	*	fade
i	<	dHeight	-	1

0.5f	/	sqrtf	(	v0	*	v0	+	v1	*	v1	+	1.0f	)

v0	*	inv	+	0.5f

v1	*	inv	+	0.5f

t0	+	(	j	*	4	)

2	*	error	>=	deltaX

(	ws	->	width	+	2	)	*	(	ws	->	height	+	2	)
ws	->	width	+	2	*	ws	->	height	+	2
ws	->	t0	+	(	ws	->	width	*	4	*	i	+	j	*	4	)

width	/	2.0f	-	pw	/	2.0f

height	/	2.0f	-	ph	/	2.0f

width	/	2.0f	+	pw	/	2.0f

height	/	2.0f	+	ph	/	2.0f

(	sides	+	2	)	*	2
sides	+	2	*	2
-	hsize	/	2

i	<=	hsize	/	2

xMoveAdd	<	-	hsize	/	2

xMoveAdd	>	hsize	/	2

i	==	0	||	i	*	2	==	hsize

xMoveAdd	<	-	hsize	/	2

xMoveAdd	>	hsize	/	2

vRotate	/	5.0f	+	90.0f

fd	->	displayModals	&&	!	fw	->	dModal

sizeof	(	char	)	*	pluginSep	+	2

sizeof	(	char	)	*	(	screenSep	-	pluginSep	)
sizeof	(	char	)	*	screenSep	-	pluginSep
sizeof	(	char	)	*	(	length	+	1	)
sizeof	(	char	)	*	length	+	1
sizeof	(	char	)	*	(	optionLength	+	1	)
sizeof	(	char	)	*	optionLength	+	1
i	!=	length	-	1

sizeof	(	char	)	*	(	itemLength	+	1	)
sizeof	(	char	)	*	itemLength	+	1
!	fileData	||	(	fileData	&&	fileData	->	blockWrites	)

sizeof	(	char	)	*	(	strlen	(	filename	)	+	strlen	(	directory	)	+	2	)
sizeof	(	char	)	*	strlen	(	filename	)	+	strlen	(	directory	)	+	2
!	fileData	||	(	fileData	&&	fileData	->	blockReads	)

sizeof	(	char	)	*	(	strlen	(	filename	)	+	strlen	(	directory	)	+	2	)
sizeof	(	char	)	*	strlen	(	filename	)	+	strlen	(	directory	)	+	2
-	(	WIDTH	>>	1	)
-	WIDTH	>>	1
-	(	WIDTH	>>	1	)
-	WIDTH	>>	1
-	(	WIDTH	>>	1	)
-	WIDTH	>>	1
-	(	WIDTH	>>	1	)
-	WIDTH	>>	1
-	(	WIDTH	>>	1	)	+	BOX_WIDTH
-	WIDTH	>>	1	+	BOX_WIDTH
-	(	WIDTH	>>	1	)	+	BOX_WIDTH
-	WIDTH	>>	1	+	BOX_WIDTH
(	WIDTH	>>	1	)	-	BOX_WIDTH
WIDTH	>>	1	-	BOX_WIDTH
(	WIDTH	>>	1	)	-	BOX_WIDTH
WIDTH	>>	1	-	BOX_WIDTH
-	(	WIDTH	>>	1	)
-	WIDTH	>>	1
-	(	WIDTH	>>	1	)
-	WIDTH	>>	1
ss	->	selectedWindow	&&	!	ss	->	selectedWindow	->	destroyed

(	count	+	1	)	&	1

(	(	count	>>	1	)	-	ss	->	nWindows	)	*	WIDTH
(	count	>>	1	)	-	ss	->	nWindows	*	WIDTH
format	->	type	==	PictTypeDirect	&&	format	->	direct	.	alphaMask

!	ss	->	popupWindow	&&	showPopup

(	count	+	1	)	&	1

ss	->	pos	<	-	ss	->	nWindows	*	WIDTH

result	==	Success	&&	propData

n	==	3	||	n	==	4

(	amount	*	ss	->	mVelocity	+	adjust	)	/	(	amount	+	1.0f	)
amount	*	ss	->	mVelocity	+	adjust	/	amount	+	1.0f
(	amount	*	ss	->	tVelocity	+	adjust	)	/	(	amount	+	1.0f	)
amount	*	ss	->	tVelocity	+	adjust	/	(	amount	+	1.0f	)
(	amount	*	ss	->	sVelocity	+	adjust	)	/	(	amount	+	1.0f	)
(	amount	*	ss	->	sVelocity	+	adjust	)	/	amount	+	1.0f
fabs	(	dx	)	<	0.1f	&&	fabs	(	ss	->	mVelocity	)	<	0.2f	&&	fabs	(	dt	)	<	0.001f	&&	fabs	(	ss	->	tVelocity	)	<	0.001f	&&	fabs	(	ds	)	<	0.001f	&&	fabs	(	ss	->	sVelocity	)	<	0.001f

fabs	(	dx	)	<	0.1f	&&	fabs	(	ss	->	mVelocity	)	<	0.2f

ss	->	pos	<	-	ss	->	nWindows	*	WIDTH

ss	->	grabIndex	||	(	ss	->	zooming	&&	ss	->	translate	>	0.001f	)

(	ss	->	grabIndex	||	ss	->	zooming	)	&&	ss	->	moreAdjust
ss	->	grabIndex	||	ss	->	zooming	&&	ss	->	moreAdjust
x	+	SPACE	+	(	(	WIDTH	-	(	SPACE	<<	1	)	)	-	width	)	/	2
x	+	SPACE	+	(	WIDTH	-	SPACE	<<	1	)	-	width	/	2
y	+	SPACE	+	(	(	HEIGHT	-	(	SPACE	<<	1	)	)	-	height	)	/	2
y	+	SPACE	+	(	HEIGHT	-	SPACE	<<	1	)	-	height	/	2
x	+	SPACE	+	(	(	WIDTH	-	(	SPACE	<<	1	)	)	-	width	)	/	2
x	+	SPACE	+	(	WIDTH	-	SPACE	<<	1	)	-	width	/	2
y	+	SPACE	+	(	(	HEIGHT	-	(	SPACE	<<	1	)	)	-	height	)	/	2
y	+	SPACE	+	(	HEIGHT	-	(	SPACE	<<	1	)	)	-	height	/	2
destW	<=	0	||	destH	<=	0

ax	*	ax	+	ay	*	ay

bx	*	bx	+	by	*	by

abs	(	wx	-	cascadeX	)	<	xThreshold	&&	abs	(	wy	-	cascadeY	)	<	yThreshold

overlap	>=	NONE	&&	overlap	<	minOverlap

possible	-	cw	>	xTmp

possible	-	ch	>	yTmp

strategy	==	PlaceOnly	||	strategy	==	PlaceAndConstrain

256	*	(	sizeof	(	struct	inotify_event	)	+	16	)
256	*	sizeof	(	struct	inotify_event	)	+	16
inode	&&	(	inode	->	type	&	mask	)

inode	->	type	&	(	FUSE_INODE_TYPE_OPTION	|	FUSE_INODE_TYPE_ITEMS	)
inode	->	type	&	FUSE_INODE_TYPE_OPTION	|	FUSE_INODE_TYPE_ITEMS
inode	->	type	&	(	FUSE_INODE_TYPE_VALUE	|	FUSE_INODE_TYPE_ITEM_VALUE	)
inode	->	type	&	FUSE_INODE_TYPE_VALUE	|	FUSE_INODE_TYPE_ITEM_VALUE
inode	->	type	&	(	FUSE_INODE_TYPE_DISPLAY	|	FUSE_INODE_TYPE_SCREEN	)
inode	->	type	&	FUSE_INODE_TYPE_DISPLAY	|	FUSE_INODE_TYPE_SCREEN
res	==	-	EINTR

sizeof	(	WindowDecoration	)	+	sizeof	(	ScaledQuad	)	*	d	->	nQuad

~	(	CWX	|	CWY	)
~	CWX	|	CWY
result	==	Success	&&	data

sizeof	(	CloneClone	)	*	(	cs	->	nClone	-	1	)
sizeof	(	CloneClone	)	*	cs	->	nClone	-	1
sizeof	(	CloneClone	)	*	(	cs	->	nClone	+	1	)
sizeof	(	CloneClone	)	*	cs	->	nClone	+	1
!	cs	->	grab	||	cs	->	grabbedOutput	!=	output

x1	*	(	1.0f	-	cs	->	offset	)	+	x2	*	cs	->	offset
x1	*	1.0f	-	cs	->	offset	+	x2	*	cs	->	offset
y1	*	(	1.0f	-	cs	->	offset	)	+	y2	*	cs	->	offset
y1	*	1.0f	-	cs	->	offset	+	y2	*	cs	->	offset
zoom1	*	(	1.0f	-	cs	->	offset	)	+	zoom2x	*	cs	->	offset
zoom1	*	1.0f	-	cs	->	offset	+	zoom2x	*	cs	->	offset
zoom1	*	(	1.0f	-	cs	->	offset	)	+	zoom2y	*	cs	->	offset
zoom1	*	1.0f	-	cs	->	offset	+	zoom2y	*	cs	->	offset
wY	+	dy	<	min

wY	+	dy	>	max

wX	+	wWidth	<	0

wX	+	dx	<	min

wX	+	dx	>	max

posX	>	(	2	*	sectorSizeX	)

posY	>	(	2	*	sectorSizeY	)

~	(	ResizeUpMask	|	ResizeDownMask	)
~	ResizeUpMask	|	ResizeDownMask
rd	->	w	->	serverWidth	!=	rd	->	geometry	.	width	||	rd	->	w	->	serverHeight	!=	rd	->	geometry	.	height

w	->	serverX	+	(	w	->	serverWidth	/	2	)

w	->	serverY	+	(	w	->	serverHeight	/	2	)

rd	->	mask	&	(	ResizeLeftMask	|	ResizeRightMask	)
rd	->	mask	&	ResizeLeftMask	|	ResizeRightMask
function	->	param	==	param	&&	function	->	target	==	target

vw	->	context	->	box	.	extents	.	x1	<	vw	->	context	->	box	.	extents	.	x2	&&	vw	->	context	->	box	.	extents	.	y1	<	vw	->	context	->	box	.	extents	.	y2

vw	->	context	->	width	!=	vw	->	context	->	source	->	width	||	vw	->	context	->	height	!=	vw	->	context	->	source	->	height

(	width	+	width	*	source	->	panScan	)	/	source	->	aspectRatio
width	+	width	*	source	->	panScan	/	source	->	aspectRatio
(	height	+	height	*	source	->	panScan	)	*	source	->	aspectRatio
height	+	height	*	source	->	panScan	*	source	->	aspectRatio
(	vw	->	context	->	width	/	2.0f	)	-	(	width	/	2.0f	)

(	vw	->	context	->	height	/	2.0f	)	-	(	height	/	2.0f	)

(	vw	->	context	->	width	/	2.0f	)	+	(	width	/	2.0f	)	+	0.5f

(	vw	->	context	->	height	/	2.0f	)	+	(	height	/	2.0f	)	+	0.5f

result	==	Success	&&	propData

rs	->	xrot	<	-	180.0f	/	size

360.0f	/	size	+	rs	->	xrot

rs	->	xrot	>	180.0f	/	size

rs	->	xrot	-	360.0f	/	size

(	amount	*	rs	->	xVelocity	+	adjust	)	/	(	amount	+	2.0f	)
(	amount	*	rs	->	xVelocity	+	adjust	)	/	amount	+	2.0f
rs	->	yrot	>	50.0f	&&	(	(	rs	->	snapTop	&&	invert	==	1	)	||	(	rs	->	snapBottom	&&	invert	!=	1	)	)
rs	->	yrot	>	50.0f	&&	(	rs	->	snapTop	&&	invert	==	1	)	||	(	rs	->	snapBottom	&&	invert	!=	1	)
rs	->	yrot	<	-	50.0f	&&	(	(	rs	->	snapTop	&&	invert	!=	1	)	||	(	rs	->	snapBottom	&&	invert	==	1	)	)
rs	->	yrot	<	-	50.0f	&&	(	rs	->	snapTop	&&	invert	!=	1	)	||	(	rs	->	snapBottom	&&	invert	==	1	)
(	amount	*	rs	->	yVelocity	+	adjust	)	/	(	amount	+	2.0f	)
(	amount	*	rs	->	yVelocity	+	adjust	)	/	amount	+	2.0f
fabs	(	xrot	)	<	0.1f	&&	fabs	(	rs	->	xVelocity	)	<	0.2f	&&	fabs	(	yrot	)	<	0.1f	&&	fabs	(	rs	->	yVelocity	)	<	0.2f

rs	->	yrot	<	-	45.0f

rs	->	yrot	<	-	100.0f

rs	->	progress	!=	0.0f	||	rs	->	grabbed

(	tamount	*	rs	->	progressVelocity	+	adjust	)	/	(	tamount	+	1.0f	)
tamount	*	rs	->	progressVelocity	+	adjust	/	(	tamount	+	1.0f	)
fabs	(	dt	)	<	0.01f	&&	fabs	(	rs	->	progressVelocity	)	<	0.0001f

rs	->	grabIndex	||	rs	->	moving	||	(	rs	->	progress	!=	0.0	&&	rs	->	progress	!=	1.0	)

(	!	rs	->	grabbed	&&	!	rs	->	snapTop	&&	!	rs	->	snapBottom	)	||	rs	->	xVelocity	||	rs	->	yVelocity	||	rs	->	progressVelocity

rs	->	grabIndex	||	rs	->	moving	||	rs	->	progress	!=	0.0f

!	rs	->	grabIndex	&&	!	rs	->	moving

flipTime	==	0	||	(	rs	->	moving	&&	!	rs	->	slow	)

flipTime	==	0	||	(	rs	->	moving	&&	!	rs	->	slow	)

(	amount	*	mw	->	xVelocity	+	adjust	)	/	(	amount	+	1.0f	)
amount	*	mw	->	xVelocity	+	adjust	/	amount	+	1.0f
(	amount	*	mw	->	yVelocity	+	adjust	)	/	(	amount	+	1.0f	)
(	amount	*	mw	->	yVelocity	+	adjust	)	/	amount	+	1.0f
(	amount	*	mw	->	xScaleVelocity	+	adjust	)	/	(	amount	+	1.0f	)
amount	*	mw	->	xScaleVelocity	+	adjust	/	amount	+	1.0f
(	amount	*	mw	->	yScaleVelocity	+	adjust	)	/	(	amount	+	1.0f	)
amount	*	mw	->	yScaleVelocity	+	adjust	/	amount	+	1.0f
fabs	(	dx	)	<	0.1f	&&	fabs	(	mw	->	xVelocity	)	<	0.2f	&&	fabs	(	dy	)	<	0.1f	&&	fabs	(	mw	->	yVelocity	)	<	0.2f	&&	fabs	(	dxs	)	<	0.001f	&&	fabs	(	mw	->	xScaleVelocity	)	<	0.002f	&&	fabs	(	dys	)	<	0.001f	&&	fabs	(	mw	->	yScaleVelocity	)	<	0.002f

half_size	*	2	+	1

x_scale	*	(	x	-	half_size	)
x_scale	*	x	-	half_size
scale	*	exp	(	(	-	1.0f	*	(	fx	*	fx	)	)	/	(	2.0f	*	sigma	*	sigma	)	)

width	>=	(	height	+	2	)

(	height	+	2	)	<=	(	width	/	2	)

(	(	width	*	2	)	+	3	)	<=	(	height	+	2	)

width	-	left	-	right	<	0

height	-	top	-	bottom	<	0

efd	==	-	1

ret	==	-	1

i	%	(	LINES	-	y	)
i	%	LINES	-	y
i	>	0	&&	yoff	==	0

(	++	count	&	3	)	==	0
++	count	&	3	==	0
result	==	NO_MEM	||	one_element	==	0

i	<	GC_RATE	*	n

-	1	==	result

i	<	n_mark_words	-	1

i	<	(	2	<<	n	)

1	<<	(	n	-	12	)

nthreads	<	1	||	nthreads	>	MAX_NTHREADS

(	long	long	)	tv	.	tv_sec	*	1000	+	tv	.	tv_usec	/	1000

p	->	data	>	n	||	p	->	data	<=	0

max_nthreads	<	1	||	max_nthreads	>	MAX_NTHREADS

nthreads	*	(	nthreads	+	1	)	/	2
nthreads	*	nthreads	+	1	/	2
(	sum	+	N_EXPERIMENTS	/	2	)	/	N_EXPERIMENTS
sum	+	N_EXPERIMENTS	/	2	/	N_EXPERIMENTS
count	<	64	*	1024	+	1

(	count	&	1	)	==	0
count	&	1	==	0
count	!=	64	*	1024	+	2

count	!=	64	*	1024	+	2

count	!=	64	*	1024	+	2

(	fclose	(	f1a	)	==	EOF	)	&	(	fclose	(	f1b	)	==	EOF	)

map	->	line	<	start_line	-	LINES	&&	map	->	previous	!=	0

map	->	line	<	i	-	2

need_redisplay	==	ALL	||	need_redisplay	==	i

LINES	>	15	&&	COLS	>	15

line	>=	dis_line	+	LINES

col	>=	dis_col	+	COLS

old_line	!=	dis_line	||	old_col	!=	dis_col

c	<	0x100	&&	isdigit	(	c	)

10	*	repeat_count	+	c

(	x_buf	&	mask	)	==	s_buf
x_buf	&	mask	==	s_buf
i	<	CACHE_SZ	/	LINE_SZ
i	<	CACHE_SZ	/	LINE_SZ
(	(	char	*	)	p	)	<	(	(	char	*	)	r	)	+	my_extra	+	sizeof	(	struct	SEXPR	)

(	13	<<	12	)	+	(	(	p	-	(	int	*	)	r	)	&	0xfff	)
13	<<	12	+	(	p	-	(	int	*	)	r	)	&	0xfff
finalized_count	&&	!	dropped_something

p	==	0	||	*	p	!=	0

i	%	10	==	0

i	%	3000	==	0

i	%	5678	==	0	&&	p	!=	0

(	(	unsigned	long	)	(	&	dummy	)	+	ps	)	&	~	(	ps	-	1	)
(	(	unsigned	long	)	(	&	dummy	)	+	ps	)	&	~	ps	-	1
(	(	unsigned	long	)	(	&	dummy	)	+	ps	)	&	~	(	ps	-	1	)
(	(	unsigned	long	)	(	&	dummy	)	+	ps	)	&	~	ps	-	1
2	*	x	-	1

2	*	x	-	1

(	++	count	&	3	)	==	0
++	count	&	3	==	0
i	<	GC_RATE	*	n

i	<	n_mark_words	-	1

result	==	NO_MEM	||	one_element	==	0

-	1	==	result

i	--	>	0

!	*	p	++

i	<	nstrs	-	1

(	int	)	*	p	==	c

retcode	==	FOUND_BYTE_INDEX	&&	!	incomplete

--	limit	==	0

len	<	0	||	len	%	2	!=	0

--	class_redefinition_lock	.	count	<=	0

i	<	argc	&&	nsel	>=	0

i	++	,	nsel	--

i	<	xreq	&&	i	<	yreq

len	+	(	int	)	strlen	(	orig	)	>	buflen

(	int	)	strlen	(	orig	)	>=	buflen	-	1

i	++	,	xsize	--	,	ysize	--

i	++	,	xsize	--	,	ysize	--

y	==	-	1

radix	<	2	||	radix	>	36

batch_mode	||	(	!	isatty	(	0	)	&&	!	interactive_mode	)

arg0	<	4	&&	arg1	<	4

code	-	prev	>	1

val	*	16	+	dig

cmap	|	~	0x1fff

i	<	level	-	1

i	<	level	-	1

i	<	plen	-	elli

strlen	(	buf	)	+	strlen	(	SUBDIR	)	+	1	>=	buflen

n	==	p	->	right	&&	p	==	g	->	left

n	==	p	->	left	&&	p	==	g	->	right

n	==	p	->	left	&&	p	==	g	->	left

r	<	0	&&	errno	==	EINTR

fd	<	0	&&	needfd

p	==	srcp	+	1

p	==	srcp	+	2

(	seed	>>	8	)	&	0xffffff

siz	>=	MKSTEMP_PATH_MAX	-	6

geteuid	(	)	!=	getuid	(	)	||	getegid	(	)	!=	getgid	(	)

!	forkp	||	pid	==	0

rep_max	>=	0	&&	rep_max	<	rep_min

ctx	->	codep	<	ctx	->	codemax	-	1

(	offset	>>	8	)	&	0xff

codep	<	ctx	->	codemax	-	1

(	offset	>>	8	)	&	0xff

count	--	>	0

(	is_word_constituent	(	nextb	)	&&	!	is_word_constituent	(	prevb	)	)	||	(	!	is_word_constituent	(	nextb	)	&&	is_word_constituent	(	prevb	)	)

ctx	->	stop	-	input	<	param

param	--	>	0

*	code	++	!=	(	unsigned	char	)	*	input	++

input	-	param	<	ctx	->	input

param	--	>	0

*	code	++	!=	(	unsigned	char	)	*	bpos	++

*	code	++	!=	(	unsigned	char	)	*	input	++

*	code	++	!=	(	unsigned	char	)	*	--	input

ctx	->	stop	-	input	<	param

input	-	param	<	ctx	->	input

SCM_CHAR_NFOLLOWS	(	param	)	!=	0	||	(	*	code	++	)	!=	SCM_CHAR_DOWNCASE	(	param	)

SCM_CHAR_NFOLLOWS	(	param	)	!=	0	||	(	*	code	++	)	!=	SCM_CHAR_DOWNCASE	(	param	)

(	unsigned	char	)	*	input	>=	128

(	unsigned	char	)	*	bpos	>=	128

(	unsigned	char	)	*	input	<	128

SCM_CHAR_NFOLLOWS	(	(	unsigned	char	)	*	input	)	+	1

(	unsigned	char	)	*	bpos	<	128

(	unsigned	char	)	*	input	>=	128

(	unsigned	char	)	*	bpos	>=	128

(	unsigned	char	)	*	input	<	128

(	unsigned	char	)	*	bpos	<	128

!	match	||	!	end

*	input	++	!=	*	match	++

!	match	||	!	end

input	-	len	<	ctx	->	input

len	--	>	0

*	match	++	!=	(	unsigned	char	)	*	bpos	++

!	match	||	!	end

match	+	i	<	end

!	match	||	!	end

input	-	len	<	ctx	->	input

match	+	i	<	end

len	>=	buflen	-	1

batch_mode	||	(	!	isatty	(	0	)	&&	!	interactive_mode	)

nwrote	>=	0	&&	nwrote	<	cursiz

!	allow_less	&&	nread	<	min

!	exitting	&&	saved

whence	==	SEEK_CUR	&&	o	==	0

r	==	(	off_t	)	-	1

r	==	(	off_t	)	-	1

whence	==	SEEK_CUR	&&	o	==	0

r	==	(	off_t	)	-	1

r	==	(	off_t	)	-	1

(	!	forcep	&&	nwrote	==	0	)	||	(	forcep	&&	nwrote	<	cnt	)

(	flags	&	O_ACCMODE	)	==	O_RDONLY
flags	&	O_ACCMODE	==	O_RDONLY
(	flags	&	O_ACCMODE	)	==	O_WRONLY
flags	&	O_ACCMODE	==	O_WRONLY
buf	-	s	>	5

buf	-	s	>	4

(	(	padcount	+	colinc	-	1	)	/	colinc	)	*	colinc
(	padcount	+	colinc	-	1	/	colinc	)	*	colinc
minpad	>	0	&&	rightalign

minpad	>	0	&&	!	rightalign

maxcol	>	0	&&	nwritten	<	0

dots	&&	maxcol	>	4

numParams	==	0	&&	!	atflag	&&	!	colonflag

numParams	==	0	&&	!	atflag	&&	!	colonflag

numParams	==	0	&&	!	atflag	&&	!	colonflag

numParams	==	0	&&	!	atflag	&&	!	colonflag

argindex	<	0	||	argindex	>	arglen

atflag	||	colonflag	||	numParams	>=	MAX_PARAMS

atflag	||	colonflag	||	numParams	>=	MAX_PARAMS

atflag	||	colonflag	||	numParams	>=	MAX_PARAMS

n	<	0	&&	prec	>	0

n	<	0	&&	prec	>	0

(	xx	)	!=	0	&&	(	xx	)	==	(	xx	)	/	2.0

exact	&&	!	SCM_IS_INF	(	d	)

1.0	+	m	/	1024.0

mbits	<	-	1

1	<<	(	mbits	+	1	)

m	%	2	==	1

e	==	0	&&	m	>=	0x400

r	*	r	+	i	*	i

r	<	-	0x80000000L

(	sdenom	-	3	)	*	sizeof	(	long	)	*	8
sdenom	-	3	*	sizeof	(	long	)	*	8
(	snumer	-	3	)	*	sizeof	(	long	)	*	8
snumer	-	3	*	sizeof	(	long	)	*	8
r	*	r	+	i	*	i

r	*	r	+	i	*	i

-	i	/	d

ov	||	!	SCM_SMALL_INT_FITS	(	k	)

!	compat	&&	!	inexact

r1	*	r1	+	i1	*	i1

r1	*	r1	+	i1	*	i1

rx	*	ry	>	0

rx	-	q	*	ry

!	remp	&&	r

!	remp	&&	rem	!=	0.0

(	rx	>	0	&&	ry	<	0	)	||	(	rx	<	0	&&	ry	>	0	)

!	ox	&&	!	oy

dy	*	log	(	-	dx	)

(	i	<<	1	)	==	(	(	i	^	(	i	-	1	)	)	+	1	)
(	i	<<	1	)	==	(	i	^	(	i	-	1	)	+	1	)
r	<	-	err

(	s0	>	0	&&	s1	>	0	)	||	(	s0	<	0	&&	s1	<	0	)

d	>	0	&&	n	<=	0

d	<	0	&&	n	>=	0

frac	<	-	0.5

frac	==	-	0.5

n	<	-	23

est	<	exp_hi	&&	est	>	exp_lo

digs	<	0	&&	buflen	>	5

(	round	&&	tc3	<=	0	)	||	(	!	round	&&	tc3	<	0	)

digs	<	point	&&	buflen	>	5

i	>=	0	&&	value	>	0

ptab	<	tab	+	radix

sign_seen	&&	(	*	lenp	)	>=	5

(	*	strp	)	++	,	(	*	lenp	)	--

l	*	2	<=	nelts

l	*	2	==	nelts

l	*	2	-	1

nelts	/	2	-	1

(	unsigned	int	)	*	q	<	128

q	<	p	+	siz

(	(	index	+	PARAMETER_GROW	)	/	PARAMETER_GROW	)	*	PARAMETER_GROW
(	index	+	PARAMETER_GROW	/	PARAMETER_GROW	)	*	PARAMETER_GROW
c	>=	0	&&	c	<	128

nesting	--	==	0

c	==	EOF	||	!	char_word_constituent	(	c	,	include_hash_sign	)

num	<	0	||	num	>=	SIGNAL_PENDING_LIMIT_MAX

!	(	z	==	z	)
!	z	==	z
forcep	&&	(	total	<	cnt	)

(	j	+	13	)	&	0x0f

(	j	+	8	)	&	0x0f

(	j	+	2	)	&	0x0f

(	j	+	13	)	&	0x0f

(	j	+	8	)	&	0x0f

(	j	+	2	)	&	0x0f

(	j	+	13	)	&	0x0f

(	j	+	8	)	&	0x0f

(	j	+	2	)	&	0x0f

(	j	+	13	)	&	0x0f

(	j	+	8	)	&	0x0f

(	j	+	2	)	&	0x0f

(	j	+	1	)	&	0x0f

(	j	+	14	)	&	0x0f

(	j	+	9	)	&	0x0f

(	j	+	1	)	&	0x0f

(	j	+	14	)	&	0x0f

(	j	+	9	)	&	0x0f

(	y	<<	7	)	&	0x9d2c5680UL

(	y	<<	15	)	&	0xefc60000UL

exclude0	&&	r	==	0.0

(	a	*	67108864.0	+	b	)	*	(	1.0	/	9007199254740992.0	)
a	*	67108864.0	+	b	*	(	1.0	/	9007199254740992.0	)
exclude0	&&	r	==	0.0

e	>=	0	&&	n	<	m

e	<	MAX_BIT	&&	n	>	m

r	>>	(	32	-	e	)

off	<	0	||	off	+	eltsize	>	size

off	<	0	||	off	+	eltsize	>	size

*	data	&&	*	size	>=	need

size	<	2	||	output_size	<	2	+	1	||	(	count	&&	count	!=	25	)

output_size	<	2	+	1

size	<	3	||	output_size	<	1	+	4	+	4	+	1	||	(	count	&&	(	count	>	0xffffff	||	!	(	count	&	1	)	)	)
size	<	3	||	output_size	<	1	+	4	+	4	+	1	||	(	count	&&	(	count	>	0xffffff	||	!	count	&	1	)	)
output_size	<	1	+	4	+	4	+	1

(	count	>>	6	)	&	0x3f

(	count	>>	12	)	&	0x3f

(	count	>>	18	)	&	0x3f

(	value	>>	6	)	&	0x3f

(	value	>>	12	)	&	0x3f

(	value	>>	18	)	&	0x3f

size	<	3	||	output_size	<	3	+	4	+	1	||	(	count	&&	count	!=	1000	)

output_size	<	3	+	4	+	1

(	value	>>	6	)	&	0x3f

(	value	>>	12	)	&	0x3f

(	value	>>	18	)	&	0x3f

size	>=	6	&&	output_size	>=	3	+	4	+	4	+	1

(	value	>>	6	)	&	0x3f

(	value	>>	12	)	&	0x3f

(	value	>>	18	)	&	0x3f

(	c1	<<	2	)	|	(	(	c2	&	0x30	)	>>	4	)
(	c1	<<	2	)	|	(	c2	&	0x30	>>	4	)
(	(	c2	&	0x0F	)	<<	4	)	|	(	(	c3	&	0x3C	)	>>	2	)
(	(	c2	&	0x0F	)	<<	4	)	|	(	c3	&	0x3C	>>	2	)
(	(	c3	&	0x03	)	<<	6	)	|	c4
(	c3	&	0x03	<<	6	)	|	c4
(	c1	&	0x03	)	<<	4
c1	&	0x03	<<	4
(	c2	&	0x0f	)	<<	2
c2	&	0x0f	<<	2
(	tmp	<<	16	)	|	(	tmp	>>	16	)

(	(	tmp	&	0x00FF00FF	)	<<	8	)	|	(	(	tmp	>>	8	)	&	0x00FF00FF	)
(	tmp	&	0x00FF00FF	<<	8	)	|	(	(	tmp	>>	8	)	&	0x00FF00FF	)
i	<	BF_N	+	2

size	<	7	+	22	+	31	+	1

i	<	BF_N	+	2

(	i	&	2	)	+	1
i	&	2	+	1
(	BF_N	+	2	)	&	3

(	BF_N	+	3	)	&	3

(	BF_N	+	4	)	&	3

(	BF_N	+	5	)	&	3

size	<	16	||	output_size	<	7	+	22	+	1	||	(	count	&&	(	count	<	4	||	count	>	31	)	)
size	<	16	||	output_size	<	7	+	22	+	1	||	(	count	&&	count	<	4	||	count	>	31	)
output_size	<	7	+	22	+	1

i	<	buflen	-	1

!	DFA_ALIVE	(	sjis	)	&&	!	DFA_ALIVE	(	utf8	)
!	DFA_ALIVE	(	sjis	)	&&	!	DFA_ALIVE	(	utf8	)
!	DFA_ALIVE	(	eucj	)	&&	!	DFA_ALIVE	(	utf8	)
!	DFA_ALIVE	(	eucj	)	&&	!	DFA_ALIVE	(	utf8	)
!	DFA_ALIVE	(	sjis	)	&&	!	DFA_ALIVE	(	eucj	)
!	DFA_ALIVE	(	sjis	)	&&	!	DFA_ALIVE	(	eucj	)
!	DFA_ALIVE	(	eucj	)	&&	!	DFA_ALIVE	(	sjis	)	&&	!	DFA_ALIVE	(	utf8	)
!	DFA_ALIVE	(	eucj	)	&&	!	DFA_ALIVE	(	sjis	)	&&	!	DFA_ALIVE	(	utf8	)
(	s1	>	0x80	&&	s1	<	0xa0	)	||	(	s1	>=	0xe0	&&	s1	<=	0xfc	)

s2	<	0x40	||	s2	>	0xfc

(	s1	-	0x80	)	*	2	+	0xa0
s1	-	0x80	*	2	+	0xa0
(	s1	-	0xc0	)	*	2	+	0xa0
s1	-	0xc0	*	2	+	0xa0
(	s1	-	0xf5	)	*	2	+	0x50	+	0xa0
s1	-	0xf5	*	2	+	0x50	+	0xa0
(	s1	-	0xf0	)	*	2
s1	-	0xf0	*	2
s1	>=	0xa1	&&	s1	<=	0xdf

e1	>=	0xa1	&&	e1	<=	0xfe

e2	<	0xa1	||	e2	==	0xff

(	e1	-	0xa0	+	0x101	)	/	2
e1	-	0xa0	+	0x101	/	2
(	e1	-	0xa0	+	0x181	)	/	2
e1	-	0xa0	+	0x181	/	2
e1	%	2	==	0

e2	<	0xa1	||	e2	==	0xff

e1	<	0xa1	||	e1	==	0xff	||	e2	<	0xa1	||	e2	==	0xff

(	e1	-	0xa0	+	0x19b	)	/	2
e1	-	0xa0	+	0x19b	/	2
e1	%	2	==	0

(	euc	>>	8	)	+	0x80
euc	>>	8	+	0x80
u2	*	256	+	u3

(	(	ucs	>>	6	)	&	0x1f	)	|	0xc0

(	ucs	&	0x3f	)	|	0x80

(	(	ucs	>>	12	)	&	0x0f	)	|	0xe0

(	(	ucs	>>	6	)	&	0x3f	)	|	0x80

(	ucs	&	0x3f	)	|	0x80

(	(	ucs	>>	18	)	&	0x07	)	|	0xf0

(	(	ucs	>>	12	)	&	0x3f	)	|	0x80

(	(	ucs	>>	6	)	&	0x3f	)	|	0x80

(	ucs	&	0x3f	)	|	0x80

(	(	ucs	>>	24	)	&	0x03	)	|	0xf8

(	(	ucs	>>	18	)	&	0x3f	)	|	0x80

(	(	ucs	>>	12	)	&	0x3f	)	|	0x80

(	(	ucs	>>	6	)	&	0x3f	)	|	0x80

(	ucs	&	0x3f	)	|	0x80

(	(	ucs	>>	30	)	&	0x1	)	|	0xfc

(	(	ucs	>>	24	)	&	0x3f	)	|	0x80

(	(	ucs	>>	18	)	&	0x3f	)	|	0x80

(	(	ucs	>>	12	)	&	0x3f	)	|	0x80

(	(	ucs	>>	6	)	&	0x3f	)	|	0x80

(	ucs	&	0x3f	)	|	0x80

(	ucs	>>	16	)	&	0xffff

e1	<	0xa1	||	e1	>	0xfe	||	e2	<	0xa1	||	e2	>	0xfe

e0	>	0xa0	&&	e0	<	0xff

j0	>=	0xa1	&&	j0	<=	0xdf

e1	>	0xa0	&&	e1	<	0xff

e0	>	0xa0	&&	e0	<	0xff	&&	e1	>	0xa0	&&	e1	<	0xff

e0	>	0xa0	&&	e0	<	0xff

e1	>	0xa0	&&	e1	<	0xff

inr	>	0	&&	outr	>	0

inr	>	0	&&	outr	>	0

incode	==	JCODE_NONE	||	outcode	==	JCODE_NONE

incode	<	0	||	outcode	<	0

r	==	-	1

(	addrval	>>	24	)	&	0xff

(	addrval	>>	16	)	&	0xff

(	addrval	>>	8	)	&	0xff

len	/	2	+	1

sess_resume	&&	!	sess_resume	->	start_server

--	n	!=	0

--	n	!=	0

++	j	<	n

++	j	<=	m

--	i	>=	0

outer_partial	&&	outer_partial	-	i	>	0	&&	outer_partial	<	n

inner_partial	&&	r_index	>=	inner_partial

++	j	<	n

++	i	<	t

--	i	>=	0

i	--	!=	0

(	part_exp	-	1	)	/	2
part_exp	-	1	/	2
++	k	>=	length

(	i	%	words	)	==	0

(	words	==	8	)	&&	(	(	i	%	words	)	==	4	)

total_bytes	<	filesize	&&	bytes_read	>	0

(	nentry	+	NODE_SIZE_INCR	-	1	)	&	(	~	(	NODE_SIZE_INCR	-	1	)	)
(	nentry	+	NODE_SIZE_INCR	-	1	)	&	(	~	NODE_SIZE_INCR	-	1	)
size	&	(	NODE_SIZE_INCR	-	1	)

i	<	BUF_SIZE	-	1

off	==	1	&&	direct_leaves	==	1	&&	level	>	0

++	(	*	index	)	==	0

q	%	(	2	*	j	+	1	)
q	%	2	*	j	+	1
2	*	j	+	1

b	+	q	/	10

r	&&	l	>=	0

b	+	q	/	10

r	&&	l	>=	0

(	*	bp	<<	n	)	&	0xff

span	>	8	-	n

n	+	span	<	8

bits	>=	(	int32	)	(	2	*	8	*	sizeof	(	long	)	)

(	bits	>=	(	int32	)	(	8	*	sizeof	(	long	)	)	)	&&	(	0	==	*	lp	)

(	*	bp	<<	n	)	&	0xff

span	>	8	-	n

n	+	span	<	8

bits	>=	(	int32	)	(	2	*	8	*	sizeof	(	long	)	)

(	bits	>=	(	int32	)	(	8	*	sizeof	(	long	)	)	)	&&	(	~	0	==	*	lp	)

7	-	(	(	ix	)	&	7	)
7	-	(	ix	)	&	7
!	(	-	3	<=	d	&&	d	<=	3	)
!	-	3	<=	d	&&	d	<=	3
7	-	(	(	ix	)	&	7	)
7	-	(	ix	)	&	7
a0	+	a1	==	0	||	PIXEL	(	bp	,	a0	)	==	0
a0	+	a1	==	0	||	PIXEL	(	bp	,	a0	)	==	0
7	-	(	(	ix	)	&	7	)
7	-	(	ix	)	&	7
7	-	(	(	ix	)	&	7	)
7	-	(	ix	)	&	7
7	-	(	(	ix	)	&	7	)
7	-	(	ix	)	&	7
*	pbuf	==	0x0A	||	*	pbuf	==	0x0D

s	<	eptr	&&	*	t	!=	0

s	<=	eptr	&&	*	t	!=	0

eptr	>	out	&&	*	in	!=	0

!	s1	||	!	s2

!	s1	&&	s2

*	s1	==	0	||	*	s2	==	0

eptr	-	s	<	7

40	+	40	+	(	h_count	+	1	)	*	CELL_HEIGHT
40	+	40	+	h_count	+	1	*	CELL_HEIGHT
(	ypos	)	*	CELL_HEIGHT	+	40

(	h_count	+	1	)	*	CELL_HEIGHT	+	40
h_count	+	1	*	CELL_HEIGHT	+	40
xpos	*	CELL_WIDTH	+	40

xpos	>	0	&&	xpos	<=	16

(	ypos	-	1	)	*	CELL_HEIGHT	+	45
ypos	-	1	*	CELL_HEIGHT	+	45
xpos	*	CELL_WIDTH	+	40	+	CELL_WIDTH

(	16	-	ypos	)	*	16	+	xpos
16	-	ypos	*	16	+	xpos
i	*	256	+	min_l

i	*	256	+	max_l

i	*	256	+	min_l

i	*	256	+	max_l

i	*	CELL_WIDTH	+	40

i	>	0	&&	i	<=	16

i	*	CELL_HEIGHT	+	40

PAGE_HEIGHT	-	55	-	(	(	i	-	1	)	*	CELL_HEIGHT	)
PAGE_HEIGHT	-	55	-	(	i	-	1	*	CELL_HEIGHT	)
j	*	CELL_WIDTH	+	50

(	i	-	1	)	*	16	+	(	j	-	1	)
i	-	1	*	16	+	(	j	-	1	)
1	-	(	(	float	)	i	/	(	float	)	len	)

1	-	(	(	float	)	i	/	(	float	)	len	)

1	-	(	(	float	)	i	/	(	float	)	len	)

(	angle2	-	90	)	/	180	*	3.141592
angle2	-	90	/	180	*	3.141592
210	+	cos	(	rad2	)	*	122

190	+	sin	(	rad2	)	*	122

HPDF_StrLen	(	s	,	-	1	)	!=	1

(	FIELD_HEIGHT	/	2	)	-	(	PADDLE_HEIGHT	/	2	)

(	FIELD_HEIGHT	/	2	)	-	(	PADDLE_HEIGHT	/	2	)

(	FIELD_WIDTH	/	2	)	-	(	BALL_WIDTH	/	2	)

(	FIELD_HEIGHT	/	2	)	-	(	BALL_HEIGHT	/	2	)

yPaddle	<	paddleHalf	-	10

yPaddle	<	paddleHalf	+	10

yPaddle	<	paddleHalf	+	paddleQuarter

yPaddle	<	paddleHalf	-	10

yPaddle	<	paddleHalf	+	10

yPaddle	<	paddleHalf	+	paddleQuarter

ball	.	x	+	ball	.	width	>=	FIELD_WIDTH	||	ball	.	x	<=	0

ball	.	y	+	ball	.	height	>=	FIELD_HEIGHT	||	ball	.	y	<=	0

ball	.	x	<=	leftPaddle	.	x	+	leftPaddle	.	width

ball	.	y	+	(	ball	.	width	/	2	)

ballCentre	>	leftPaddle	.	y	&&	ballCentre	<=	leftPaddle	.	y	+	leftPaddle	.	height

ball	.	x	+	ball	.	width	>=	rightPaddle	.	x

ball	.	y	+	(	ball	.	width	/	2	)

ballCentre	>	rightPaddle	.	y	&&	ballCentre	<=	rightPaddle	.	y	+	rightPaddle	.	height

-	1	*	getHorizBallSpeedRebound	(	yOffset	)

ball	.	x	+	ball	.	width	>=	FIELD_WIDTH

newPaddleY	<	0	||	newPaddleY	+	leftPaddle	.	height	>=	FIELD_HEIGHT

newPaddleY	<	0	||	newPaddleY	+	rightPaddle	.	height	>=	FIELD_HEIGHT

*	mode	||	oflags	==	-	1

!	mode	||	!	*	mode

fd	!=	-	1	&&	PerlIOUnix_refcnt_dec	(	fd	)	>	0

!	mode	||	!	*	mode

fd	>=	0	&&	PerlLIO_isatty	(	fd	)

++	xsub	<	end

dodup	&&	fd	>=	0

lend	-	little	++

*	big	++	==	first

bigend	-	(	littleend	-	little	++	)

*	--	s	==	*	--	little

*	s	!=	*	x	++

!	prog	->	check_utf8	&&	prog	->	check_substr

!	prog	->	check_substr	&&	prog	->	check_utf8

scan	<	loceol	&&	isALNUM_LC	(	*	scan	)

scan	<	loceol	&&	!	isALNUM_LC	(	*	scan	)

scan	<	loceol	&&	isSPACE_LC	(	*	scan	)

scan	<	loceol	&&	!	isSPACE_LC	(	*	scan	)

scan	<	loceol	&&	isDIGIT	(	*	scan	)

scan	<	loceol	&&	isDIGIT_LC	(	*	scan	)

scan	<	loceol	&&	!	isDIGIT	(	*	scan	)

scan	<	loceol	&&	!	isDIGIT_LC	(	*	scan	)

scan	<	loceol	&&	is_HORIZWS_latin1	(	scan	)

scan	<	loceol	&&	!	is_HORIZWS_latin1	(	scan	)

scan	<	loceol	&&	is_VERTWS_latin1	(	scan	)

scan	<	loceol	&&	!	is_VERTWS_latin1	(	scan	)

*	s	&	~	31

*	s	&	~	31

s	<	send	||	(	s	==	send	&&	isSPACE	(	*	s	)	)

s	<	send	||	(	s	==	send	&&	isSPACE	(	*	s	)	)

isSPACE	(	*	s	)	&&	(	s	<	send	)

s	<	send	&&	isSPACE	(	*	s	)

++	s	<	send

digit	>=	0	&&	digit	<=	9

++	s	<	send

digit	>=	0	&&	digit	<=	9

++	s	<	send

digit	>=	0	&&	digit	<=	9

++	s	<	send

digit	>=	0	&&	digit	<=	9

++	s	<	send

digit	>=	0	&&	digit	<=	9

++	s	<	send

digit	>=	0	&&	digit	<=	9

++	s	<	send

digit	>=	0	&&	digit	<=	9

++	s	<	send

digit	>=	0	&&	digit	<=	9

++	s	<	send

++	s	<	send

digit	>=	0	&&	digit	<=	9	&&	(	s	<	send	)

s	<	send	&&	isDIGIT	(	*	s	)

s	<	send	&&	isDIGIT	(	*	s	)

s	<	send	&&	isDIGIT	(	*	s	)

s	<	send	&&	isDIGIT	(	*	s	)

s	<	send	&&	isDIGIT	(	*	s	)

s	<	send	&&	isDIGIT	(	*	s	)

s	<	send	&&	isSPACE	(	*	s	)

(	365	*	400	)	+	100	-	4	+	1

safe_year	<=	2037	&&	safe_year	>=	2010

month_diff	==	-	11

!	IS_LEAP	(	local_tm	->	tm_year	)	&&	local_tm	->	tm_yday	==	365
!	IS_LEAP	(	local_tm	->	tm_year	)	&&	local_tm	->	tm_yday	==	365
t	<	e	&&	isALNUM	(	*	t	)

(	365	*	400	)	+	100	-	4	+	1

safe_year	<=	2037	&&	safe_year	>=	2010

month_diff	==	-	11

!	IS_LEAP	(	local_tm	->	tm_year	)	&&	local_tm	->	tm_yday	==	365
!	IS_LEAP	(	local_tm	->	tm_year	)	&&	local_tm	->	tm_yday	==	365
(	part_right	-	part_left	)	>=	qsort_break_even

(	part_left	+	part_right	)	/	2
part_left	+	part_right	/	2
(	part_right	-	pc_right	)	>	(	pc_left	-	part_left	)

!	isALPHA	(	*	t1	)	&&	!	isDIGIT	(	*	t1	)

m	-	s	>	strend	-	d

++	start	<	end

argc	--	,	argv	++

argc	--	,	argv	++

argc	--	,	argv	++

argc	--	,	argv	++

!	*	++	s	||	isSPACE	(	*	s	)

argc	--	,	argv	++

++	s	&&	*	s

argc	++	,	argv	--

*	e	&&	!	isSPACE	(	*	e	)

!	isint_	(	first	)	||	!	isint_	(	second	)

do_options	(	argc	,	argv	,	&	Req	)	==	-	1

!	matchJobId	(	bhistReq	,	LSB_JOBID	(	(	int	)	job	->	jobId	,	lastevent	->	idx	)	)	&&	!	matchJobId	(	bhistReq	,	job	->	jobId	)

job	->	exHosts	&&	job	->	numExHosts	>	0

(	job	->	numExHosts	>	0	)	&&	(	!	IS_POST_FINISH	(	event	->	jStatus	)	)

(	event	->	timeStamp	<	ePtr	->	timeStamp	)	||	(	(	event	->	timeStamp	==	ePtr	->	timeStamp	)	&&	(	event	->	kind	==	ePtr	->	kind	)	)

(	event	->	timeStamp	<	ePtr	->	timeStamp	)	||	(	(	event	->	timeStamp	==	ePtr	->	timeStamp	)	&&	(	event	->	kind	==	ePtr	->	kind	)	&&	(	event	->	jStatus	==	ePtr	->	jStatus	)	&&	(	event	->	idx	==	ePtr	->	idx	)	&&	(	event	->	timeEvent	==	ePtr	->	timeEvent	)	)

addEvent	(	event	,	jobRecord	)	==	-	1

addEvent	(	event	,	jobRecord	)	==	-	1

addEvent	(	event	,	jobRecord	)	==	-	1

addEvent	(	event	,	jobRecord	)	==	-	1

addEvent	(	event	,	jobRecord	)	==	-	1

addEvent	(	event	,	jobRecord	)	==	-	1

addEvent	(	event	,	jobRecord	)	==	-	1

addEvent	(	event	,	jobRecord	)	==	-	1

addEvent	(	event	,	jobRecord	)	==	-	1

addEvent	(	event	,	jobRecord	)	==	-	1

addEvent	(	event	,	jobRecord	)	==	-	1

addEvent	(	event	,	jobRecord	)	==	-	1

Req	->	numJobs	-	oldjobnum	>	0

addJob	(	newjobRecord	)	==	-	1

addEvent	(	event	,	newjobRecord	)	==	-	1

(	i	+	1	)	<	numEles

addEvent	(	event	,	jobRecord	)	==	-	1

addEvent	(	event	,	jobRecord	)	==	-	1

addJob	(	newjobRecord	)	==	-	1

addEvent	(	event	,	jobRecord	)	==	-	1

qInfoReply	->	numQueues	*	qInfoReply	->	nIdx	>	nIdx	&&	qInfoReply	->	numQueues	>	0

infoReq	->	numNames	+	2	>	memSize

hostDataReply	->	nIdx	*	hostDataReply	->	numHosts	>	nIdx

!	numReasons	||	!	rsTb

b_read_fix	(	serverSock	,	*	rep_buf	,	len	)	==	-	1

getAuth_	(	auth	,	toHost	)	==	-	1

pid	==	-	1

jobSubReq	->	beginTime	!=	0	&&	jobSubReq	->	termTime	==	0	&&	jInfo	->	submit	.	termTime	>	0	&&	jInfo	->	submit	.	termTime	<	jobSubReq	->	beginTime

input	==	-	1

(	output	==	-	1	)	&&	(	errno	==	EEXIST	)
(	output	==	-	1	)	&&	errno	==	EEXIST
output	==	-	1

output	==	-	1

(	output	==	0	)	&&	(	remoteFileStatusBuf	.	st_size	!=	-	1	)

waitpid	(	pid	,	0	,	0	)	<	0	&&	errno	!=	ECHILD

numOfDot	/	2	+	1

returnValue	==	-	1

cc	==	-	1

twoPartFlag	==	0	||	j	==	0

strlen	(	string	)	/	2	+	1

strlen	(	string	)	/	2	+	1

pConf	->	param	->	maxUserPriority	<=	0	&&	pConf	->	param	->	jobPriorityValue	>	0	&&	pConf	->	param	->	jobPriorityTime	>	0

numHosts	==	-	1

numHosts	==	-	3

retval	==	-	2

numHosts	==	-	3

(	spec	)	&&	!	(	hostSpec	)

!	maxLimit	&&	defaultLimit

(	spec	)	&&	!	(	hostSpec	)

sp	&&	strlen	(	sp	)	!=	0

(	spec	)	&&	!	(	hostSpec	)

!	maxLimit	&&	defaultLimit

(	spec	)	&&	!	(	hostSpec	)

sp	&&	strlen	(	sp	)	!=	0

*	spec	&&	hostSpec	&&	strcmp	(	*	spec	,	hostSpec	)	!=	0

length	<=	strlen	(	*	list	)	+	strlen	(	string	)	+	2

!	buffer	||	!	inTable	||	!	outTable

(	(	neg_num	-	cConf	.	numHosts	)	%	cConf	.	numHosts	)	==	0
(	neg_num	-	cConf	.	numHosts	%	cConf	.	numHosts	)	==	0
(	cConf	.	numHosts	+	neg_num	)	*	sizeof	(	char	*	)
cConf	.	numHosts	+	neg_num	*	sizeof	(	char	*	)
(	(	neg_num	-	cConf	.	numHosts	)	%	cConf	.	numHosts	)	==	0
(	neg_num	-	cConf	.	numHosts	%	cConf	.	numHosts	)	==	0
(	cConf	.	numHosts	+	neg_num	)	*	sizeof	(	char	*	)
cConf	.	numHosts	+	neg_num	*	sizeof	(	char	*	)
miniTableSize	-	inTableSize	>=	0

(	cConf	.	numHosts	+	miniTableSize	)	*	sizeof	(	struct	inNames	*	)
cConf	.	numHosts	+	miniTableSize	*	sizeof	(	struct	inNames	*	)
miniTableSize	-	inTableSize	>=	0

(	cConf	.	numHosts	+	miniTableSize	)	*	sizeof	(	struct	inNames	*	)
cConf	.	numHosts	+	miniTableSize	*	sizeof	(	struct	inNames	*	)
in_num	-	inTableSize	>=	0

(	cConf	.	numHosts	+	in_num	)	*	sizeof	(	struct	inNames	*	)
cConf	.	numHosts	+	in_num	*	sizeof	(	struct	inNames	*	)
in_num	-	inTableSize	>=	0

(	cConf	.	numHosts	+	in_num	)	*	sizeof	(	struct	inNames	*	)
cConf	.	numHosts	+	in_num	*	sizeof	(	struct	inNames	*	)
result	>	-	2

!	maxLimit	&&	defaultLimit

cc	==	-	1

!	parsing	&&	!	emptyCmd

*	embedArgc	+	2	>	bufSize

length	+	lineLen	+	20	>=	size

length	+	strlen	(	szTmpShellCommands	)	+	1	>=	size

(	statBuf	.	st_mode	&	S_IFREG	)	==	S_IFREG	||	(	statBuf	.	st_mode	&	S_IFLNK	)	==	S_IFLNK
statBuf	.	st_mode	&	S_IFREG	==	S_IFREG	||	(	statBuf	.	st_mode	&	S_IFLNK	)	==	S_IFLNK
argc	>=	optind	+	1

!	CopyCommand2	(	argv	+	optind	,	argc	-	optind	-	1	)

(	jobSubReq	->	beginTime	>	0	&&	jobSubReq	->	termTime	>	0	)	&&	(	submitReq	->	beginTime	>	submitReq	->	termTime	)

submitReq	->	sigValue	>	31	||	submitReq	->	sigValue	<	0

b_read_fix	(	jobIdFd	,	(	char	*	)	&	pid	,	sizeof	(	pid	)	)	!=	sizeof	(	pid	)

jobSubReq	->	numProcessors	<	0	||	jobSubReq	->	maxNumProcessors	<	jobSubReq	->	numProcessors

jobSubReq	->	numProcessors	==	0	&&	jobSubReq	->	maxNumProcessors	==	0

submitReq	->	sigValue	>	31	||	submitReq	->	sigValue	<	0

(	fstat	(	fileno	(	fp	)	,	&	statbuf	)	<	0	)	||	(	statbuf	.	st_uid	!=	0	&&	statbuf	.	st_uid	!=	pw	->	pw_uid	)	||	(	statbuf	.	st_mode	&	066	)

getsockname	(	asock	,	(	struct	sockaddr	*	)	&	sin	,	&	len	)	<	0

!	isint_	(	cp	+	1	)

tindex	<	2	||	tindex	>	4

v1	<=	0	||	v2	<=	0

req	->	hostSpec	&&	strcmp	(	req	->	hostSpec	,	sp	+	1	)	!=	0

(	!	isint_	(	optarg	)	)	||	(	atoi	(	optarg	)	<	0	)

(	!	isint_	(	optarg	)	)	||	(	atoi	(	optarg	)	<	0	)

req	->	hostSpec	&&	strcmp	(	req	->	hostSpec	,	sp	+	1	)	!=	0

(	!	isint_	(	optarg	)	)	||	(	atoi	(	optarg	)	<	0	)

(	!	isint_	(	optarg	)	)	||	(	atoi	(	optarg	)	<	0	)

(	*	embedArgc	)	+	2	>	bufSize

parseLine_	(	lineBuf	,	&	optArgc	,	&	optArgv	,	errMsg	)	==	-	1

setOption_	(	optArgc	,	optArgv	,	template	,	req	,	~	req	->	options	,	~	req	->	options2	,	errMsg	)	==	-	1

req	->	nxf	+	1	>	maxNxf

cc	==	-	2

!	exception	||	!	exception	->	handler

!	isspace	(	(	int	)	*	p2	)
isspace	(	(	int	)	*	p2	!	isspace	(	(	int	)	*	p2	)
!	isspace	(	(	int	)	*	p	)
isspace	(	(	int	)	*	p	!	isspace	(	(	int	)	*	p	)
!	isspace	(	(	int	)	*	txt	)
isspace	(	(	int	)	*	txt	!	isspace	(	(	int	)	*	txt	)
ptr	>=	str	&&	isspace	(	(	int	)	*	ptr	)
>=	str	&&	isspace	(	(	int	)	*	ptr	ptr	>=	str	&&	isspace	(	(	int	)	*	ptr	)
curOpenFile	==	-	1

getMinSortIntList	(	header	,	&	minJobId	)	==	-	1

getMaxSortIntList	(	header	,	&	maxJobId	)	==	-	1

totalEventFile	==	rows	+	1

indexS	->	totalJobIds	-	position	>=	10

(	jobId	>	indexS	->	maxJobId	)	||	(	jobId	<	indexS	->	minJobId	)

(	msec	-	dtime	.	tv_sec	*	1000	)	*	1000
msec	-	dtime	.	tv_sec	*	1000	*	1000
jobPtr	->	windEdge	>	ckTime	||	jobPtr	->	windEdge	==	0

!	jReason	&&	jpbw	->	shared	->	jobBill	.	maxNumProcessors	>	1

jpbw	->	qPtr	->	procLimit	>	0	&&	(	jpbw	->	shared	->	jobBill	.	maxNumProcessors	<	jpbw	->	qPtr	->	minProcLimit	||	jpbw	->	shared	->	jobBill	.	numProcessors	>	jpbw	->	qPtr	->	procLimit	)
jpbw	->	qPtr	->	procLimit	>	0	&&	jpbw	->	shared	->	jobBill	.	maxNumProcessors	<	jpbw	->	qPtr	->	minProcLimit	||	jpbw	->	shared	->	jobBill	.	numProcessors	>	jpbw	->	qPtr	->	procLimit
(	qp	->	maxJobs	<	jpbw	->	shared	->	jobBill	.	maxNumProcessors	)	||	(	numQueue	<=	0	)	||	(	jpbw	->	qPtr	->	slotHoldTime	<=	0	&&	numQueue	<	jpbw	->	shared	->	jobBill	.	numProcessors	)

!	jReason	&&	numUser	<	jpbw	->	shared	->	jobBill	.	numProcessors

!	jReason1	&&	num	<	jpbw	->	shared	->	jobBill	.	numProcessors

jReason1	!=	0	&&	jReason	==	0

!	jReason1	&&	num	<	jpbw	->	shared	->	jobBill	.	numProcessors

numLsbUsable	<=	0	||	jpbw	->	qPtr	->	numUsable	<=	0

allInOne	(	jpbw	)	&&	(	!	needHandleFirstHost	(	jpbw	)	)	&&	!	jpbw	->	usePeerCand	&&	jpbw	->	shared	->	jobBill	.	numProcessors	<	jpbw	->	shared	->	jobBill	.	maxNumProcessors

!	hReason	&&	jp	->	shared	->	resValPtr

!	hReason	&&	jp	->	qPtr	->	resValPtr

(	1	+	jp	->	numReasons	)	*	sizeof	(	int	)
1	+	jp	->	numReasons	*	sizeof	(	int	)
jobp	->	numAskedPtr	>	0	&&	jobp	->	numAskedPtr	==	jpbw	->	numAskedPtr	&&	jobp	->	askedOthPrio	==	jpbw	->	askedOthPrio

jobp	->	numAskedPtr	==	0	&&	jpbw	->	numAskedPtr	==	0

uData	->	maxJobs	-	disp	*	count

jp	->	uPtr	&&	i	<	jp	->	uPtr	->	numGrpPtr

uData	->	maxJobs	-	disp	*	count

jp	->	numCandPtr	==	1	&&	*	numAvailSlots	<	jp	->	shared	->	jobBill	.	numProcessors

1	+	disp	*	(	numStartJobs	+	ap	->	numRESERVE	)	>	uJobLimit
1	+	disp	*	numStartJobs	+	ap	->	numRESERVE	>	uJobLimit
jp	->	shared	->	jobBill	.	numProcessors	+	disp	*	(	numStartJobs	+	ap	->	numRESERVE	)	>	uJobLimit
jp	->	shared	->	jobBill	.	numProcessors	+	disp	*	numStartJobs	+	ap	->	numRESERVE	>	uJobLimit
!	found	&&	jp	->	shared	->	jobBill	.	maxNumProcessors	>	1	&&	jp	->	shared	->	jobBill	.	numProcessors	>	uJobLimit

jp	->	shared	->	resValPtr	&&	jp	->	shared	->	resValPtr	->	maxNumHosts	==	1	&&	nSlots	<	jp	->	shared	->	jobBill	.	numProcessors

!	jp	->	shared	->	resValPtr	||	jp	->	shared	->	resValPtr	->	maxNumHosts	!=	1

!	rtReason	&&	overThreshold	(	hp	->	hData	->	lsbLoad	,	jp	->	qPtr	->	loadSched	,	&	rtReason	)

!	rtReason	&&	overThreshold	(	hp	->	hData	->	lsbLoad	,	hp	->	hData	->	loadSched	,	&	rtReason	)

!	rtReason	&&	!	(	*	hReason	)

source	<	0	||	target	<	0	||	source	==	target

numHosts	==	needed	&&	i	>	1

(	load1	+	1	)	/	cpuf1
load1	+	1	/	cpuf1
(	load2	+	1	)	/	cpuf2
load2	+	1	/	cpuf2
(	residual	-	1	)	/	shrink	+	1
residual	-	1	/	shrink	+	1
swap	&&	(	i	<	ncandidates	-	cutoffs	)

swap	&&	(	i	<	cutoffs	)

(	LSB_HOST_OK	(	status2	)	&&	!	LSB_HOST_OK	(	status1	)	)	||	(	LSB_HOST_BUSY	(	status2	)	&&	!	LSB_HOST_OK	(	status1	)	&&	!	LSB_HOST_BUSY	(	status1	)	)	||	(	LSB_HOST_CLOSED	(	status2	)	&&	!	LSB_HOST_OK	(	status1	)	&&	!	LSB_HOST_BUSY	(	status1	)	&&	!	LSB_HOST_CLOSED	(	status1	)	)	||	(	LSB_HOST_UNREACH	(	status2	)	&&	!	LSB_HOST_OK	(	status1	)	&&	!	LSB_HOST_BUSY	(	status1	)	&&	!	LSB_HOST_CLOSED	(	status1	)	&&	!	LSB_HOST_UNREACH	(	status1	)	)	||	(	LSB_HOST_UNAVAIL	(	status2	)	&&	!	LSB_HOST_OK	(	status1	)	&&	!	LSB_HOST_BUSY	(	status1	)	&&	!	LSB_HOST_CLOSED	(	status1	)	&&	!	LSB_HOST_UNREACH	(	status1	)	&&	!	LSB_HOST_UNAVAIL	(	status1	)	)

(	jp	->	predictedStartTime	==	0	)	&&	(	eligible	>	0	)

jR	->	back	==	(	void	*	)	jRefList	||	jPtr	->	qPtr	->	priority	!=	jPtr0	->	qPtr	->	priority

jp	->	qPtr	->	slotHoldTime	<=	0	&&	jp	->	numEligProc	<	MAX	(	jp	->	shared	->	jobBill	.	numProcessors	,	jp	->	qPtr	->	minProcLimit	)

!	notEnoughSlot	&&	!	notEnoughResource

allInOne	(	jp	)	&&	(	!	needHandleFirstHost	(	jp	)	)

jp	->	numAvailEligProc	<	jp	->	numAvailSlots	&&	jp	->	numAvailEligProc	<	jp	->	shared	->	jobBill	.	maxNumProcessors

i	<	backfillCandPtrIndex	&&	jp	->	numAvailEligProc	<	jp	->	numAvailSlots	&&	jp	->	numAvailEligProc	<	jp	->	shared	->	jobBill	.	maxNumProcessors

jp	->	numAvailEligProc	<	jp	->	numAvailSlots	&&	jp	->	numAvailEligProc	<	jp	->	shared	->	jobBill	.	maxNumProcessors

i	<	jp	->	numCandPtr	&&	jp	->	numAvailEligProc	<	jp	->	numAvailSlots	&&	jp	->	numAvailEligProc	<	jp	->	shared	->	jobBill	.	maxNumProcessors

i	<	backfillCandPtrIndex	&&	jp	->	numEligProc	<	jp	->	numSlots	&&	jp	->	numEligProc	<	jp	->	shared	->	jobBill	.	numProcessors

jp	->	numEligProc	<	jp	->	numSlots	&&	jp	->	numEligProc	<	jp	->	shared	->	jobBill	.	numProcessors

i	<	jp	->	numCandPtr	&&	jp	->	numEligProc	<	jp	->	numSlots	&&	jp	->	numEligProc	<	jp	->	shared	->	jobBill	.	numProcessors

i	<	jp	->	numCandPtr	&&	jp	->	numAvailEligProc	<	jp	->	numAvailSlots	&&	jp	->	numAvailEligProc	<	jp	->	shared	->	jobBill	.	maxNumProcessors

i	<	jp	->	numExecCandPtr	&&	jp	->	numEligProc	<	jp	->	numSlots	&&	jp	->	numEligProc	<	jp	->	shared	->	jobBill	.	numProcessors

jp	->	numEligProc	<	jp	->	numSlots	&&	jp	->	numEligProc	<	jp	->	shared	->	jobBill	.	numProcessors

i	<	jp	->	numCandPtr	&&	jp	->	numEligProc	<	jp	->	numSlots	&&	jp	->	numEligProc	<	jp	->	shared	->	jobBill	.	numProcessors

(	runLimit	>	0	)	&&	(	jp	->	qPtr	->	runWinCloseTime	>	0	||	jp	->	shared	->	jobBill	.	termTime	>	0	)
(	runLimit	>	0	)	&&	jp	->	qPtr	->	runWinCloseTime	>	0	||	jp	->	shared	->	jobBill	.	termTime	>	0
jp	->	qPtr	->	runWinCloseTime	>	0	&&	jp	->	shared	->	jobBill	.	termTime	>	0

pTileRemain	&&	(	numCandHosts	>=	(	numRequestHosts	-	1	)	)

pos1	<	0	||	pos2	<	0	||	pos1	==	pos2

(	jp	->	numAskedPtr	==	0	)	&&	(	jp	->	qPtr	->	numAskedPtr	>	0	)

(	jpbw	->	shared	->	jobBill	.	maxNumProcessors	>	1	)	&&	(	!	allInOne	(	jpbw	)	)

ret	==	DISP_FAIL	||	ret	==	DISP_NO_JOB

retVal	==	CAND_HOST_FOUND	||	ret	==	CAND_HOST_FOUND

retVal	==	CAND_FIRST_RES	||	ret	==	CAND_FIRST_RES

j	<	(	*	pNumCandPtr	)	-	1

(	duration	-	runTimeSinceResume	(	jp	)	<=	0	)	||	!	isReservePreemptResource	(	resValPtr	)

!	node	||	!	subtree

!	node	||	!	subtree

i	<=	(	indent	+	len	)

nPtr	&&	(	iterNum	>	1000	)	&&	(	time	(	0	)	-	entryTime	>	3	)

auth	->	uid	==	0	||	isAuthManager	(	auth	)

strlen	(	jgrp	->	jobName	)	&&	!	matchName	(	jgrp	->	jobName	,	nPtr	->	name	)

!	allusers	&&	strcmp	(	jpbw	->	userName	,	jobInfoReq	->	userName	)

LSB_ARRAY_IDX	(	jpbw	->	jobId	)	<	idx	->	start	||	LSB_ARRAY_IDX	(	jpbw	->	jobId	)	>	idx	->	end

(	lock_fd	<	0	)	&&	(	errno	==	EINTR	)	&&	(	i	++	<	10	)
(	lock_fd	<	0	)	&&	errno	==	EINTR	&&	(	i	++	<	10	)
i	>	0	&&	jobData	->	numAskedPtr	>	0	&&	jobData	->	askedOthPrio	<	0

(	!	loadSched	)	||	(	!	loadStop	)

!	isAuthManager	(	auth	)	&&	auth	->	uid	!=	0

(	sbdLogMask	&	LOG_MASK	(	level	)	)	!=	0
sbdLogMask	&	LOG_MASK	(	level	)	!=	0
gp	->	memberTab	.	numEnts	!=	0	||	gp	->	numGroups	!=	0

hostReq	->	numNames	==	0	&&	hostReq	->	names

num	<	maxprobes	&&	num	<	numofhosts	(	)

hPtr	->	sbdFail	>	0	||	sendJobs

stateTransit	!=	UNREACH_UNAVAIL	&&	stateTransit	!=	UNAVAIL_OK

!	forkSig	||	pid	<=	0

forkSig	&&	pid	==	0

forkSig	&&	pid	==	0

cc	<	0	&&	!	(	cc	==	-	2	&&	!	JOB_STARTED	(	jp	)	)
cc	<	0	&&	!	cc	==	-	2	&&	!	JOB_STARTED	(	jp	)
pipe	(	fds	)	==	-	1

pipe	(	fds	)	==	-	1

cc	==	-	1

(	unsigned	int	)	idx	<<	20	|	jobid

sig	>	0	&&	sig	<	100

myuid	!=	0	&&	uid	!=	0

*	h32	==	0x7fffffff	&&	*	l32	==	0xffffffff

limit	/	cpuFactor	+	0.5

limit	/	(	double	)	(	1	<<	16	)

tmp	/	(	double	)	(	1	<<	16	)

(	double	)	(	*	h32	)	*	(	double	)	(	1	<<	16	)

jp	->	jobSpecs	.	numToHosts	<=	(	MAX_LSB_HOSTS_LEN	/	2	)

postJobSetup	(	jobCard	)	==	-	1	&&	doSendResults

(	strlen	(	cmd	)	+	1	)	*	sizeof	(	char	)
strlen	(	cmd	)	+	1	*	sizeof	(	char	)
!	copyStdoutFromLsbatch	&&	(	output	==	notif	)	&&	!	errorOpeningOutputFile

++	k	>	50

(	jp	->	maxRusage	.	mem	+	512	)	/	1024
jp	->	maxRusage	.	mem	+	512	/	1024
(	jp	->	maxRusage	.	swap	+	512	)	/	1024
jp	->	maxRusage	.	swap	+	512	/	1024
!	copyStdoutFromLsbatch	&&	(	output	==	notif	)	&&	!	errorOpeningOutputFile

jp	->	jobSpecs	.	nxf	&&	output	!=	mail	&&	notif	==	output

!	errorOpeningOutputFile	&&	(	output	==	notif	)	&&	ferror	(	output	)

jp	->	jobSpecs	.	actPid	==	0	&&	jp	->	exitPid	==	-	1

close	(	fd	)	==	-	1

dup2	(	fd	,	0	)	==	-	1

!	mycluster	&&	!	myhost

setsid	(	)	==	-	1

setpriority	(	which	,	who	,	jp	->	jobSpecs	.	nice	)	==	-	1

setpriority	(	which	,	who	,	jp	->	jobSpecs	.	nice	)	==	-	1

jPtr	->	runRusage	.	utime	==	-	1	&&	jPtr	->	runRusage	.	stime	==	-	1

(	jobIndex	>=	idx	->	start	)	&&	(	jobIndex	<=	idx	->	end	)

(	jobIndex	-	idx	->	start	)	/	idx	->	step
jobIndex	-	idx	->	start	/	idx	->	step
(	idx	->	start	+	nstep	*	idx	->	step	)	==	jobIndex

switch_log	(	)	==	-	1

(	IS_START	(	jp	->	jStatus	)	&&	IS_PEND	(	newStat	->	jStatus	)	)	||	IS_FINISH	(	newStat	->	jStatus	)

IS_PEND	(	newStat	->	jStatus	)	&&	newStat	->	ru	&&	!	IS_FINISH	(	jp	->	jStatus	)

createAcct0File	(	)	==	-	1

createEvent0File	(	)	==	-	1

i	==	-	1

nread	+	cc	>	size

nread	+	cc	>	size

seqnum	>=	numAlloc	-	1

i	+	1	>=	*	reqHistAlloc

*	cc	==	-	2

status	==	-	1

numJob	>	0	&&	jobRec

numJob	>	0	&&	jobRec

stack	->	size	==	stack	->	top	+	1

jobName	&&	strlen	(	jobName	)	>	0

numRUN	==	0	&&	numSSUSP	==	0	&&	numUSUSP	==	0	&&	numRESERVE	==	0	&&	numPEND	==	0

numRUN	!=	0	||	numSSUSP	!=	0	||	numUSUSP	!=	0	||	numRESERVE	!=	0	||	numPEND	!=	0

numRUN	>	0	||	numSSUSP	>	0	||	numUSUSP	>	0	||	numRESERVE	>	0

numRUN	==	0	&&	numSSUSP	==	0	&&	numUSUSP	==	0	&&	numRESERVE	==	0

!	IS_PEND	(	jData	->	jStatus	)	&&	!	IS_START	(	jData	->	jStatus	)

firstHostIndex	!=	-	1

*	askedOthPrio	>=	0	&&	returnBadHost

gp	->	memberTab	.	numEnts	==	0	&&	gp	->	numGroups	==	0

*	askedOthPrio	>=	0	&&	returnBadHost

*	askedOthPrio	>=	0	&&	returnBadHost

qp	->	numProcessors	>	0	&&	qp	->	numProcessors	<	jp	->	shared	->	jobBill	.	numProcessors

auth	->	uid	!=	0	&&	!	jgrpPermitOk	(	auth	,	jpbw	->	jgrpNode	)	&&	!	isAuthQueAd	(	jpbw	->	qPtr	,	auth	)

!	jDataPtr	->	queuePreCmd	&&	!	qp	->	preCmd

!	jDataPtr	->	queuePostCmd	&&	!	qp	->	postCmd

!	jpbw	->	execHome	&&	statusReq	->	execCwd

job	->	numHostPtr	>	0	&&	qtp	->	procLimit	>	0

auth	->	uid	==	0	||	isAuthManagerExt	(	auth	)	||	isAuthQueAd	(	jArrayPtr	->	qPtr	,	auth	)

statusValue	>	0.0	&&	jobValue	>	0.0

statusValue	>=	0.0	&&	jobValue	<	0.0

LSB_ARRAY_IDX	(	jpbw	->	jobId	)	==	0	&&	req	->	submitReq	.	jobName

jpbw	->	shared	!=	jArray	->	shared	||	IS_START	(	jpbw	->	jStatus	)

jpbw	->	qPtr	!=	job	->	qPtr	||	jpbw	->	shared	->	jobBill	.	maxNumProcessors	!=	oldMaxCpus

job	->	numAskedPtr	>	0	||	job	->	askedOthPrio	>=	0

resValPtr	->	duration	<=	0	||	(	resValPtr	->	decay	<	0.0	)

resValPtr	->	numHosts	<	0	||	resValPtr	->	maxNumHosts	<	resValPtr	->	numHosts	||	resValPtr	->	pTile	<	0

!	IS_START	(	newStatus	)	&&	IS_START	(	jData	->	jStatus	)

auth	->	uid	!=	0	&&	!	jgrpPermitOk	(	auth	,	jpbw	->	jgrpNode	)	&&	!	isAuthQueAd	(	jpbw	->	qPtr	,	auth	)

bucket	!=	head	&&	num	<	maxSent

bucket	->	proto	.	jobId	==	statusReq	->	jobId	&&	bucket	->	proto	.	msgId	==	statusReq	->	msgId

bucket	->	proto	.	jobId	==	statusReq	->	jobId	&&	bucket	->	proto	.	msgId	==	statusReq	->	msgId

queueResVal	->	duration	==	jobResVal	->	duration	&&	queueResVal	->	decay	>	jobResVal	->	decay

i	<	jp	->	numHostPtr	&&	returnCode	!=	CANNOT_RESUME

!	(	numHostSlots	>=	min	&&	numHostSlots	<=	max	)
!	numHostSlots	>=	min	&&	numHostSlots	<=	max
job	->	numHostPtr	+	host	->	numCPUs	>	numHostSlots

(	runRusage1	->	utime	+	runRusage1	->	stime	)	==	0

(	(	runRusage1	->	utime	+	runRusage1	->	stime	)	-	(	runRusage2	->	utime	+	runRusage2	->	stime	)	)	/	(	runRusage1	->	utime	+	runRusage1	->	stime	)
runRusage1	->	utime	+	runRusage1	->	stime	-	(	runRusage2	->	utime	+	runRusage2	->	stime	)	/	(	runRusage1	->	utime	+	runRusage1	->	stime	)
(	(	runRusage1	->	utime	+	runRusage1	->	stime	)	-	(	runRusage2	->	utime	+	runRusage2	->	stime	)	)	/	(	runRusage1	->	utime	+	runRusage1	->	stime	)
(	runRusage1	->	utime	+	runRusage1	->	stime	-	(	runRusage2	->	utime	+	runRusage2	->	stime	)	)	/	(	runRusage1	->	utime	+	runRusage1	->	stime	)
(	(	runRusage1	->	utime	+	runRusage1	->	stime	)	-	(	runRusage2	->	utime	+	runRusage2	->	stime	)	)	/	(	runRusage1	->	utime	+	runRusage1	->	stime	)
(	runRusage1	->	utime	+	runRusage1	->	stime	-	(	runRusage2	->	utime	+	runRusage2	->	stime	)	)	/	(	runRusage1	->	utime	+	runRusage1	->	stime	)
(	runRusage1	->	mem	-	runRusage2	->	mem	)	/	runRusage1	->	mem
runRusage1	->	mem	-	runRusage2	->	mem	/	runRusage1	->	mem
(	runRusage1	->	mem	-	runRusage2	->	mem	)	/	runRusage1	->	mem
runRusage1	->	mem	-	runRusage2	->	mem	/	runRusage1	->	mem
(	runRusage1	->	mem	-	runRusage2	->	mem	)	/	runRusage1	->	mem
runRusage1	->	mem	-	runRusage2	->	mem	/	runRusage1	->	mem
(	runRusage1	->	swap	-	runRusage2	->	swap	)	/	runRusage1	->	swap
runRusage1	->	swap	-	runRusage2	->	swap	/	runRusage1	->	swap
(	runRusage1	->	swap	-	runRusage2	->	swap	)	/	runRusage1	->	swap
runRusage1	->	swap	-	runRusage2	->	swap	/	runRusage1	->	swap
(	runRusage1	->	swap	-	runRusage2	->	swap	)	/	runRusage1	->	swap
runRusage1	->	swap	-	runRusage2	->	swap	/	runRusage1	->	swap
isTypeUnkown	&&	!	requireType	&&	!	requireModel

i	<	jobCard	->	jobSpecs	.	numToHosts	&&	(	*	reasons	)	==	0

!	(	jp	->	jobSpecs	.	reasons	&	suspReason	)
!	jp	->	jobSpecs	.	reasons	&	suspReason
postJobSetup	(	jp	)	==	-	1

thPtr	->	maxJobs	==	-	1

gp	->	memberTab	.	numEnts	==	0	&&	gp	->	numGroups	==	0

grpPtr	->	memberTab	.	numEnts	==	0	&&	grpPtr	->	numGroups	==	0

qPtr	->	uGPtr	->	memberTab	.	numEnts	==	0	&&	qPtr	->	uGPtr	->	numGroups	==	0

!	allQ	&&	!	defaultQ	&&	!	found

!	isAuthManager	(	auth	)	&&	auth	->	uid	!=	0	&&	!	isAuthQueAd	(	qp	,	auth	)

!	isManager	(	sp	)	&&	pp	->	pw_uid	!=	0

i	<	numAllHosts	-	1

debug	<=	0	||	debug	>	2

debug	<	2	&&	!	lsb_CheckMode

(	!	debug	)	&&	(	!	lsb_CheckMode	)

s	==	-	1

schedule	&&	myTurn	==	SCHED

resignal	&&	myTurn	==	RESIG

!	isAuthManager	(	auth	)	&&	auth	->	uid	!=	0

mSchedStage	==	0	&&	jPtr

jobPriorityValue	<	0	||	jobPriorityTime	<	0

jobPriorityTime	/	value	>=	MINIMAL

(	count	+	1	)	%	term
count	+	1	%	term
jp	->	jobSpecs	.	jobPGid	==	-	1

chdir	(	cwd	)	==	-	1

chdir	(	cwd	)	==	-	1

mystat_	(	lsbDir	,	&	st	,	fromHp	)	==	-	1

myRename	(	chkpntDir	,	restartDir	)	==	-	1

rename	(	fromDir	,	toDir	)	==	-	1

!	stat	(	usersFile	,	&	stb	)	&&	S_ISDIR	(	stb	.	st_mode	)
stat	(	usersFile	,	&	stb	)	&&	S_ISDIR	(	stb	.	st_mode	!	stat	(	usersFile	,	&	stb	)	&&	S_ISDIR	(	stb	.	st_mode	)
outputIsDirectory	&&	!	outDirOk

dup2	(	i	,	0	)	==	-	1

(	i	<	0	)	&&	outFlag	&&	lsbStdoutDirect

!	(	i	<	0	)	&&	outFlag	&&	lsbStdoutDirect
!	i	<	0	&&	outFlag	&&	lsbStdoutDirect
dup2	(	i	,	1	)	==	-	1

dup2	(	1	,	2	)	==	-	1

(	i	<	0	)	&&	errFlag	&&	lsbStdoutDirect

!	(	i	<	0	)	&&	outFlag	&&	lsbStdoutDirect
!	i	<	0	&&	outFlag	&&	lsbStdoutDirect
dup2	(	i	,	2	)	==	-	1

close	(	fd	)	==	-	1

debug	<=	0	||	debug	>	3

failcnt	&&	failcnt	<	5

sbdSleepTime	/	(	5	-	failcnt	)
sbdSleepTime	/	5	-	failcnt
s	==	-	1

now	-	lastTime	<	mbdExitCnt	*	60

now	-	lastTime	<	mbdExitCnt	*	30

now	-	lastTime	<	mbdExitCnt	*	CHECK_MBD_TIME

getBootTime	(	&	bootTime	)	==	-	1

!	jobQueHead	||	!	clientList

now	-	lastCheckMbdTime	>=	CHECK_MBD_TIME

(	now	-	lastStartMbdTime	>=	3	*	CHECK_MBD_TIME	)	||	!	mbdStartedBySbd

now	-	lastTime	>=	sbdSleepTime	/	2

idx	->	start	<	1	||	idx	->	step	<	1

(	idx	->	end	-	idx	->	start	)	/	idx	->	step	+	1
idx	->	end	-	idx	->	start	/	idx	->	step	+	1
ptr	->	nextJob	&&	ptr	->	nextJob	!=	jp

groupInfoReply	->	numGroups	==	0	||	groupInfoReply	->	numGroups	!=	groupInfoReq	->	numNames

gp	->	numGroups	==	0	&&	gp	->	memberTab	.	numEnts	==	0	&&	r

i	<	BLANKLEN	-	1

argc	>=	optind	+	1

(	a_size	!=	0	)	&&	(	numNames	>=	a_size	)

lenW	+	(	(	len	-	lenW	)	>>	1	)
lenW	+	(	len	-	lenW	)	>>	1
!	all	&&	!	numUsers

(	i	+	1	)	<	numReply

argc	>=	optind	+	1

(	argc	>	2	&&	!	fflag	)	||	(	argc	>	3	&&	fflag	)

pid	==	-	1

!	defaultQ	&&	numQueues	!=	0

(	signalValue	==	SIGKILL	)	&&	(	!	sigflg	)

!	all	&&	numNames	!=	0

job	->	submit	.	numProcessors	>	1	||	job	->	submit	.	maxNumProcessors	>	1

job	->	numExHosts	>	0	&&	job	->	reserveTime	>	0

job	->	runRusage	.	utime	>	0	||	job	->	runRusage	.	stime	>	0	||	job	->	runRusage	.	mem	>	0	||	job	->	runRusage	.	swap	>	0	||	job	->	runRusage	.	npgids	>	0	||	job	->	runRusage	.	npids	>	0

job	->	runRusage	.	utime	>	0	||	job	->	runRusage	.	stime	>	0

job	->	numExHosts	>	0	&&	job	->	reserveTime	>	0

job	->	startTime	&&	!	IS_PEND	(	job	->	status	)

(	cpuFactor	>	0.0	)	&&	(	job	->	cpuTime	>	0	)

(	index	+	1	)	<	argc

(	statBuf	.	st_mode	&	S_IFREG	)	==	S_IFREG	||	(	statBuf	.	st_mode	&	S_IFLNK	)	==	S_IFLNK
statBuf	.	st_mode	&	S_IFREG	==	S_IFREG	||	statBuf	.	st_mode	&	S_IFLNK	==	S_IFLNK
length	+	strlen	(	szTmpShellCommands	)	+	1	>=	size

*	embedArgc	+	2	>	bufSize

select_end	==	req	+	strlen	(	req	)	-	1

order	!=	req	&&	rusage	!=	req	&&	filter	!=	req	&&	span	!=	req	&&	same	!=	req

order	&&	order	<	rest

rusage	&&	rusage	<	rest

filter	&&	filter	<	rest

span	&&	span	<	rest

same	&&	same	<	rest

rest	!=	(	req	+	strlen	(	req	)	)

rest	==	req	+	strlen	(	req	)

!	vFlag	&&	!	fFlag

!	numHosts	&&	!	all

numJids	==	0	&&	projectName

(	getuid	(	)	==	0	)	||	isLSFAdmin	(	)

(	Time	%	3600	)	/	60

(	local	&&	numHosts	==	1	)	||	!	numHosts

(	lsInfo	->	numIndx	+	2	)	*	sizeof	(	struct	indexFmt	)
lsInfo	->	numIndx	+	2	*	sizeof	(	struct	indexFmt	)
i	<	len	-	1

id	==	DEFAULT_FMT	&&	newIndexLen	>=	7

!	numHosts	&&	!	all

resBits	!=	0	&&	hPtr	->	resBitMaps

!	overRideFromType	&&	useFromType

set1	&&	set2	&&	(	set1	->	elem	==	set2	->	elem	)

ptr	&&	ptr	->	next	&&	ptr	->	next	->	elem	!=	elem

ptr	&&	ptr	->	next	&&	ptr	->	next	->	elem	<	elem

(	low	&&	(	!	low	->	next	)	)	||	(	!	up	)

argc	==	argmax	-	1

nargc	<=	++	linux_optind

(	lowRange	<=	value	)	&&	(	highRange	>=	value	)

(	highRange	<	0	)	||	(	highRange	>	255	)

(	lowRange	<	0	)	||	(	lowRange	>	255	)

(	fieldCount	<	1	)	||	(	fieldCount	>	4	)

argc	>=	optind	+	1

low	+	(	high	-	low	)	/	2
low	+	high	-	low	/	2
yyt	==	yycrank	&&	!	yyfirst

yyt	<=	yytop	&&	yyt	->	verify	+	yysvec	==	yystate

yyt	->	advance	+	yysvec	==	YYLERR

yyt	<=	yytop	&&	yyt	->	verify	+	yysvec	==	yystate

yyt	->	advance	+	yysvec	==	YYLERR

yyt	<=	yytop	&&	yyt	->	verify	+	yysvec	==	yystate

yyt	->	advance	+	yysvec	==	YYLERR

lsp	--	>	yylstate

yyback	(	(	*	lsp	)	->	yystops	,	-	*	yyfnd	)	!=	1	&&	lsp	>	yylstate

*	p	++	==	m

--	i	>=	0

--	i	>=	0

--	nwords	>=	0

--	nwords	>=	0

--	tail	>=	0

--	nwords	>=	0

--	nwords	>=	0

--	tail	>=	0

strlen	(	resReq	)	+	numXorExprs	*	4	-	1

(	!	resVal	->	val	)	||	(	!	resVal	->	indicies	)

set1	&&	set2	&&	(	set1	->	elem	==	set2	->	elem	)

!	set1	&&	!	set2

ptr	&&	ptr	->	next	&&	ptr	->	next	->	elem	<	elem

500	+	hostValue	(	)	*	5000	/	255

verifyEAuth_	(	auth	,	from	)	==	-	1

user_ok	==	-	1

(	cp1	+	1	)	==	cp2

checkYear	(	&	tmPtr	->	tm_year	)	==	-	1

checkTime	(	MONTH	,	tmPtr	->	tm_mon	)	==	-	1

(	m	==	1	)	||	(	m	==	3	)	||	(	m	==	5	)	||	(	m	==	7	)	||	(	m	==	8	)	||	(	m	==	10	)	||	(	m	==	12	)

tmPtr	->	tm_year	%	4	==	0

checkTime	(	MONTH	,	tmPtr	->	tm_mon	)	==	-	1

checkTime	(	DAY	,	tmPtr	->	tm_mday	)	==	-	1

(	m	==	1	)	||	(	m	==	3	)	||	(	m	==	5	)	||	(	m	==	7	)	||	(	m	==	8	)	||	(	m	==	10	)	||	(	m	==	12	)

tmPtr	->	tm_year	%	4	==	0

(	ptimef	&	YEAR	)	==	YEAR
ptimef	&	YEAR	==	YEAR
(	ptimef	&	MONTH	)	==	MONTH
ptimef	&	MONTH	==	MONTH
(	ptimef	&	DAY	)	==	DAY
ptimef	&	DAY	==	DAY
checkTime	(	DAY	,	tmPtr	->	tm_mday	)	==	-	1

(	ptimef	&	YEAR	)	==	YEAR
ptimef	&	YEAR	==	YEAR
(	ptimef	&	MONTH	)	==	MONTH
ptimef	&	MONTH	==	MONTH
(	ptimef	&	DAY	)	==	DAY
ptimef	&	DAY	==	DAY
checkYear	(	&	tmPtr	->	tm_year	)	==	-	1

checkTime	(	DAY	,	tmPtr	->	tm_mday	)	==	-	1

checkYear	(	&	tmPtr	->	tm_year	)	==	-	1

(	m	==	1	)	||	(	m	==	3	)	||	(	m	==	5	)	||	(	m	==	7	)	||	(	m	==	8	)	||	(	m	==	10	)	||	(	m	==	12	)

tmPtr	->	tm_year	%	4	==	0

checkTime	(	DAY	,	tmPtr	->	tm_mday	)	==	-	1

checkTime	(	MONTH	,	tmPtr	->	tm_mon	)	==	-	1

(	ptimef	&	YEAR	)	==	YEAR
ptimef	&	YEAR	==	YEAR
(	ptimef	&	MONTH	)	==	MONTH
ptimef	&	MONTH	==	MONTH
(	ptimef	&	DAY	)	==	DAY
ptimef	&	DAY	==	DAY
checkYear	(	&	tmPtr	->	tm_year	)	==	-	1

checkTime	(	MONTH	,	tmPtr	->	tm_mon	)	==	-	1

checkTime	(	DAY	,	tmPtr	->	tm_mday	)	==	-	1

checkTime	(	HOUR	,	tmPtr	->	tm_hour	)	==	-	1

checkTime	(	MINU	,	tmPtr	->	tm_min	)	==	-	1

(	ptimef	&	YEAR	)	==	YEAR
ptimef	&	YEAR	==	YEAR
(	ptimef	&	MONTH	)	==	MONTH
ptimef	&	MONTH	==	MONTH
(	ptimef	&	DAY	)	==	DAY
ptimef	&	DAY	==	DAY
checkTime	(	MONTH	,	tmPtr	->	tm_mon	)	==	-	1

(	cp1	>	toptarg	)	&&	(	cp1	<	cp	)

checkTime	(	DAY	,	tmPtr	->	tm_mday	)	==	-	1

checkTime	(	MINU	,	tmPtr	->	tm_min	)	==	-	1

(	ptimef	&	YEAR	)	==	YEAR
ptimef	&	YEAR	==	YEAR
(	ptimef	&	MONTH	)	==	MONTH
ptimef	&	MONTH	==	MONTH
(	ptimef	&	DAY	)	==	DAY
ptimef	&	DAY	==	DAY
checkTime	(	MINU	,	tmPtr	->	tm_min	)	==	-	1

checkTime	(	HOUR	,	tmPtr	->	tm_hour	)	==	-	1

(	ptimef	&	YEAR	)	==	YEAR
ptimef	&	YEAR	==	YEAR
(	ptimef	&	MONTH	)	==	MONTH
ptimef	&	MONTH	==	MONTH
(	ptimef	&	DAY	)	==	DAY
ptimef	&	DAY	==	DAY
(	*	year	<	93	)	||	(	*	year	>	138	)

(	time	>=	1	)	&&	(	time	<=	12	)

(	time	>=	1	)	&&	(	time	<=	31	)

(	time	>=	0	)	&&	(	time	<=	23	)

(	time	>=	0	)	&&	(	time	<=	59	)

(	(	oday	&&	cday	)	==	0	)	&&	(	oday	!=	cday	)
(	oday	&&	cday	==	0	)	&&	(	oday	!=	cday	)
oday	==	0	&&	cday	==	0	&&	ohour	==	chour

(	ohour	==	-	1.0	)	&&	(	chour	==	25.0	)

(	ohour	==	25.0	)	&&	(	chour	==	25.0	)

!	isint_	(	word	)	||	atoi	(	word	)	<	0

!	isint_	(	sp	)	||	atoi	(	sp	)	<	0

!	isint_	(	word	)	||	atoi	(	word	)	<	0

!	isint_	(	sp	)	||	atoi	(	sp	)	<	0

!	isint_	(	word	)	||	atoi	(	word	)	<	0

*	day	<	1	||	*	day	>	7

*	hour	+	min	/	60.0

(	(	yy_n	+=	yychar	)	<	0	)	||	(	yy_n	>=	YYLAST	)

*	yyxi	!=	-	1

(	*	(	yyxi	+=	2	)	>=	0	)	&&	(	*	yyxi	!=	yychar	)

yy_n	>=	0	&&	yy_n	<	YYLAST

!	(	yy_len	&	01	)
!	yy_len	&	01
yyval	.	idxType	.	start	<	1	||	yyval	.	idxType	.	start	>	yyval	.	idxType	.	end	||	yyval	.	idxType	.	step	<=	0

yyval	.	idxType	.	start	<	1	||	yyval	.	idxType	.	start	>	yyval	.	idxType	.	end	||	yyval	.	idxType	.	step	<=	0

isspace	(	*	cmdBuf	)	&&	!	see_string

cc	==	-	1	||	cc	==	-	2

cmdRet	==	0	&&	cc	!=	0

cmdRet	==	-	2

numHosts	-	i	<	20

config	&&	optind	!=	argc

optind	==	argc	-	1

ls_limcontrol	(	host	,	opCode	)	==	-	1

!	isint_	(	optarg	)	||	atoi	(	optarg	)	<=	0

!	isint_	(	optarg	)	||	data	<	0

optind	==	argc	-	1

argc	-	optind	<	MAX_CONN

numhosts	-	i	<	MAX_CONN

i	==	NUM_TRY	-	1

i	==	NUM_TRY	-	1

strlen	(	pw	->	pw_name	)	+	1	>	lsfUserNameSize

strlen	(	osUserName	)	+	1	>	lsfUserNameSize

strlen	(	pw	->	pw_name	)	+	1	>	lsfUserNameSize

strlen	(	lsfUserName	)	+	1	>	osUserNameSize

*	word1	|	(	header	->	opCode	&	0x0000FFFF	)

*	word3	|	(	header	->	reserved	&	0x0000FFFF	)

clusterinlist	&&	!	*	num

newPriority	>	MAX_PRIORITY	*	2

newPriority	<	MIN_PRIORITY	*	2

-	1	==	nice	(	increment	)	&&	(	0	!=	errno	)

(	numLines	+	1	)	*	sizeof	(	char	*	)
numLines	+	1	*	sizeof	(	char	*	)
(	strlen	(	sp	)	+	1	)	*	sizeof	(	char	)
strlen	(	sp	)	+	1	*	sizeof	(	char	)
(	len	+	1	)	*	sizeof	(	char	)
len	+	1	*	sizeof	(	char	)
stack	->	size	==	stack	->	top	+	1

(	conf	->	numConds	+	1	)	*	sizeof	(	char	*	)
conf	->	numConds	+	1	*	sizeof	(	char	*	)
(	conf	->	numConds	+	1	)	*	sizeof	(	int	)
conf	->	numConds	+	1	*	sizeof	(	int	)
!	isspace	(	*	(	sp	+	2	)	)
isspace	(	*	sp	+	2	!	isspace	(	*	sp	+	2	)
!	isspace	(	*	(	sp	+	1	)	)
isspace	(	*	(	sp	+	1	)	!	isspace	(	*	(	sp	+	1	)	)
conf	->	confhandle	->	lineCount	<=	node	->	numLines	-	1

p1	->	sock	==	-	1

!	isatty	(	0	)	&&	!	isatty	(	1	)

!	isatty	(	0	)	&&	!	isatty	(	1	)

fcntl	(	s	,	F_GETFL	)	&	~	O_NONBLOCK

pid	==	-	1

(	i	<	argc	)	&&	(	bp	<	(	avbuffer	+	sizeof	(	avbuffer	)	-	1	)	)

S_ISREG	(	st	.	st_mode	)	&&	st	.	st_nlink	==	1

S_ISREG	(	st	.	st_mode	)	&&	st	.	st_nlink	==	1

S_ISREG	(	st	.	st_mode	)	&&	st	.	st_nlink	==	1

(	logmask	&	LOG_MASK	(	level	)	)	!=	0
logmask	&	LOG_MASK	(	level	)	!=	0
(	logmask	&	LOG_MASK	(	level	)	)	!=	0
&	LOG_MASK	(	level	)	!=	logmask	&	LOG_MASK	(	level	)	!=	0
!	(	S_ISREG	(	st	.	st_mode	)	&&	st	.	st_nlink	==	1	)
!	S_ISREG	(	st	.	st_mode	)	&&	st	.	st_nlink	==	1
(	logmask	&	LOG_MASK	(	level	)	)	!=	0
&	LOG_MASK	(	level	)	!=	logmask	&	LOG_MASK	(	level	)	!=	0
cc	<	0	&&	BAD_IO_ERR	(	errno	)

cc	==	0	||	BAD_IO_ERR	(	errno	)

len	>	MAXLOOP	*	1024

len	>	0	&&	loop	<	numLoop

cc	==	0	||	errno	!=	EINTR

len	>	0	&&	loop	<	MAXLOOP

cc	<	0	&&	errno	!=	EINTR

cc	==	0	||	BAD_IO_ERR	(	errno	)

(	msec	-	dtime	.	tv_sec	*	1000	)	*	1000
msec	-	dtime	.	tv_sec	*	1000	*	1000
cp	-	token	>	0

cp	-	token	<	len	-	1

wd1	&&	!	isint_	(	wd1	)

wd2	&&	!	isint_	(	wd2	)

!	wd1	&&	!	wd2

newLen	-	len2	+	strlen	(	sp1	)	>=	outLen

rh	->	atime	<	lrurh	->	atime	&&	rh	->	nopen	==	0

rh	->	nopen	==	0	&&	nrh	>	maxnrh

lserrno	>=	ls_nerr	||	lserrno	<	0

msgHdr	->	reserved	==	0	&&	msgHdr	->	length	==	0

do_rstty2_	(	s	,	io_fd	,	redirect	,	async	)	==	-	1

sig	>=	NSIG	||	sig	<	0
>=	NSIG	||	sig	<	sig	>=	NSIG	||	sig	<	0
(	!	rdyTidCnt	&&	!	rdyFdCnt	)	||	(	!	tidArray	&&	!	fdArray	)	||	(	!	inTidCnt	&&	!	inFdCnt	)

inFdCnt	>	0	&&	fdArray

longNum	.	high	>	0	||	(	longNum	.	high	==	0	&&	(	longNum	.	low	&	0x80000000	)	)

longNum	.	high	<	-	1	||	(	longNum	.	high	==	-	1	&&	!	(	longNum	.	low	&	0x80000000	)	)
longNum	.	high	<	-	1	||	(	longNum	.	high	==	-	1	&&	!	longNum	.	low	&	0x80000000	)
sar	+	5	*	len

lastSize	--	,	lastList	++

first	&&	!	mode

tcgetattr	(	ind	,	&	loxio	)	==	-	1

xio	.	c_oflag	&	(	NLDLY	|	CRDLY	|	TABDLY	|	BSDLY	|	VTDLY	|	FFDLY	)
xio	.	c_oflag	&	NLDLY	|	CRDLY	|	TABDLY	|	BSDLY	|	VTDLY	|	FFDLY
tcsetattr	(	ind	,	TCSANOW	,	&	xio	)	==	-	1

sig	<	0	||	sig	>=	NSIG_MAP

sp	&&	expSyntax_	(	sp	+	1	)	<	0

(	nEntry	+	1	)	*	sizeof	(	char	*	)
nEntry	+	1	*	sizeof	(	char	*	)
chfd	<	0	||	chfd	>	chanMaxSize

chfd	<	0	||	chfd	>	chanMaxSize

chfd	<	0	||	chfd	>	maxfds

!	FD_ISSET	(	i	,	&	(	chanmask	->	rmask	)	)	&&	!	FD_ISSET	(	i	,	&	(	chanmask	->	emask	)	)

chfd	<	0	||	chfd	>	maxfds

chfd	<	0	||	chfd	>	maxfds

1	<<	28	)	if	(	outhdr	->	length	>	MAXMSGLEN

chfd	<	0	||	chfd	>	chanMaxSize

chfd	<	0	||	chfd	>	chanMaxSize

cc	==	0	||	BAD_IO_ERR	(	errno	)

cc	<	0	&&	BAD_IO_ERR	(	errno	)

*	*	line	&&	!	isspace	(	*	*	line	)

*	*	line	&&	!	isspace	(	*	*	line	)

*	*	line	&&	!	charInSet	(	*	*	line	,	set	)

strlen	(	value	)	+	strlen	(	sp	)	+	2	>	valuelen	-	1

lpos	<	linesize	-	1

lpos	<	linesize	-	1

lsflimit	->	rlim_curl	==	0xffffffff	&&	lsflimit	->	rlim_curh	==	0x7fffffff

lsflimit	->	rlim_maxl	==	0xffffffff	&&	lsflimit	->	rlim_maxh	==	0x7fffffff

(	lsflimit	->	rlim_curh	>	0	)	||	(	lsflimit	->	rlim_curl	&	0x80000000	)

(	lsflimit	->	rlim_maxh	>	0	)	||	(	lsflimit	->	rlim_maxl	&	0x80000000	)

mask	&	(	1	<<	i	)

!	clusPtr	->	admins	||	!	clusPtr	->	adminIds

sizeof	(	char	*	)	*	(	j	+	1	)
sizeof	(	char	*	)	*	j	+	1
clname	&&	strcmp	(	clname	,	name	)	==	0

b_connect_	(	s	,	(	struct	sockaddr	*	)	&	pimAddr	,	sizeof	(	pimAddr	)	,	0	)	==	-	1

npinfoList	%	MAX_NUM_PID	==	0

cc	==	-	1

pinfo	->	pid	>	-	1

intoPidList	(	pinfo	)	==	-	1

npgidList	%	PGID_LIST_SIZE	==	0

(	npgidList	+	PGID_LIST_SIZE	)	*	sizeof	(	int	)
npgidList	+	PGID_LIST_SIZE	*	sizeof	(	int	)
intoPidList	(	pinfo	)	==	-	1

npidList	%	PID_LIST_SIZE	==	0

rusage	->	ru_utime	.	tv_sec	+	rusage	->	ru_utime	.	tv_usec	/	1000000.0

rusage	->	ru_stime	.	tv_sec	+	rusage	->	ru_stime	.	tv_usec	/	1000000.0

!	isatty	(	0	)	&&	!	isatty	(	1	)

i	<	1	+	GET_INTNUM	(	*	nIndicies	)

sizeof	(	char	*	)	*	(	loadReplyPtr	->	nIndex	+	1	)
sizeof	(	char	*	)	*	loadReplyPtr	->	nIndex	+	1
(	loadReplyPtr	->	nEntry	+	1	)	*	vecSize
loadReplyPtr	->	nEntry	+	1	*	vecSize
(	1	+	GET_INTNUM	(	loadReplyPtr	->	nIndex	)	)	*	sizeof	(	int	)
1	+	GET_INTNUM	(	loadReplyPtr	->	nIndex	)	*	sizeof	(	int	)
hlSize	+	matSize	+	nameSize	+	loadReplyPtr	->	nEntry	*	staSize

(	GET_INTNUM	(	hostInfoReply	->	shortLsInfo	->	nRes	)	+	GET_INTNUM	(	hostInfoReply	->	nIndex	)	)	*	sizeof	(	int	)
GET_INTNUM	(	hostInfoReply	->	shortLsInfo	->	nRes	)	+	GET_INTNUM	(	hostInfoReply	->	nIndex	)	*	sizeof	(	int	)
(	a	>>	16	)	&	0x8000

(	int	)	(	a	>>	16	)	&	0x7FFF

i	<	clustInfoPtr	->	nRes	&&	i	<	GET_INTNUM	(	clustInfoPtr	->	nRes	)

i	<	clustInfoPtr	->	nTypes	&&	i	<	GET_INTNUM	(	clustInfoPtr	->	nTypes	)

i	<	clustInfoPtr	->	nModels	&&	i	<	GET_INTNUM	(	clustInfoPtr	->	nModels	)

i	<	cInfo	->	nRes	&&	i	<	GET_INTNUM	(	cInfo	->	nRes	)

i	<	cInfo	->	nTypes	&&	i	<	GET_INTNUM	(	cInfo	->	nTypes	)

i	<	cInfo	->	nModels	&&	i	<	GET_INTNUM	(	cInfo	->	nModels	)

connaddr	&&	chanConnect_	(	chfd	,	connaddr	,	-	1	,	0	)	<	0

!	tempAdminIds	||	!	tempAdminNames

position	!=	-	1

(	(	oday	&&	cday	)	==	0	)	&&	(	oday	!=	cday	)
(	oday	&&	cday	==	0	)	&&	(	oday	!=	cday	)
!	isint_	(	word	)	||	atoi	(	word	)	<	0

!	isint_	(	sp	)	||	atoi	(	sp	)	<	0

!	isint_	(	word	)	||	atoi	(	word	)	<	0

!	isint_	(	sp	)	||	atoi	(	sp	)	<	0

!	isint_	(	word	)	||	atoi	(	word	)	<	0

*	day	<	1	||	*	day	>	7

*	hour	+	min	/	60.0

addHostInstance	(	resInfo	+	nRes	,	nHosts	,	hosts	,	value	)	<	0

!	sp2	||	sp2	<	buffer

!	sp1	||	!	sp2

!	buffer	||	!	inTable	||	!	outTable

(	(	neg_num	-	array	->	size	)	%	array	->	size	)	==	0
(	neg_num	-	array	->	size	%	array	->	size	)	==	0
(	array	->	size	+	neg_num	)	*	sizeof	(	char	*	)
array	->	size	+	neg_num	*	sizeof	(	char	*	)
runEClient_	(	ed	,	myargv	)	==	-	1

pid	==	-	1

cc	==	-	1

pid	==	-	1

!	listsize	||	!	hostlist

cc	<	0	&&	errLineNum_	==	0

!	matchEnv	(	key	,	pList1	)	&&	!	matchEnv	(	key	,	pList2	)

!	setConfEnv	(	key	,	value	,	pList1	)	||	!	setConfEnv	(	key	,	value	,	pList2	)

encode_set	&	(	1	<<	i	)

waitpid	(	pid	,	0	,	0	)	<	0	&&	errno	!=	ECHILD

(	sLstat	.	st_ino	==	sRstat	.	st_ino	)	&&	(	sLstat	.	st_dev	==	sRstat	.	st_dev	)

iRetVal	==	-	1

iRetVal	==	-	1

ppid	<=	1	||	(	kill	(	getppid	(	)	,	0	)	==	-	1	)

fd	==	-	1

resLogcpuTime	==	-	1

timeout	&&	timeout	->	tv_sec	<=	CHECK_PERIOD

timeout	->	tv_sec	/	CHECK_PERIOD	+	1

nready	==	0	&&	!	sendEof

round2Go	==	-	1

(	j	+	previousIndex	+	1	)	%	lastConn
j	+	previousIndex	+	1	%	lastConn
task	->	rtime	>	0	&&	(	rtime	-	task	->	rtime	)	>	resTimeout

do_setstdin	(	tid	,	1	)	==	-	1

do_setstdin	(	tid	,	0	)	==	-	1

index	<	0	||	index	>=	lastConn

tid	<	0	||	tid	>	maxtasks

i	<	0	||	i	==	lastConn

i	<	0	||	i	==	lastConn

i	<	lastConn	&&	listLen	<=	len

!	FD_ISSET	(	i	,	&	socks_bit	)	&&	!	FD_ISSET	(	i	,	&	ncon_bit	)
FD_ISSET	(	i	,	&	socks_bit	)	&&	!	FD_ISSET	(	i	,	&	ncon_bit	!	FD_ISSET	(	i	,	&	socks_bit	)	&&	!	FD_ISSET	(	i	,	&	ncon_bit	)
tid	<	0	||	tid	>	maxtasks

tid	==	0	||	tid	==	prpid	->	rpid

prpid	->	rpid	-	1	>=	0

!	task	->	eof	&&	!	REX_FATAL_ERROR	(	LS_STATUS	(	prpid	->	status	)	)

getpeername	(	newsock	,	(	struct	sockaddr	*	)	&	sin	,	&	len	)	<	0

i	>=	0	&&	i	<	lastConn

sigval	==	SIGWINCH	&&	usepty

index	<	0	||	index	>=	lastConn

++	p	<	endbuf

++	p	<	endbuf

connIndex	<	0	||	connIndex	>=	lastConn

i	>=	0	&&	i	<	lastConn

tid	<=	0	||	tid	>	maxtasks

(	numTries	==	-	1	)	||	(	count	<	numTries	)

(	numTries	==	-	1	)	||	(	count	<	numTries	)

msgInterval	>	0	&&	(	now	-	lastMsgCheck	)	>=	msgInterval

getsockname	(	s	,	(	struct	sockaddr	*	)	&	local	,	&	localLen	)	==	-	1

(	getuid	(	)	==	0	)	&&	(	initgroups	(	cli_ptr	->	username	,	pw	->	pw_gid	)	<	0	)

kill	(	-	pid	,	0	)	<	0

kill	(	-	pid	,	0	)	<	0

kill	(	-	pid	,	sig	)	==	0

nAdmins	==	-	1

getsockname	(	taskSock	,	(	struct	sockaddr	*	)	&	addr	,	&	addrLen	)	<	0

getpeername	(	cli_ptr	->	client_sock	,	(	struct	sockaddr	*	)	&	from	,	&	fromLen	)	<	0

setsockopt	(	iofd	,	SOL_SOCKET	,	SO_LINGER	,	(	char	*	)	&	linger	,	sizeof	(	struct	linger	)	)	<	0

kill	(	-	(	cp	->	pid	)	,	0	)	==	0

cp	->	refcnt	<=	0	&&	cp	->	std_out	.	buffer	.	bcount	==	0	&&	(	cp	->	std_err	.	buffer	.	bcount	==	0	)

chld	->	i_buf	.	bcount	==	0	&&	chld	->	endstdin

cc	<	0	&&	BAD_IO_ERR	(	errno	)

pid	==	-	1	&&	errno	==	ECHILD

rc	==	-	2

rc	!=	CHILD_DELETED	&&	!	(	WIFSTOPPED	(	cp	->	wait	)	)

(	which	<	0	)	||	(	which	>	2	)

(	pointer	==	0	)	||	(	*	pointer	==	0	)

(	*	pointer	)	&&	(	!	isdigit	(	*	pointer	)	)
*	pointer	)	&&	(	!	isdigit	(	*	pointer	)	(	*	pointer	)	&&	(	!	isdigit	(	*	pointer	)	)
(	*	pointer	)	&&	(	val	==	atoi	(	pointer	)	)

rc	==	-	2

af	!=	AF_INET	||	type	!=	SOCK_STREAM

Bind_	(	s	,	(	struct	sockaddr	*	)	&	sa	,	sizeof	(	sa	)	)	<	0

getsockname	(	s	,	(	struct	sockaddr	*	)	&	sa	,	&	sa_size	)	<	0

iRetVal	==	-	1

cc	<	0	&&	errno	==	EINTR

!	chld	->	running	&&	kill	(	-	chld	->	pid	,	0	)	<	0

myuid	!=	0	&&	uid	!=	0

chld	->	sigchild	&&	!	chld	->	server

linebuf	==	-	1

rc	==	-	2

cc	==	0	||	BAD_IO_ERR	(	errno	)

cc	<	0	&&	BAD_IO_ERR	(	errno	)

b_read_fix	(	resHandle	,	(	char	*	)	&	len	,	sizeof	(	len	)	)	!=	sizeof	(	len	)

close	(	reqfd	)	==	-	1

fstat	(	reqfd	,	&	st	)	==	-	1

getuid	(	)	==	0	&&	debug

child_res	&&	child_go	&&	child_cnt	==	0	&&	client_cnt	==	0

nready	==	0	&&	!	child_res

child_res	&&	!	child_go	&&	FD_IS_VALID	(	parent_res_port	)

now	-	lastPri	>	1800

(	j	+	previousIndex	+	1	)	%	child_cnt
j	+	previousIndex	+	1	%	child_cnt
sig	==	SIGUSR2	&&	!	niosSbdMode

argc	!=	3	&&	argc	!=	4

getsockname	(	asock	,	(	struct	sockaddr	*	)	&	sin	,	&	len	)	<	0

!	isatty	(	1	)	&&	isatty	(	2	)

io_nonblock_	(	0	)	==	-	1

io_block_	(	0	)	==	-	1

i	==	0	||	i	<	niosSyncTasks

niosSbdMode	&&	standalone	&&	(	jobStatusInterval	>	0	)

stdoutSync	&&	!	usepty	&&	!	standalone

(	jobStatusInterval	>	0	)	&&	niosSbdMode

usepty	&&	io_fd	>=	0	&&	isatty	(	io_fd	)

!	standalone	&&	FD_ISSET	(	chfd	,	&	rmask	)
standalone	&&	FD_ISSET	(	chfd	,	&	rmask	!	standalone	&&	FD_ISSET	(	chfd	,	&	rmask	)
usepty	&&	io_fd	>=	0	&&	isatty	(	io_fd	)

usepty	&&	io_fd	>=	0	&&	isatty	(	io_fd	)

exit_sig	>=	3	&&	exit_sig	<=	12

retVal	==	-	1

usepty	&&	io_fd	>=	0	&&	isatty	(	io_fd	)

usepty	&&	io_fd	>=	0	&&	isatty	(	io_fd	)

usepty	&&	io_fd	>=	0

forwardTSTP	&&	!	niosSbdMode

signo	==	SIGTSTP	&&	standalone

remon	&&	usepty	&&	io_fd	>=	0	&&	isatty	(	io_fd	)

remon	&&	usepty	&&	io_fd	>=	0	&&	isatty	(	io_fd	)

lsfSetREUid	(	ruid	,	ruid	)	<	0	||	(	lsfSetREUid	(	-	1	,	0	)	>=	0	&&	ruid	!=	0	)

standalone	&&	niosSbdMode	&&	(	(	jobStatusInterval	>	0	)	||	(	pendJobTimeout	>	0	)	||	(	msgInterval	>	0	)	)
standalone	&&	niosSbdMode	&&	(	jobStatusInterval	>	0	)	||	(	pendJobTimeout	>	0	)	||	(	msgInterval	>	0	)
getpeername	(	sock	,	(	struct	sockaddr	*	)	&	sin	,	&	len	)	<	0

do_rstty_	(	sock	,	iofd	,	redirect	)	==	-	1

(	job	->	reasons	!=	reasons	)	||	(	job	->	subreasons	!=	subreasons	)

cursor	==	(	WIDTH	-	7	)

0x20	|	(	expo	&	0x1F	)

(	expo	&	0x1F	)	-	32
expo	&	0x1F	-	32
!	all	&&	(	++	cnt	>	(	periods	-	1	)	)

clPtr	->	masterKnown	&&	!	broadcast

i	<	cnt	*	announceInIntvl

cnt	==	(	periods	-	1	)

hPtr	&&	(	numAnnounce	<	announceInIntvl	)

allInfo	.	nRes	>=	sizeOfResTable	&&	doubleResTable	(	lsfile	,	*	LineNum	)	<	0

!	(	!	iscntrl	(	*	cp	)	&&	isspace	(	*	cp	)	)
!	!	iscntrl	(	*	cp	)	&&	isspace	(	*	cp	)
(	strlen	(	sp	)	+	1	)	*	sizeof	(	char	)
strlen	(	sp	)	+	1	*	sizeof	(	char	)
!	tempAdminIds	||	!	tempAdminGids	||	!	tempAdminNames

ELIMdebug	&&	ELIMblocktime	==	-	1

!	found	&&	!	mcServersSet

position	!=	-	1

(	arch_speed	-	curr_speed	)	*	(	arch_speed	-	curr_speed	)	<=	(	arch_speed	-	best_speed	)	*	(	arch_speed	-	best_speed	)
arch_speed	-	curr_speed	*	(	arch_speed	-	curr_speed	)	<=	arch_speed	-	best_speed	*	(	arch_speed	-	best_speed	)
(	hPtr	->	numInstances	+	1	)	*	sizeof	(	struct	resourceInstance	*	)
hPtr	->	numInstances	+	1	*	sizeof	(	struct	resourceInstance	*	)
(	resourceInstance	->	nHosts	+	1	)	*	sizeof	(	struct	hostNode	*	)
resourceInstance	->	nHosts	+	1	*	sizeof	(	struct	hostNode	*	)
(	sum	>>	1	)	+	0x8000
sum	>>	1	+	0x8000
hPtr	->	hostInactivityCount	>	(	hostInactivityLimit	+	retryLimit	)

(	hPtr	->	hostInactivityCount	>	hostInactivityLimit	)	&&	(	hPtr	->	hostInactivityCount	<=	(	hostInactivityLimit	+	retryLimit	)	)

!	mustSendLoad	&&	noSendCount	<	hostInactivityLimit	-	2

(	i	<	myBuiltIn	)	&&	(	i	<	slaveBuiltIn	)

(	rawql	-	nprocs	*	ifloor	)	/	nprocs
rawql	-	nprocs	*	ifloor	/	nprocs
1.0	-	1.0	/	nprocs

slope	*	(	-	k1	+	1.0	)	/	(	1.0	-	k2	)
slope	*	-	k1	+	1.0	/	(	1.0	-	k2	)
(	rawql	+	1	)	/	cpuFactor
rawql	+	1	/	cpuFactor
(	f	*	ifloor	+	(	1.0	-	f	)	*	rawql	/	nprocs	+	1	)	/	cpuFactor
f	*	ifloor	+	1.0	-	f	*	rawql	/	nprocs	+	1	/	cpuFactor
(	(	*	val	)	*	factor	)	+	(	instant	*	(	1	-	factor	)	)
(	(	*	val	)	*	factor	)	+	(	instant	*	1	-	factor	)
(	currentTime	-	idleSeconds	)	>	lastActiveTime

++	readCount1	<	3

1.0	-	itime	/	etime

pid	==	-	1

child	==	-	1

(	elim_pid	<	0	)	&&	(	time	(	0	)	-	lastStart	>	90	)

ELIMrestarts	<	0	||	ELIMrestarts	>	0

cc	==	-	1

elim_pid	==	-	1

addCandList	(	hPtr	,	ncand	++	)	<	0

(	i	<	ncandidates	)	&&	(	needed	>	0	)

(	i	<	ncandidates	)	&&	(	needed	>	0	)

i	<	ncandidates	/	2

(	i	<	ncandidates	)	&&	(	needed	>	0	)

!	(	flags	&	SORT_FINAL	)
!	flags	&	SORT_FINAL
(	residual	-	1	)	/	shrink	+	1
residual	-	1	/	shrink	+	1
!	(	flags	&	SORT_CUT	)
!	flags	&	SORT_CUT
!	(	flags	&	SORT_FINAL	)
!	flags	&	SORT_FINAL
swap	&&	(	i	<	ncandidates	-	cutoffs	)

!	(	flags	&	SORT_SINDX	)
!	flags	&	SORT_SINDX
fabs	(	loadIndexValue	(	i	,	lidx	,	rqlOptions	)	-	bestload	)	>=	threshold

swap	&&	(	i	<	cutoffs	)

!	(	flags	&	SORT_SINDX	)
!	flags	&	SORT_SINDX
(	ignore_res	&&	LS_ISOKNRES	(	status2	)	&&	!	LS_ISOKNRES	(	status1	)	)	||	(	!	ignore_res	&&	LS_ISOK	(	status2	)	&&	!	LS_ISOK	(	status1	)	)	||	(	!	ignore_res	&&	LS_ISOKNRES	(	status2	)	&&	(	LS_ISBUSY	(	status1	)	||	LS_ISLOCKED	(	status1	)	)	)	||	(	!	LS_ISUNAVAIL	(	status2	)	&&	LS_ISUNAVAIL	(	status1	)	)	||	(	LS_ISBUSY	(	status2	)	&&	LS_ISLOCKED	(	status1	)	)
(	ignore_res	&&	LS_ISOKNRES	(	status2	)	&&	!	LS_ISOKNRES	(	status1	)	)	||	(	!	ignore_res	&&	LS_ISOK	(	status2	)	&&	!	LS_ISOK	(	status1	)	)	||	(	!	ignore_res	&&	LS_ISOKNRES	(	status2	)	&&	LS_ISBUSY	(	status1	)	||	LS_ISLOCKED	(	status1	)	)	||	(	!	LS_ISUNAVAIL	(	status2	)	&&	LS_ISUNAVAIL	(	status1	)	)	||	(	LS_ISBUSY	(	status2	)	&&	LS_ISLOCKED	(	status1	)	)
ignore_res	&&	LS_ISOKNRES	(	status1	)	&&	!	LS_ISOKNRES	(	status2	)

!	ignore_res	&&	LS_ISOK	(	status1	)	&&	!	LS_ISOK	(	status2	)

!	ignore_res	&&	LS_ISOKNRES	(	status1	)	&&	(	LS_ISBUSY	(	status2	)	||	LS_ISLOCKED	(	status2	)	)
!	ignore_res	&&	LS_ISOKNRES	(	status1	)	&&	LS_ISBUSY	(	status2	)	||	LS_ISLOCKED	(	status2	)
!	LS_ISUNAVAIL	(	status1	)	&&	LS_ISUNAVAIL	(	status2	)

myHostPtr	->	hTypeNo	==	1	||	myHostPtr	->	hModelNo	==	1

cc	==	0	&&	badHost

needed	==	0	||	wanted	==	0

getLSFUser_	(	lsfUserName	,	MAX_LOGIN	+	1	)	!=	0

start	.	begin	==	eternity	.	begin	&&	start	.	end	==	eternity	.	end

complete	.	begin	==	eternity	.	begin	&&	complete	.	end	==	eternity	.	end

(	statBuf	.	st_mode	&	S_IFMT	)	!=	S_IFREG
statBuf	.	st_mode	&	S_IFMT	!=	S_IFREG
res	==	cpu	||	res	==	turn

res	==	cpu	||	res	==	turn

res	==	cpu	||	res	==	turn

res	==	cpu	||	res	==	turn

inter	.	begin	<=	time	&&	time	<=	inter	.	end

num	==	0	&&	badHost

i	<	len	-	1

(	hostInfo	->	numIndx	+	2	)	*	sizeof	(	struct	indexFmt	)
hostInfo	->	numIndx	+	2	*	sizeof	(	struct	indexFmt	)
i	==	0	&&	unknown	==	1

!	longformat	&&	!	longname

(	i	<	numwanted	)	&&	(	i	<	(	LINES	-	4	)	)

j	<	1	+	GET_INTNUM	(	numStatus	)

j	<	1	+	GET_INTNUM	(	numStatus	)

i	<	(	LINES	-	4	)

(	ftell	(	stdin	)	==	0	)	&&	Lflag

LINES	<	num	+	4

(	maxMem	-	strlen	(	line	)	)	<	HEADERLEN

(	maxMem	-	strlen	(	line	)	)	<	HEADERLEN

i	<	len	-	1

id	==	DEFAULT_FMT	&&	newIndexLen	>=	7

(	newIndexLen	+	1	)	>	strlen	(	sp	)

id	==	DEFAULT_FMT	&&	newIndexLen	>=	7

(	newIndexLen	+	1	)	>	strlen	(	sp	)

ls_initrex	(	1	,	0	)	==	-	1

fillTable_	(	)	==	-	1

iFd	==	-	1

dup2	(	iFd	,	iFileNo	)	!=	-	1

tTime	!=	(	time_t	)	-	1

access	(	pChkpntDir	,	W_OK	|	X_OK	)	<	0

argc	==	optind	+	1

access	(	pChkpntDir	,	W_OK	|	X_OK	)	<	0

myPid	==	-	1

myPGid	==	-	1

vauth	(	lsfUserName	,	datBuf	,	datLen	)	==	-	1

param	.	proxy	&&	!	param	.	socks5

getsockname	(	s	,	(	struct	sockaddr	*	)	&	from	,	&	L	)	<	0

rep	->	version	!=	0x05	||	rep	->	status	!=	0

11	+	(	int	)	(	64.0	*	(	rand	(	)	/	(	RAND_MAX	+	1.0	)	)	)
11	+	(	int	)	(	64.0	*	(	rand	(	)	/	RAND_MAX	+	1.0	)	)
word1	|	(	header	.	opCode	&	0x0000FFFF	)

word3	|	(	header	.	reserved	&	0x0000FFFF	)

top	<	1	||	top	>	2

path	&&	strlen	(	path	)	>	0

path	&&	strlen	(	path	)	>	0

rc	!=	-	1

position	!=	-	1

!	reversed	&&	!	side

reversed	&&	!	side

!	reversed	&&	side

(	strcmp	(	result	->	node	->	key	,	first_result	->	node	->	key	)	==	0	)	||	(	all	==	router	->	repl	)

2	*	iter	+	1

(	positive	*	2	-	1	)	*	iter	-	1
positive	*	2	-	1	*	iter	-	1
iter	-	positive	*	2	+	1

rc	!=	-	1

rc	!=	-	1

m	!=	-	1

n	!=	-	1

m	!=	-	1

n	!=	-	1

m	!=	-	1

n	!=	-	1

path	&&	strlen	(	path	)	>	0

rc	!=	-	1

rc	!=	-	1

rc	!=	-	1

rc	!=	-	1

path	&&	strlen	(	path	)	>	0

!	reversed	&&	!	side

reversed	&&	!	side

!	reversed	&&	side

path	&&	strlen	(	path	)	>	0

db	!=	1	&&	db	!=	0

*	size_ptr	==	-	1	&&	PyErr_Occurred	(	)

end	<	0	||	len	<	end

end	<	0	||	len	<	end

idx	+	3	<	length

idx	+	3	<	length

idx	+	4	<	length

idx	+	2	<	length

idx	+	7	<	length

idx	+	8	<	length

is_true	==	-	1

i	<	blocklen	-	1

(	(	offset_hours	*	60	)	+	offset_min	)	*	60
(	offset_hours	*	60	)	+	offset_min	*	60
(	(	offset_hours	*	60	)	+	offset_min	)	*	60
(	offset_hours	*	60	)	+	offset_min	*	60
(	(	offset_hours	*	60	)	+	offset_min	)	*	60
(	offset_hours	*	60	)	+	offset_min	*	60
(	(	offset_hours	*	60	)	+	offset_min	)	*	60
(	offset_hours	*	60	)	+	offset_min	*	60
(	_person	->	_sizeof_events	+	1	)	*	sizeof	(	struct	event	)
_person	->	_sizeof_events	+	1	*	sizeof	(	struct	event	)
(	int	)	(	now	->	tm_gmtoff	/	60	)	%	60

(	int	)	(	othertime	.	tm_gmtoff	/	60	)	%	60

(	int	)	(	othertime	.	tm_gmtoff	/	60	)	%	60

(	int	)	(	othertime	.	tm_gmtoff	/	60	)	%	60

(	othertime	.	tm_gmtoff	/	60	)	%	60

root	*	2	<=	heap_size

root	*	2	+	1	<=	heap_size

root	*	2	+	1

root	*	2	+	1

(	array_size	/	2	)	-	1

read	&&	errno	!=	ENOPROTOOPT

(	!	set	&&	argc	<	1	)	||	(	set	&&	argc	<	1	)

(	!	set	&&	argc	!=	1	)	||	(	set	&&	argc	!=	1	)

child	!=	-	1

strlen	(	tmp	)	>	IFNAMSIZ	-	1

argc	-	1	>	NARGS

--	argc	>	0

cur_rtable	!=	rtableid	&&	setrtable	(	rtableid	)	<	0

argc	&&	i	<	(	strlen	-	1	)

argc	--	,	argv	++

(	set	&&	argc	<	2	)	||	(	!	set	&&	argc	>	2	)	||	(	!	set	&&	argc	<	2	)

set	&&	(	found	&&	!	pos	)

!	set	&&	!	found

argc	==	3	||	argc	==	4

reboot	(	RB_AUTOBOOT	)	==	-	1

argc	-	skip	>	fill

argc	<	1	||	argc	>	3

(	!	set	&&	argc	>	1	)	||	(	set	&&	argc	!=	1	)

(	!	set	&&	argc	>	1	)	||	(	set	&&	argc	!=	1	)

(	!	set	&&	argc	!=	1	)	||	(	set	&&	argc	>	3	)	||	(	set	&&	argc	<	1	)

(	!	set	&&	argc	>	1	)	||	(	set	&&	argc	!=	1	)

seconds	<	0	||	seconds	>	(	99999l	*	360l	)

seconds	>=	(	1000l	*	60l	)

(	idx	+	1	)	%	NUM_STRINGS
idx	+	1	%	NUM_STRINGS
(	!	set	&&	argc	!=	1	)	||	(	set	&&	argc	!=	2	)

(	ts_flag	&	(	SINGLE_CHANNEL	|	RANGE_CHANNEL	)	)	==	0
ts_flag	&	SINGLE_CHANNEL	|	RANGE_CHANNEL	==	0
i	<	sizeof	(	ts_map	)	*	8

start	==	-	1	&&	ts_map	&	(	1	<<	i	)

start	!=	-	1	&&	!	(	ts_map	&	(	1	<<	i	)	)
start	!=	-	1	&&	!	ts_map	&	(	1	<<	i	)
start	==	i	-	1

start	!=	-	1

start	==	i	-	1

argc	<	1	&&	set

argc	<	1	&&	set

set	&&	argc	!=	2	&&	argc	!=	4

set	&&	argc	==	4

!	set	&&	argc	>	4

set	&&	argc	==	2

set	&&	argc	==	4

(	set	&&	argc	!=	3	)	||	(	!	set	&&	(	argc	<	2	||	argc	>	3	)	)
(	set	&&	argc	!=	3	)	||	(	!	set	&&	argc	<	2	||	argc	>	3	)
(	set	&&	argc	!=	1	)	||	(	!	set	&&	argc	>	1	)

(	set	&&	argc	!=	2	)	||	(	(	!	set	&&	argc	<	1	)	||	(	!	set	&&	argc	>	2	)	)

(	set	&&	argc	!=	2	)	||	(	!	set	&&	(	argc	<	1	||	argc	>	2	)	)
(	set	&&	argc	!=	2	)	||	(	!	set	&&	argc	<	1	||	argc	>	2	)
!	is_valid_ifname	(	member	)	||	is_bridge	(	ifs	,	member	)

ioctl	(	s	,	SIOCGIFFLAGS	,	(	caddr_t	)	&	ifr	)	<	0

ioctl	(	s	,	SIOCSIFFLAGS	,	(	caddr_t	)	&	ifr	)	<	0

ioctl	(	s	,	SIOCGIFFLAGS	,	(	caddr_t	)	&	ifr	)	<	0

ioctl	(	s	,	SIOCSIFFLAGS	,	(	caddr_t	)	&	ifr	)	<	0

ioctl	(	s	,	SIOCGIFFLAGS	,	(	caddr_t	)	&	ifr	)	<	0

ln	!=	-	1

(	set	&&	(	argc	<	1	||	argc	>	2	)	)	||	(	!	set	&&	argc	>	2	)
(	set	&&	argc	<	1	||	argc	>	2	)	||	(	!	set	&&	argc	>	2	)
media_current	==	-	1

subtype	==	-	1

(	set	&&	(	argc	!=	1	)	)	||	(	!	set	&&	(	argc	>	1	)	)

media_current	==	-	1

mediaopt	==	-	1

rval	==	-	1

(	argc	-	noptind	-	1	)	==	0

x	==	0	||	Ambiguous	(	x	)

af	!=	AF_INET	&&	af	!=	0

af	!=	AF_INET6	&&	af	!=	0

(	rtm	->	rtm_flags	&	flags	)	==	0
rtm	->	rtm_flags	&	flags	==	0
dst	&&	gate	&&	mask	&&	(	af	==	AF_INET	||	af	==	AF_INET6	)
dst	&&	gate	&&	mask	&&	af	==	AF_INET	||	af	==	AF_INET6
!	(	af	==	AF_INET	&&	isdefaultroute	(	dst	,	mask	)	&&	dhclient_isenabled	(	routename	(	gate	)	)	)
!	af	==	AF_INET	&&	isdefaultroute	(	dst	,	mask	)	&&	dhclient_isenabled	(	routename	(	gate	)	)
*	(	(	u_char	*	)	&	sin6	->	sin6_addr	+	q	)
*	(	u_char	*	)	&	sin6	->	sin6_addr	+	q
(	0xff00	>>	r	)	&	0xff

b	&	(	1	<<	(	i	-	1	)	)

0xffffffff	<<	(	32	-	len	)

cp	-	(	char	*	)	&	m_rtmsg

flock	(	fd	,	LOCK_EX	|	LOCK_NB	)	==	0

net	|	~	ntohl	(	mask	)

ioctl	(	ifs	,	SIOCGIFFLAGS	,	(	caddr_t	)	&	ifr	)	<	0

ioctl	(	ifs	,	SIOCSIFFLAGS	,	(	caddr_t	)	&	ifr	)	<	0

argc	<	1	||	argc	>	argcmax

!	set	&&	errno	==	EADDRNOTAVAIL

(	set	&&	argc	<	4	)	||	(	set	&&	argc	==	5	)

set	&&	argc	>=	4

(	!	set	&&	argc	>	1	)	||	(	set	&&	argc	!=	1	)

ioctl	(	ifs	,	SIOCSIFMTU	,	(	caddr_t	)	&	ifr	)	<	0

(	!	set	&&	argc	>	2	)	||	(	set	&&	argc	!=	2	)

(	!	set	&&	argc	>	1	)	||	(	set	&&	argc	!=	1	)

(	!	set	&&	argc	>	1	)	||	(	set	&&	argc	!=	1	)

(	!	set	&&	argc	>	1	)	||	(	set	&&	argc	!=	1	)

ioctl	(	ifs	,	theioctl	,	(	caddr_t	)	&	ifr	)	<	0

(	set	&&	argc	!=	3	)	||	(	!	set	&&	argc	>	3	)

(	set	&&	argc	<	1	)	||	argc	>	3

!	set	&&	argc	==	0

(	set	&&	argc	!=	1	)	||	(	!	set	&&	argc	>	1	)

set	&&	argc	<	2

set	&&	argc	<	1

set	&&	argc	<	1

fread	(	(	char	*	)	&	who	,	sizeof	(	who	)	,	1	,	utmp	)	==	1

idle	<	(	24	*	60	*	60	)

(	idle	%	(	60	*	60	)	)	/	60
(	idle	%	60	*	60	)	/	60
(	!	set	&&	argc	>	1	)	||	(	set	&&	argc	!=	1	)

(	!	set	&&	argc	>	1	)	||	(	set	&&	argc	!=	1	)

(	!	set	&&	argc	>	2	)	||	(	set	&&	(	argc	<	1	||	argc	>	2	)	)
(	!	set	&&	argc	>	2	)	||	(	set	&&	argc	<	1	||	argc	>	2	)
set	&&	argc	==	2

p	>	buf	+	len

hasspc	||	buf_len	==	0

(	!	set	&&	argc	!=	0	)	||	(	set	&&	argc	!=	1	)

(	set	&&	argc	!=	1	)	||	(	!	set	&&	argc	>	1	)

(	set	&&	argc	!=	1	)	||	(	!	set	&&	argc	>	1	)

~	(	ECHO	|	ICANON	)
~	ECHO	|	ICANON
ioctl	(	fileno	(	stdout	)	,	TIOCGWINSZ	,	&	winsize	)	!=	-	1

delivered	||	sflag	<=	1

i	<	ICMP_MAXTYPE	+	1

i	<	ICMP_MAXTYPE	+	1

(	mbpool	.	pr_npages	*	page_size	)	+	(	mclpool	.	pr_npages	*	page_size	)

mbpool	.	pr_nout	*	mbpool	.	pr_size	+	mclpool	.	pr_nout	*	mclpool	.	pr_size

af	!=	AF_UNSPEC	&&	sa	->	sa_family	!=	af

af	!=	0	&&	af	!=	PF_KEY

(	IN6_IS_ADDR_LINKLOCAL	(	&	sin6	->	sin6_addr	)	||	IN6_IS_ADDR_MC_LINKLOCAL	(	&	sin6	->	sin6_addr	)	||	IN6_IS_ADDR_MC_INTFACELOCAL	(	&	sin6	->	sin6_addr	)	)	&&	sin6	->	sin6_scope_id	==	0
IN6_IS_ADDR_LINKLOCAL	(	&	sin6	->	sin6_addr	)	||	IN6_IS_ADDR_MC_LINKLOCAL	(	&	sin6	->	sin6_addr	)	||	IN6_IS_ADDR_MC_INTFACELOCAL	(	&	sin6	->	sin6_addr	)	&&	sin6	->	sin6_scope_id	==	0
(	*	in	>>	4	)	&	15

(	*	in	++	)	&	15

--	len	>	0

sdl	->	sdl_nlen	==	0	&&	sdl	->	sdl_alen	==	0	&&	sdl	->	sdl_slen	==	0

(	width	+	8	)	&	~	7

(	w	+	8	)	&	~	7

opt	==	-	1

!	*	optarg	||	*	invalid

argc	-	optind	!=	1

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	ev	<<	32	)	|	sb	->	events_lo

ino	+	minor	+	(	major	<<	3	)
ino	+	minor	+	major	<<	3
p	==	s	||	!	*	p

p	<	s	+	2

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

!	c1	||	!	c2

c1	==	c2	&&	c1	!=	0

--	p	>=	s

end	>=	s	&&	isspace	(	*	end	)

*	s1	&&	*	s1	==	*	s2

(	unsigned	char	)	c	==	*	p	++

drv	->	name	&&	strncmp	(	current_driver_name	,	drv	->	name	,	NAME_MAX_LEN	-	1	)	==	0

(	entry	->	dev_addr	>>	HASH_FN_SHIFT	)	&	HASH_FN_MASK

i	<	NAME_MAX_LEN	-	1

(	entry	->	type	==	dma_debug_coherent	)	&&	(	ref	->	paddr	!=	entry	->	paddr	)

ref	->	sg_call_ents	&&	ref	->	type	==	dma_debug_sg	&&	ref	->	sg_call_ents	!=	entry	->	sg_call_ents

!	(	b1	<=	a2	||	a1	>=	b2	)
!	b1	<=	a2	||	a1	>=	b2
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	hi	<	0	)	||	(	lo	<	0	)

rowsize	!=	16	&&	rowsize	!=	32

17	*	ngroups	+	2

9	*	ngroups	+	2

5	*	ngroups	+	2

3	*	rowsize	+	2

!	prev	||	prev	->	prio	!=	node	->	prio

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	B	&	C	)	+	(	D	&	(	B	^	C	)	)
B	&	C	+	D	&	(	B	^	C	)
(	B	&	C	)	+	(	D	&	(	B	^	C	)	)
B	&	C	+	D	&	(	B	^	C	)
(	B	&	C	)	+	(	D	&	(	B	^	C	)	)
B	&	C	+	D	&	(	B	^	C	)
(	B	&	C	)	+	(	D	&	(	B	^	C	)	)
(	B	&	C	)	+	D	&	(	B	^	C	)
(	B	&	C	)	+	(	D	&	(	B	^	C	)	)
B	&	C	+	D	&	(	B	^	C	)
(	B	&	C	)	+	(	D	&	(	B	^	C	)	)
(	B	&	C	)	+	D	&	(	B	^	C	)
(	B	&	C	)	+	(	D	&	(	B	^	C	)	)
B	&	C	+	D	&	(	B	^	C	)
(	B	&	C	)	+	(	D	&	(	B	^	C	)	)
(	B	&	C	)	+	D	&	(	B	^	C	)
(	B	&	C	)	+	(	D	&	(	B	^	C	)	)
B	&	C	+	(	D	&	(	B	^	C	)	)
(	B	&	C	)	+	(	D	&	(	B	^	C	)	)
B	&	C	+	D	&	(	B	^	C	)
(	B	&	C	)	+	(	D	&	(	B	^	C	)	)
B	&	C	+	D	&	(	B	^	C	)
(	B	&	C	)	+	(	D	&	(	B	^	C	)	)
B	&	C	+	(	D	&	(	B	^	C	)	)
(	B	&	C	)	+	(	D	&	(	B	^	C	)	)
B	&	C	+	(	D	&	(	B	^	C	)	)
(	B	&	C	)	+	(	D	&	(	B	^	C	)	)
B	&	C	+	D	&	(	B	^	C	)
(	B	&	C	)	+	(	D	&	(	B	^	C	)	)
(	B	&	C	)	+	D	&	(	B	^	C	)
(	B	&	C	)	+	(	D	&	(	B	^	C	)	)
B	&	C	+	D	&	(	B	^	C	)
(	B	&	C	)	+	(	D	&	(	B	^	C	)	)
B	&	C	+	D	&	(	B	^	C	)
(	B	&	C	)	+	(	D	&	(	B	^	C	)	)
B	&	C	+	D	&	(	B	^	C	)
(	B	&	C	)	+	(	D	&	(	B	^	C	)	)
B	&	C	+	(	D	&	(	B	^	C	)	)
(	B	&	C	)	+	(	D	&	(	B	^	C	)	)
B	&	C	+	D	&	(	B	^	C	)
!	head	->	next	||	node	->	expires	.	tv64	<	head	->	next	->	expires	.	tv64

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	pos	-	1	)	/	2
pos	-	1	/	2
(	pos	-	1	)	/	2
pos	-	1	/	2
(	pos	-	1	)	/	2
pos	-	1	/	2
2	*	pos	+	1

2	*	pos	+	2

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	i	==	geo	->	no_pairs	)	||	!	bval	(	geo	,	node	,	i	)

pos	<	fill	&&	keycmp	(	geo	,	node	,	pos	,	key	)	==	0

i	<	fill	/	2

i	+	fill	/	2

i	+	fill	/	2

i	+	fill	/	2

fill	+	no_left	<=	geo	->	no_pairs

i	+	1	<	getfill	(	geo	,	parent	,	i	)

fill	+	no_right	<=	geo	->	no_pairs

i	<	fill	-	1

fill	-	1	<	geo	->	no_pairs	/	2

fill	-	1	==	1

(	1UL	<<	left	)	-	1
1UL	<<	left	-	1
off	+	k	<	lim

!	rem	||	off	+	k	+	1	>=	lim

off	+	k	+	1	==	lim	-	1	&&	left

left	&&	off	+	k	==	lim	-	1

left	&&	k	==	lim	-	1

rem	&&	k	>	0

left	&&	k	==	lim	-	1

(	1UL	<<	left	)	-	1
1UL	<<	left	-	1
left	&&	k	+	off	==	lim	-	1

(	1UL	<<	left	)	-	1
1UL	<<	left	-	1
nr	-	bits_to_set	>=	0

nr	-	bits_to_clear	>=	0

nmaskbits	&	(	CHUNKSZ	-	1	)

(	chunksz	+	3	)	/	4
chunksz	+	3	/	4
cur	>=	nmaskbits	||	cur	>	rtop	+	1

!	(	a	<=	b	)
!	a	<=	b
pos	<	0	||	pos	>=	bits	||	!	test_bit	(	pos	,	buf	)

ord	>=	0	&&	ord	<	bits

i	<	bits	&&	ord	>	0

i	<	bits	&&	ord	==	0

n	<	0	||	w	==	0

n	<	0	||	w	==	0

1UL	<<	(	nbitsinlong	-	1	)

pos	+	(	1	<<	order	)
pos	+	1	<<	order
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

limit	<	5	&&	descr	!=	descr_test

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

!	cur	||	!	(	*	cur	)

rs	->	burst	&&	rs	->	burst	>	rs	->	printed

i	<	len	-	1

i	%	ENTRIES_PER_LINE	==	0

!	(	waiter	->	flags	&	RWSEM_WAITING_FOR_WRITE	)
!	waiter	->	flags	&	RWSEM_WAITING_FOR_WRITE
!	start	&&	!	nr_elements

!	fa	->	total_nr_elements	||	!	fa	->	element_size

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

!	nfound	&&	verbose

*	end	&&	*	end	!=	quote

*	end	&&	!	isspace	(	*	end	)

!	query	||	!	*	query

++	iter	->	idx	==	iter	->	table	->	num_ddebugs

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

oid	>>	sh	==	id	>>	sh

(	(	id	>>	sh	)	^	n	^	m	)	<<	sh
(	id	>>	sh	)	^	n	^	m	<<	sh
(	shift	>	0	)	&&	p

*	paa	&&	!	--	(	(	*	*	paa	)	->	count	)

idp	->	top	&&	idp	->	top	->	count	==	1	&&	(	idp	->	layers	>	1	)

n	<	fls	(	id	^	bt_mask	)

n	>	0	&&	p

n	>	0	&&	p

n	>	0	&&	p

(	n	>	0	)	&&	p

(	shift	>	0	)	&&	p

--	bitmap	->	nr_busy	==	0

lc	->	lc_slot	+	(	enr	%	lc	->	nr_elements	)

e	->	refcnt	++	==	0

++	e	->	refcnt	!=	1

e	->	refcnt	++	==	0

--	e	->	refcnt	==	0

index	<	0	||	index	>=	lc	->	nr_elements

block_idx	>=	block_len	&&	!	GET_NEXT_BLOCK	(	)	)	if	(	end_of_data	(	)

tok_idx	<	(	fsm	->	ntokens	-	1	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	!	node	||	rb_is_black	(	node	)	)	&&	node	!=	root	->	rb_node
!	node	||	rb_is_black	(	node	)	&&	node	!=	root	->	rb_node
(	!	other	->	rb_left	||	rb_is_black	(	other	->	rb_left	)	)	&&	(	!	other	->	rb_right	||	rb_is_black	(	other	->	rb_right	)	)
!	other	->	rb_left	||	rb_is_black	(	other	->	rb_left	)	&&	!	other	->	rb_right	||	rb_is_black	(	other	->	rb_right	)
!	other	->	rb_right	||	rb_is_black	(	other	->	rb_right	)

(	!	other	->	rb_left	||	rb_is_black	(	other	->	rb_left	)	)	&&	(	!	other	->	rb_right	||	rb_is_black	(	other	->	rb_right	)	)
!	other	->	rb_left	||	rb_is_black	(	other	->	rb_left	)	&&	(	!	other	->	rb_right	||	rb_is_black	(	other	->	rb_right	)	)
!	other	->	rb_left	||	rb_is_black	(	other	->	rb_left	)

!	node	->	rb_right	&&	!	node	->	rb_left

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

2	*	(	completed	-	dql	->	num_completed	)
2	*	completed	-	dql	->	num_completed
2	*	(	completed	-	dql	->	num_completed	)
2	*	completed	-	dql	->	num_completed
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

--	size	>	0

(	val	&	0x0f	)	+	(	val	>>	4	)	*	10
val	&	0x0f	+	val	>>	4	*	10
(	(	val	/	10	)	<<	4	)	+	val	%	10
(	val	/	10	)	<<	4	+	val	%	10
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

lev	>=	ARRAY_SIZE	(	part	)	-	1

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

type	<=	0	||	type	>	maxtype

pt	->	len	&&	attrlen	>	pt	->	len

sizeof	(	struct	nlattr	*	)	*	(	maxtype	+	1	)
sizeof	(	struct	nlattr	*	)	*	maxtype	+	1
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

expected_testcase_failures	&&	!	testcase_successes

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

--	g	==	0

i	<	bm	->	patlen	-	1

g	++	,	i	--

j	>=	1	-	g

~	0UL	<<	offset

~	0UL	<<	size

tmp	==	~	0UL

(	*	p	)	|	(	~	0UL	<<	size	)

tmp	==	~	0UL

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

!	in_interrupt	(	)	&&	task	->	make_it_fail

atomic_read	(	&	attr	->	times	)	!=	-	1

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

*	callno	!=	-	1L	&&	maxargs	>	0

i	<	(	int	)	(	index	+	nslots	)

(	index	+	nslots	)	<	io_tlb_nslabs

val	&	~	mask_to_clear

nr	-	bits_to_set	>=	0

nr	-	bits_to_clear	>=	0

(	chunk	->	end_addr	-	chunk	->	start_addr	)	>>	order

(	1	<<	(	alignment_order	-	order	)	)	-	1
1	<<	(	alignment_order	-	order	)	-	1
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

i	<	modulus_len	-	1

*	outlen	<	(	msglen	-	(	2	+	ps_len	+	1	)	)

(	mblen	+	7	)	/	8
mblen	+	7	/	8
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

i	*	10	+	*	(	(	*	s	)	++	)

(	q	>>	4	)	&	0xf

(	q	>>	8	)	&	0xf

6	*	(	d3	+	d2	+	d1	)	+	(	q	&	0xf	)
6	*	d3	+	d2	+	d1	+	q	&	0xf
(	d0	*	0xcd	)	>>	11

d0	-	10	*	q

q	+	9	*	d3	+	5	*	d2	+	d1

(	d1	*	0xcd	)	>>	11

d1	-	10	*	q

q	+	2	*	d2

(	d2	!=	0	)	||	(	d3	!=	0	)

(	d2	*	0xd	)	>>	7

d2	-	10	*	q

q	+	4	*	d3

(	d3	*	0xcd	)	>>	11

d3	-	10	*	q

(	q	>>	4	)	&	0xf

(	q	>>	8	)	&	0xf

6	*	(	d3	+	d2	+	d1	)	+	(	q	&	0xf	)
6	*	d3	+	d2	+	d1	+	q	&	0xf
(	d0	*	0xcd	)	>>	11

d0	-	10	*	q

q	+	9	*	d3	+	5	*	d2	+	d1

(	d1	*	0xcd	)	>>	11

d1	-	10	*	q

q	+	2	*	d2

(	d2	*	0xd	)	>>	7

d2	-	10	*	q

q	+	4	*	d3

(	d3	*	0xcd	)	>>	11

d3	-	10	*	q

(	spec	.	flags	&	SPECIAL	)	&&	spec	.	base	!=	10

!	(	spec	.	flags	&	(	ZEROPAD	+	LEFT	)	)
!	spec	.	flags	&	(	ZEROPAD	+	LEFT	)
--	spec	.	field_width	>=	0

!	(	spec	.	flags	&	LEFT	)
!	spec	.	flags	&	LEFT
--	spec	.	field_width	>=	0

--	i	>=	0

--	spec	.	field_width	>=	0

!	(	spec	.	flags	&	LEFT	)
!	spec	.	flags	&	LEFT
spec	.	field_width	==	-	1

spec	.	field_width	==	-	1

spec	.	field_width	==	-	1

fmt	!=	start	||	!	*	fmt

++	fmt	-	start

++	fmt	-	start

++	fmt	-	start

++	fmt	-	start

++	fmt	-	start

++	fmt	-	start

++	fmt	-	start

copy	>	end	-	str

!	(	spec	.	flags	&	LEFT	)
!	spec	.	flags	&	LEFT
--	spec	.	field_width	>	0

--	spec	.	field_width	>	0

*	fmt	++	!=	*	str	++

!	isspace	(	*	str	)	&&	*	str

!	*	fmt	||	!	*	str

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

op	>=	res	+	one

res	+	2	*	one

w	-	(	(	w	>>	1	)	&	0x55555555	)
w	-	(	w	>>	1	)	&	0x55555555
(	res	&	0x33333333	)	+	(	(	res	>>	2	)	&	0x33333333	)
res	&	0x33333333	+	(	res	>>	2	)	&	0x33333333
(	res	+	(	res	>>	4	)	)	&	0x0F0F0F0F
(	res	+	res	>>	4	)	&	0x0F0F0F0F
res	+	(	res	>>	8	)
res	+	res	>>	8
(	res	+	(	res	>>	16	)	)	&	0x000000FF
(	res	+	res	>>	16	)	&	0x000000FF
w	-	(	(	w	>>	1	)	&	0x5555	)
w	-	(	w	>>	1	)	&	0x5555
(	res	&	0x3333	)	+	(	(	res	>>	2	)	&	0x3333	)
(	res	&	0x3333	)	+	(	res	>>	2	)	&	0x3333
(	res	+	(	res	>>	4	)	)	&	0x0F0F
(	res	+	res	>>	4	)	&	0x0F0F
(	res	+	(	res	>>	8	)	)	&	0x00FF
(	res	+	res	>>	8	)	&	0x00FF
w	-	(	(	w	>>	1	)	&	0x55	)
w	-	(	w	>>	1	)	&	0x55
(	res	&	0x33	)	+	(	(	res	>>	2	)	&	0x33	)
res	&	0x33	+	(	res	>>	2	)	&	0x33
(	res	+	(	res	>>	4	)	)	&	0x0F
(	res	+	res	>>	4	)	&	0x0F
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

*	cp	&&	!	isspace	(	*	cp	)

(	n1	>	max_numerator	)	||	(	d1	>	max_denominator	)

n0	+	a	*	n1

d0	+	a	*	d1

!	mpool	||	!	mpool	->	gpool

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

res	&	(	~	0ull	<<	60	)

res	*	base	+	val

(	long	long	)	(	-	tmp	)	>=	0

(	x	&	0xffff	)	+	(	x	>>	16	)
(	x	&	0xffff	)	+	x	>>	16
(	x	&	0xffff	)	+	(	x	>>	16	)
x	&	0xffff	+	x	>>	16
buff	+	(	(	unsigned	)	len	&	~	3	)
buff	+	(	unsigned	)	len	&	~	3
(	result	&	0xffff	)	+	(	result	>>	16	)
result	&	0xffff	+	result	>>	16
(	(	result	>>	8	)	&	0xff	)	|	(	(	result	&	0xff	)	<<	8	)
(	(	result	>>	8	)	&	0xff	)	|	(	result	&	0xff	<<	8	)
(	proto	+	len	)	<<	8

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	height	-	1	)	*	RADIX_TREE_MAP_SHIFT
height	-	1	*	RADIX_TREE_MAP_SHIFT
(	index	>>	shift	)	&	RADIX_TREE_MAP_MASK
(	index	>>	shift	)	&	RADIX_TREE_MAP_MASK
(	height	-	1	)	*	RADIX_TREE_MAP_SHIFT
height	-	1	*	RADIX_TREE_MAP_SHIFT
node	->	slots	+	(	(	index	>>	shift	)	&	RADIX_TREE_MAP_MASK	)
node	->	slots	+	(	(	index	>>	shift	)	&	RADIX_TREE_MAP_MASK	)
(	height	-	1	)	*	RADIX_TREE_MAP_SHIFT
height	-	1	*	RADIX_TREE_MAP_SHIFT
(	index	>>	shift	)	&	RADIX_TREE_MAP_MASK
(	index	>>	shift	)	&	RADIX_TREE_MAP_MASK
slot	&&	!	root_tag_get	(	root	,	tag	)

(	height	-	1	)	*	RADIX_TREE_MAP_SHIFT
height	-	1	*	RADIX_TREE_MAP_SHIFT
(	index	>>	shift	)	&	RADIX_TREE_MAP_MASK
(	index	>>	shift	)	&	RADIX_TREE_MAP_MASK
rnode	&&	!	index

(	rnode	->	height	-	1	)	*	RADIX_TREE_MAP_SHIFT
rnode	->	height	-	1	*	RADIX_TREE_MAP_SHIFT
++	offset	<	RADIX_TREE_MAP_SIZE
++	offset	<	RADIX_TREE_MAP_SIZE
~	(	(	RADIX_TREE_MAP_SIZE	<<	shift	)	-	1	)
~	RADIX_TREE_MAP_SIZE	<<	shift	-	1
(	index	>>	shift	)	&	RADIX_TREE_MAP_MASK
(	index	>>	shift	)	&	RADIX_TREE_MAP_MASK
(	index	|	RADIX_TREE_MAP_MASK	)	+	1
index	|	RADIX_TREE_MAP_MASK	+	1
(	height	-	1	)	*	RADIX_TREE_MAP_SHIFT
height	-	1	*	RADIX_TREE_MAP_SHIFT
(	index	>>	shift	)	&	RADIX_TREE_MAP_MASK
(	index	>>	shift	)	&	RADIX_TREE_MAP_MASK
(	(	index	>>	shift	)	+	1	)	<<	shift
(	index	>>	shift	+	1	)	<<	shift
index	>	last_index	||	!	index

(	(	index	>>	shift	)	&	RADIX_TREE_MAP_MASK	)	==	0
(	(	index	>>	shift	)	&	RADIX_TREE_MAP_MASK	)	==	0
~	0UL	>>	shift

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

*	(	path	+	--	length	)
*	path	+	--	length
kobj	->	name	&&	!	fmt

kobj	->	state_add_uevent_sent	&&	!	kobj	->	state_remove_uevent_sent

(	addr	>>	8	)	^	(	addr	>>	16	)

addr	&	(	NR_LOCKS	-	1	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

!	is_power_of_2	(	weight	)	||	!	is_power_of_2	(	factor	)

(	(	(	avg	->	internal	<<	avg	->	weight	)	-	avg	->	internal	)	+	(	val	<<	avg	->	factor	)	)	>>	avg	->	weight
(	(	avg	->	internal	<<	avg	->	weight	-	avg	->	internal	)	+	val	<<	avg	->	factor	)	>>	avg	->	weight
(	(	last	-	first	)	>>	1	)	+	first
(	last	-	first	)	>>	1	+	first
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

len	<	(	4	-	m	)

(	v	&	n	)	+	(	v	>>	GF_M	(	bch	)	)
v	&	n	+	(	v	>>	GF_M	(	bch	)	)
(	x	&	0x11111111U	)	*	0x11111111U
x	&	0x11111111U	*	0x11111111U
(	x	>>	28	)	&	1

j	<	2	*	t

(	j	+	1	)	*	(	i	+	s	)
j	+	1	*	(	i	+	s	)
2	*	j	+	1

(	i	<	t	)	&&	(	elp	->	deg	<=	t	)

2	*	i	-	pp

i	<	t	-	1

2	*	i	+	2

2	*	i	+	2	-	j

r	>	m	-	1	-	k

p	--	,	1u	<<	(	m	-	r	)

nsol	!=	(	1	<<	k	)

(	p	>>	c	)	&	1

parity	(	mask	)	<<	(	m	-	r	)

(	k	+	j	+	1	)	&	~	j

l0	+	l2	+	2	*	(	GF_N	(	bch	)	-	l1	)
l0	+	l2	+	2	*	GF_N	(	bch	)	-	l1
(	gf_sqr	(	bch	,	r	)	^	r	)	==	u
gf_sqr	(	bch	,	r	)	^	r	==	u
2	*	GF_N	(	bch	)	-	l1

2	*	GF_N	(	bch	)	-	l1

a_pow	(	bch	,	2	*	l	)	^	gf_mul	(	bch	,	b	,	f	)	^	d

(	1	+	q	->	deg	)	*	sizeof	(	unsigned	int	)
1	+	q	->	deg	*	sizeof	(	unsigned	int	)
2	*	j	+	1

i	<	m	-	1

poly	->	deg	&&	(	k	<=	GF_M	(	bch	)	)

8	*	len	>	(	bch	->	n	-	bch	->	ecc_bits	)

(	len	*	8	)	+	bch	->	ecc_bits

i	&&	(	x	==	1	)

i	*	(	1	<<	j	)
i	*	1	<<	j
(	x	<=	GF_N	(	bch	)	)	&&	remaining

y	&&	(	r	<	m	)

(	bch	->	n	+	1	)	*	sizeof	(	*	roots	)
bch	->	n	+	1	*	sizeof	(	*	roots	)
2	*	i	+	1

1u	<<	(	31	-	j	)

(	m	<	min_m	)	||	(	m	>	max_m	)

(	t	<	1	)	||	(	m	*	t	>=	(	(	1	<<	m	)	-	1	)	)
(	t	<	1	)	||	(	m	*	t	>=	(	1	<<	m	-	1	)	)
(	1	<<	m	)	-	1
1	<<	m	-	1
(	malloc_ptr	+	3	)	&	~	3

++	i	<	n

k	>	w	+	l

++	j	<	z

(	f	<<=	1	)	<=	*	++	xp

i	>>	(	w	-	l	)

p	>=	v	+	n

1	<<	(	k	-	w	)

1	<<	(	k	-	1	)

i	&	(	(	1	<<	w	)	-	1	)
i	&	(	1	<<	w	-	1	)
y	!=	0	&&	g	!=	1

w	-	d	>=	e

i	<	sizeof	(	p	)	/	sizeof	(	int	)

(	c	>>	1	)	^	e

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	shift	+	index	)	&	(	boundary_size	-	1	)

shift	+	nr	>	boundary_size

!	top_kobj	->	kset	&&	top_kobj	->	parent

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

*	ip	++	<<	2

*	ip	++	<<	3

*	ip	++	<<	2

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	s	->	index	.	size	+	(	b	->	in_pos	-	s	->	in_start	)	)	&	3

failb	==	disks	-	1

faila	==	disks	-	2

failb	==	disks	-	2

i	<	NDISKS	-	2	&&	j	==	NDISKS	-	1

!	erra	&&	!	errb

!	(	*	algo	)	->	valid	||	(	*	algo	)	->	valid	(	)

i	<	NDISKS	-	1

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	1	<<	symsize	)	-	1
1	<<	symsize	-	1
sr	&	(	1	<<	symsize	)

(	iprim	%	prim	)	!=	0

bstate	==	finish_started	||	bstate	==	finish_done

bstate	==	need_more	||	bstate	==	finish_started

more	==	(	unsigned	)	(	-	1	)

++	count	<	max_count	&&	curlen	==	nextlen

++	count	<	max_count	&&	curlen	==	nextlen

--	count	!=	0

count	>=	3	&&	count	<=	6

lcodes	>=	257	&&	dcodes	>=	1	&&	blcodes	>=	4

(	1U	<<	state	->	lenbits	)	-	1
1U	<<	state	->	lenbits	-	1
(	1U	<<	state	->	distbits	)	-	1
1U	<<	state	->	distbits	-	1
(	unsigned	)	hold	&	(	(	1U	<<	op	)	-	1	)
(	unsigned	)	hold	&	(	1U	<<	op	-	1	)
(	unsigned	)	hold	&	(	(	1U	<<	op	)	-	1	)
(	unsigned	)	hold	&	(	1U	<<	op	-	1	)
!	(	(	long	)	(	out	-	1	+	OFF	)	&	1	)
!	(	long	)	(	out	-	1	+	OFF	)	&	1
(	op	&	64	)	==	0
op	&	64	==	0
(	op	&	64	)	==	0
op	&	64	==	0
in	<	last	&&	out	<	end

(	1U	<<	bits	)	-	1
1U	<<	bits	-	1
1U	<<	(	len	-	drop	)

1U	<<	(	len	-	1	)

len	>	root	&&	(	huff	&	mask	)	!=	low
len	>	root	&&	huff	&	mask	!=	low
curr	+	drop	<	max

drop	!=	0	&&	(	huff	&	mask	)	!=	low
drop	!=	0	&&	huff	&	mask	!=	low
1U	<<	(	len	-	1	)

(	windowBits	>>	4	)	+	1
windowBits	>>	4	+	1
windowBits	<	8	||	windowBits	>	15

(	(	BITS	(	8	)	<<	8	)	+	(	hold	>>	8	)	)	%	31
(	(	BITS	(	8	)	<<	8	)	+	hold	>>	8	)	%	31
(	hold	&	0xffff	)	!=	(	(	hold	>>	16	)	^	0xffff	)
hold	&	0xffff	!=	(	(	hold	>>	16	)	^	0xffff	)
state	->	nlen	>	286	||	state	->	ndist	>	30

state	->	have	<	state	->	nlen	+	state	->	ndist

state	->	have	+	copy	>	state	->	nlen	+	state	->	ndist

have	>=	6	&&	left	>=	258

state	->	offset	>	state	->	whave	+	out	-	left

(	nbits	+	7	)	/	8
nbits	+	7	/	8
(	nbits	+	7	)	/	8
nbits	+	7	/	8
!	count	||	!	n

!	(	idx	>=	0	&&	idx	<	(	1	<<	k	)	)
!	idx	>=	0	&&	idx	<	(	1	<<	k	)
idx	&	(	1	<<	j	)

(	pulse	<<	10	)	|	(	sample	<<	2	)

!	(	mcr	&	2	)
!	mcr	&	2
(	result	>>	1	)	|	(	nic_read_bit	(	idd	)	<<	7	)

!	a	&&	!	b

~	(	1UL	<<	index	)
~	1UL	<<	index
(	addr	&	(	1UL	<<	index	)	)	==	0
addr	&	(	1UL	<<	index	)	==	0
(	addr	>>	index	)	&	1

~	(	1UL	<<	index	)
~	1UL	<<	index
(	addr	>>	index	)	&	1

(	db	^	(	*	crc	>>	16	)	)	&	1
db	^	(	*	crc	>>	16	)	&	1
(	*	crc	^	db	)	&	1
*	crc	^	db	&	1
addr	>>	(	i	<<	3	)

(	page	<<	5	)	&	0xE0

(	page	>>	3	)	&	0x1F

alloc_id	!=	-	1

alloc_id	==	-	1

i	<	raid_disks	&&	!	ret

j	<	0	||	j	>=	mddev	->	raid_disks

!	smallest	||	(	rdev1	->	sectors	<	smallest	->	sectors	)

conf	->	devlist	+	i	*	mddev	->	raid_disks

!	smallest	||	rdev	->	sectors	<	smallest	->	sectors

(	mddev	->	chunk_sectors	<<	9	)	%	queue_logical_block_size	(	mddev	->	queue	)
mddev	->	chunk_sectors	<<	9	%	queue_logical_block_size	(	mddev	->	queue	)
(	mddev	->	chunk_sectors	<<	9	)	*	mddev	->	raid_disks
mddev	->	chunk_sectors	<<	9	*	mddev	->	raid_disks
max	<=	biovec	->	bv_len	&&	bio_sectors	==	0

mddev	->	queue	->	backing_dev_info	.	ra_pages	<	2	*	stripe

(	bio	->	bi_sector	&	(	chunk_sects	-	1	)	)	+	(	bio	->	bi_size	>>	9	)
bio	->	bi_sector	&	(	chunk_sects	-	1	)	+	bio	->	bi_size	>>	9
bio	->	bi_vcnt	!=	1	||	bio	->	bi_idx	!=	0

rdev	->	raid_disk	==	mddev	->	raid_disks	-	1

mddev	->	layout	!=	(	(	1	<<	8	)	+	2	)
mddev	->	layout	!=	(	1	<<	8	+	2	)
mddev	->	degraded	!=	(	mddev	->	raid_disks	>>	1	)

-	mddev	->	raid_disks	/	2

(	mddev	->	raid_disks	-	1	)	!=	mddev	->	degraded

mddev	->	array_sectors	&	(	chunksect	-	1	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

hash_tfm	&&	!	IS_ERR	(	hash_tfm	)

1	<<	log	!=	bs

lmk	->	hash_tfm	&&	!	IS_ERR	(	lmk	->	hash_tfm	)

cc	->	key	+	(	cc	->	tfms_count	*	subkey_size	)

ctx	->	sector	&	(	cc	->	tfms_count	-	1	)

ctx	->	idx_in	<	ctx	->	bio_in	->	bi_vcnt	&&	ctx	->	idx_out	<	ctx	->	bio_out	->	bi_vcnt

error	&&	!	base_io	->	error

!	crypt_finished	&&	remaining

cc	->	key	+	(	i	*	subkey_size	)

cc	->	key_size	!=	(	key_string_len	>>	1	)

crypto_ablkcipher_alignmask	(	any_tfm	(	cc	)	)	&	~	(	crypto_tfm_ctx_alignment	(	)	-	1	)
crypto_ablkcipher_alignmask	(	any_tfm	(	cc	)	)	&	~	crypto_tfm_ctx_alignment	(	)	-	1
opt_params	==	1	&&	opt_string

!	bitmap	||	!	bitmap	->	mddev

!	bitmap	||	!	bitmap	->	sb_page

(	page	->	index	<<	2	)	+	attr
page	->	index	<<	2	+	attr
(	page	->	index	<<	2	)	+	attr
page	->	index	<<	2	+	attr
(	page	->	index	<<	2	)	+	attr
page	->	index	<<	2	+	attr
!	file	&&	!	bitmap	->	mddev	->	bitmap_info	.	offset

index	==	0	&&	bitmap	->	sb_page

bitmap	->	need_sync	&&	mddev	->	bitmap_info	.	external	==	0

success	&&	!	bitmap	->	mddev	->	degraded	&&	bitmap	->	events_cleared	<	bitmap	->	mddev	->	events

!	file	&&	!	mddev	->	bitmap_info	.	offset

mddev	->	bitmap_info	.	chunksize	==	0	||	mddev	->	bitmap_info	.	daemon_sleep	==	0

mddev	->	bitmap_info	.	external	==	0	&&	mddev	->	major_version	==	0	&&	offset	!=	mddev	->	bitmap_info	.	default_offset

csize	<	512	||	!	is_power_of_2	(	csize	)

conf	->	raid_disks	-	mddev	->	degraded	<=	1

idx	<<	(	v	->	hash_dev_block_bits	-	v	->	hash_per_block_bits	)

cluster	&	(	cluster	-	1	)

1	<<	(	fls	(	cluster	)	-	1	)

limits	->	logical_block_size	<	1	<<	v	->	data_dev_block_bits

limits	->	physical_block_size	<	1	<<	v	->	data_dev_block_bits

(	1	<<	v	->	hash_dev_block_bits	)	<	v	->	digest_size	*	2

fls	(	(	1	<<	v	->	hash_dev_block_bits	)	/	v	->	digest_size	)	-	1
fls	(	1	<<	v	->	hash_dev_block_bits	/	v	->	digest_size	)	-	1
v	->	hash_per_block_bits	*	v	->	levels	<	64	&&	(	unsigned	long	long	)	(	v	->	data_blocks	-	1	)	>>	(	v	->	hash_per_block_bits	*	v	->	levels	)

sizeof	(	struct	dm_verity_io	)	+	v	->	shash_descsize	+	v	->	digest_size	*	2

chunk_size	%	(	bdev_logical_block_size	(	dm_snap_cow	(	store	->	snap	)	->	bdev	)	>>	9	)	||	chunk_size	%	(	bdev_logical_block_size	(	dm_snap_origin	(	store	->	snap	)	->	bdev	)	>>	9	)
chunk_size	%	(	bdev_logical_block_size	(	dm_snap_cow	(	store	->	snap	)	->	bdev	)	>>	9	)	||	chunk_size	%	bdev_logical_block_size	(	dm_snap_origin	(	store	->	snap	)	->	bdev	)	>>	9
(	unsigned	long	)	ptr	&	(	len	-	1	)

(	b	->	read_error	||	b	->	write_error	)	&&	!	test_bit	(	B_READING	,	&	b	->	state	)	&&	!	test_bit	(	B_WRITING	,	&	b	->	state	)	&&	!	test_bit	(	B_DIRTY	,	&	b	->	state	)
b	->	read_error	||	b	->	write_error	&&	!	test_bit	(	B_READING	,	&	b	->	state	)	&&	!	test_bit	(	B_WRITING	,	&	b	->	state	)	&&	!	test_bit	(	B_DIRTY	,	&	b	->	state	)
!	(	fc	->	up_interval	+	fc	->	down_interval	)
!	fc	->	up_interval	+	fc	->	down_interval
fc	->	up_interval	+	fc	->	down_interval	<	fc	->	up_interval

data	&&	bio_bytes	>=	fc	->	corrupt_bio_byte

elapsed	%	(	fc	->	up_interval	+	fc	->	down_interval	)	>=	fc	->	up_interval
elapsed	%	fc	->	up_interval	+	fc	->	down_interval	>=	fc	->	up_interval
drop_writes	+	(	fc	->	corrupt_bio_byte	>	0	)	*	5
drop_writes	+	fc	->	corrupt_bio_byte	>	0	*	5
!	timer_pending	(	&	dc	->	delay_timer	)	||	expires	<	dc	->	delay_timer	.	expires

argc	!=	3	&&	argc	!=	6

!	delay	||	!	atomic_read	(	&	dc	->	may_delay	)

(	bio	->	bi_phys_segments	>>	16	)	&	0xffff

(	val	<<	16	)	|	raid5_bi_phys_segments	(	bio	)

raid5_bi_phys_segments	(	bio	)	|	(	cnt	<<	16	)

sh	->	qd_idx	==	sh	->	disks	-	1

!	conf	->	mddev	->	external	&&	conf	->	mddev	->	flags

!	rdev	&&	!	rrdev

percpu	->	scribble	+	sizeof	(	struct	page	*	)	*	(	sh	->	disks	+	2	)
percpu	->	scribble	+	sizeof	(	struct	page	*	)	*	sh	->	disks	+	2
i	==	target	||	i	==	qd_idx

target	<	0	||	target2	<	0

failb	==	syndrome_disks	+	1

i	==	data_target	||	i	==	qd_idx

dev	->	written	||	i	==	pd_idx	||	i	==	qd_idx

i	==	pd_idx	||	i	==	qd_idx

sh	->	ops	.	target2	<	0	||	sh	->	ops	.	target	<	0

(	pd_idx	+	1	+	*	dd_idx	)	%	raid_disks
pd_idx	+	1	+	*	dd_idx	%	raid_disks
(	pd_idx	+	1	+	*	dd_idx	)	%	raid_disks
pd_idx	+	1	+	*	dd_idx	%	raid_disks
pd_idx	==	raid_disks	-	1

pd_idx	==	raid_disks	-	1

(	pd_idx	+	1	)	%	raid_disks
pd_idx	+	1	%	raid_disks
(	pd_idx	+	2	+	*	dd_idx	)	%	raid_disks
pd_idx	+	2	+	*	dd_idx	%	raid_disks
(	pd_idx	+	1	)	%	raid_disks
pd_idx	+	1	%	raid_disks
(	pd_idx	+	2	+	*	dd_idx	)	%	raid_disks
pd_idx	+	2	+	*	dd_idx	%	raid_disks
pd_idx	==	raid_disks	-	1

pd_idx	==	raid_disks	-	1

(	pd_idx	+	raid_disks	-	1	)	%	raid_disks
pd_idx	+	raid_disks	-	1	%	raid_disks
(	pd_idx	+	1	+	*	dd_idx	)	%	raid_disks
pd_idx	+	1	+	*	dd_idx	%	raid_disks
(	pd_idx	+	1	+	*	dd_idx	)	%	(	raid_disks	-	1	)
(	pd_idx	+	1	+	*	dd_idx	)	%	raid_disks	-	1
(	pd_idx	+	1	+	*	dd_idx	)	%	(	raid_disks	-	1	)
pd_idx	+	1	+	*	dd_idx	%	raid_disks	-	1
sh	->	pd_idx	==	raid_disks	-	1

sh	->	pd_idx	==	raid_disks	-	1

s	->	locked	+	conf	->	max_degraded	==	disks

*	bip	&&	(	*	bip	)	->	bi_sector	<	bi	->	bi_sector

(	*	bip	)	->	bi_sector	+	(	(	*	bip	)	->	bi_size	>>	9	)	>	bi	->	bi_sector
(	*	bip	)	->	bi_sector	+	(	*	bip	)	->	bi_size	>>	9	>	bi	->	bi_sector
*	bip	&&	(	*	bip	)	->	bi_sector	<	bi	->	bi_sector	+	(	(	bi	->	bi_size	)	>>	9	)
*	bip	&&	(	*	bip	)	->	bi_sector	<	bi	->	bi_sector	+	(	bi	->	bi_size	)	>>	9
*	bip	&&	bi	->	bi_next	&&	(	*	bip	)	!=	bi	->	bi_next

s	->	uptodate	==	disks	-	1

s	->	uptodate	==	disks	-	2	&&	s	->	failed	>=	2

rmw	<	rcw	&&	rmw	>	0

rcw	<=	rmw	&&	rcw	>	0

!	s	->	q_failed	&&	s	->	failed	<	2

s	->	uptodate	<	disks	-	1

i	!=	sh	->	pd_idx	&&	i	!=	sh	->	qd_idx

max	<=	biovec	->	bv_len	&&	bio_sectors	==	0

!	error	&&	uptodate

(	bi	->	bi_size	>>	9	)	>	queue_max_sectors	(	q	)

!	list_empty	(	&	conf	->	hold_list	)	&&	(	(	conf	->	bypass_threshold	&&	conf	->	bypass_count	>	conf	->	bypass_threshold	)	||	atomic_read	(	&	conf	->	pending_full_writes	)	==	0	)
!	list_empty	(	&	conf	->	hold_list	)	&&	(	conf	->	bypass_threshold	&&	conf	->	bypass_count	>	conf	->	bypass_threshold	)	||	atomic_read	(	&	conf	->	pending_full_writes	)	==	0
mddev	->	flags	==	0	||	kthread_should_stop	(	)

conf	->	level	==	6	&&	j	==	sh	->	qd_idx

atomic_read	(	&	mddev	->	plug_cnt	)	==	0	&&	!	list_empty	(	&	conf	->	bitmap_list	)

mddev	->	new_level	!=	5	&&	mddev	->	new_level	!=	4	&&	mddev	->	new_level	!=	6

(	mddev	->	new_level	==	5	&&	!	algorithm_valid_raid5	(	mddev	->	new_layout	)	)	||	(	mddev	->	new_level	==	6	&&	!	algorithm_valid_raid6	(	mddev	->	new_layout	)	)

mddev	->	new_level	==	6	&&	mddev	->	raid_disks	<	4

raid_disk	>=	raid_disks	-	max_degraded

raid_disk	==	0	||	raid_disk	==	raid_disks	-	1

raid_disk	==	raid_disks	-	1

i	<	conf	->	raid_disks	&&	conf	->	previous_raid_disks

~	(	mddev	->	chunk_sectors	-	1	)
~	mddev	->	chunk_sectors	-	1
mddev	->	queue	->	backing_dev_info	.	ra_pages	<	2	*	stripe

mddev	->	delta_disks	==	0	&&	mddev	->	new_layout	==	mddev	->	layout	&&	mddev	->	new_chunk_sectors	==	mddev	->	chunk_sectors

conf	->	mddev	->	queue	->	backing_dev_info	.	ra_pages	<	2	*	stripe

rdev	&&	raid5_remove_disk	(	mddev	,	rdev	)	==	0

mddev	->	array_sectors	&	(	chunksect	-	1	)

++	j	<	pi	->	raid_disks

mirror	<	raid_disks	*	2

mirror	==	raid_disks	*	2

(	unsigned	long	long	)	mbio	->	bi_sector	+	(	mbio	->	bi_size	>>	9	)	-	1
(	unsigned	long	long	)	mbio	->	bi_sector	+	mbio	->	bi_size	>>	9	-	1
choose_first	&&	sectors	>	bad_sectors

conf	->	nr_pending	==	conf	->	nr_queued	+	1

bio	->	bi_sector	+	bio	->	bi_size	/	512	<=	mddev	->	suspend_lo	||	bio	->	bi_sector	>=	mddev	->	suspend_hi

(	bio	->	bi_size	>>	9	)	-	sectors_handled
bio	->	bi_size	>>	9	-	sectors_handled
bitmap	&&	(	atomic_read	(	&	bitmap	->	behind_writes	)	<	mddev	->	bitmap_info	.	max_write_behind	)	&&	!	waitqueue_active	(	&	bitmap	->	behind_wait	)

(	bio	->	bi_size	>>	9	)	-	sectors_handled
bio	->	bi_size	>>	9	-	sectors_handled
do_sync	||	!	bitmap	||	!	plugged

!	success	&&	d	!=	r1_bio	->	read_disk

!	success	&&	d	!=	read_disk

disk	==	-	1

(	mbio	->	bi_size	>>	9	)	-	sectors_handled
mbio	->	bi_size	>>	9	-	sectors_handled
!	go_faster	&&	conf	->	nr_waiting

min_bad	==	0	||	min_bad	>	bad_sectors

read_targets	==	0	&&	min_bad	>	0

min_bad	>	0	&&	min_bad	<	good_sectors

write_targets	==	0	||	read_targets	==	0

i	<	conf	->	raid_disks	*	2	&&	read_targets

mddev	->	chunk_sectors	!=	mddev	->	new_chunk_sectors	||	mddev	->	layout	!=	mddev	->	new_layout	||	mddev	->	level	!=	mddev	->	new_level

mddev	->	level	==	5	&&	mddev	->	raid_disks	==	2

(	lhs	->	virtual	==	rhs	->	virtual	)	&&	(	lhs	->	dev	==	rhs	->	dev	)	&&	(	lhs	->	block	==	rhs	->	block	)

(	index	+	1	)	%	DEFERRED_SET_SIZE
index	+	1	%	DEFERRED_SET_SIZE
!	q	||	!	blk_queue_discard	(	q	)

!	--	pool	->	ref_count

argc	&&	!	r

!	pool_created	&&	pf	.	discard_enabled	!=	pool	->	pf	.	discard_enabled

!	pool	->	pf	.	zero_new_blocks	+	!	pool	->	pf	.	discard_enabled	+	!	pt	->	pf	.	discard_passdown

argc	!=	2	&&	argc	!=	3

m	->	queue_if_no_path	!=	m	->	saved_queue_if_no_path	&&	dm_noflush_suspending	(	m	->	ti	)

(	pgpath	&&	m	->	queue_io	)	||	(	!	pgpath	&&	m	->	queue_if_no_path	)

(	m	->	pg_init_required	&&	!	m	->	pg_init_in_progress	)	||	!	m	->	queue_io

!	m	->	queue_if_no_path	&&	m	->	queue_size

(	pgpath	&&	!	m	->	queue_io	)	||	(	!	pgpath	&&	!	m	->	queue_if_no_path	)

m	->	pg_init_required	&&	!	m	->	pg_init_in_progress	&&	pgpath

i	<=	hw_argc	-	2

i	<=	hw_argc	-	2

i	++	,	p	+=	j	+	1

argc	&&	!	r

(	!	m	->	nr_priority_groups	&&	next_pg_num	)	||	(	m	->	nr_priority_groups	&&	!	next_pg_num	)

!	--	next_pg_num

!	m	->	nr_valid_paths	++	&&	m	->	queue_size

m	->	hw_handler_name	&&	(	m	->	current_pg	==	pgpath	->	pg	)

!	error	&&	!	clone	->	errors

m	->	queue_if_no_path	+	(	m	->	pg_init_retries	>	0	)	*	2	+	(	m	->	pg_init_delay_msecs	!=	DM_PG_INIT_DELAY_DEFAULT	)	*	2
m	->	queue_if_no_path	+	m	->	pg_init_retries	>	0	*	2	+	m	->	pg_init_delay_msecs	!=	DM_PG_INIT_DELAY_DEFAULT	*	2
!	m	->	current_pgpath	&&	m	->	next_pg

ps	->	callbacks	+	ps	->	callback_count	++

!	atomic_dec_and_test	(	&	ps	->	pending_count	)	&&	(	ps	->	current_committed	!=	ps	->	exceptions_per_area	)

(	__find_snapshots_sharing_cow	(	snap	,	&	snap_src	,	&	snap_dest	,	&	snap_merge	)	==	2	)	||	snap_dest

!	snap_src	->	store	->	type	->	prepare_merge	||	!	snap_src	->	store	->	type	->	commit_merge

snap_src	&&	snap_dest	&&	(	s	==	snap_src	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	h	+	(	unsigned	int	)	*	str	++	)	*	hash_mult
h	+	(	unsigned	int	)	*	str	++	*	hash_mult
(	char	*	)	info	->	vers	+	sizeof	(	tt	->	version	)	+	strlen	(	tt	->	name	)	+	1	>	info	->	end

(	(	void	*	)	++	info	->	vers	)	+	strlen	(	tt	->	name	)	+	1

!	hc	||	hc	->	md	!=	md

~	(	DM_SUSPEND_FLAG	|	DM_READONLY_FLAG	|	DM_ACTIVE_PRESENT_FLAG	)
~	DM_SUSPEND_FLAG	|	DM_READONLY_FLAG	|	DM_ACTIVE_PRESENT_FLAG
!	(	param	->	flags	&	DM_QUERY_INACTIVE_TABLE_FLAG	)
param	->	flags	&	!	param	->	flags	&	DM_QUERY_INACTIVE_TABLE_FLAG
!	*	str	++

immutable_target_type	&&	(	immutable_target_type	!=	dm_table_get_immutable_target_type	(	t	)	)

!	hc	||	hc	->	md	!=	md

rs	->	ti	->	len	/	(	1	<<	21	)
rs	->	ti	->	len	/	1	<<	21
min_region_size	>	(	1	<<	13	)

(	i	+	1	)	>=	num_raid_params

(	(	rs	->	raid_type	->	level	!=	1	)	&&	(	rebuild_cnt	>	rs	->	raid_type	->	parity_devs	)	)	||	(	(	rs	->	raid_type	->	level	==	1	)	&&	(	rebuild_cnt	>	(	rs	->	md	.	raid_disks	-	1	)	)	)

(	le32_to_cpu	(	sb	->	level	)	!=	mddev	->	level	)	||	(	le32_to_cpu	(	sb	->	layout	)	!=	mddev	->	layout	)	||	(	le32_to_cpu	(	sb	->	stripe_sectors	)	!=	mddev	->	chunk_sectors	)

(	rs	->	raid_type	->	level	!=	1	)	&&	(	le32_to_cpu	(	sb	->	num_devices	)	!=	mddev	->	raid_disks	)

!	(	rs	->	print_flags	&	(	DMPF_SYNC	|	DMPF_NOSYNC	)	)
!	(	rs	->	print_flags	&	DMPF_SYNC	|	DMPF_NOSYNC	)
!	test_bit	(	FirstUse	,	&	r	->	flags	)	&&	(	r	->	raid_disk	>=	0	)

num_raid_params	+	1	>	argc

argc	!=	(	num_raid_devs	*	2	)

hweight32	(	rs	->	print_flags	&	~	DMPF_REBUILD	)	*	2

rs	->	print_flags	&	(	DMPF_SYNC	|	DMPF_NOSYNC	)
rs	->	print_flags	&	DMPF_SYNC	|	DMPF_NOSYNC
++	j	<	nalloc

r10_bio	->	read_slot	<	0	&&	!	BIO_SPECIAL	(	*	bio	)

max	<=	biovec	->	bv_len	&&	bio_sectors	==	0

!	do_balance	&&	sectors	>	bad_sectors

conf	->	near_copies	>	1	&&	!	atomic_read	(	&	rdev	->	nr_pending	)

i	<	conf	->	raid_disks	&&	ret	==	0

conf	->	nr_pending	==	conf	->	nr_queued	+	1

(	bio	->	bi_sector	&	conf	->	chunk_mask	)	+	(	bio	->	bi_size	>>	9	)	>	chunk_sects	&&	conf	->	near_copies	<	conf	->	raid_disks
bio	->	bi_sector	&	conf	->	chunk_mask	+	bio	->	bi_size	>>	9	>	chunk_sects	&&	conf	->	near_copies	<	conf	->	raid_disks
bio	->	bi_vcnt	!=	1	||	bio	->	bi_idx	!=	0

bio	->	bi_sector	&	(	chunk_sects	-	1	)

(	bio	->	bi_size	>>	9	)	-	sectors_handled
bio	->	bi_size	>>	9	-	sectors_handled
!	rdev	&&	!	rrdev

(	bio	->	bi_size	>>	9	)	-	sectors_handled
bio	->	bi_size	>>	9	-	sectors_handled
do_sync	||	!	mddev	->	bitmap	||	!	plugged

(	first	+	1	)	%	conf	->	raid_disks
first	+	1	%	conf	->	raid_disks
!	tbio	||	!	tbio	->	bi_end_io

rdev	->	last_read_error	.	tv_sec	==	0	&&	rdev	->	last_read_error	.	tv_nsec	==	0

hours_since_last	>=	8	*	sizeof	(	read_errors	)

!	success	&&	sl	!=	r10_bio	->	read_slot

(	mbio	->	bi_size	>>	9	)	-	sectors_handled
mbio	->	bi_size	>>	9	-	sectors_handled
!	go_faster	&&	conf	->	nr_waiting

bio2	&&	bio2	!=	bio

(	mddev	->	new_layout	>>	8	)	&	255

mddev	->	new_layout	&	(	1	<<	16	)

(	nc	*	fc	)	<	2	||	(	nc	*	fc	)	>	mddev	->	raid_disks	||	(	mddev	->	new_layout	>>	17	)

!	enough	(	conf	,	-	1	)

!	disk	->	rdev	&&	disk	->	replacement

mddev	->	queue	->	backing_dev_info	.	ra_pages	<	2	*	stripe

(	1	<<	8	)	+	2
1	<<	8	+	2
idx	!=	bio	->	bi_idx	||	clone	->	bi_size	<	bio	->	bi_size

ci	.	sector_count	&&	!	error

!	map	||	test_bit	(	DMF_BLOCK_IO_FOR_SUSPEND	,	&	md	->	flags	)

!	p	||	md	->	io_pool	||	md	->	tio_pool	||	md	->	bs

dm_table_request_based	(	t	)	&&	!	blk_queue_stopped	(	q	)

md	&&	(	md	==	MINOR_ALLOCED	||	(	MINOR	(	disk_devt	(	dm_disk	(	md	)	)	)	!=	minor	)	||	dm_deleting_md	(	md	)	||	test_bit	(	DMF_FREEING	,	&	md	->	flags	)	)
md	&&	md	==	MINOR_ALLOCED	||	(	MINOR	(	disk_devt	(	dm_disk	(	md	)	)	)	!=	minor	)	||	dm_deleting_md	(	md	)	||	test_bit	(	DMF_FREEING	,	&	md	->	flags	)
!	noflush	&&	do_lockfs

!	map	||	!	dm_table_get_size	(	map	)

!	ret	&&	++	i	<	sc	->	stripes

(	sc	->	chunk_mask	+	1	)	<<	9

!	q	||	!	q	->	make_request_fn

ti	->	begin	==	(	prev	->	begin	+	prev	->	len	)

(	*	argc	+	1	)	>	array_size

!	tgt	->	num_discard_requests	&&	tgt	->	discards_supported

blk_integrity_is_initialized	(	template_disk	)	&&	blk_integrity_compare	(	dm_disk	(	md	)	,	template_disk	)	<	0

q	&&	!	blk_queue_add_random	(	q	)

(	hi	+	lo	)	/	2
hi	+	lo	/	2
maxsectors	>	(	maxbytes	>>	9	)

i	<	mddev	->	raid_disks	&&	!	ret

j	<	0	||	j	>=	raid_disks	||	disk	->	rdev

bio	->	bi_sector	+	(	bio	->	bi_size	>>	9	)	>	tmp_dev	->	end_sector
bio	->	bi_sector	+	bio	->	bi_size	>>	9	>	tmp_dev	->	end_sector
(	ev	<<	32	)	|	sb	->	events_lo

offset	==	0	&&	size	==	bio	->	bi_size

sofar	+	bvec	->	bv_len	>	size

!	mddev	->	raid_disks	&&	list_empty	(	&	mddev	->	disks	)	&&	mddev	->	ctime	==	0	&&	!	mddev	->	hold_active

sb1	->	set_uuid0	==	sb2	->	set_uuid0	&&	sb1	->	set_uuid1	==	sb2	->	set_uuid1	&&	sb1	->	set_uuid2	==	sb2	->	set_uuid2	&&	sb1	->	set_uuid3	==	sb2	->	set_uuid3

!	tmp1	||	!	tmp2

memcmp	(	tmp1	,	tmp2	,	MD_SB_GENERIC_CONSTANT_WORDS	*	4	)	==	0

!	mddev	->	bitmap_info	.	file	&&	!	mddev	->	bitmap_info	.	offset

sb	->	major_version	!=	0	||	sb	->	minor_version	<	90	||	sb	->	minor_version	>	91

rdev	->	sectors	>=	(	2ULL	<<	32	)	&&	sb	->	level	>=	1

(	2ULL	<<	32	)	-	2
2ULL	<<	32	-	2
sb	->	state	&	(	1	<<	MD_SB_CLEAN	)

sb	->	events_hi	==	sb	->	cp_events_hi	&&	sb	->	events_lo	==	sb	->	cp_events_lo

desc	->	state	&	(	1	<<	MD_DISK_FAULTY	)

desc	->	state	&	(	1	<<	MD_DISK_SYNC	)

desc	->	state	&	(	1	<<	MD_DISK_ACTIVE	)

rdev2	->	raid_disk	>=	0	&&	sb	->	minor_version	>=	91

d	->	state	==	0	&&	d	->	number	==	0

256	+	le32_to_cpu	(	sb	->	max_dev	)	*	2

le32_to_cpu	(	sb	->	max_dev	)	*	2	+	256

(	rdev	->	sb_size	|	bmask	)	+	1
rdev	->	sb_size	|	bmask	+	1
(	le32_to_cpu	(	sb	->	feature_map	)	&	MD_FEATURE_BAD_BLOCKS	)	&&	rdev	->	badblocks	.	count	==	0

i	<	(	sectors	<<	(	9	-	3	)	)

memcmp	(	sb	->	set_uuid	,	refsb	->	set_uuid	,	16	)	!=	0	||	sb	->	level	!=	refsb	->	level	||	sb	->	layout	!=	refsb	->	layout	||	sb	->	chunksize	!=	refsb	->	chunksize

(	i_size_read	(	rdev	->	bdev	->	bd_inode	)	>>	9	)	-	le64_to_cpu	(	sb	->	data_offset	)
i_size_read	(	rdev	->	bdev	->	bd_inode	)	>>	9	-	le64_to_cpu	(	sb	->	data_offset	)
le64_to_cpu	(	sb	->	ctime	)	&	(	(	1ULL	<<	32	)	-	1	)
le64_to_cpu	(	sb	->	ctime	)	&	(	1ULL	<<	32	-	1	)
le64_to_cpu	(	sb	->	utime	)	&	(	(	1ULL	<<	32	)	-	1	)
le64_to_cpu	(	sb	->	utime	)	&	(	1ULL	<<	32	-	1	)
(	4096	-	256	)	/	2
4096	-	256	/	2
rdev	->	desc_nr	<	0	||	rdev	->	desc_nr	>=	le32_to_cpu	(	sb	->	max_dev	)

rdev2	->	desc_nr	+	1	>	max_dev

max_dev	*	2	+	256

(	rdev	->	sb_size	|	bmask	)	+	1
rdev	->	sb_size	|	bmask	+	1
!	mddev	->	gendisk	||	blk_get_integrity	(	mddev	->	gendisk	)

!	reference	||	!	bdev_get_integrity	(	reference	->	bdev	)

rdev	->	sectors	&&	(	mddev	->	dev_sectors	==	0	||	rdev	->	sectors	<	mddev	->	dev_sectors	)
rdev	->	sectors	&&	mddev	->	dev_sectors	==	0	||	rdev	->	sectors	<	mddev	->	dev_sectors
mddev	->	max_disks	&&	rdev	->	desc_nr	>=	mddev	->	max_disks

desc	->	number	||	desc	->	major	||	desc	->	minor	||	desc	->	raid_disk	||	(	desc	->	state	&&	(	desc	->	state	!=	4	)	)

rdev	->	sb_events	==	mddev	->	events	||	(	nospares	&&	rdev	->	raid_disk	<	0	&&	rdev	->	sb_events	+	1	==	mddev	->	events	)

*	cmd	&&	*	str	&&	*	cmd	==	*	str

rdev	->	raid_disk	==	-	1

rdev	->	mddev	->	pers	&&	slot	==	-	1

my_mddev	->	pers	&&	rdev	->	raid_disk	>=	0

mddev	->	max_disks	&&	(	rdev	->	desc_nr	>=	mddev	->	max_disks	||	i	>	mddev	->	max_disks	)
mddev	->	max_disks	&&	rdev	->	desc_nr	>=	mddev	->	max_disks	||	i	>	mddev	->	max_disks
rdev	->	raid_disk	>=	(	mddev	->	raid_disks	-	min	(	0	,	mddev	->	delta_disks	)	)

result	*	10	+	value

!	pers	||	!	try_module_get	(	pers	->	owner	)

list_empty	(	&	mddev	->	disks	)	&&	mddev	->	raid_disks	==	0	&&	mddev	->	dev_sectors	==	0

!	IS_ERR	(	rdev	)	&&	!	list_empty	(	&	mddev	->	disks	)

*	end	&&	!	isspace	(	*	end	)

!	error	&&	mddev	->	kobj	.	sd

mddev	->	dev_sectors	&&	rdev	->	data_offset	+	mddev	->	dev_sectors	>	rdev	->	sb_start

rdev	->	sb_start	+	rdev	->	sb_size	/	512	>	rdev	->	data_offset

!	pers	||	!	try_module_get	(	pers	->	owner	)

rdev	<	rdev2	&&	rdev	->	bdev	->	bd_contains	==	rdev2	->	bdev	->	bd_contains

err	==	0	&&	mddev	->	pers	->	sync_request

!	mddev	->	in_sync	||	mddev	->	flags

atomic_read	(	&	mddev	->	openers	)	>	!	!	bdev

atomic_read	(	&	mddev	->	openers	)	>	!	!	bdev	||	mddev	->	sysfs_active

!	mddev	||	!	mddev	->	gendisk

mddev	->	raid_disks	||	mddev	->	major_version	||	!	list_empty	(	&	mddev	->	disks	)

info	.	size	!=	mddev	->	dev_sectors	/	2

!	mddev	->	bitmap	||	!	mddev	->	bitmap	->	file

info	->	state	&	(	1	<<	MD_DISK_SYNC	)	&&	info	->	raid_disk	<	mddev	->	raid_disks

!	err	&&	!	mddev	->	pers	->	hot_remove_disk

!	(	info	->	state	&	(	1	<<	MD_DISK_FAULTY	)	)
!	info	->	state	&	(	1	<<	MD_DISK_FAULTY	)
fd	<	0	||	err

info	->	state	&	(	1	<<	MD_SB_CLEAN	)

info	->	size	>=	0	&&	mddev	->	dev_sectors	/	2	!=	info	->	size

(	state	^	info	->	state	)	&	(	1	<<	MD_SB_BITMAP_PRESENT	)
state	^	info	->	state	&	(	1	<<	MD_SB_BITMAP_PRESENT	)
(	state	^	info	->	state	)	&	(	1	<<	MD_SB_BITMAP_PRESENT	)
state	^	info	->	state	&	(	1	<<	MD_SB_BITMAP_PRESENT	)
info	->	state	&	(	1	<<	MD_SB_BITMAP_PRESENT	)

!	mddev	->	pers	||	!	mddev	->	pers	->	error_handler

mddev	&&	v	!=	(	void	*	)	1	&&	v	!=	(	void	*	)	2

mddev	->	pers	||	mddev	->	raid_disks	||	!	list_empty	(	&	mddev	->	disks	)

mddev	->	major_version	!=	0	||	mddev	->	minor_version	!=	90

mddev	->	curr_resync	==	1	||	mddev	->	curr_resync	==	2

curr_events	-	rdev	->	last_events	>	64

mddev	->	safemode_delay	&&	mddev	->	safemode	==	0

!	mddev	->	parallel_resync	&&	mddev2	->	curr_resync	&&	match_mddev_units	(	mddev	,	mddev2	)

mddev	<	mddev2	&&	mddev	->	curr_resync	==	2

mddev	>	mddev2	&&	mddev	->	curr_resync	==	1

!	kthread_should_stop	(	)	&&	mddev2	->	curr_resync	>=	mddev	->	curr_resync

(	last_mark	+	1	)	%	SYNC_MARKS
last_mark	+	1	%	SYNC_MARKS
(	currspeed	>	speed_max	(	mddev	)	)	||	!	is_mddev_idle	(	mddev	,	0	)

mddev	->	pers	->	sync_request	&&	!	mddev	->	external

spares	&&	mddev	->	bitmap	&&	!	mddev	->	bitmap	->	file

hi	-	lo	>	1

(	lo	+	hi	)	/	2
lo	+	hi	/	2
hi	-	lo	>	1

(	lo	+	hi	)	/	2
lo	+	hi	/	2
sectors	==	0	&&	hi	<	bb	->	count

hi	-	lo	>	1

(	lo	+	hi	)	/	2
lo	+	hi	/	2
hi	-	lo	>	1

bb	->	changed	==	0	&&	bb	->	unacked_exist

log	->	sync	!=	DEFAULTSYNC	||	log	->	header	.	magic	!=	MIRROR_MAGIC

argc	<	1	||	argc	>	2

argc	<	2	||	argc	>	3

!	lc	->	touched_cleaned	&&	!	lc	->	touched_dirtied

!	(	read_err	||	write_err	)
!	read_err	||	write_err
!	ms	->	in_sync	&&	(	log	->	type	->	get_sync_count	(	log	)	==	ms	->	nr_regions	)

m	--	==	ms	->	mirror

argv	++	,	argc	--

argc	<	nr_mirrors	*	2

(	b	&	(	ENTRIES_PER_WORD	-	1	)	)	<<	1
b	&	(	ENTRIES_PER_WORD	-	1	)	<<	1
(	hi	<<	1	)	|	lo

(	b	&	(	ENTRIES_PER_WORD	-	1	)	)	<<	1
b	&	(	ENTRIES_PER_WORD	-	1	)	<<	1
!	(	begin	&	(	ENTRIES_PER_WORD	-	1	)	)	&&	bitmap_word_used	(	addr	,	begin	)
!	begin	&	(	ENTRIES_PER_WORD	-	1	)	&&	bitmap_word_used	(	addr	,	begin	)
ll	->	block_size	>	(	1	<<	30	)

smm	->	uncommitted	+	smm	->	nr_uncommitted	++

smm	->	recursion_count	==	1	&&	smm	->	nr_uncommitted

smm	->	nr_uncommitted	&&	!	r

!	r	&&	inc

2	*	merge_threshold	(	left	)	+	1

merge_threshold	(	left	)	*	4	+	1

index	<	0	||	index	>=	le32_to_cpu	(	n	->	header	.	nr_entries	)

s	->	top	>=	MAX_SPINE_DEPTH	-	1

s	->	spine	+	++	s	->	top

s	->	spine	+	s	->	top	--

f	->	level	!=	(	info	->	levels	-	1	)

shadow_has_parent	(	s	)	&&	i	>=	0

lock	->	count	>=	0	&&	lock	->	count	<	MAX_HOLDERS	&&	list_empty	(	&	lock	->	waiters	)

lock	->	count	==	0	&&	list_empty	(	&	lock	->	waiters	)

!	dev	->	open_count	++

!	--	dev	->	open_count

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

ret	!=	2	&&	--	retries

t	->	hsize	*	8	+	248

vrefresh_rate	==	60	&&	(	(	hsize	==	1360	&&	vsize	==	765	)	||	(	hsize	==	1368	&&	vsize	==	769	)	)
vrefresh_rate	==	60	&&	(	hsize	==	1360	&&	vsize	==	765	)	||	(	hsize	==	1368	&&	vsize	==	769	)
hsize	==	1366	&&	vsize	==	768	&&	vrefresh_rate	==	60

(	pt	->	hactive_hblank_hi	&	0xf0	)	<<	4	|	pt	->	hactive_lo
pt	->	hactive_hblank_hi	&	0xf0	<<	4	|	pt	->	hactive_lo
(	pt	->	vactive_vblank_hi	&	0xf0	)	<<	4	|	pt	->	vactive_lo
pt	->	vactive_vblank_hi	&	0xf0	<<	4	|	pt	->	vactive_lo
(	pt	->	hactive_hblank_hi	&	0xf	)	<<	8	|	pt	->	hblank_lo
pt	->	hactive_hblank_hi	&	0xf	<<	8	|	pt	->	hblank_lo
(	pt	->	vactive_vblank_hi	&	0xf	)	<<	8	|	pt	->	vblank_lo
pt	->	vactive_vblank_hi	&	0xf	<<	8	|	pt	->	vblank_lo
(	pt	->	hsync_vsync_offset_pulse_width_hi	&	0xc0	)	<<	2	|	pt	->	hsync_offset_lo
pt	->	hsync_vsync_offset_pulse_width_hi	&	0xc0	<<	2	|	pt	->	hsync_offset_lo
(	pt	->	hsync_vsync_offset_pulse_width_hi	&	0x30	)	<<	4	|	pt	->	hsync_pulse_width_lo
pt	->	hsync_vsync_offset_pulse_width_hi	&	0x30	<<	4	|	pt	->	hsync_pulse_width_lo
(	pt	->	hsync_vsync_offset_pulse_width_hi	&	0xc	)	<<	2	|	pt	->	vsync_offset_pulse_width_lo	>>	4
pt	->	hsync_vsync_offset_pulse_width_hi	&	0xc	<<	2	|	pt	->	vsync_offset_pulse_width_lo	>>	4
(	pt	->	hsync_vsync_offset_pulse_width_hi	&	0x3	)	<<	4	|	(	pt	->	vsync_offset_pulse_width_lo	&	0xf	)
pt	->	hsync_vsync_offset_pulse_width_hi	&	0x3	<<	4	|	(	pt	->	vsync_offset_pulse_width_lo	&	0xf	)
!	hsync_pulse_width	||	!	vsync_pulse_width

pt	->	width_mm_lo	|	(	pt	->	width_height_mm_hi	&	0xf0	)	<<	4
pt	->	width_mm_lo	|	pt	->	width_height_mm_hi	&	0xf0	<<	4
pt	->	height_mm_lo	|	(	pt	->	width_height_mm_hi	&	0xf	)	<<	8
pt	->	height_mm_lo	|	pt	->	width_height_mm_hi	&	0xf	<<	8
(	mode	->	htotal	-	mode	->	hdisplay	==	160	)	&&	(	mode	->	hsync_end	-	mode	->	hdisplay	==	80	)	&&	(	mode	->	hsync_end	-	mode	->	hsync_start	==	32	)	&&	(	mode	->	vsync_start	-	mode	->	vdisplay	==	3	)

hsync	<=	hmax	&&	hsync	>=	hmin

vsync	<=	vmax	&&	vsync	>=	vmin

(	i	*	8	)	+	(	7	-	j	)

edid	->	established_timings	.	t1	|	(	edid	->	established_timings	.	t2	<<	8	)	|	(	(	edid	->	established_timings	.	mfg_rsvd	&	0x80	)	<<	9	)
edid	->	established_timings	.	t1	|	(	edid	->	established_timings	.	t2	<<	8	)	|	(	edid	->	established_timings	.	mfg_rsvd	&	0x80	<<	9	)
est_bits	&	(	1	<<	i	)

a	==	255	||	v	==	255

2	*	(	a	-	1	)
2	*	a	-	1
2	*	(	v	-	1	)
2	*	v	-	1
ptr	->	hdisplay	>	hdisplay	||	ptr	->	vdisplay	>	vdisplay

!	file_priv	->	minor	->	master	&&	file_priv	->	minor	->	master	!=	file_priv	->	master

drm_core_has_MTRR	(	dev	)	&&	drm_core_has_AGP	(	dev	)	&&	dev	->	agp	&&	dev	->	agp	->	agp_mtrr	>=	0

i	&&	!	(	i	%	32	)
i	&&	!	i	%	32
!	r_list	||	!	r_list	->	map

sv	->	drm_di_major	!=	-	1

sv	->	drm_dd_major	!=	-	1

sv	->	drm_dd_major	!=	dev	->	driver	->	major	||	sv	->	drm_dd_minor	<	0	||	sv	->	drm_dd_minor	>	dev	->	driver	->	minor

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

!	root	||	!	minor	->	proc_root

!	map	->	handle	||	!	map	->	size

hdisplay	-	(	hdisplay	%	CVT_H_GRANULARITY	)

hdisplay_rnd	+	2	*	hmargin

vdisplay	+	2	*	vmargin

!	(	vdisplay	%	3	)	&&	(	(	vdisplay	*	4	/	3	)	==	hdisplay	)
!	vdisplay	%	3	&&	(	(	vdisplay	*	4	/	3	)	==	hdisplay	)
!	(	vdisplay	%	9	)	&&	(	(	vdisplay	*	16	/	9	)	==	hdisplay	)
!	vdisplay	%	9	&&	(	(	vdisplay	*	16	/	9	)	==	hdisplay	)
!	(	vdisplay	%	10	)	&&	(	(	vdisplay	*	16	/	10	)	==	hdisplay	)
!	vdisplay	%	10	&&	(	(	vdisplay	*	16	/	10	)	==	hdisplay	)
!	(	vdisplay	%	4	)	&&	(	(	vdisplay	*	5	/	4	)	==	hdisplay	)
!	vdisplay	%	4	&&	(	(	vdisplay	*	5	/	4	)	==	hdisplay	)
!	(	vdisplay	%	9	)	&&	(	(	vdisplay	*	15	/	9	)	==	hdisplay	)
!	vdisplay	%	9	&&	(	(	vdisplay	*	15	/	9	)	==	hdisplay	)
(	vdisplay_rnd	+	2	*	vmargin	+	CVT_MIN_V_PORCH	)	*	2	+	interlace
vdisplay_rnd	+	2	*	vmargin	+	CVT_MIN_V_PORCH	*	2	+	interlace
tmp1	<	(	vsync	+	CVT_MIN_V_PORCH	)

vdisplay_rnd	+	2	*	vmargin	+	vsyncandback_porch	+	CVT_MIN_V_PORCH

hblank_percentage	<	20	*	HV_FACTOR

drm_mode	->	hdisplay	*	hblank_percentage	/	(	100	*	HV_FACTOR	-	hblank_percentage	)
drm_mode	->	hdisplay	*	hblank_percentage	/	100	*	HV_FACTOR	-	hblank_percentage
hblank	%	(	2	*	CVT_H_GRANULARITY	)
hblank	%	2	*	CVT_H_GRANULARITY
drm_mode	->	hdisplay	+	hblank	/	2

drm_mode	->	hsync_end	-	(	drm_mode	->	htotal	*	CVT_HSYNC_PERCENTAGE	)	/	100

vdisplay_rnd	+	2	*	vmargin

vbilines	<	(	CVT_RB_VFPORCH	+	vsync	+	CVT_MIN_V_BPORCH	)

vdisplay_rnd	+	2	*	vmargin	+	vbilines

drm_mode	->	hdisplay	+	CVT_RB_H_BLANK	/	2

(	hdisplay	+	GTF_CELL_GRAN	/	2	)	/	GTF_CELL_GRAN
hdisplay	+	GTF_CELL_GRAN	/	2	/	GTF_CELL_GRAN
(	vdisplay_rnd	*	GTF_MARGIN_PERCENTAGE	+	500	)	/	1000
vdisplay_rnd	*	GTF_MARGIN_PERCENTAGE	+	500	/	1000
(	1000000	-	MIN_VSYNC_PLUS_BP	*	vfieldrate_rqd	)	/	500
1000000	-	MIN_VSYNC_PLUS_BP	*	vfieldrate_rqd	/	500
(	vdisplay_rnd	+	2	*	top_margin	+	GTF_MIN_V_PORCH	)	*	2	+	interlace
vdisplay_rnd	+	2	*	top_margin	+	GTF_MIN_V_PORCH	*	2	+	interlace
(	vsync_plus_bp	+	500	)	/	1000
vsync_plus_bp	+	500	/	1000
(	hdisplay_rnd	*	GTF_MARGIN_PERCENTAGE	+	500	)	/	1000
hdisplay_rnd	*	GTF_MARGIN_PERCENTAGE	+	500	/	1000
total_active_pixels	*	ideal_duty_cycle	/	(	100000	-	ideal_duty_cycle	)
total_active_pixels	*	ideal_duty_cycle	/	100000	-	ideal_duty_cycle
(	hblank	+	GTF_CELL_GRAN	)	/	(	2	*	GTF_CELL_GRAN	)
hblank	+	GTF_CELL_GRAN	/	(	2	*	GTF_CELL_GRAN	)
(	hsync	+	GTF_CELL_GRAN	/	2	)	/	GTF_CELL_GRAN
hsync	+	GTF_CELL_GRAN	/	2	/	GTF_CELL_GRAN
hblank	/	2	-	hsync

mode	->	htotal	>	0	&&	mode	->	vtotal	>	0

(	calc_val	+	vtotal	/	2	)	/	vtotal
calc_val	+	vtotal	/	2	/	vtotal
b	->	hdisplay	*	b	->	vdisplay	-	a	->	hdisplay	*	a	->	vdisplay

!	hole_node	->	hole_follows	||	node	->	allocated

node	->	start	+	node	->	size	>	hole_end

node	->	start	+	node	->	size	<	hole_end

!	hole_node	->	hole_follows	||	node	->	allocated

(	hole_start	+	wasted	)	%	alignment
hole_start	+	wasted	%	alignment
node	->	start	+	node	->	size	>	hole_end

node	->	start	+	node	->	size	>	end

node	->	start	+	node	->	size	<	hole_end

end	-	start	<	size

end	>=	start	+	size	+	wasted

node	->	start	>=	mm	->	scan_hit_start	&&	node	->	start	+	node	->	size	<=	mm	->	scan_hit_start	+	mm	->	scan_hit_size

crtc	<	0	||	crtc	>=	dev	->	num_crtcs

dev	->	driver	->	get_vblank_timestamp	&&	(	max_error	>	0	)

(	seq	-	vblwait	->	request	.	sequence	)	<=	(	1	<<	23	)

(	out_resp	->	count_modes	>=	mode_count	)	&&	mode_count

(	out_resp	->	count_props	>=	props_count	)	&&	props_count

(	out_resp	->	count_encoders	>=	encoders_count	)	&&	encoders_count

config	->	num_plane	&&	(	plane_resp	->	count_planes	>=	config	->	num_plane	)

plane	->	format_count	&&	(	plane_resp	->	count_format_types	>=	plane	->	format_count	)

plane_req	->	src_w	>	fb_width	||	plane_req	->	src_x	>	fb_width	-	plane_req	->	src_w	||	plane_req	->	src_h	>	fb_height	||	plane_req	->	src_y	>	fb_height	-	plane_req	->	src_h

(	(	plane_req	->	src_w	&	0xffff	)	*	15625	)	>>	10
(	plane_req	->	src_w	&	0xffff	*	15625	)	>>	10
(	(	plane_req	->	src_h	&	0xffff	)	*	15625	)	>>	10
(	plane_req	->	src_h	&	0xffff	*	15625	)	>>	10
(	(	plane_req	->	src_x	&	0xffff	)	*	15625	)	>>	10
(	plane_req	->	src_x	&	0xffff	*	15625	)	>>	10
(	(	plane_req	->	src_y	&	0xffff	)	*	15625	)	>>	10
(	plane_req	->	src_y	&	0xffff	*	15625	)	>>	10
crtc_req	->	fb_id	==	-	1

mode	->	hdisplay	>	fb	->	width	||	mode	->	vdisplay	>	fb	->	height	||	crtc_req	->	x	>	fb	->	width	-	mode	->	hdisplay	||	crtc_req	->	y	>	fb	->	height	-	mode	->	vdisplay

crtc_req	->	count_connectors	==	0	&&	mode

crtc_req	->	count_connectors	>	0	&&	(	!	mode	||	!	fb	)
crtc_req	->	count_connectors	>	0	&&	!	mode	||	!	fb
(	config	->	min_width	>	r	->	width	)	||	(	r	->	width	>	config	->	max_width	)

(	config	->	min_height	>	r	->	height	)	||	(	r	->	height	>	config	->	max_height	)

(	out_resp	->	count_values	>=	value_count	)	&&	value_count

(	out_resp	->	count_enum_blobs	>=	enum_count	)	&&	enum_count

(	out_resp	->	count_enum_blobs	>=	blob_count	)	&&	blob_count

crtc	->	mode	.	hdisplay	>	fb	->	width	||	crtc	->	mode	.	vdisplay	>	fb	->	height	||	crtc	->	x	>	fb	->	width	-	crtc	->	mode	.	hdisplay	||	crtc	->	y	>	fb	->	height	-	crtc	->	mode	.	vdisplay

--	item	->	refcount	==	0

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

var	->	bits_per_pixel	>	fb	->	bits_per_pixel	||	var	->	xres	>	fb	->	width	||	var	->	yres	>	fb	->	height	||	var	->	xres_virtual	>	fb	->	width	||	var	->	yres_virtual	>	fb	->	height

(	encoder	->	possible_crtcs	&	(	1	<<	c	)	)	==	0
encoder	->	possible_crtcs	&	(	1	<<	c	)	==	0
map	->	size	<	vma	->	vm_end	-	vma	->	vm_start

_DRM_LOCK_IS_HELD	(	old	)	&&	_DRM_LOCKING_CONTEXT	(	old	)	!=	context

!	s	->	lock	||	!	_DRM_LOCK_IS_HELD	(	s	->	lock	->	lock	)	||	_DRM_LOCKING_CONTEXT	(	s	->	lock	->	lock	)	!=	s	->	context

--	lock_data	->	kernel_waiters	==	0

file_priv	->	lock_count	&&	master	->	lock	.	hw_lock	&&	_DRM_LOCK_IS_HELD	(	master	->	lock	.	hw_lock	->	lock	)	&&	master	->	lock	.	file_priv	==	file_priv

(	1	<<	bits	)	-	1
1	<<	bits	-	1
(	unshifted_key	<<	shift	)	+	add
unshifted_key	<<	shift	+	add
(	unshifted_key	+	1	)	&	mask

ret	&&	(	unshifted_key	!=	first	)

ctx	->	handle	==	-	1

id	==	-	1

map	->	offset	<	dev	->	agp	->	base	||	map	->	offset	>	dev	->	agp	->	base	+	dev	->	agp	->	agp_info	.	aper_size	*	1024	*	1024	-	1

drm_core_has_MTRR	(	dev	)	&&	map	->	mtrr	>=	0

count	<	0	||	count	>	4096

dma	->	page_count	+	(	count	<<	page_order	)
dma	->	page_count	+	count	<<	page_order
i	<	(	1	<<	page_order	)

offset	+	size	<=	total	&&	entry	->	buf_count	<	count

count	<	0	||	count	>	4096

count	<	0	||	count	>	4096

idx	<	0	||	idx	>=	dma	->	buf_count

virtual	>	-	1024UL

size	&	(	size	-	1	)

set	->	mode	&&	!	drm_mode_equal	(	set	->	mode	,	&	set	->	crtc	->	mode	)

(	pbox	->	x2	-	x	)	*	cpp
pbox	->	x2	-	x	*	cpp
y	*	pitch	+	x	*	cpp

(	height	<<	16	)	|	width

(	height	<<	16	)	|	width

(	height	<<	16	)	|	width

pbox	->	x1	*	cpp	+	pbox	->	y1	*	pitch

pitch	|	(	0xCC	<<	16	)

(	h	<<	16	)	|	(	w	*	cpp	)

used	>	4	*	1024

++	i	<	nbox

used	>	4	*	1024

d	->	request_count	<	0	||	d	->	request_count	>	dma	->	buf_count

(	pdev	->	device	==	0x0525	)	&&	pdev	->	bus	->	self	&&	(	pdev	->	bus	->	self	->	vendor	==	0x3388	)	&&	(	pdev	->	bus	->	self	->	device	==	0x0021	)

nv_rd32	(	dev	,	0x122c	+	0x10	*	k	+	0x4	*	j	)	>>	(	4	*	(	i	^	1	)	)
nv_rd32	(	dev	,	0x122c	+	0x10	*	k	+	0x4	*	j	)	>>	(	4	*	i	^	1	)
(	l	>>	(	8	*	i	)	&	0xff	)	+	calc_bias	(	dev	,	k	,	i	,	j	)
l	>>	(	8	*	i	)	&	0xff	+	calc_bias	(	dev	,	k	,	i	,	j	)
(	0x80	|	clamp	(	m	,	0	,	0x1f	)	)	<<	(	8	*	j	)
0x80	|	clamp	(	m	,	0	,	0x1f	)	<<	(	8	*	j	)
dev_priv	->	chipset	==	0x30	||	dev_priv	->	chipset	==	0x31	||	dev_priv	->	chipset	==	0x35

0x10037c	+	0xc	*	i	+	0x4	*	j

0x1003ac	+	0x8	*	i	+	0x4	*	j

(	(	y	&	0xFFFF	)	<<	16	)	|	(	x	&	0xFFFF	)
(	y	&	0xFFFF	<<	16	)	|	(	x	&	0xFFFF	)
--	vm	->	refcount	==	0

chan	->	fence	.	sequence	==	chan	->	fence	.	sequence_ack	-	1

chan	->	fence	.	sequence	==	chan	->	fence	.	sequence_ack	-	1

!	chan	||	chan	==	wchan	||	nouveau_fence_signalled	(	fence	)

dev_priv	->	chipset	<	0x90	||	dev_priv	->	chipset	==	0x92	||	dev_priv	->	chipset	==	0xa0

dev_priv	->	chipset	<	0x90	||	dev_priv	->	chipset	==	0x92	||	dev_priv	->	chipset	==	0xa0

0x610300	+	(	ch	*	0x08	)

0x610300	+	(	ch	*	0x08	)

nv_rd32	(	dev	,	0x006194e8	)	&	~	1

(	fb	->	height	<<	16	)	|	fb	->	width

nv_rd32	(	dev	,	0x619494	)	&	~	8

dcb	->	type	==	type	&&	(	dcb	->	or	&	(	1	<<	or	)	)

dcb	->	type	==	type	&&	(	dcb	->	or	&	(	1	<<	or	)	)

!	(	dcb	->	dpconf	.	sor	.	link	&	1	)
!	dcb	->	dpconf	.	sor	.	link	&	1
!	(	dcb	->	dpconf	.	sor	.	link	&	1	)
!	dcb	->	dpconf	.	sor	.	link	&	1
0x00e4e4	+	(	ch	*	0x50	)

!	dp_link_train_cr	(	dev	,	&	dp	)	&&	!	dp_link_train_eq	(	dev	,	&	dp	)

0x80000000	|	priv	->	bar1	->	ramin	->	vinst	>>	12

0xc0000000	|	priv	->	bar3	->	ramin	->	vinst	>>	12

!	nv_connector	||	!	nv_connector	->	native_mode

i	<	64	*	64

!	nv_crtc	->	fb	.	blanked	&&	dev_priv	->	chipset	!=	0x50

(	drm_fb	->	height	<<	16	)	|	drm_fb	->	width

(	y	<<	16	)	|	x

(	umode	->	vdisplay	<<	16	)	|	umode	->	hdisplay

0x400860	+	(	i	*	4	)

0x4008a0	+	(	i	*	4	)

dev_priv	->	chipset	==	0x4c	||	(	dev_priv	->	chipset	&	0xf0	)	==	0x60
dev_priv	->	chipset	==	0x4c	||	dev_priv	->	chipset	&	0xf0	==	0x60
dev_priv	->	chipset	==	0x46	||	dev_priv	->	chipset	==	0x47	||	dev_priv	->	chipset	==	0x49	||	dev_priv	->	chipset	==	0x4b

0x401880	+	(	i	*	4	)

0x4019c0	+	(	i	*	4	)

0x401a44	+	(	i	*	4	)

dev_priv	->	chipset	!=	0x44	&&	dev_priv	->	chipset	!=	0x4a	&&	dev_priv	->	chipset	!=	0x4e

0x401c40	+	(	i	*	4	)

0x401c80	+	(	i	*	4	)

0x401d00	+	(	i	*	4	)

0x401d40	+	(	i	*	4	)

0x401d80	+	(	i	*	4	)

0x401e00	+	(	i	*	4	)

0x401e90	+	(	i	*	4	)

0x401ea0	+	(	i	*	4	)

0x401ec0	+	(	i	*	4	)

0x401ee0	+	(	i	*	4	)

0x402c40	+	(	i	*	4	)

0x403420	+	(	i	*	4	)

dev_priv	->	chipset	==	0x41	||	dev_priv	->	chipset	==	0x42

vs_len	*	vs_nr	+	0x300	/	4

0x0300	/	4	+	(	vs_nr	*	vs_len	)

i	<	vs_nr_b0	*	6

(	offset	+	b0_offset	+	i	)	*	4
offset	+	b0_offset	+	i	*	4
i	<	vs_nr_b1	*	4

(	offset	+	b1_offset	+	i	)	*	4
offset	+	b1_offset	+	i	*	4
(	(	chan	->	ramht	->	bits	-	9	)	<<	27	)	|	(	4	<<	24	)

(	ptr	*	8	)	+	0

(	ptr	*	8	)	+	4

chid	<	1	||	chid	>=	dev_priv	->	engine	.	fifo	.	channels	-	1

(	get	+	1	)	&	0x1ff

clk	<	7	&&	!	info	->	ssel

0x1371d0	+	(	clk	*	0x04	)

0x137160	+	(	clk	*	0x04	)

0x137250	+	(	clk	*	0x04	)

(	nv_rd32	(	dev	,	0x003204	)	&	0x1f	)	==	chan	->	id
nv_rd32	(	dev	,	0x003204	)	&	0x1f	==	chan	->	id
0x00b008	+	(	i	*	0x10	)

0x00b004	+	(	i	*	0x10	)

0x00b000	+	(	i	*	0x10	)

dev_priv	->	chipset	==	0x42	||	dev_priv	->	chipset	==	0x43

nv17_dac_sample_load	(	encoder	)	>>	28	&	0xe

output_mode	->	hdisplay	<=	720	||	output_mode	->	hdisplay	>=	1920

(	mode	->	hdisplay	+	(	mode	->	htotal	-	mode	->	hdisplay	)	*	9	/	10	)	&	~	7
(	mode	->	hdisplay	+	mode	->	htotal	-	mode	->	hdisplay	*	9	/	10	)	&	~	7
chid	<	0	||	chid	>=	dev_priv	->	engine	.	fifo	.	channels

dev_priv	->	chipset	==	0x49	||	dev_priv	->	chipset	==	0x4b

dev_priv	->	chipset	!=	0x40	&&	dev_priv	->	chipset	!=	0x45

(	4096	/	4	)	-	2

(	nv_rd32	(	dev	,	0x00e824	+	(	id	*	0x28	)	)	>>	16	)	&	7

dev_priv	->	chipset	==	0xaa	||	dev_priv	->	chipset	==	0xac

0x1002c0	+	(	(	mr	-	0	)	*	4	)
0x1002c0	+	(	mr	-	0	*	4	)
0x1002e0	+	(	(	mr	-	2	)	*	4	)
0x1002e0	+	(	mr	-	2	*	4	)
0x80000000	|	(	P	<<	22	)	|	(	P	<<	16	)

(	N	<<	8	)	|	M

(	N	<<	8	)	|	M

P1	--	&&	perflvl	->	shader	==	(	perflvl	->	core	<<	1	)

(	N	<<	8	)	|	M

0x1400	+	(	i	*	4	)

0x001400	+	(	i	*	4	)

nv_rd32	(	dev	,	ctrl	)	&	(	1	<<	line	)

0x80000100	|	(	log2P	<<	16	)

(	N1	<<	8	)	|	M1

0xc0000000	|	(	log2P	<<	16	)

(	N2	<<	24	)	|	(	M2	<<	16	)	|	(	N1	<<	8	)	|	M1

perflvl	->	shader	&&	perflvl	->	shader	!=	perflvl	->	core

0xc0000000	|	(	log2P	<<	16	)	|	(	N1	<<	8	)	|	M1

0x80000000	|	(	log2P	<<	16	)

(	N1	<<	8	)	|	M1

(	N2	<<	24	)	|	(	M2	<<	16	)	|	(	N1	<<	8	)	|	M1

0x0c03c4	+	(	i	*	0x2000	)

0x600808	+	(	i	*	0x2000	)

0x600808	+	(	i	*	0x2000	)

0x0c03c4	+	(	i	*	0x2000	)

0x600808	+	(	i	*	0x2000	)

0x0c03c4	+	(	i	*	0x2000	)

!	nv_gf4_disp_arch	(	dev	)	||	!	i2c	||	get_tmds_slave	(	encoder	)

class	==	0x56	||	class	==	0x96	||	class	==	0x99

nv_rd32	(	dev	,	0x004006b0	)	|	0x8	<<	24

dev_priv	->	chipset	<	0x17	||	dev_priv	->	chipset	==	0x1a

(	comp	<<	7	)	|	type

!	!	(	nv_rd32	(	dev	,	0x100200	)	&	0x4	)
!	!	nv_rd32	(	dev	,	0x100200	)	&	0x4
(	dev_priv	->	vram_size	&	0xff	)	<<	32
dev_priv	->	vram_size	&	0xff	<<	32
dev_priv	->	chipset	==	0xaa	||	dev_priv	->	chipset	==	0xac	||	dev_priv	->	chipset	==	0xaf

mthd	->	score	!=	3	&&	(	++	mthd	)	->	shadow

NVReadVgaSeq	(	dev	,	0	,	1	)	&	~	0x20

bios	->	legacy	.	mem_init_tbl_ptr	+	2	*	i

NVReadVgaSeq	(	dev	,	0	,	1	)	&	~	0x20

dev_priv	->	chipset	>=	0x40	||	dev_priv	->	chipset	==	0x1a	||	dev_priv	->	chipset	==	0x1f

dev_priv	->	chipset	>=	0x20	&&	dev_priv	->	chipset	!=	0x34

(	time	+	900	)	/	1000
time	+	900	/	1000
2	+	bios	->	ram_restrict_group_count	*	4

lth	.	lvds_ver	==	0x30	||	lth	.	lvds_ver	==	0x40

pxclk	&&	(	chip_version	<	0x25	||	chip_version	>	0x28	)
pxclk	&&	chip_version	<	0x25	||	chip_version	>	0x28
pclk	<	-	2	||	pclk	>	0

pclk	==	-	1

pclk	==	-	2

cv	==	0x30	||	cv	==	0x31	||	cv	==	0x35	||	cv	==	0x36	||	cv	>=	0x40

cv	==	0x30	||	cv	==	0x35

cv	==	0x51	&&	!	pll_lim	->	refclk

cv	<	0x17	||	cv	==	0x1a	||	cv	==	0x20

1	<<	22	|	1	<<	6

i	<=	(	n	-	len	)

(	1	<<	(	ffs	(	entry	->	or	)	-	1	)	)	*	3	==	entry	->	or
1	<<	(	ffs	(	entry	->	or	)	-	1	)	*	3	==	entry	->	or
jent	->	i2c_index	==	ient	->	i2c_index	&&	jent	->	type	==	ient	->	type	&&	jent	->	location	==	ient	->	location	&&	jent	->	or	==	ient	->	or

(	NVReadVgaCrtc	(	dev	,	0	,	0x07	)	&	0x01	)	<<	8
NVReadVgaCrtc	(	dev	,	0	,	0x07	)	&	0x01	<<	8
(	NVReadVgaCrtc	(	dev	,	0	,	0x07	)	&	0x20	)	<<	4
NVReadVgaCrtc	(	dev	,	0	,	0x07	)	&	0x20	<<	4
(	NVReadVgaCrtc	(	dev	,	0	,	0x25	)	&	0x01	)	<<	10
NVReadVgaCrtc	(	dev	,	0	,	0x25	)	&	0x01	<<	10
(	NVReadVgaCrtc	(	dev	,	0	,	0x41	)	&	0x01	)	<<	11
NVReadVgaCrtc	(	dev	,	0	,	0x41	)	&	0x01	<<	11
bios	->	is_mobile	||	bios	->	major_version	>=	5

chid	<	0	||	chid	>=	dev_priv	->	engine	.	fifo	.	channels

0x002510	+	(	i	*	4	)

(	nv_rd32	(	dev	,	0x003204	)	&	0x0000001f	)	==	chan	->	id
nv_rd32	(	dev	,	0x003204	)	&	0x0000001f	==	chan	->	id
!	(	j	&	1	)
!	j	&	1
(	nvbe	->	offset	>>	NV_CTXDMA_PAGE_SHIFT	)	+	2
nvbe	->	offset	>>	NV_CTXDMA_PAGE_SHIFT	+	2
(	nvbe	->	offset	>>	NV_CTXDMA_PAGE_SHIFT	)	+	2
nvbe	->	offset	>>	NV_CTXDMA_PAGE_SHIFT	+	2
(	ttm	->	num_pages	-	1	)	<<	12

0	&&	pci_is_pcie	(	dev	->	pdev	)	&&	dev_priv	->	chipset	>	0x40	&&	dev_priv	->	chipset	!=	0x45

0x408900	+	(	i	<<	12	)
0x408900	+	i	<<	12
0x408e08	+	(	i	<<	12	)
0x408e08	+	i	<<	12
0x408314	+	(	i	<<	12	)
0x408314	+	i	<<	12
0x408600	+	(	i	<<	11	)
0x408600	+	i	<<	11
0x408708	+	(	i	<<	11	)
0x408708	+	i	<<	11
0x40831c	+	(	i	<<	11	)
0x40831c	+	i	<<	11
dev_priv	->	chipset	==	0xa0	||	dev_priv	->	chipset	==	0xaa	||	dev_priv	->	chipset	==	0xac

0x402c20	+	(	i	*	8	)

0x402c24	+	(	i	*	8	)

0x402c28	+	(	i	*	8	)

0x402c2c	+	(	i	*	8	)

i	<	hdr	+	24

!	mps	&&	display

!	tps	&&	display

!	chan	||	!	chan	->	ramin

nv_rd32	(	dev	,	0x400824	)	&	(	1	<<	31	)

nv_rd32	(	dev	,	0x400824	)	&	~	(	1	<<	31	)
nv_rd32	(	dev	,	0x400824	)	&	~	1	<<	31
dev_priv	->	chipset	==	0x50	||	dev_priv	->	chipset	==	0xac

(	arg	>>	i	*	8	)	&	0xFF

!	nouveau_dsm_priv	.	dsm_detected	&&	nouveau_dsm_priv	.	optimus_detected

!	nouveau_dsm_priv	.	dsm_detected	&&	nouveau_dsm_priv	.	optimus_detected

(	pushbuf	->	bo	.	mem	.	size	-	ib_size	)	>>	2

(	ib_size	/	8	)	-	1

(	pushbuf	->	bo	.	mem	.	size	-	ib_size	)	>>	2

(	pushbuf	->	bo	.	mem	.	size	>>	2	)	-	2
pushbuf	->	bo	.	mem	.	size	>>	2	-	2
(	++	*	timeout	&	0xff	)	==	0
++	*	timeout	&	0xff	==	0
(	chan	->	dma	.	ib_put	*	2	)	+	chan	->	dma	.	ib_base

(	chan	->	dma	.	ib_put	+	1	)	&	chan	->	dma	.	ib_max

!	client	->	driver	||	client	->	driver	->	detect	(	client	,	info	)

0x616500	+	(	nv_crtc	->	index	*	0x800	)

0x61c500	+	(	nv_encoder	->	or	*	0x800	)

!	mode	||	!	nv_connector	||	!	nv_connector	->	edid	||	!	drm_detect_hdmi_monitor	(	nv_connector	->	edid	)

!	(	nv_rd32	(	dev	,	0x000200	)	&	0x00008000	)
!	nv_rd32	(	dev	,	0x000200	)	&	0x00008000
a	->	fanspeed	&&	b	->	fanspeed	&&	b	->	fanspeed	>	a	->	fanspeed

perflvl	->	volt_min	&&	b	->	volt_min	>	a	->	volt_min

perflvl	->	volt_min	&&	perflvl	->	volt_min	!=	perflvl	->	volt_max

!	pm	->	cur	||	pm	->	cur	==	&	pm	->	boot

0x610700	+	(	id	*	0x10	)

0x610700	+	(	id	*	0x10	)

0x640000	+	(	id	*	0x1000	)

!	nv_wait	(	dev	,	0x640004	+	(	id	*	0x1000	)	,	~	0	,	0x00000000	)

0x610494	+	(	ch	*	0x0010	)

0x610498	+	(	ch	*	0x0010	)

0x61049c	+	(	ch	*	0x0010	)

0x610490	+	(	ch	*	0x0010	)

0x640000	+	(	ch	*	0x1000	)

!	nv_wait	(	dev	,	0x610490	+	(	ch	*	0x0010	)	,	0x80000000	,	0x00000000	)

0x610490	+	(	ch	*	0x0010	)

!	(	nv_rd32	(	dev	,	0x610490	+	(	ch	*	0x0010	)	)	&	0x00000010	)
!	nv_rd32	(	dev	,	0x610490	+	(	ch	*	0x0010	)	)	&	0x00000010
0x610490	+	(	ch	*	0x0010	)

0x610490	+	(	ch	*	0x0010	)

0x610490	+	(	ch	*	0x0010	)

0x610490	+	(	ch	*	0x0010	)

!	nv_wait	(	dev	,	0x610490	+	(	ch	*	0x0010	)	,	0x00010000	,	0x00010000	)

0x610490	+	(	ch	*	0x0010	)

!	(	nv_rd32	(	dev	,	0x610490	+	(	ch	*	0x0010	)	)	&	0x00000001	)
!	nv_rd32	(	dev	,	0x610490	+	(	ch	*	0x0010	)	)	&	0x00000001
0x610490	+	(	ch	*	0x0010	)

0x610490	+	(	ch	*	0x0010	)

0x610490	+	(	ch	*	0x0010	)

i	<	64	*	64

0x61a004	+	(	or	*	0x0800	)

0x61a004	+	(	or	*	0x0800	)

0x61a00c	+	(	or	*	0x800	)

0x61a00c	+	(	or	*	0x800	)

0x61a00c	+	(	or	*	0x800	)

(	i	<<	8	)	|	0x00

0x61c004	+	(	or	*	0x0800	)

0x61c004	+	(	or	*	0x0800	)

0x61c030	+	(	or	*	0x0800	)

dcb	->	type	==	type	&&	(	dcb	->	or	&	(	1	<<	or	)	)	&&	(	link	<	0	||	link	==	!	(	dcb	->	sorconf	.	link	&	1	)	)
dcb	->	type	==	type	&&	(	dcb	->	or	&	(	1	<<	or	)	)	&&	(	link	<	0	||	link	==	!	dcb	->	sorconf	.	link	&	1	)
0x640180	+	(	i	*	0x20	)

0x660180	+	(	i	*	0x20	)

0x6101f0	+	(	chid	*	12	)

(	disp	->	mem	->	vinst	>>	8	)	|	9

0x4120	+	(	clk	*	4	)

(	P	<<	16	)	|	(	N	<<	8	)	|	M

!	reg	->	clk	&&	!	reg	->	pll

0x004120	+	(	clk	*	4	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

ret	!=	-	ENODEV

ret	!=	-	ENODEV

ret	!=	-	ENODEV

chan	->	m2mf_ntfy	/	4	+	3

!	nouveau_bo_rd32	(	chan	->	notifier_bo	,	chan	->	m2mf_ntfy	/	4	+	3	)

dev_priv	->	vram_size	<=	32	*	1024	*	1024

dev_priv	->	vram_size	<=	64	*	1024	*	1024

0	&&	pci_is_pcie	(	dev	->	pdev	)	&&	dev_priv	->	chipset	>	0x40	&&	dev_priv	->	chipset	!=	0x45

e	->	tRP	<<	24	|	e	->	tRAS	<<	16	|	e	->	tRFC	<<	8	|	e	->	tRC

(	e	->	tWR	+	2	+	(	t	->	tCWL	-	1	)	)	<<	24	|	1	<<	16	|	(	e	->	tWTR	+	2	+	(	t	->	tCWL	-	1	)	)	<<	8	|	(	e	->	tCL	+	2	-	(	t	->	tCWL	-	1	)	)

0x20200000	|	(	(	t	->	tCWL	-	1	)	<<	24	|	e	->	tRRD	<<	16	|	e	->	tRCDWR	<<	8	|	e	->	tRCDRD	)

e	->	tRP	<<	24	|	e	->	tRAS	<<	16	|	e	->	tRFC	<<	8	|	e	->	tRC

(	t	->	tCWL	-	1	)	<<	24	|	e	->	tRRD	<<	16	|	e	->	tRCDWR	<<	8	|	e	->	tRCDRD

e	->	tUNK_13	<<	8	|	e	->	tUNK_13

e	->	tRFC	<<	24	|	max	(	e	->	tRCDRD	,	e	->	tRCDWR	)	<<	16	|	e	->	tRP

(	0x14	+	e	->	tCL	)	<<	24	|	0x16	<<	16	|	(	e	->	tCL	-	1	)	<<	8	|	(	e	->	tCL	-	1	)

(	0x33	-	t	->	tCWL	)	<<	16	|	t	->	tCWL	<<	8	|	(	0x2e	+	e	->	tCL	-	t	->	tCWL	)

0x4000202	|	(	e	->	tCL	-	1	)	<<	16

(	e	->	tCL	+	3	)	<<	8

(	t	->	tCWL	-	2	)	<<	8

(	e	->	tCL	+	2	)	<<	8

(	0x30	+	e	->	tCL	)	<<	24

(	0xb	+	e	->	tCL	)	<<	8

(	t	->	tCWL	+	6	)	<<	8

(	0x5a	+	e	->	tCL	)	<<	16	|	(	6	-	e	->	tCL	+	t	->	tCWL	)	<<	8	|	(	0x50	+	e	->	tCL	-	t	->	tCWL	)

e	->	tRP	<<	24	|	(	e	->	tRAS	&	0x7f	)	<<	17	|	e	->	tRFC	<<	8	|	e	->	tRC
e	->	tRP	<<	24	|	e	->	tRAS	&	0x7f	<<	17	|	e	->	tRFC	<<	8	|	e	->	tRC
(	e	->	tRCDWR	&	0x0f	)	<<	20
e	->	tRCDWR	&	0x0f	<<	20
(	e	->	tRCDRD	&	0x0f	)	<<	14
e	->	tRCDRD	&	0x0f	<<	14
(	e	->	tUNK_20	&	0x1f	)	<<	9	|	(	e	->	tUNK_21	&	0xf	)	<<	5	|	(	e	->	tUNK_13	&	0x1f	)
e	->	tUNK_20	&	0x1f	<<	9	|	(	e	->	tUNK_21	&	0xf	)	<<	5	|	(	e	->	tUNK_13	&	0x1f	)
(	e	->	tRRD	&	0x1f	)	<<	15
e	->	tRRD	&	0x1f	<<	15
(	e	->	tWR	-	1	)	<<	9

(	t	->	odt	&	0x1	)	<<	2
t	->	odt	&	0x1	<<	2
(	t	->	odt	&	0x2	)	<<	5
t	->	odt	&	0x2	<<	5
(	t	->	odt	&	0x1	)	<<	2
t	->	odt	&	0x1	<<	2
(	t	->	odt	&	0x2	)	<<	5
t	->	odt	&	0x2	<<	5
(	t	->	odt	&	0x4	)	<<	7
t	->	odt	&	0x4	<<	7
(	e	->	tCWL	-	5	)	<<	3

(	e	->	RAM_FT1	&	0x30	)	>>	4
e	->	RAM_FT1	&	0x30	>>	4
(	e	->	RAM_FT1	&	0x30	)	>>	4
e	->	RAM_FT1	&	0x30	>>	4
(	e	->	tCL	-	5	)	<<	3

(	e	->	tWR	-	4	)	<<	8

dev_priv	->	vram_type	*	!	ret

(	(	nv_rd32	(	dev	,	0x100228	)	&	0x0f000000	)	>>	24	)	+	1
(	nv_rd32	(	dev	,	0x100228	)	&	0x0f000000	>>	24	)	+	1
(	nv_rd32	(	dev	,	0x10f294	)	&	0x00000f80	)	>>	7
nv_rd32	(	dev	,	0x10f294	)	&	0x00000f80	>>	7
dev_priv	->	chipset	>=	0xa3	||	dev_priv	->	chipset	==	0x98

0x40	|	(	calc_overscan	(	tv_enc	->	overscan	)	<<	8	)

(	output_mode	->	hdisplay	-	crtc_mode	->	hdisplay	)	/	2
output_mode	->	hdisplay	-	crtc_mode	->	hdisplay	/	2
(	output_mode	->	vdisplay	-	crtc_mode	->	vdisplay	)	/	2
output_mode	->	vdisplay	-	crtc_mode	->	vdisplay	/	2
crtc_mode	->	hdisplay	*	0x800	/	(	output_mode	->	hdisplay	-	2	*	hmargin	)
crtc_mode	->	hdisplay	*	0x800	/	output_mode	->	hdisplay	-	2	*	hmargin
crtc_mode	->	vdisplay	*	0x800	/	(	output_mode	->	vdisplay	-	2	*	vmargin	)	&	~	3
crtc_mode	->	vdisplay	*	0x800	/	output_mode	->	vdisplay	-	2	*	vmargin	&	~	3
!	(	nv_rd32	(	dev	,	0x000200	)	&	0x00020000	)
!	nv_rd32	(	dev	,	0x000200	)	&	0x00020000
!	(	nv_rd32	(	dev	,	0x3004	+	(	i	*	8	)	)	&	1	)
!	nv_rd32	(	dev	,	0x3004	+	(	i	*	8	)	)	&	1
0x01f00000	|	(	p	>>	3	)

0x003000	+	(	chan	->	id	*	8	)

0xc0000000	|	(	chan	->	ramin	->	vinst	>>	12	)

0x003004	+	(	chan	->	id	*	8	)

0x003004	+	(	chan	->	id	*	8	)

0x003000	+	(	chan	->	id	*	8	)

!	(	nv_rd32	(	dev	,	0x003004	+	(	i	*	8	)	)	&	1	)
!	nv_rd32	(	dev	,	0x003004	+	(	i	*	8	)	)	&	1
0x003004	+	(	i	*	8	)

~	(	1	<<	0	)
~	1	<<	0
~	(	1	<<	1	)
~	1	<<	1
~	(	1	<<	1	)
~	1	<<	1
~	(	1	<<	1	)
~	1	<<	1
~	(	1	<<	2	)
~	1	<<	2
~	(	1	<<	1	)
~	1	<<	1
0x04013c	+	(	i	*	0x2000	)

0x040108	+	(	i	*	0x2000	)

0x04010c	+	(	i	*	0x2000	)

0x10000000	|	priv	->	user_vma	.	offset	>>	12

!	chan	||	!	chan	->	fifo_priv

0x003000	+	(	i	*	8	)

0xc0000000	|	(	chan	->	ramin	->	vinst	>>	12	)

0x003004	+	(	i	*	8	)

0x0400c0	+	(	unit	*	0x2000	)

0x80000000	|	chan	->	ramin	->	vinst	>>	12

0x80000000	|	chan	->	ramin	->	vinst	>>	12

0x80000000	|	chan	->	ramin	->	vinst	>>	12

0x80000000	|	grch	->	unk418810	->	linst	>>	12

0x10000000	|	grch	->	unk418810	->	linst	>>	12

GPC_BCAST	(	0x0888	)	+	(	i	*	4	)

(	gpc	+	1	)	%	priv	->	gpc_nr
gpc	+	1	%	priv	->	gpc_nr
!	chan	||	!	chan	->	ramin

(	nv_rd32	(	dev	,	0x409604	)	&	0x001f0000	)	>>	16
nv_rd32	(	dev	,	0x409604	)	&	0x001f0000	>>	16
chid	>=	0	&&	chid	<	dev_priv	->	engine	.	fifo	.	channels

gpuobj	->	pinst	!=	~	0

gpuobj	->	pinst	==	~	0	||	!	dev_priv	->	ramin_available

gpuobj	->	pinst	==	~	0	||	!	dev_priv	->	ramin_available

(	chan	->	id	<<	24	)	|	0x1

(	region	->	sy	<<	16	)	|	region	->	sx

(	region	->	dy	<<	16	)	|	region	->	dx

(	region	->	height	<<	16	)	|	region	->	width

(	rect	->	dx	<<	16	)	|	rect	->	dy

(	rect	->	width	<<	16	)	|	rect	->	height

(	image	->	dy	<<	16	)	|	(	image	->	dx	&	0xffff	)

(	(	image	->	dy	+	image	->	height	)	<<	16	)	|	(	(	image	->	dx	+	image	->	width	)	&	0xffff	)

(	image	->	height	<<	16	)	|	image	->	width

(	image	->	dy	<<	16	)	|	(	image	->	dx	&	0xffff	)

info	->	fix	.	line_length	|	(	info	->	fix	.	line_length	<<	16	)

(	info	->	var	.	yres_virtual	<<	16	)	|	info	->	var	.	xres_virtual

(	i	-	0x1700	)	/	4
i	-	0x1700	/	4
0x00000000	|	(	chan	->	ramin	->	vinst	>>	12	)

0x40000000	|	(	chan	->	ramin	->	vinst	>>	12	)

0x80000000	|	(	priv	->	bar3_dmaobj	->	cinst	>>	4	)

0x80000000	|	(	priv	->	bar1_dmaobj	->	cinst	>>	4	)

0x1900	+	(	i	*	4	)

(	i	-	0x1700	)	/	4
i	-	0x1700	/	4
0x1900	+	(	i	*	4	)

!	(	nv_rd32	(	dev	,	0x000200	)	&	0x00000002	)
!	nv_rd32	(	dev	,	0x000200	)	&	0x00000002
(	mode	->	crtc_hdisplay	>>	3	)	-	1
mode	->	crtc_hdisplay	>>	3	-	1
(	mode	->	crtc_hsync_start	>>	3	)	+	1
mode	->	crtc_hsync_start	>>	3	+	1
(	mode	->	crtc_hsync_end	>>	3	)	+	1
mode	->	crtc_hsync_end	>>	3	+	1
(	mode	->	crtc_htotal	>>	3	)	-	5
mode	->	crtc_htotal	>>	3	-	5
(	mode	->	crtc_hdisplay	>>	3	)	-	1
mode	->	crtc_hdisplay	>>	3	-	1
(	mode	->	crtc_htotal	>>	3	)	-	1
mode	->	crtc_htotal	>>	3	-	1
(	mode	->	clock_index	&	0x03	)	<<	2
mode	->	clock_index	&	0x03	<<	2
(	horizTotal	>>	1	)	&	~	1

saved	->	sel_clk	&	~	(	0x5	<<	16	)
saved	->	sel_clk	&	~	0x5	<<	16
nv_crtc	->	fb	.	offset	&	~	3

i	<	64	*	64

~	(	1	<<	dcb	->	index	)
~	1	<<	dcb	->	index
!	!	(	NVReadVgaCrtc	(	port	->	dev	,	0	,	port	->	sense	)	&	0x04	)
!	!	NVReadVgaCrtc	(	port	->	dev	,	0	,	port	->	sense	)	&	0x04
!	!	(	nv_rd32	(	port	->	dev	,	port	->	sense	)	&	0x00040000	)
!	!	nv_rd32	(	port	->	dev	,	port	->	sense	)	&	0x00040000
!	!	(	nv_rd32	(	port	->	dev	,	port	->	sense	)	&	0x01	)
!	!	nv_rd32	(	port	->	dev	,	port	->	sense	)	&	0x01
!	!	(	nv_rd32	(	port	->	dev	,	port	->	sense	)	&	0x10	)
!	!	nv_rd32	(	port	->	dev	,	port	->	sense	)	&	0x10
!	!	(	NVReadVgaCrtc	(	port	->	dev	,	0	,	port	->	sense	)	&	0x08	)
!	!	NVReadVgaCrtc	(	port	->	dev	,	0	,	port	->	sense	)	&	0x08
!	!	(	nv_rd32	(	port	->	dev	,	port	->	sense	)	&	0x00080000	)
!	!	nv_rd32	(	port	->	dev	,	port	->	sense	)	&	0x00080000
!	!	(	nv_rd32	(	port	->	dev	,	port	->	sense	)	&	0x02	)
!	!	nv_rd32	(	port	->	dev	,	port	->	sense	)	&	0x02
!	!	(	nv_rd32	(	port	->	dev	,	port	->	sense	)	&	0x20	)
!	!	nv_rd32	(	port	->	dev	,	port	->	sense	)	&	0x20
!	!	(	nv_rd32	(	dev	,	0x00d610	+	(	line	*	4	)	)	&	0x00004000	)
!	!	nv_rd32	(	dev	,	0x00d610	+	(	line	*	4	)	)	&	0x00004000
--	vma	->	refcount	==	0

++	trycnt	>	100000

nvbo	->	reserved_by	&&	nvbo	->	reserved_by	==	file_priv

0x20000000	|	(	chan	->	pushbuf_base	+	(	(	chan	->	dma	.	cur	+	2	)	<<	2	)	)
0x20000000	|	(	chan	->	pushbuf_base	+	(	chan	->	dma	.	cur	+	2	)	<<	2	)
!	chan	||	!	chan	->	ramin

dev_priv	->	chipset	<	0xa3	||	dev_priv	->	chipset	==	0xaa	||	dev_priv	->	chipset	==	0xac

chip_version	<	0x17	||	chip_version	==	0x1a	||	chip_version	==	0x20

shift	>	4	&&	(	chip_version	<	0x32	||	chip_version	==	0x35	||	chip_version	==	0x36	||	chip_version	>=	0x40	)
shift	>	4	&&	chip_version	<	0x32	||	chip_version	==	0x35	||	chip_version	==	0x36	||	chip_version	>=	0x40
chip_version	<	0x17	&&	chip_version	!=	0x11

cv	==	0x30	||	cv	==	0x31	||	cv	==	0x35	||	cv	==	0x36	||	cv	>=	0x40

dev_priv	->	chipset	==	0x30	||	dev_priv	->	chipset	==	0x35

!	pv	->	M1	||	!	pv	->	M2

pv	->	N1	*	pv	->	N2	*	pv	->	refclk	/	(	pv	->	M1	*	pv	->	M2	)	>>	pv	->	log2P

!	nv_gf4_disp_arch	(	dev	)	&&	head	==	0

chid	<	0	||	chid	>=	dev_priv	->	engine	.	fifo	.	channels

(	pll	->	refclk	+	pll	->	vco1	.	max_inputfreq	)	/	pll	->	vco1	.	max_inputfreq
pll	->	refclk	+	pll	->	vco1	.	max_inputfreq	/	pll	->	vco1	.	max_inputfreq
(	pll	->	refclk	+	pll	->	vco1	.	min_inputfreq	)	/	pll	->	vco1	.	min_inputfreq
pll	->	refclk	+	pll	->	vco1	.	min_inputfreq	/	pll	->	vco1	.	min_inputfreq
!	pfN	&&	fN	>=	pll	->	refclk	/	2

(	(	(	fN	<<	13	)	/	pll	->	refclk	)	-	4096	)	&	0xffff
(	(	fN	<<	13	/	pll	->	refclk	)	-	4096	)	&	0xffff
vm	==	dev_priv	->	bar1_vm	||	vm	==	dev_priv	->	bar3_vm

(	engine	<<	16	)	|	1

(	p1	<	m1	&&	m1	>	0	)	||	clwm	>	519

2	*	arb	->	mem_page_miss	+	mclks

(	1	+	fifo_len	-	extra_lat	*	drain_rate	/	(	1000	*	1000	)	)	*	(	fill_rate	/	1000	)	/	(	(	fill_rate	-	drain_rate	)	/	1000	)
1	+	fifo_len	-	extra_lat	*	drain_rate	/	(	1000	*	1000	)	*	(	fill_rate	/	1000	)	/	(	(	fill_rate	-	drain_rate	)	/	1000	)
(	fill_lat	+	extra_lat	)	*	drain_rate	/	(	1000	*	1000	)	+	1
fill_lat	+	extra_lat	*	drain_rate	/	(	1000	*	1000	)	+	1
fifo_len	-	fifo	->	burst	+	fill_lat	*	drain_rate	/	(	1000	*	1000	)	+	fifo	->	burst	*	drain_rate	/	fill_rate

min_lwm	+	10	*	(	max_lwm	-	min_lwm	)	/	100
min_lwm	+	10	*	max_lwm	-	min_lwm	/	100
(	dev	->	pci_device	&	0xffff	)	==	0x01a0	/*CHIPSET_NFORCE*/	||	(	dev	->	pci_device	&	0xffff	)	==	0x01f0
dev	->	pci_device	&	0xffff	==	0x01a0	/*CHIPSET_NFORCE*/	||	(	dev	->	pci_device	&	0xffff	)	==	0x01f0
(	dev	->	pci_device	&	0xfff0	)	==	0x0240	/*CHIPSET_C51*/	||	(	dev	->	pci_device	&	0xfff0	)	==	0x03d0
dev	->	pci_device	&	0xfff0	==	0x0240	/*CHIPSET_C51*/	||	dev	->	pci_device	&	0xfff0	==	0x03d0
cv	<	0x17	||	cv	==	0x1a	||	cv	==	0x20

(	clk	*	P	)	<	minvco

clk	+	clk	/	200	>	maxvco

clk	+	clk	/	200

crystal	/	M	<	minU

crystal	/	M	>	maxU

(	clkP	*	M	+	crystal	/	2	)	/	crystal
clkP	*	M	+	crystal	/	2	/	crystal
(	(	N	*	crystal	+	P	/	2	)	/	P	+	M	/	2	)	/	M
N	*	crystal	+	P	/	2	/	P	+	M	/	2	/	M
(	maxvco2	-	maxvco2	/	200	)	/	2
maxvco2	-	maxvco2	/	200	/	2
clk	&&	log2P	<	maxlog2P	&&	clk	<=	(	vco2	>>	log2P	)

maxvco2	<	clk	+	clk	/	200

clk	+	clk	/	200

crystal	/	M1	<	minU1

crystal	/	M1	>	maxU1

calcclk1	/	M2	<	minU2

calcclk1	/	M2	>	maxU2

(	clkP	*	M2	+	calcclk1	/	2	)	/	calcclk1
clkP	*	M2	+	calcclk1	/	2	/	calcclk1
N2	/	M2	<	4	||	N2	/	M2	>	10

!	nv_crtc	||	!	nv_crtc	->	set_scale

!	nv_crtc	||	!	nv_crtc	->	set_scale

!	nv_crtc	||	!	nv_crtc	->	set_scale

!	nv_crtc	||	!	nv_crtc	->	set_dither

!	nv_crtc	||	!	nv_crtc	->	set_dither

mode	->	hdisplay	<=	native	->	hdisplay	&&	mode	->	vdisplay	<=	native	->	vdisplay

ret	==	0	&&	nv_connector	->	native_mode

!	!	(	nv_rd32	(	dev	,	0x10f200	)	&	0x00000004	)
!	!	nv_rd32	(	dev	,	0x10f200	)	&	0x00000004
bo	->	mem	.	start	+	bo	->	mem	.	num_pages	<	dev_priv	->	fb_mappable_pages

!	(	nv_rd32	(	dev	,	0x000200	)	&	0x00004000	)
!	nv_rd32	(	dev	,	0x000200	)	&	0x00004000
!	!	(	line	&	0x0100	)
!	!	line	&	0x0100
(	line	-	2	)	*	4
line	-	2	*	4
!	!	(	line	&	0x04	)
!	!	line	&	0x04
(	line	-	10	)	*	4
line	-	10	*	4
!	!	(	line	&	0x04	)
!	!	line	&	0x04
(	line	-	2	)	*	4
line	-	2	*	4
(	line	-	10	)	*	4
line	-	10	*	4
0x407000	+	(	i	<<	8	)
0x407000	+	i	<<	8
0x407000	+	(	i	<<	8	)
0x407000	+	i	<<	8
0x407000	+	(	i	<<	8	)
0x407000	+	i	<<	8
0x407000	+	(	i	<<	8	)
0x407000	+	i	<<	8
0x407004	+	(	i	<<	8	)
0x407004	+	i	<<	8
0x407010	+	(	i	<<	8	)
0x407010	+	i	<<	8
0x407010	+	(	i	<<	8	)
0x407010	+	i	<<	8
0x407010	+	(	i	<<	8	)
0x407010	+	i	<<	8
0x407014	+	(	i	<<	8	)
0x407014	+	i	<<	8
0x407010	+	(	i	<<	8	)
0x407010	+	i	<<	8
0x407010	+	(	i	<<	8	)
0x407010	+	i	<<	8
0x407014	+	(	i	<<	8	)
0x407014	+	i	<<	8
0x407014	+	(	i	<<	8	)
0x407014	+	i	<<	8
0x407080	+	(	i	<<	8	)
0x407080	+	i	<<	8
0x407080	+	(	i	<<	8	)
0x407080	+	i	<<	8
0x407080	+	(	i	<<	8	)
0x407080	+	i	<<	8
0x407084	+	(	i	<<	8	)
0x407084	+	i	<<	8
0x407084	+	(	i	<<	8	)
0x407084	+	i	<<	8
0x407088	+	(	i	<<	8	)
0x407088	+	i	<<	8
0x407094	+	(	i	<<	8	)
0x407094	+	i	<<	8
0x407094	+	(	i	<<	8	)
0x407094	+	i	<<	8
0x407094	+	(	i	<<	8	)
0x407094	+	i	<<	8
0x4070a0	+	(	i	<<	8	)
0x4070a0	+	i	<<	8
0x408000	+	(	i	<<	12	)
0x408000	+	i	<<	12
0x408000	+	(	i	<<	11	)
0x408000	+	i	<<	11
base	+	0x200	+	(	j	<<	7	)
base	+	0x200	+	j	<<	7
base	+	0x100	+	(	j	<<	7	)
base	+	0x100	+	j	<<	7
dev_priv	->	chipset	==	0x50	||	IS_NVAAF	(	dev_priv	->	chipset	)

(	ctx	->	ctxvals_pos	+	0x3f	)	&	~	0x3f

(	ctx	->	ctxvals_pos	-	offset	)	/	8	>	size
ctx	->	ctxvals_pos	-	offset	/	8	>	size
(	ctx	->	ctxvals_pos	-	offset	)	/	8
ctx	->	ctxvals_pos	-	offset	/	8
(	ctx	->	ctxvals_pos	-	offset	)	/	8	>	size
ctx	->	ctxvals_pos	-	offset	/	8	>	size
(	ctx	->	ctxvals_pos	-	offset	)	/	8
ctx	->	ctxvals_pos	-	offset	/	8
(	ctx	->	ctxvals_pos	-	offset	)	/	8	>	size
ctx	->	ctxvals_pos	-	offset	/	8	>	size
(	ctx	->	ctxvals_pos	-	offset	)	/	8
ctx	->	ctxvals_pos	-	offset	/	8
(	ctx	->	ctxvals_pos	-	offset	)	/	8	>	size
ctx	->	ctxvals_pos	-	offset	/	8	>	size
(	ctx	->	ctxvals_pos	-	offset	)	/	8
ctx	->	ctxvals_pos	-	offset	/	8
(	ctx	->	ctxvals_pos	-	offset	)	/	8	>	size
ctx	->	ctxvals_pos	-	offset	/	8	>	size
(	ctx	->	ctxvals_pos	-	offset	)	/	8
ctx	->	ctxvals_pos	-	offset	/	8
(	ctx	->	ctxvals_pos	-	offset	)	/	8	>	size
ctx	->	ctxvals_pos	-	offset	/	8	>	size
(	ctx	->	ctxvals_pos	-	offset	)	/	8
ctx	->	ctxvals_pos	-	offset	/	8
(	ctx	->	ctxvals_pos	-	offset	)	/	8	>	size
ctx	->	ctxvals_pos	-	offset	/	8	>	size
(	ctx	->	ctxvals_pos	-	offset	)	/	8
ctx	->	ctxvals_pos	-	offset	/	8
(	ctx	->	ctxvals_pos	-	offset	)	/	8	>	size
ctx	->	ctxvals_pos	-	offset	/	8	>	size
(	ctx	->	ctxvals_pos	-	offset	)	/	8
ctx	->	ctxvals_pos	-	offset	/	8
(	ctx	->	ctxvals_pos	-	offset	)	/	8	>	size
ctx	->	ctxvals_pos	-	offset	/	8	>	size
(	ctx	->	ctxvals_pos	-	offset	)	/	8
ctx	->	ctxvals_pos	-	offset	/	8
(	ctx	->	ctxvals_pos	-	offset	)	/	8	>	size
ctx	->	ctxvals_pos	-	offset	/	8	>	size
(	ctx	->	ctxvals_pos	-	offset	)	/	8
ctx	->	ctxvals_pos	-	offset	/	8
(	ctx	->	ctxvals_pos	-	offset	)	/	8	>	size
ctx	->	ctxvals_pos	-	offset	/	8	>	size
(	ctx	->	ctxvals_pos	-	offset	)	/	8
ctx	->	ctxvals_pos	-	offset	/	8
(	ctx	->	ctxvals_pos	-	offset	)	/	8	>	size
ctx	->	ctxvals_pos	-	offset	/	8	>	size
(	ctx	->	ctxvals_pos	-	offset	)	/	8
ctx	->	ctxvals_pos	-	offset	/	8
(	ctx	->	ctxvals_pos	-	offset	)	/	8	>	size
ctx	->	ctxvals_pos	-	offset	/	8	>	size
(	ctx	->	ctxvals_pos	-	offset	)	/	8
ctx	->	ctxvals_pos	-	offset	/	8
offset	+	size	*	8

(	ctx	->	ctxvals_pos	+	0x3f	)	&	~	0x3f

dev_priv	->	chipset	<	0x92	||	dev_priv	->	chipset	==	0x98

dev_priv	->	chipset	==	0x86	||	dev_priv	->	chipset	==	0x92	||	dev_priv	->	chipset	==	0x98	||	dev_priv	->	chipset	>=	0xa0

dev_priv	->	chipset	==	0x86	||	dev_priv	->	chipset	==	0x98	||	dev_priv	->	chipset	==	0xa8	||	IS_NVAAF	(	dev_priv	->	chipset	)

(	ctx	->	ctxvals_pos	+	0x3f	)	&	~	0x3f

dev_priv	->	chipset	==	0xd9	&&	i	<	4

dev_priv	->	chipset	==	0xd9	&&	i	<	4

0x404200	+	(	i	*	4	)

dev_priv	->	chipset	==	0xc1	||	dev_priv	->	chipset	==	0xd9

chipset	==	0xc1	||	chipset	==	0xd9

0x418a00	+	(	i	*	0x20	)

0x418a04	+	(	i	*	0x20	)

0x418a08	+	(	i	*	0x20	)

0x418a0c	+	(	i	*	0x20	)

0x418a10	+	(	i	*	0x20	)

0x418a14	+	(	i	*	0x20	)

0x418a18	+	(	i	*	0x20	)

chipset	==	0xc1	||	chipset	==	0xd9

chipset	==	0xc1	||	chipset	==	0xd9

chipset	!=	0xc0	&&	chipset	!=	0xc8

chipset	==	0xc1	||	chipset	==	0xd9

chipset	==	0xce	||	chipset	==	0xcf

chipset	==	0xc1	||	chipset	==	0xd9

chipset	==	0xc1	||	chipset	==	0xd9

chipset	!=	0xc0	&&	chipset	!=	0xc8

chipset	!=	0xc0	&&	chipset	!=	0xc8

0x0c10	+	tp	*	4

(	gpc	+	1	)	%	priv	->	gpc_nr
gpc	+	1	%	priv	->	gpc_nr
(	gpc	+	1	)	%	priv	->	gpc_nr
gpc	+	1	%	priv	->	gpc_nr
(	priv	->	tp_total	<<	8	)	|	priv	->	magic_not_rop_nr

(	priv	->	tp_total	<<	8	)	|	priv	->	magic_not_rop_nr

(	gpc	+	1	)	%	priv	->	gpc_nr
gpc	+	1	%	priv	->	gpc_nr
!	(	volt	->	vid_mask	&	(	1	<<	i	)	)
!	volt	->	vid_mask	&	(	1	<<	i	)
!	(	volt	->	vid_mask	&	(	1	<<	i	)	)
!	volt	->	vid_mask	&	(	1	<<	i	)
line_offset	+	(	x	*	bpp	)

(	fb	->	base	.	width	*	bpp	*	i	)	+	(	x	*	bpp	)

(	x2	-	x	+	1	)	*	bpp
x2	-	x	+	1	*	bpp
(	ufbdev	->	fb_count	==	0	)	&&	(	info	->	fbdefio	)

args	->	width	*	(	(	args	->	bpp	+	1	)	/	8	)
args	->	width	*	(	args	->	bpp	+	1	/	8	)
ret	!=	i	+	3

(	(	dtd	->	part1	.	h_high	>>	4	)	&	0x0f	)	<<	8
(	dtd	->	part1	.	h_high	>>	4	)	&	0x0f	<<	8
(	dtd	->	part2	.	sync_off_width_high	&	0xc0	)	<<	2
dtd	->	part2	.	sync_off_width_high	&	0xc0	<<	2
(	dtd	->	part2	.	sync_off_width_high	&	0x30	)	<<	4
dtd	->	part2	.	sync_off_width_high	&	0x30	<<	4
(	dtd	->	part1	.	h_high	&	0xf	)	<<	8
dtd	->	part1	.	h_high	&	0xf	<<	8
(	(	dtd	->	part1	.	v_high	>>	4	)	&	0x0f	)	<<	8
(	dtd	->	part1	.	v_high	>>	4	)	&	0x0f	<<	8
(	dtd	->	part2	.	v_sync_off_width	>>	4	)	&	0xf

(	dtd	->	part2	.	sync_off_width_high	&	0x0c	)	<<	2
dtd	->	part2	.	sync_off_width_high	&	0x0c	<<	2
mode	->	vsync_start	+	(	dtd	->	part2	.	v_sync_off_width	&	0xf	)
mode	->	vsync_start	+	dtd	->	part2	.	v_sync_off_width	&	0xf
(	dtd	->	part2	.	sync_off_width_high	&	0x3	)	<<	4
dtd	->	part2	.	sync_off_width_high	&	0x3	<<	4
(	dtd	->	part1	.	v_high	&	0xf	)	<<	8
dtd	->	part1	.	v_high	&	0xf	<<	8
1	<<	(	(	mapping	->	ddc_pin	&	0xf0	)	>>	4	)
1	<<	(	mapping	->	ddc_pin	&	0xf0	>>	4	)
(	1	<<	0	)	|	(	1	<<	1	)

i	+	1	<	num	&&	wait_for	(	REG_READ	(	GMBUS2	+	reg_offset	)	&	(	GMBUS_SATOER	|	GMBUS_HW_WAIT_PHASE	)	,	50	)
i	+	1	<	num	&&	wait_for	(	REG_READ	(	GMBUS2	+	reg_offset	)	&	(	GMBUS_SATOER	|	GMBUS_HW_WAIT_PHASE	)	,	50	)
(	bus	->	reg0	&	~	(	0x3	<<	8	)	)	|	(	speed	<<	8	)
(	bus	->	reg0	&	~	0x3	<<	8	)	|	(	speed	<<	8	)
args	->	width	*	(	(	args	->	bpp	+	7	)	/	8	)
args	->	width	*	(	args	->	bpp	+	7	/	8	)
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	ret	==	-	EBUSY	)	||	(	ret	!=	0	&&	i	>	0	)

dev_priv	->	ops	->	accel_2d	&&	pitch_lines	>	8

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

!	IS_MRST	(	dev	)	&&	psb_intel_crtc	->	pipe	==	0

IS_MRST	(	dev	)	&&	psb_intel_crtc	->	pipe	!=	0

crtc	->	saved_mode	.	hdisplay	!=	0	&&	crtc	->	saved_mode	.	vdisplay	!=	0

runtime_allowed	==	1	&&	dev_priv	->	is_lvds_on

!	r	->	stolen	&&	!	r	->	in_gart

gt	->	in_gart	==	0	&&	gt	->	stolen	==	0

gt	->	in_gart	==	0	&&	gt	->	stolen	==	0

gt	->	in_gart	&&	!	gt	->	stolen

pg	->	gtt_start	==	0	||	gtt_pages	==	0

pg	->	gatt_pages	==	0	||	pg	->	gatt_start	==	0

resume	&&	(	gtt_pages	!=	pg	->	gtt_pages	)	&&	(	stolen_size	!=	pg	->	stolen_size	)

crtc	->	saved_mode	.	hdisplay	!=	0	&&	crtc	->	saved_mode	.	vdisplay	!=	0

(	ti	->	hactive_hi	<<	8	)	|	ti	->	hactive_lo

(	ti	->	vactive_hi	<<	8	)	|	ti	->	vactive_lo

mode	->	hdisplay	+	(	(	ti	->	hsync_offset_hi	<<	8	)	|	ti	->	hsync_offset_lo	)
mode	->	hdisplay	+	(	ti	->	hsync_offset_hi	<<	8	)	|	ti	->	hsync_offset_lo
mode	->	hsync_start	+	(	(	ti	->	hsync_pulse_width_hi	<<	8	)	|	ti	->	hsync_pulse_width_lo	)
mode	->	hsync_start	+	(	ti	->	hsync_pulse_width_hi	<<	8	)	|	ti	->	hsync_pulse_width_lo
mode	->	hdisplay	+	(	(	ti	->	hblank_hi	<<	8	)	|	ti	->	hblank_lo	)
mode	->	hdisplay	+	(	ti	->	hblank_hi	<<	8	)	|	ti	->	hblank_lo
mode	->	vdisplay	+	(	(	ti	->	vsync_offset_hi	<<	8	)	|	ti	->	vsync_offset_lo	)
mode	->	vdisplay	+	(	ti	->	vsync_offset_hi	<<	8	)	|	ti	->	vsync_offset_lo
mode	->	vsync_start	+	(	(	ti	->	vsync_pulse_width_hi	<<	8	)	|	ti	->	vsync_pulse_width_lo	)
mode	->	vsync_start	+	(	ti	->	vsync_pulse_width_hi	<<	8	)	|	ti	->	vsync_pulse_width_lo
mode	->	vdisplay	+	(	(	ti	->	vblank_hi	<<	8	)	|	ti	->	vblank_lo	)
mode	->	vdisplay	+	(	ti	->	vblank_hi	<<	8	)	|	ti	->	vblank_lo
pd	->	hw_context	!=	-	1

pd	->	driver	->	has_clflush	&&	pd	->	hw_context	!=	-	1

pd	->	hw_context	!=	-	1

pd	->	hw_context	!=	-	1

pd	->	hw_context	!=	-	1

pd	->	hw_context	!=	-	1

pd	->	hw_context	!=	-	1

pd	->	hw_context	!=	-	1

pd	->	hw_context	!=	-	1

mode	->	vdisplay	<<	16	|	mode	->	hdisplay

(	0xa	<<	16	)	|	0x14

(	!	output	->	panel_on	)	||	output	->	first_boot

REG_READ	(	MIPI_PORT_CONTROL	(	pipe	)	)	&	~	BIT	(	31	)

(	0xa	<<	16	)	|	0x14

mode	->	vdisplay	<<	16	|	mode	->	hdisplay

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

pdata	->	gpio_bridge_reset	==	-	1

(	baseclk	-	f	)	/	f
baseclk	-	f	/	f
pdata	->	gpio_panel_bl_en	!=	-	1

pdata	->	gpio_panel_vadd	!=	-	1

pdata	->	gpio_panel_vadd	!=	-	1

pdata	->	gpio_panel_bl_en	!=	-	1

pdata	->	gpio_bridge_reset	!=	-	1

pdata	->	gpio_panel_bl_en	!=	-	1

pdata	->	gpio_panel_vadd	!=	-	1

pdata	->	gpio_bridge_reset	!=	-	1

pdata	->	gpio_panel_bl_en	!=	-	1

pdata	->	gpio_panel_vadd	!=	-	1

(	dvo_timing	->	hactive_hi	<<	8	)	|	dvo_timing	->	hactive_lo

panel_fixed_mode	->	hdisplay	+	(	(	dvo_timing	->	hsync_off_hi	<<	8	)	|	dvo_timing	->	hsync_off_lo	)
panel_fixed_mode	->	hdisplay	+	(	dvo_timing	->	hsync_off_hi	<<	8	)	|	dvo_timing	->	hsync_off_lo
panel_fixed_mode	->	hdisplay	+	(	(	dvo_timing	->	hblank_hi	<<	8	)	|	dvo_timing	->	hblank_lo	)
panel_fixed_mode	->	hdisplay	+	(	dvo_timing	->	hblank_hi	<<	8	)	|	dvo_timing	->	hblank_lo
(	dvo_timing	->	vactive_hi	<<	8	)	|	dvo_timing	->	vactive_lo

panel_fixed_mode	->	vdisplay	+	(	(	dvo_timing	->	vblank_hi	<<	8	)	|	dvo_timing	->	vblank_lo	)
panel_fixed_mode	->	vdisplay	+	(	dvo_timing	->	vblank_hi	<<	8	)	|	dvo_timing	->	vblank_lo
panel_fixed_mode	->	htotal	>	0	&&	panel_fixed_mode	->	vtotal	>	0

crtc	->	saved_mode	.	hdisplay	!=	0	&&	crtc	->	saved_mode	.	vdisplay	!=	0

(	ti	->	hactive_hi	<<	8	)	|	ti	->	hactive_lo

(	ti	->	vactive_hi	<<	8	)	|	ti	->	vactive_lo

mode	->	hdisplay	+	(	(	ti	->	hsync_offset_hi	<<	8	)	|	ti	->	hsync_offset_lo	)
mode	->	hdisplay	+	(	ti	->	hsync_offset_hi	<<	8	)	|	ti	->	hsync_offset_lo
mode	->	hsync_start	+	(	(	ti	->	hsync_pulse_width_hi	<<	8	)	|	ti	->	hsync_pulse_width_lo	)
mode	->	hsync_start	+	(	ti	->	hsync_pulse_width_hi	<<	8	)	|	ti	->	hsync_pulse_width_lo
mode	->	hdisplay	+	(	(	ti	->	hblank_hi	<<	8	)	|	ti	->	hblank_lo	)
mode	->	hdisplay	+	(	ti	->	hblank_hi	<<	8	)	|	ti	->	hblank_lo
mode	->	vdisplay	+	(	(	ti	->	vsync_offset_hi	<<	8	)	|	ti	->	vsync_offset_lo	)
mode	->	vdisplay	+	(	ti	->	vsync_offset_hi	<<	8	)	|	ti	->	vsync_offset_lo
mode	->	vsync_start	+	(	(	ti	->	vsync_pulse_width_hi	<<	8	)	|	ti	->	vsync_pulse_width_lo	)
mode	->	vsync_start	+	(	ti	->	vsync_pulse_width_hi	<<	8	)	|	ti	->	vsync_pulse_width_lo
mode	->	vdisplay	+	(	(	ti	->	vblank_hi	<<	8	)	|	ti	->	vblank_lo	)
mode	->	vdisplay	+	(	ti	->	vblank_hi	<<	8	)	|	ti	->	vblank_lo
i	<	len	/	4

!	(	REG_READ	(	sender	->	mipi_intr_stat_reg	)	&	BIT	(	29	)	)
!	REG_READ	(	sender	->	mipi_intr_stat_reg	)	&	BIT	(	29	)
!	pkg_sender	||	IS_ERR	(	pkg_sender	)

!	sender	||	IS_ERR	(	sender	)

(	mode	->	vdisplay	!=	adjusted_mode	->	crtc_vdisplay	)	||	(	mode	->	hdisplay	!=	adjusted_mode	->	crtc_hdisplay	)

(	ti	->	hactive_hi	<<	8	)	|	ti	->	hactive_lo

(	ti	->	vactive_hi	<<	8	)	|	ti	->	vactive_lo

mode	->	hdisplay	+	(	(	ti	->	hsync_offset_hi	<<	8	)	|	ti	->	hsync_offset_lo	)
mode	->	hdisplay	+	(	ti	->	hsync_offset_hi	<<	8	)	|	ti	->	hsync_offset_lo
mode	->	hsync_start	+	(	(	ti	->	hsync_pulse_width_hi	<<	8	)	|	ti	->	hsync_pulse_width_lo	)
mode	->	hsync_start	+	(	ti	->	hsync_pulse_width_hi	<<	8	)	|	ti	->	hsync_pulse_width_lo
mode	->	hdisplay	+	(	(	ti	->	hblank_hi	<<	8	)	|	ti	->	hblank_lo	)
mode	->	hdisplay	+	(	ti	->	hblank_hi	<<	8	)	|	ti	->	hblank_lo
mode	->	vdisplay	+	(	(	ti	->	vsync_offset_hi	<<	4	)	|	ti	->	vsync_offset_lo	)
mode	->	vdisplay	+	(	ti	->	vsync_offset_hi	<<	4	)	|	ti	->	vsync_offset_lo
mode	->	vsync_start	+	(	(	ti	->	vsync_pulse_width_hi	<<	4	)	|	ti	->	vsync_pulse_width_lo	)
mode	->	vsync_start	+	(	ti	->	vsync_pulse_width_hi	<<	4	)	|	ti	->	vsync_pulse_width_lo
mode	->	vdisplay	+	(	(	ti	->	vblank_hi	<<	8	)	|	ti	->	vblank_lo	)
mode	->	vdisplay	+	(	ti	->	vblank_hi	<<	8	)	|	ti	->	vblank_lo
!	dev	||	(	pipe	!=	0	&&	pipe	!=	2	)

!	dsi_config	||	(	(	pipe	!=	0	)	&&	(	pipe	!=	2	)	)

psb_crtc	->	saved_mode	.	hdisplay	!=	0	&&	psb_crtc	->	saved_mode	.	vdisplay	!=	0

!	dev	||	!	config

!	dev	||	(	(	pipe	!=	0	)	&&	(	pipe	!=	2	)	)

pipe	==	0	||	pipe	==	2

(	(	min	(	mode	->	crtc_vdisplay	,	adjusted_mode	->	crtc_vdisplay	)	-	1	)	<<	16	)	|	(	min	(	mode	->	crtc_hdisplay	,	adjusted_mode	->	crtc_hdisplay	)	-	1	)

(	(	mode	->	crtc_hdisplay	-	1	)	<<	16	)	|	(	mode	->	crtc_vdisplay	-	1	)

(	(	mode	->	crtc_vdisplay	-	1	)	<<	16	)	|	(	mode	->	crtc_hdisplay	-	1	)

(	(	mode	->	crtc_hdisplay	-	1	)	<<	16	)	|	(	mode	->	crtc_vdisplay	-	1	)

(	adjusted_mode	->	crtc_hdisplay	-	mode	->	crtc_hdisplay	)	/	2
adjusted_mode	->	crtc_hdisplay	-	mode	->	crtc_hdisplay	/	2
(	adjusted_mode	->	crtc_vdisplay	-	mode	->	crtc_vdisplay	)	/	2
adjusted_mode	->	crtc_vdisplay	-	mode	->	crtc_vdisplay	/	2
(	mode	->	crtc_hdisplay	-	1	)	|	(	(	adjusted_mode	->	crtc_htotal	-	1	)	<<	16	)

(	mode	->	crtc_vdisplay	-	1	)	|	(	(	adjusted_mode	->	crtc_vtotal	-	1	)	<<	16	)

(	adjusted_mode	->	crtc_hblank_start	-	offsetX	-	1	)	|	(	(	adjusted_mode	->	crtc_hblank_end	-	offsetX	-	1	)	<<	16	)

(	adjusted_mode	->	crtc_hsync_start	-	offsetX	-	1	)	|	(	(	adjusted_mode	->	crtc_hsync_end	-	offsetX	-	1	)	<<	16	)

(	adjusted_mode	->	crtc_vblank_start	-	offsetY	-	1	)	|	(	(	adjusted_mode	->	crtc_vblank_end	-	offsetY	-	1	)	<<	16	)

(	adjusted_mode	->	crtc_vsync_start	-	offsetY	-	1	)	|	(	(	adjusted_mode	->	crtc_vsync_end	-	offsetY	-	1	)	<<	16	)

(	adjusted_mode	->	crtc_hdisplay	-	1	)	|	(	(	adjusted_mode	->	crtc_htotal	-	1	)	<<	16	)

(	adjusted_mode	->	crtc_vdisplay	-	1	)	|	(	(	adjusted_mode	->	crtc_vtotal	-	1	)	<<	16	)

(	adjusted_mode	->	crtc_hblank_start	-	1	)	|	(	(	adjusted_mode	->	crtc_hblank_end	-	1	)	<<	16	)

(	adjusted_mode	->	crtc_hsync_start	-	1	)	|	(	(	adjusted_mode	->	crtc_hsync_end	-	1	)	<<	16	)

(	adjusted_mode	->	crtc_vblank_start	-	1	)	|	(	(	adjusted_mode	->	crtc_vblank_end	-	1	)	<<	16	)

(	adjusted_mode	->	crtc_vsync_start	-	1	)	|	(	(	adjusted_mode	->	crtc_vsync_end	-	1	)	<<	16	)

clock	->	p1	<	limit	->	p1	.	min	||	limit	->	p1	.	max	<	clock	->	p1

clock	->	p	<	limit	->	p	.	min	||	limit	->	p	.	max	<	clock	->	p

clock	->	vco	<	limit	->	vco	.	min	||	limit	->	vco	.	max	<	clock	->	vco

clock	->	dot	<	limit	->	dot	.	min	||	limit	->	dot	.	max	<	clock	->	dot

(	adjusted_mode	->	crtc_hdisplay	-	1	)	|	(	(	adjusted_mode	->	crtc_htotal	-	1	)	<<	16	)

(	adjusted_mode	->	crtc_hblank_start	-	1	)	|	(	(	adjusted_mode	->	crtc_hblank_end	-	1	)	<<	16	)

(	adjusted_mode	->	crtc_hsync_start	-	1	)	|	(	(	adjusted_mode	->	crtc_hsync_end	-	1	)	<<	16	)

(	adjusted_mode	->	crtc_vdisplay	-	1	)	|	(	(	adjusted_mode	->	crtc_vtotal	-	1	)	<<	16	)

(	adjusted_mode	->	crtc_vblank_start	-	1	)	|	(	(	adjusted_mode	->	crtc_vblank_end	-	1	)	<<	16	)

(	adjusted_mode	->	crtc_vsync_start	-	1	)	|	(	(	adjusted_mode	->	crtc_vsync_end	-	1	)	<<	16	)

(	(	mode	->	vdisplay	-	1	)	<<	16	)	|	(	mode	->	hdisplay	-	1	)

(	(	mode	->	hdisplay	-	1	)	<<	16	)	|	(	mode	->	vdisplay	-	1	)

palreg	+	4	*	i

5	*	(	clock	->	m1	+	2	)	+	(	clock	->	m2	+	2	)
5	*	clock	->	m1	+	2	+	(	clock	->	m2	+	2	)
refclk	*	clock	->	m	/	(	clock	->	n	+	2	)
refclk	*	clock	->	m	/	clock	->	n	+	2
(	htot	&	0xffff	)	+	1
htot	&	0xffff	+	1
(	(	htot	&	0xffff0000	)	>>	16	)	+	1
(	htot	&	0xffff0000	)	>>	16	+	1
(	hsync	&	0xffff	)	+	1
hsync	&	0xffff	+	1
(	(	hsync	&	0xffff0000	)	>>	16	)	+	1
(	hsync	&	0xffff0000	>>	16	)	+	1
(	vtot	&	0xffff	)	+	1
vtot	&	0xffff	+	1
(	(	vtot	&	0xffff0000	)	>>	16	)	+	1
(	vtot	&	0xffff0000	>>	16	)	+	1
(	vsync	&	0xffff	)	+	1
vsync	&	0xffff	+	1
(	(	vsync	&	0xffff0000	)	>>	16	)	+	1
(	vsync	&	0xffff0000	>>	16	)	+	1
5	*	(	clock	->	m1	+	2	)	+	(	clock	->	m2	+	2	)
5	*	clock	->	m1	+	2	+	(	clock	->	m2	+	2	)
refclk	*	clock	->	m	/	(	clock	->	n	+	2	)
refclk	*	clock	->	m	/	clock	->	n	+	2
5	*	(	clock	->	m1	+	2	)	+	(	clock	->	m2	+	2	)
5	*	clock	->	m1	+	2	+	(	clock	->	m2	+	2	)
refclk	*	clock	->	m	/	(	clock	->	n	+	2	)
refclk	*	clock	->	m	/	clock	->	n	+	2
clock	->	p1	<	limit	->	p1	.	min	||	limit	->	p1	.	max	<	clock	->	p1

clock	->	p	<	limit	->	p	.	min	||	limit	->	p	.	max	<	clock	->	p

clock	->	m2	<	limit	->	m2	.	min	||	limit	->	m2	.	max	<	clock	->	m2

clock	->	m1	<	limit	->	m1	.	min	||	limit	->	m1	.	max	<	clock	->	m1

clock	->	m	<	limit	->	m	.	min	||	limit	->	m	.	max	<	clock	->	m

clock	->	n	<	limit	->	n	.	min	||	limit	->	n	.	max	<	clock	->	n

clock	->	vco	<	limit	->	vco	.	min	||	limit	->	vco	.	max	<	clock	->	vco

clock	->	dot	<	limit	->	dot	.	min	||	limit	->	dot	.	max	<	clock	->	dot

clock	.	m2	<	clock	.	m1	&&	clock	.	m2	<=	limit	->	m2	.	max

(	adjusted_mode	->	crtc_hdisplay	-	1	)	|	(	(	adjusted_mode	->	crtc_htotal	-	1	)	<<	16	)

(	adjusted_mode	->	crtc_hblank_start	-	1	)	|	(	(	adjusted_mode	->	crtc_hblank_end	-	1	)	<<	16	)

(	adjusted_mode	->	crtc_hsync_start	-	1	)	|	(	(	adjusted_mode	->	crtc_hsync_end	-	1	)	<<	16	)

(	adjusted_mode	->	crtc_vdisplay	-	1	)	|	(	(	adjusted_mode	->	crtc_vtotal	-	1	)	<<	16	)

(	adjusted_mode	->	crtc_vblank_start	-	1	)	|	(	(	adjusted_mode	->	crtc_vblank_end	-	1	)	<<	16	)

(	adjusted_mode	->	crtc_vsync_start	-	1	)	|	(	(	adjusted_mode	->	crtc_vsync_end	-	1	)	<<	16	)

(	(	mode	->	vdisplay	-	1	)	<<	16	)	|	(	mode	->	hdisplay	-	1	)

(	(	mode	->	hdisplay	-	1	)	<<	16	)	|	(	mode	->	vdisplay	-	1	)

palreg	+	4	*	i

(	htot	&	0xffff	)	+	1
htot	&	0xffff	+	1
(	(	htot	&	0xffff0000	)	>>	16	)	+	1
(	htot	&	0xffff0000	)	>>	16	+	1
(	hsync	&	0xffff	)	+	1
hsync	&	0xffff	+	1
(	(	hsync	&	0xffff0000	)	>>	16	)	+	1
(	hsync	&	0xffff0000	>>	16	)	+	1
(	vtot	&	0xffff	)	+	1
vtot	&	0xffff	+	1
(	(	vtot	&	0xffff0000	)	>>	16	)	+	1
vtot	&	0xffff0000	>>	16	+	1
(	vsync	&	0xffff	)	+	1
vsync	&	0xffff	+	1
(	(	vsync	&	0xffff0000	)	>>	16	)	+	1
(	vsync	&	0xffff0000	>>	16	)	+	1
(	(	mode	->	crtc_hdisplay	-	1	)	<<	16	)	|	(	mode	->	crtc_vdisplay	-	1	)

(	adjusted_mode	->	crtc_hdisplay	-	mode	->	crtc_hdisplay	)	/	2
adjusted_mode	->	crtc_hdisplay	-	mode	->	crtc_hdisplay	/	2
(	adjusted_mode	->	crtc_vdisplay	-	mode	->	crtc_vdisplay	)	/	2
adjusted_mode	->	crtc_vdisplay	-	mode	->	crtc_vdisplay	/	2
(	mode	->	crtc_hdisplay	-	1	)	|	(	(	adjusted_mode	->	crtc_htotal	-	1	)	<<	16	)

(	mode	->	crtc_vdisplay	-	1	)	|	(	(	adjusted_mode	->	crtc_vtotal	-	1	)	<<	16	)

(	adjusted_mode	->	crtc_hblank_start	-	offsetX	-	1	)	|	(	(	adjusted_mode	->	crtc_hblank_end	-	offsetX	-	1	)	<<	16	)

(	adjusted_mode	->	crtc_hsync_start	-	offsetX	-	1	)	|	(	(	adjusted_mode	->	crtc_hsync_end	-	offsetX	-	1	)	<<	16	)

(	adjusted_mode	->	crtc_vblank_start	-	offsetY	-	1	)	|	(	(	adjusted_mode	->	crtc_vblank_end	-	offsetY	-	1	)	<<	16	)

(	adjusted_mode	->	crtc_vsync_start	-	offsetY	-	1	)	|	(	(	adjusted_mode	->	crtc_vsync_end	-	offsetY	-	1	)	<<	16	)

(	adjusted_mode	->	crtc_hdisplay	-	1	)	|	(	(	adjusted_mode	->	crtc_htotal	-	1	)	<<	16	)

(	adjusted_mode	->	crtc_vdisplay	-	1	)	|	(	(	adjusted_mode	->	crtc_vtotal	-	1	)	<<	16	)

(	adjusted_mode	->	crtc_hblank_start	-	1	)	|	(	(	adjusted_mode	->	crtc_hblank_end	-	1	)	<<	16	)

(	adjusted_mode	->	crtc_hsync_start	-	1	)	|	(	(	adjusted_mode	->	crtc_hsync_end	-	1	)	<<	16	)

(	adjusted_mode	->	crtc_vblank_start	-	1	)	|	(	(	adjusted_mode	->	crtc_vblank_end	-	1	)	<<	16	)

(	adjusted_mode	->	crtc_vsync_start	-	1	)	|	(	(	adjusted_mode	->	crtc_vsync_end	-	1	)	<<	16	)

!	dev	->	agp	||	!	dev	->	agp	->	base

paused	&&	!	no_pci_fire

!	(	VIA_READ	(	VIA_REG_STATUS	)	&	VIA_VR_QUEUE_BUSY	)	&&	--	count
!	VIA_READ	(	VIA_REG_STATUS	)	&	VIA_VR_QUEUE_BUSY	&&	--	count
count	&&	(	VIA_READ	(	VIA_REG_STATUS	)	&	(	VIA_CMD_RGTR_BUSY	|	VIA_2D_ENG_BUSY	|	VIA_3D_ENG_BUSY	)	)
count	&&	(	VIA_READ	(	VIA_REG_STATUS	)	&	VIA_CMD_RGTR_BUSY	|	VIA_2D_ENG_BUSY	|	VIA_3D_ENG_BUSY	)
!	(	VIA_READ	(	0x41c	)	&	0x80000000	)	&&	count	--
!	VIA_READ	(	0x41c	)	&	0x80000000	&&	count	--
VIA_READ8	(	0x83d5	)	&	~	0x30

VIA_READ8	(	0x83d5	)	&	~	0x30

descriptor_this_page	--	==	0

dev	->	ctx_count	==	1	&&	dev	->	dev_private

(	1	<<	align2	)	-	1
1	<<	align2	-	1
(	p	->	start	+	mask	)	&	~	mask

!	heap	||	!	heap	->	next

!	radeon_encoder	->	hdmi_audio_workaround	||	r600_hdmi_is_audio_buffer_filled	(	encoder	)

!	rdev	->	me_fw	||	!	rdev	->	pfp_fw	||	!	rdev	->	rlc_fw

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	dev	->	pdev	->	device	==	0x791e	)	&&	(	dev	->	pdev	->	subsystem_vendor	==	0x1043	)	&&	(	dev	->	pdev	->	subsystem_device	==	0x826d	)

(	dev	->	pdev	->	device	==	0x7941	)	&&	(	dev	->	pdev	->	subsystem_vendor	==	0x1849	)	&&	(	dev	->	pdev	->	subsystem_device	==	0x7941	)

(	dev	->	pdev	->	device	==	0x796e	)	&&	(	dev	->	pdev	->	subsystem_vendor	==	0x1462	)	&&	(	dev	->	pdev	->	subsystem_device	==	0x7302	)

(	dev	->	pdev	->	device	==	0x7941	)	&&	(	dev	->	pdev	->	subsystem_vendor	==	0x147b	)	&&	(	dev	->	pdev	->	subsystem_device	==	0x2412	)

(	dev	->	pdev	->	device	==	0x5653	)	&&	(	dev	->	pdev	->	subsystem_vendor	==	0x1462	)	&&	(	dev	->	pdev	->	subsystem_device	==	0x0291	)

(	dev	->	pdev	->	device	==	0x7146	)	&&	(	dev	->	pdev	->	subsystem_vendor	==	0x17af	)	&&	(	dev	->	pdev	->	subsystem_device	==	0x2058	)

(	dev	->	pdev	->	device	==	0x7142	)	&&	(	dev	->	pdev	->	subsystem_vendor	==	0x1458	)	&&	(	dev	->	pdev	->	subsystem_device	==	0x2134	)

(	dev	->	pdev	->	device	==	0x71C5	)	&&	(	dev	->	pdev	->	subsystem_vendor	==	0x106b	)	&&	(	dev	->	pdev	->	subsystem_device	==	0x0080	)

(	dev	->	pdev	->	device	==	0x9598	)	&&	(	dev	->	pdev	->	subsystem_vendor	==	0x1043	)	&&	(	dev	->	pdev	->	subsystem_device	==	0x01da	)

(	dev	->	pdev	->	device	==	0x9598	)	&&	(	dev	->	pdev	->	subsystem_vendor	==	0x1043	)	&&	(	dev	->	pdev	->	subsystem_device	==	0x01e4	)

(	dev	->	pdev	->	device	==	0x95C5	)	&&	(	dev	->	pdev	->	subsystem_vendor	==	0x1043	)	&&	(	dev	->	pdev	->	subsystem_device	==	0x01e2	)

(	(	dev	->	pdev	->	device	==	0x95c4	)	||	(	dev	->	pdev	->	device	==	0x9591	)	)	&&	(	dev	->	pdev	->	subsystem_vendor	==	0x1025	)	&&	(	dev	->	pdev	->	subsystem_device	==	0x013c	)
(	dev	->	pdev	->	device	==	0x95c4	)	||	(	dev	->	pdev	->	device	==	0x9591	)	&&	(	dev	->	pdev	->	subsystem_vendor	==	0x1025	)	&&	(	dev	->	pdev	->	subsystem_device	==	0x013c	)
(	(	dev	->	pdev	->	device	==	0x9802	)	||	(	dev	->	pdev	->	device	==	0x9806	)	)	&&	(	dev	->	pdev	->	subsystem_vendor	==	0x1734	)	&&	(	dev	->	pdev	->	subsystem_device	==	0x11bd	)
(	dev	->	pdev	->	device	==	0x9802	)	||	(	dev	->	pdev	->	device	==	0x9806	)	&&	(	dev	->	pdev	->	subsystem_vendor	==	0x1734	)	&&	(	dev	->	pdev	->	subsystem_device	==	0x11bd	)
rdev	->	pm	.	default_power_state_index	==	-	1

rdev	->	pm	.	default_power_state_index	==	-	1

rdev	->	pm	.	default_power_state_index	==	-	1

6	+	nr	*	2

reg	&	~	0xffff

i	<	(	reg	>>	2	)	+	count
i	<	reg	>>	2	+	count
(	sz	>	64	)	||	(	sz	<	0	)

reg	+	sz	*	4	>=	0x10000

3	+	sz	*	4

(	count	+	1	)	>	MAX_ARRAY_PACKET

(	expected_count	+	1	)	/	2
expected_count	+	1	/	2
count	&&	count	!=	expected_count

3	+	sz	*	stride

idx	<	0	||	idx	>=	dma	->	buf_count

buf	->	file_priv	!=	file_priv	||	buf	->	pending

(	radeon	->	cs_id_scnt	+	1	)	&	0x00FFFFFF

(	n	*	(	size	>>	10	)	)	/	time
(	n	*	size	>>	10	)	/	time
(	rdev	->	asic	->	copy	.	dma	)	&&	(	sdomain	!=	ddomain	)

!	ASIC_IS_AVIVO	(	rdev	)	&&	radeon_crtc	->	crtc_id

(	ss	->	step	&	3	)	<<	2
ss	->	step	&	3	<<	2
(	ss	->	delay	&	7	)	<<	4
ss	->	delay	&	7	<<	4
!	atomic	&&	!	crtc	->	fb

!	atomic	&&	fb	&&	fb	!=	crtc	->	fb

!	atomic	&&	!	crtc	->	fb

!	atomic	&&	fb	&&	fb	!=	crtc	->	fb

num_loops	*	4	+	64

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

7	|	(	1	<<	25	)

(	track	->	db_depth_size	&	0xFFFFFC00	)	==	0xFFFFFC00
track	->	db_depth_size	&	0xFFFFFC00	==	0xFFFFFC00
(	track	->	db_depth_size	&	0xFFFFFC00	)	==	0xFFFFFC00
track	->	db_depth_size	&	0xFFFFFC00	==	0xFFFFFC00
track	->	vgt_strmout_buffer_en	&	(	1	<<	i	)

track	->	db_dirty	&&	(	G_028800_STENCIL_ENABLE	(	track	->	db_depth_control	)	||	G_028800_Z_ENABLE	(	track	->	db_depth_control	)	)
track	->	db_dirty	&&	G_028800_STENCIL_ENABLE	(	track	->	db_depth_control	)	||	G_028800_Z_ENABLE	(	track	->	db_depth_control	)
(	pkt	->	count	+	1	+	pkt	->	idx	)	>=	ib_chunk	->	length_dw

p	->	chunk_relocs_idx	==	-	1

p	->	chunk_relocs_idx	==	-	1

i	==	0	||	i	==	1

(	tmp	>>	16	)	&	0x7

radeon_get_ib_value	(	p	,	idx	+	1	)	!=	0xffffffff	||	radeon_get_ib_value	(	p	,	idx	+	2	)	!=	0

pkt	->	count	!=	2	&&	pkt	->	count	!=	0

4	*	pkt	->	count	+	start_reg	-	4

start_reg	+	(	4	*	i	)

4	*	pkt	->	count	+	start_reg	-	4

start_reg	+	(	4	*	i	)

4	*	pkt	->	count	+	start_reg	-	4

idx	+	(	i	*	7	)	+	6	+	1

4	*	pkt	->	count	+	start_reg	-	4

4	*	pkt	->	count	+	start_reg	-	4

4	*	pkt	->	count	+	start_reg	-	4

4	*	pkt	->	count	+	start_reg	-	4

4	*	pkt	->	count	+	start_reg	-	4

radeon_get_ib_value	(	p	,	idx	+	1	)	<<	2

radeon_get_ib_value	(	p	,	idx	+	3	)	<<	2

p	->	chunk_relocs_idx	==	-	1

(	lane	&	1	)	*	4
lane	&	1	*	4
ASIC_IS_DCE4	(	dp_info	->	rdev	)	||	!	dp_info	->	use_dpencoder

rdev	->	pm	.	current_power_state_index	==	(	rdev	->	pm	.	num_power_states	-	1	)

rdev	->	pm	.	requested_power_state_index	==	-	1

rdev	->	scratch	.	reg_base	+	(	i	*	4	)

!	rdev	->	me_fw	||	!	rdev	->	pfp_fw	||	!	rdev	->	rlc_fw

(	(	gb_pipe_select	>>	12	)	&	3	)	+	1
(	gb_pipe_select	>>	12	)	&	3	+	1
(	rdev	->	pdev	->	device	==	0x5e4c	)	||	(	rdev	->	pdev	->	device	==	0x5e4f	)

(	tmp	&	3	)	==	3
tmp	&	3	==	3
(	rdev	->	pm	.	requested_clock_mode_index	==	rdev	->	pm	.	current_clock_mode_index	)	&&	(	rdev	->	pm	.	requested_power_state_index	==	rdev	->	pm	.	current_power_state_index	)

(	rdev	->	pm	.	requested_clock_mode_index	==	rdev	->	pm	.	current_clock_mode_index	)	&&	(	rdev	->	pm	.	requested_power_state_index	==	rdev	->	pm	.	current_power_state_index	)

rdev	->	pm	.	active_crtcs	&	(	1	<<	i	)

rdev	->	pm	.	req_vblank	&	(	1	<<	i	)

~	(	1	<<	i	)
~	1	<<	i
i	<	0	||	i	>	rdev	->	gart	.	num_gpu_pages

(	w	/	8	)	-	1

(	(	w	*	h	)	/	64	)	-	1

(	pitch	<<	0	)	|	(	slice	<<	10	)

(	x1	<<	0	)	|	(	y1	<<	16	)

(	x2	<<	0	)	|	(	y2	<<	16	)

(	x1	<<	0	)	|	(	y1	<<	16	)	|	(	1	<<	31	)

(	x2	<<	0	)	|	(	y2	<<	16	)

(	x1	<<	0	)	|	(	y1	<<	16	)	|	(	1	<<	31	)

(	x2	<<	0	)	|	(	y2	<<	16	)

!	src_x	&&	!	dst_x

cur_size	>	(	max_bytes	-	dst_x	)

cur_size	>	(	max_bytes	-	src_x	)

!	src_x	&&	!	dst_x

cur_size	>	(	max_bytes	-	dst_x	)

cur_size	>	(	max_bytes	-	src_x	)

tmp	->	fence	&&	!	tmp	->	fence	->	emitted

!	ib	->	length_dw	||	!	ring	->	ready

ring	->	rptr	+	(	ring	->	ring_size	/	4	)

(	ndw	+	ring	->	align_mask	)	&	~	ring	->	align_mask

(	ring	->	align_mask	+	1	)	-	(	ring	->	wptr	&	ring	->	align_mask	)
(	ring	->	align_mask	+	1	)	-	ring	->	wptr	&	ring	->	align_mask
(	ring	->	wptr	<<	ring	->	ptr_reg_shift	)	&	ring	->	ptr_reg_mask

(	ring	->	ring_size	/	4	)	-	1

surf	->	nbx	&	(	palign	-	1	)

surf	->	nbx	&	(	palign	-	1	)

surf	->	nby	&	(	8	-	1	)

surf	->	nbx	&	(	palign	-	1	)

surf	->	nby	&	(	halign	-	1	)

(	pitch	+	1	)	*	8
pitch	+	1	*	8
(	(	slice	+	1	)	*	64	)	/	surf	.	nbx
(	slice	+	1	*	64	)	/	surf	.	nbx
offset	&	(	surf	.	base_align	-	1	)

(	tmp	+	size	*	mslice	)	<=	bsize

(	(	nby	*	surf	.	nbx	)	/	64	)	-	1

(	pitch	+	1	)	*	8
pitch	+	1	*	8
(	(	slice	+	1	)	*	64	)	/	surf	.	nbx
(	slice	+	1	*	64	)	/	surf	.	nbx
offset	&	(	surf	.	base_align	-	1	)

offset	&	(	surf	.	base_align	-	1	)

(	pitch	+	1	)	*	8
pitch	+	1	*	8
(	(	slice	+	1	)	*	64	)	/	surf	.	nbx
(	slice	+	1	*	64	)	/	surf	.	nbx
offset	&	(	surf	.	base_align	-	1	)

offset	&	(	surf	.	base_align	-	1	)

toffset	&	(	surf	.	base_align	-	1	)

moffset	&	(	surf	.	base_align	-	1	)

surf	.	nbx	<	surf	.	palign	||	surf	.	nby	<	surf	.	halign

track	->	vgt_strmout_config	&	(	1	<<	i	)

(	track	->	vgt_strmout_buffer_config	>>	(	i	*	4	)	)	&	0xf

buffer_mask	&	(	1	<<	i	)

(	tmp	>>	(	i	*	4	)	)	&	0xF

(	pkt	->	count	+	1	+	pkt	->	idx	)	>=	ib_chunk	->	length_dw

p	->	chunk_relocs_idx	==	-	1

(	tmp	>>	16	)	&	0x7

radeon_get_ib_value	(	p	,	idx	+	1	)	!=	0xffffffff	||	radeon_get_ib_value	(	p	,	idx	+	2	)	!=	0

pkt	->	count	!=	2	&&	pkt	->	count	!=	0

4	*	pkt	->	count	+	start_reg	-	4

start_reg	+	(	4	*	i	)

4	*	pkt	->	count	+	start_reg	-	4

start_reg	+	(	4	*	i	)

4	*	pkt	->	count	+	start_reg	-	4

idx	+	1	+	(	i	*	8	)	+	7

idx	+	1	+	(	i	*	8	)

4	*	pkt	->	count	+	start_reg	-	4

4	*	pkt	->	count	+	start_reg	-	4

4	*	pkt	->	count	+	start_reg	-	4

4	*	pkt	->	count	+	start_reg	-	4

radeon_get_ib_value	(	p	,	idx	+	1	)	<<	2

radeon_get_ib_value	(	p	,	idx	+	3	)	<<	2

(	sa_manager	->	size	-	offset	)	<	size

(	mode	->	crtc_hsync_end	-	mode	->	crtc_hsync_start	)	/	8
mode	->	crtc_hsync_end	-	mode	->	crtc_hsync_start	/	8
native_mode	->	hdisplay	==	0	||	native_mode	->	vdisplay	==	0

(	mode	->	crtc_hblank_end	-	mode	->	crtc_hblank_start	)	/	8
mode	->	crtc_hblank_end	-	mode	->	crtc_hblank_start	/	8
(	mode	->	crtc_hsync_end	-	mode	->	crtc_hsync_start	)	/	8
mode	->	crtc_hsync_end	-	mode	->	crtc_hsync_start	/	8
!	atomic	&&	!	crtc	->	fb

!	atomic	&&	fb	&&	fb	!=	crtc	->	fb

(	mode	->	crtc_hsync_end	-	mode	->	crtc_hsync_start	)	/	8
mode	->	crtc_hsync_end	-	mode	->	crtc_hsync_start	/	8
(	rdev	->	pdev	->	device	==	0x9900	)	||	(	rdev	->	pdev	->	device	==	0x9901	)	||	(	rdev	->	pdev	->	device	==	0x9905	)	||	(	rdev	->	pdev	->	device	==	0x9906	)	||	(	rdev	->	pdev	->	device	==	0x9907	)	||	(	rdev	->	pdev	->	device	==	0x9908	)	||	(	rdev	->	pdev	->	device	==	0x9909	)	||	(	rdev	->	pdev	->	device	==	0x990B	)	||	(	rdev	->	pdev	->	device	==	0x990C	)	||	(	rdev	->	pdev	->	device	==	0x990F	)	||	(	rdev	->	pdev	->	device	==	0x9910	)	||	(	rdev	->	pdev	->	device	==	0x9917	)	||	(	rdev	->	pdev	->	device	==	0x9999	)	||	(	rdev	->	pdev	->	device	==	0x999C	)

(	rdev	->	pdev	->	device	==	0x9903	)	||	(	rdev	->	pdev	->	device	==	0x9904	)	||	(	rdev	->	pdev	->	device	==	0x990A	)	||	(	rdev	->	pdev	->	device	==	0x990D	)	||	(	rdev	->	pdev	->	device	==	0x990E	)	||	(	rdev	->	pdev	->	device	==	0x9913	)	||	(	rdev	->	pdev	->	device	==	0x9918	)	||	(	rdev	->	pdev	->	device	==	0x999D	)

(	rdev	->	pdev	->	device	==	0x9919	)	||	(	rdev	->	pdev	->	device	==	0x9990	)	||	(	rdev	->	pdev	->	device	==	0x9991	)	||	(	rdev	->	pdev	->	device	==	0x9994	)	||	(	rdev	->	pdev	->	device	==	0x9995	)	||	(	rdev	->	pdev	->	device	==	0x9996	)	||	(	rdev	->	pdev	->	device	==	0x999A	)	||	(	rdev	->	pdev	->	device	==	0x99A0	)

ib	->	length_dw	|	(	ib	->	vm_id	<<	24	)

!	rdev	->	me_fw	||	!	rdev	->	pfp_fw	||	!	rdev	->	rlc_fw

!	rdev	->	me_fw	||	!	rdev	->	pfp_fw	||	!	rdev	->	rlc_fw	||	!	rdev	->	mc_fw

vm	->	id	==	-	1

(	w	/	8	)	-	1

(	(	w	*	h	)	/	64	)	-	1

(	pitch	<<	0	)	|	(	slice	<<	10	)

(	x1	<<	0	)	|	(	y1	<<	16	)

(	x2	<<	0	)	|	(	y2	<<	16	)

(	x1	<<	0	)	|	(	y1	<<	16	)	|	(	1	<<	31	)

(	x2	<<	0	)	|	(	y2	<<	16	)

(	x1	<<	0	)	|	(	y1	<<	16	)	|	(	1	<<	31	)

(	x2	<<	0	)	|	(	y2	<<	16	)

(	num_loops	*	48	)	+	256

(	rdev	->	r600_blit	.	vb_used	+	48	)	>	rdev	->	r600_blit	.	vb_total

p	->	chunk_relocs_idx	==	-	1

!	error	&&	parser	->	ib

parser	->	chunk_ib_idx	==	-	1

parser	->	chunk_ib_idx	==	-	1

(	tmp	>>	2	)	&	3

(	1	<<	pipe_select_current	)	|	(	(	(	gb_pipe_select	>>	8	)	&	0xF	)	<<	4	)
(	1	<<	pipe_select_current	)	|	(	(	gb_pipe_select	>>	8	)	&	0xF	<<	4	)
!	radeon_card_posted	(	rdev	)	&&	rdev	->	bios

rdev	->	scratch	.	reg_base	+	(	i	*	4	)

ib	->	length_dw	|	(	ib	->	vm_id	<<	24	)

(	mc	->	vram_start	&	~	mc	->	gtt_base_align	)	-	mc	->	gtt_size
mc	->	vram_start	&	~	mc	->	gtt_base_align	-	mc	->	gtt_size
(	mc	->	vram_end	+	1	+	mc	->	gtt_base_align	)	&	~	mc	->	gtt_base_align

vm	->	id	==	-	1

!	rdev	->	me_fw	||	!	rdev	->	pfp_fw	||	!	rdev	->	ce_fw	||	!	rdev	->	rlc_fw	||	!	rdev	->	mc_fw

rdev	->	scratch	.	reg_base	+	(	i	*	4	)

(	mc	->	vram_start	&	~	mc	->	gtt_base_align	)	-	mc	->	gtt_size
mc	->	vram_start	&	~	mc	->	gtt_base_align	-	mc	->	gtt_size
(	mc	->	vram_end	+	1	+	mc	->	gtt_base_align	)	&	~	mc	->	gtt_base_align

(	dev	->	pdev	->	device	==	0x514D	)	&&	(	dev	->	pdev	->	subsystem_vendor	==	0x174B	)	&&	(	dev	->	pdev	->	subsystem_device	==	0x7149	)

(	lvds	->	native_mode	.	hdisplay	<	640	)	||	(	lvds	->	native_mode	.	vdisplay	<	480	)

(	RBIOS16	(	tmp	)	==	lvds	->	native_mode	.	hdisplay	)	&&	(	RBIOS16	(	tmp	+	2	)	==	lvds	->	native_mode	.	vdisplay	)

lvds	->	native_mode	.	hdisplay	+	(	RBIOS16	(	tmp	+	17	)	-	RBIOS16	(	tmp	+	19	)	)	*	8
lvds	->	native_mode	.	hdisplay	+	RBIOS16	(	tmp	+	17	)	-	RBIOS16	(	tmp	+	19	)	*	8
lvds	->	native_mode	.	hdisplay	+	(	RBIOS16	(	tmp	+	21	)	-	RBIOS16	(	tmp	+	19	)	-	1	)	*	8
lvds	->	native_mode	.	hdisplay	+	RBIOS16	(	tmp	+	21	)	-	RBIOS16	(	tmp	+	19	)	-	1	*	8
lvds	->	native_mode	.	hsync_start	+	(	RBIOS8	(	tmp	+	23	)	*	8	)

lvds	->	native_mode	.	vdisplay	+	(	(	RBIOS16	(	tmp	+	28	)	&	0x7ff	)	-	RBIOS16	(	tmp	+	26	)	)
lvds	->	native_mode	.	vdisplay	+	(	RBIOS16	(	tmp	+	28	)	&	0x7ff	-	RBIOS16	(	tmp	+	26	)	)
lvds	->	native_mode	.	vsync_start	+	(	(	RBIOS16	(	tmp	+	28	)	&	0xf800	)	>>	11	)
lvds	->	native_mode	.	vsync_start	+	RBIOS16	(	tmp	+	28	)	&	0xf800	>>	11
RBIOS16	(	tmp	+	9	)	*	10

dev	->	pdev	->	device	==	0x515e	&&	dev	->	pdev	->	subsystem_vendor	==	0x1014

dev	->	pdev	->	device	==	0x5B60	&&	dev	->	pdev	->	subsystem_vendor	==	0x17af	&&	dev	->	pdev	->	subsystem_device	==	0x201e	&&	bios_index	==	2

dev	->	pdev	->	device	==	0x5159	&&	dev	->	pdev	->	subsystem_vendor	==	0x1014	&&	dev	->	pdev	->	subsystem_device	==	0x029A

(	dev	->	pdev	->	device	==	0x4152	)	&&	(	dev	->	pdev	->	subsystem_vendor	==	0x1043	)	&&	(	dev	->	pdev	->	subsystem_device	==	0xc002	)

i	<	0	||	i	>	rdev	->	gart	.	num_gpu_pages

(	reg	-	0x4E38	)	>>	2

(	reg	-	0x44C0	)	>>	2

(	reg	-	0x4400	)	>>	2

(	reg	-	0x4500	)	>>	2

(	reg	-	0x4480	)	>>	2

(	(	radeon_get_ib_value	(	p	,	idx	+	1	)	>>	4	)	&	0x3	)	!=	3
(	radeon_get_ib_value	(	p	,	idx	+	1	)	>>	4	)	&	0x3	!=	3
(	(	radeon_get_ib_value	(	p	,	idx	)	>>	4	)	&	0x3	)	!=	3
(	radeon_get_ib_value	(	p	,	idx	)	>>	4	)	&	0x3	!=	3
(	box	->	y1	<<	16	)	|	box	->	x1

(	(	box	->	y2	-	1	)	<<	16	)	|	(	box	->	x2	-	1	)

(	x	<<	16	)	|	y

(	w	<<	16	)	|	h

(	x	<<	16	)	|	y

(	w	<<	16	)	|	h

(	x	<<	16	)	|	y

(	w	<<	16	)	|	h

(	0xff	<<	22	)	|	(	0xff	<<	6	)	|	0x003f003f

(	x	<<	16	)	|	y

(	x	<<	16	)	|	y

(	w	<<	16	)	|	h

(	nr	&	1	)	||	nr	==	0

nr	%	3	||	nr	==	0

start	>=	prim	->	finish	||	(	prim	->	start	&	0x7	)

size	<	4	&&	size	>	0

0	&&	!	buf

tex_width	>=	64	||	tex_width	<=	16

tex_width	>=	64	||	tex_width	==	16

idx	<	0	||	idx	>=	dma	->	buf_count

buf	->	file_priv	!=	file_priv	||	buf	->	pending

rdev	->	pm	.	max_bandwidth	.	full	>	rdev	->	pm	.	sideport_bandwidth	.	full	&&	rdev	->	pm	.	sideport_bandwidth	.	full

rdev	->	pm	.	max_bandwidth	.	full	>	rdev	->	pm	.	k8_bandwidth	.	full	&&	rdev	->	pm	.	k8_bandwidth	.	full

rdev	->	pm	.	max_bandwidth	.	full	>	rdev	->	pm	.	ht_bandwidth	.	full	&&	rdev	->	pm	.	ht_bandwidth	.	full

(	num	==	1	)	&&	(	p	->	len	==	0	)

i	<	0	||	i	>	rdev	->	gart	.	num_gpu_pages

(	next	==	head	)	&&	(	next	==	head	->	prev	)

!	list_empty	(	head	)	&&	(	head	->	next	==	head	->	prev	)

list_is_singular	(	head	)	&&	(	head	->	next	!=	entry	&&	head	!=	entry	)

(	t	->	nentry	+	3	)	/	4
t	->	nentry	+	3	/	4
(	(	t	->	offset_max	>>	2	)	+	31	)	/	32
t	->	offset_max	>>	2	+	31	/	32
(	offset	->	offset	>>	2	)	/	32
offset	->	offset	>>	2	/	32
(	offset	->	offset	>>	2	)	&	31

bo	->	surface_reg	==	-	1

(	offset	+	size	)	>	rdev	->	mc	.	visible_vram_size

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

voltage	->	voltage	&&	(	voltage	->	voltage	!=	rdev	->	pm	.	current_vddc	)

voltage	->	vddci	&&	(	voltage	->	vddci	!=	rdev	->	pm	.	current_vddci	)

(	rdev	->	pdev	->	device	==	0x9647	)	||	(	rdev	->	pdev	->	device	==	0x964a	)

!	rdev	->	me_fw	||	!	rdev	->	pfp_fw	||	!	rdev	->	rlc_fw	||	!	rdev	->	mc_fw

!	rdev	->	me_fw	||	!	rdev	->	pfp_fw	||	!	rdev	->	rlc_fw

ASIC_IS_AVIVO	(	rdev	)	&&	!	ASIC_IS_DCE6	(	rdev	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

!	(	gctx	->	io_mode	&	0x80	)
!	gctx	->	io_mode	&	0x80
!	(	gctx	->	io_mode	&	0x80	)
!	gctx	->	io_mode	&	0x80
!	(	ctx	->	ctx	->	cs_above	||	ctx	->	ctx	->	cs_equal	)
!	ctx	->	ctx	->	cs_above	||	ctx	->	ctx	->	cs_equal
ctx	->	last_jump	==	(	ctx	->	start	+	target	)

ctx	->	ctx	->	data_table	+	4	+	2	*	idx

ctx	->	cmd_table	+	4	+	2	*	index

index	*	2	+	4

index	*	2	+	4

crtc	<	0	||	crtc	>=	rdev	->	num_crtc

crtc	<	0	||	crtc	>=	rdev	->	num_crtc

crtc	<	0	||	crtc	>=	rdev	->	num_crtc

crtc	<	0	||	crtc	>=	dev	->	num_crtcs

(	rdev	->	vm_manager	.	max_pfn	*	8	)	>>	10

vm	->	id	==	-	1

~	(	1	<<	vm	->	id	)
~	1	<<	vm	->	id
vm	->	id	!=	-	1

!	(	rdev	->	vm_manager	.	use_bitmap	&	(	1	<<	i	)	)
!	rdev	->	vm_manager	.	use_bitmap	&	(	1	<<	i	)
id	==	-	1

(	(	32	<<	20	)	>>	12	)	-	1
(	32	<<	20	)	>>	12	-	1
(	last_pfn	+	align	)	&	~	align

vm	->	id	==	-	1

native_mode	->	hdisplay	!=	0	&&	native_mode	->	vdisplay	!=	0	&&	native_mode	->	clock	!=	0

native_mode	->	hdisplay	!=	0	&&	native_mode	->	vdisplay	!=	0

(	!	radeon_connector	->	use_digital	)	&&	radeon_connector	->	shared_ddc

radeon_connector	->	use_digital	&&	(	mode	->	clock	>	165000	)

radeon_connector	->	ddc_bus	&&	!	radeon_connector	->	edid

radeon_connector	->	ddc_bus	&&	!	radeon_connector	->	edid

(	w	/	8	)	-	1

(	(	w	*	h	)	/	64	)	-	1

(	w	-	1	)	|	(	(	h	-	1	)	<<	16	)

(	x2	==	1	)	&&	(	y2	==	1	)

(	x1	<<	0	)	|	(	y1	<<	16	)

(	x2	<<	0	)	|	(	y2	<<	16	)

(	x1	<<	0	)	|	(	y1	<<	16	)	|	(	1	<<	31	)

(	x2	<<	0	)	|	(	y2	<<	16	)

(	x1	<<	0	)	|	(	y1	<<	16	)	|	(	1	<<	31	)

(	x2	<<	0	)	|	(	y2	<<	16	)

radeon_align_pitch	(	rdev	,	args	->	width	,	args	->	bpp	,	0	)	*	(	(	args	->	bpp	+	1	)	/	8	)
radeon_align_pitch	(	rdev	,	args	->	width	,	args	->	bpp	,	0	)	*	(	args	->	bpp	+	1	/	8	)
d	->	request_count	<	0	||	d	->	request_count	>	dma	->	buf_count

master_priv	->	sarea_priv	&&	master_priv	->	sarea_priv	->	pfCurrentPage	!=	0

(	!	rdev	->	clock	.	default_mclk	)	&&	rdev	->	asic	->	pm	.	get_memory_clock

(	1	<<	rdev	->	num_gb_pipes	)	-	1
1	<<	rdev	->	num_gb_pipes	-	1
(	tmp	>>	2	)	&	3

(	1	<<	pipe_select_current	)	|	(	(	(	gb_pipe_select	>>	8	)	&	0xF	)	<<	4	)
(	1	<<	pipe_select_current	)	|	(	(	gb_pipe_select	>>	8	)	&	0xF	<<	4	)
crtc	<	0	||	crtc	>=	rdev	->	num_crtc

crtc	<	0	||	crtc	>=	rdev	->	num_crtc

dig	->	dig_encoder	==	-	1

dig_encoder	==	-	1

(	dev	->	pdev	->	device	==	0x71C5	)	&&	(	dev	->	pdev	->	subsystem_vendor	==	0x106b	)	&&	(	dev	->	pdev	->	subsystem_device	==	0x0080	)

ASIC_IS_DCE41	(	rdev	)	&&	!	ASIC_IS_DCE61	(	rdev	)

ASIC_IS_AVIVO	(	rdev	)	&&	!	ASIC_IS_DCE4	(	rdev	)

radeon_get_ib_value	(	p	,	idx	++	)	&	0x1F

i	<	(	c	-	1	)

rdev	->	pm	.	current_power_state_index	==	(	rdev	->	pm	.	num_power_states	-	1	)

i	<	0	||	i	>	rdev	->	gart	.	num_gpu_pages

64	+	(	10	*	num_loops	)

(	0x1fff	)	|	(	0x1fff	<<	16	)

(	0x1fff	)	|	(	0x1fff	<<	16	)

(	1	<<	(	rb_bufsz	+	1	)	)	*	4
1	<<	(	rb_bufsz	+	1	)	*	4
pre_write_timer	|	(	pre_write_limit	<<	28	)

(	reg	>>	7	)	>	n

(	(	reg	+	(	pkt	->	count	<<	2	)	)	>>	7	)	>	n
(	(	reg	+	pkt	->	count	<<	2	)	>>	7	)	>	n
1	<<	(	(	reg	>>	2	)	&	31	)
1	<<	(	reg	>>	2	)	&	31
(	pkt	->	count	+	1	+	pkt	->	idx	)	>=	ib_chunk	->	length_dw

p	->	chunk_relocs_idx	==	-	1

(	(	radeon_get_ib_value	(	p	,	idx	+	1	)	>>	4	)	&	0x3	)	!=	3
(	radeon_get_ib_value	(	p	,	idx	+	1	)	>>	4	)	&	0x3	!=	3
(	(	radeon_get_ib_value	(	p	,	idx	)	>>	4	)	&	0x3	)	!=	3
(	radeon_get_ib_value	(	p	,	idx	)	>>	4	)	&	0x3	!=	3
(	rdev	->	disp_priority	==	2	)	&&	ASIC_IS_R300	(	rdev	)

max_stop_req	-	critical_point	<	4

max_stop_req	-	critical_point2	<	4

(	h	+	block_height	-	1	)	/	block_height
h	+	block_height	-	1	/	block_height
(	w	+	block_width	-	1	)	/	block_width
w	+	block_width	-	1	/	block_width
w	/	(	1	<<	i	)
w	/	1	<<	i
h	/	(	1	<<	i	)
h	/	1	<<	i
num_cb	&&	!	track	->	zb_cb_clear	&&	!	track	->	color_channel_mask	&&	!	track	->	blend_read_enable

(	track	->	vap_vf_cntl	>>	4	)	&	0x3

track	->	vap_vf_cntl	&	(	1	<<	14	)

(	track	->	vap_vf_cntl	>>	16	)	&	0xFFFF

crtc	<	0	||	crtc	>	1

(	sizes	->	surface_bpp	==	24	)	&&	ASIC_IS_AVIVO	(	rdev	)

!	options	||	!	*	options

ASIC_IS_RN50	(	rdev	)	||	rdev	->	mc	.	real_vram_size	<=	(	32	*	1024	*	1024	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	num	==	1	)	&&	(	p	->	len	==	0	)

(	num	==	1	)	&&	(	p	->	len	==	0	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

fb	->	width	*	fb	->	height	*	(	fb	->	bits_per_pixel	>>	3	)
fb	->	width	*	fb	->	height	*	fb	->	bits_per_pixel	>>	3
fbi	->	var	.	xoffset	*	(	fb	->	bits_per_pixel	>>	3	)
fbi	->	var	.	xoffset	*	fb	->	bits_per_pixel	>>	3
!	dev	->	mode_config	.	num_crtc	||	!	dev	->	mode_config	.	num_connector

!	private	||	!	private	->	fb_helper

!	private	||	!	private	->	fb_helper

manager	->	pipe	==	-	1

manager	->	pipe	==	-	1

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	width	<<	16	)	/	width
width	<<	16	/	width
(	height	<<	16	)	/	height
height	<<	16	/	height
win	<	0	||	win	>	MIXER_WIN_NR

win	<	0	||	win	>	MIXER_WIN_NR

win	<	0	||	win	>	MIXER_WIN_NR

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

win	<	0	||	win	>	WINDOWS_NR

overlay	->	fb_x	*	(	overlay	->	bpp	>>	3	)
overlay	->	fb_x	*	overlay	->	bpp	>>	3
(	overlay	->	fb_width	-	overlay	->	crtc_width	)	*	(	overlay	->	bpp	>>	3	)
(	overlay	->	fb_width	-	overlay	->	crtc_width	)	*	overlay	->	bpp	>>	3
overlay	->	crtc_width	*	(	overlay	->	bpp	>>	3	)
overlay	->	crtc_width	*	overlay	->	bpp	>>	3
win	<	0	||	win	>	WINDOWS_NR

win	<	0	||	win	>	WINDOWS_NR

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

win	<	0	||	win	>	WINDOWS_NR

overlay	->	fb_x	*	(	overlay	->	bpp	>>	3	)
overlay	->	fb_x	*	overlay	->	bpp	>>	3
(	overlay	->	fb_width	-	overlay	->	crtc_width	)	*	(	overlay	->	bpp	>>	3	)
overlay	->	fb_width	-	overlay	->	crtc_width	*	(	overlay	->	bpp	>>	3	)
overlay	->	crtc_width	*	(	overlay	->	bpp	>>	3	)
overlay	->	crtc_width	*	overlay	->	bpp	>>	3
win	<	0	||	win	>	WINDOWS_NR

win_data	->	fb_width	*	win_data	->	ovl_height	*	(	win_data	->	bpp	>>	3	)
win_data	->	fb_width	*	win_data	->	ovl_height	*	win_data	->	bpp	>>	3
VIDOSDxB_BOTRIGHT_X	(	win_data	->	offset_x	+	win_data	->	ovl_width	-	1	)	|	VIDOSDxB_BOTRIGHT_Y	(	win_data	->	offset_y	+	win_data	->	ovl_height	-	1	)

win	!=	3	&&	win	!=	4

win	<	0	||	win	>	WINDOWS_NR

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

flags	&	~	(	EXYNOS_BO_MASK	)

(	exynos_gem_obj	->	flags	&	EXYNOS_BO_NONCONTIG	)	&&	exynos_gem_obj	->	buffer	->	pages

args	->	width	*	args	->	bpp	>>	3

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

dev_priv	->	fence_queue_waiters	++	==	0

--	dev_priv	->	fence_queue_waiters	==	0

dev_priv	->	goal_queue_waiters	++	==	0

--	dev_priv	->	goal_queue_waiters	==	0

ret	==	0	&&	bo	->	offset	!=	0

sw_context	->	cid_valid	&&	cmd	->	cid	==	sw_context	->	last_cid

bo	==	dev_priv	->	pinned_bo	||	(	bo	==	dev_priv	->	dummy_query_bo	&&	dev_priv	->	dummy_query_bo_pinned	)

sw_context	->	cmd_bounce_size	+	(	sw_context	->	cmd_bounce_size	>>	1	)
sw_context	->	cmd_bounce_size	+	sw_context	->	cmd_bounce_size	>>	1
dev_priv	->	num_3d_resources	++	==	0

--	dev_priv	->	num_3d_resources	==	0

pfn	!=	prev_pfn	+	1

desc_virtual	-	page_virtual	==	desc_per_page	-	1

prev_pfn	+	1	!=	pfn

--	(	ld	->	num_active	)	==	0

!	ld	->	num_active	&&	ld	->	fb

dev_priv	->	ldu_priv	->	fb	&&	vfb	&&	!	(	dev_priv	->	ldu_priv	->	num_active	==	1	&&	!	list_empty	(	&	ldu	->	active	)	)	&&	dev_priv	->	ldu_priv	->	fb	!=	vfb
dev_priv	->	ldu_priv	->	fb	&&	vfb	&&	!	dev_priv	->	ldu_priv	->	num_active	==	1	&&	!	list_empty	(	&	ldu	->	active	)	&&	dev_priv	->	ldu_priv	->	fb	!=	vfb
set	->	num_connectors	==	0	||	!	set	->	mode	||	!	set	->	fb

set	->	x	+	mode	->	hdisplay	>	fb	->	width	||	set	->	y	+	mode	->	vdisplay	>	fb	->	height

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

ret	==	0	&&	id	>=	gman	->	max_gmr_ids

!	ld	->	num_implicit	&&	ld	->	implicit_fb

!	sou	->	active_implicit	&&	sou	->	base	.	is_implicit

sou	->	base	.	is_implicit	&&	dev_priv	->	sou_priv	->	implicit_fb	&&	vfb	&&	!	(	dev_priv	->	sou_priv	->	num_implicit	==	1	&&	sou	->	active_implicit	)	&&	dev_priv	->	sou_priv	->	implicit_fb	!=	vfb
sou	->	base	.	is_implicit	&&	dev_priv	->	sou_priv	->	implicit_fb	&&	vfb	&&	!	dev_priv	->	sou_priv	->	num_implicit	==	1	&&	sou	->	active_implicit	&&	dev_priv	->	sou_priv	->	implicit_fb	!=	vfb
set	->	num_connectors	==	0	||	!	set	->	mode	||	!	set	->	fb

set	->	x	+	mode	->	hdisplay	>	fb	->	width	||	set	->	y	+	mode	->	vdisplay	>	fb	->	height

mode	->	hdisplay	!=	crtc	->	mode	.	hdisplay	||	mode	->	vdisplay	!=	crtc	->	mode	.	vdisplay

(	var	->	xoffset	+	var	->	xres	)	>	par	->	max_width	||	(	var	->	yoffset	+	var	->	yres	)	>	par	->	max_height

!	vmw_kms_validate_mode_vram	(	vmw_priv	,	info	->	fix	.	line_length	,	var	->	yoffset	+	var	->	yres	)

res	->	id	!=	-	1

id	!=	-	1

res	->	id	!=	-	1

ctx	->	base	.	tfile	!=	tfile	&&	!	ctx	->	base	.	shareable

res	->	id	!=	-	1

res	->	id	!=	-	1

res	->	id	==	-	1

ret	!=	0	&&	srf	->	res	.	id	!=	-	1

!	res	->	avail	||	res	->	res_free	!=	&	vmw_user_surface_free

args	->	width	*	(	(	args	->	bpp	+	7	)	/	8	)
args	->	width	*	(	args	->	bpp	+	7	/	8	)
cmd	->	dma	.	host	.	face	!=	0	||	cmd	->	dma	.	host	.	mipmap	!=	0

clip	.	x1	>=	unit	->	crtc	.	mode	.	hdisplay	||	clip	.	y1	>=	unit	->	crtc	.	mode	.	vdisplay	||	clip	.	x2	<=	0	||	clip	.	y2	<=	0

clip	.	x1	>=	unit	->	crtc	.	mode	.	hdisplay	||	clip	.	y1	>=	unit	->	crtc	.	mode	.	vdisplay	||	clip	.	x2	<=	0	||	clip	.	y2	<=	0

fw	->	size	!=	256	*	8

d	->	request_count	<	0	||	d	->	request_count	>	dma	->	buf_count

(	x	<<	16	)	|	y

(	w	<<	16	)	|	h

(	x	<<	16	)	|	y

(	w	<<	16	)	|	h

(	x	<<	16	)	|	y

(	w	<<	16	)	|	h

(	x	<<	16	)	|	y

(	x	<<	16	)	|	y

(	w	<<	16	)	|	h

(	x	<<	16	)	|	y

(	1	<<	16	)	|	1

(	x	<<	16	)	|	y

(	1	<<	16	)	|	1

(	1	<<	16	)	|	1

(	1	<<	16	)	|	1

(	x	<<	16	)	|	y

(	0	<<	16	)	|	0

(	count	<<	16	)	|	1

(	i	<<	16	)	|	0

(	1	<<	16	)	|	1

tfile	!=	base	->	tfile	&&	!	base	->	shareable

bdev	->	driver	->	io_mem_reserve	&&	mem	->	bus	.	io_reserved_count	++	==	0

bdev	->	driver	->	io_mem_reserve	&&	--	mem	->	bus	.	io_reserved_count	==	0	&&	bdev	->	driver	->	io_mem_free

(	old_mem	->	mem_type	==	new_mem	->	mem_type	)	&&	(	new_mem	->	start	<	old_mem	->	start	+	old_mem	->	size	)

i	*	dir	+	add

npages	&&	!	(	pool	->	type	&	IS_CACHED	)	&&	set_pages_array_wb	(	pages	,	npages	)
npages	&&	!	pool	->	type	&	IS_CACHED	&&	set_pages_array_wb	(	pages	,	npages	)
!	(	pool	->	type	&	IS_CACHED	)	&&	set_pages_array_wb	(	&	d_page	->	p	,	1	)
!	pool	->	type	&	IS_CACHED	&&	set_pages_array_wb	(	&	d_page	->	p	,	1	)
(	i	+	pool_offset	)	%	NUM_POOLS
i	+	pool_offset	%	NUM_POOLS
count	<	_manager	->	options	.	small	&&	count	>	pool	->	npages

count	<=	pool	->	npages	/	2

!	page	&&	i	==	0

++	page_offset	>=	page_last

--	lock	->	rw	==	0

lock	->	rw	>=	0	&&	lock	->	flags	==	0

lock	->	rw	>=	0	&&	lock	->	flags	==	0

lock	->	rw	==	0	&&	(	(	lock	->	flags	&	~	TTM_WRITE_LOCK_PENDING	)	==	0	)
lock	->	rw	==	0	&&	(	(	lock	->	flags	&	~	TTM_WRITE_LOCK_PENDING	)	==	0	)
!	(	lock	->	flags	&	TTM_VT_LOCK	)
!	lock	->	flags	&	TTM_VT_LOCK
ret	||	!	entry

ret	==	0	&&	mem	->	mm_node

mem	->	mm_node	&&	placement	->	lpfn	!=	0	&&	(	mem	->	start	<	placement	->	fpfn	||	mem	->	start	+	mem	->	num_pages	>	placement	->	lpfn	)
mem	->	mm_node	&&	placement	->	lpfn	!=	0	&&	mem	->	start	<	placement	->	fpfn	||	mem	->	start	+	mem	->	num_pages	>	placement	->	lpfn
(	placement	->	fpfn	||	placement	->	lpfn	)	&&	(	bo	->	mem	.	num_pages	>	(	placement	->	lpfn	-	placement	->	fpfn	)	)
placement	->	fpfn	||	placement	->	lpfn	&&	(	bo	->	mem	.	num_pages	>	(	placement	->	lpfn	-	placement	->	fpfn	)	)
bo	->	sync_obj	==	sync_obj	&&	bo	->	sync_obj_arg	==	sync_obj_arg

!	ttm	->	pages	||	!	ttm_dma	->	dma_address

single_zone	&&	zone	!=	single_zone

single_zone	&&	zone	!=	single_zone

single_zone	&&	zone	!=	single_zone

glob	->	zone_dma32	&&	page_to_pfn	(	page	)	>	0x00100000UL

glob	->	zone_dma32	&&	page_to_pfn	(	page	)	>	0x00100000UL

1	+	(	(	I915_READ	(	VTOTAL	(	pipe	)	)	>>	16	)	&	0x1fff	)
1	+	(	I915_READ	(	VTOTAL	(	pipe	)	)	>>	16	)	&	0x1fff
1	+	(	(	I915_READ	(	HTOTAL	(	pipe	)	)	>>	16	)	&	0x1fff	)
1	+	(	I915_READ	(	HTOTAL	(	pipe	)	)	>>	16	)	&	0x1fff
pipe	<	0	||	pipe	>=	dev_priv	->	num_pipe

IS_MOBILE	(	dev	)	||	(	IS_GEN3	(	dev	)	&&	!	IS_G33	(	dev	)	)

args	->	tiling_mode	!=	obj	->	tiling_mode	||	args	->	stride	!=	obj	->	stride

(	new_bit_17	&	0x1	)	!=	(	test_bit	(	i	,	obj	->	bit_17	)	!=	0	)
new_bit_17	&	0x1	!=	(	test_bit	(	i	,	obj	->	bit_17	)	!=	0	)
INTEL_INFO	(	dev	)	->	gen	>=	4	&&	!	HAS_PCH_SPLIT	(	dev	)

INTEL_INFO	(	dev	)	->	gen	>=	4	&&	!	HAS_PCH_SPLIT	(	dev	)

(	1	<<	0	)	|	(	1	<<	1	)	|	(	1	<<	2	)

IS_G4X	(	dev	)	&&	!	IS_GM45	(	dev	)

ring	->	irq_refcount	++	==	0

--	ring	->	irq_refcount	==	0

ring	->	irq_refcount	++	==	0

--	ring	->	irq_refcount	==	0

ring	->	irq_refcount	++	==	0

--	ring	->	irq_refcount	==	0

ring	->	last_retired_head	!=	-	1

ring	->	tail	+	n	>	ring	->	effective_size

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

5	*	(	clock	->	m1	+	2	)	+	(	clock	->	m2	+	2	)
5	*	clock	->	m1	+	2	+	(	clock	->	m2	+	2	)
refclk	*	clock	->	m	/	(	clock	->	n	+	2	)
refclk	*	clock	->	m	/	clock	->	n	+	2
clock	->	p1	<	limit	->	p1	.	min	||	limit	->	p1	.	max	<	clock	->	p1

clock	->	p	<	limit	->	p	.	min	||	limit	->	p	.	max	<	clock	->	p

clock	->	m2	<	limit	->	m2	.	min	||	limit	->	m2	.	max	<	clock	->	m2

clock	->	m1	<	limit	->	m1	.	min	||	limit	->	m1	.	max	<	clock	->	m1

clock	->	m1	<=	clock	->	m2	&&	!	IS_PINEVIEW	(	dev	)

clock	->	m	<	limit	->	m	.	min	||	limit	->	m	.	max	<	clock	->	m

clock	->	n	<	limit	->	n	.	min	||	limit	->	n	.	max	<	clock	->	n

clock	->	vco	<	limit	->	vco	.	min	||	limit	->	vco	.	max	<	clock	->	vco

clock	->	dot	<	limit	->	dot	.	min	||	limit	->	dot	.	max	<	clock	->	dot

clock	.	m2	>=	clock	.	m1	&&	!	IS_PINEVIEW	(	dev	)

match_clock	&&	clock	.	p	!=	match_clock	->	p

(	target	>>	8	)	+	(	target	>>	9	)
target	>>	8	+	target	>>	9
match_clock	&&	clock	.	p	!=	match_clock	->	p

5	*	(	clock	.	m1	+	2	)	+	(	clock	.	m2	+	2	)
5	*	clock	.	m1	+	2	+	(	clock	.	m2	+	2	)
96000	*	clock	.	m	/	(	clock	.	n	+	2	)	/	clock	.	p
96000	*	clock	.	m	/	clock	.	n	+	2	/	clock	.	p
(	cfb_pitch	/	64	)	-	1

(	crtc	->	mode	.	hdisplay	>	2048	)	||	(	crtc	->	mode	.	vdisplay	>	1536	)

(	IS_I915GM	(	dev	)	||	IS_I945GM	(	dev	)	)	&&	intel_crtc	->	plane	!=	0
IS_I915GM	(	dev	)	||	IS_I945GM	(	dev	)	&&	intel_crtc	->	plane	!=	0
dev_priv	->	cfb_plane	==	intel_crtc	->	plane	&&	dev_priv	->	cfb_fb	==	fb	->	base	.	id	&&	dev_priv	->	cfb_y	==	crtc	->	y

(	y	<<	16	)	|	x

(	y	<<	16	)	|	x

atomic_read	(	&	dev_priv	->	mm	.	wedged	)	||	atomic_read	(	&	obj	->	pending_flip	)	==	0

is_desktop	==	latency	->	is_desktop	&&	is_ddr3	==	latency	->	is_ddr3	&&	fsb	==	latency	->	fsb_freq	&&	mem	==	latency	->	mem_freq

display	->	fifo_size	*	display	->	cacheline_size	-	hdisplay	*	8

(	cursor_latency_ns	/	line_time_us	+	1000	)	/	1000
cursor_latency_ns	/	line_time_us	+	1000	/	1000
cursor	->	fifo_size	*	cursor	->	cacheline_size	-	hdisplay	*	8

!	(	display_wm	||	cursor_wm	)
!	display_wm	||	cursor_wm
(	latency_ns	/	line_time_us	+	1000	)	/	1000
latency_ns	/	line_time_us	+	1000	/	1000
(	(	(	sr_latency_ns	/	line_time_us	)	+	1000	)	/	1000	)	*	pixel_size	*	hdisplay
(	(	sr_latency_ns	/	line_time_us	)	+	1000	/	1000	)	*	pixel_size	*	hdisplay
(	(	(	sr_latency_ns	/	line_time_us	)	+	1000	)	/	1000	)	*	pixel_size	*	64
(	(	sr_latency_ns	/	line_time_us	)	+	1000	/	1000	)	*	pixel_size	*	64
(	(	(	sr_latency_ns	/	line_time_us	)	+	1000	)	/	1000	)	*	pixel_size	*	hdisplay
(	(	sr_latency_ns	/	line_time_us	)	+	1000	/	1000	)	*	pixel_size	*	hdisplay
!	(	fbc_wm	||	display_wm	||	cursor_wm	)
!	fbc_wm	||	display_wm	||	cursor_wm
(	latency_ns	/	line_time_us	+	1000	)	/	1000
latency_ns	/	line_time_us	+	1000	/	1000
DIV_ROUND_UP	(	*	display_wm	*	64	,	line_size	)	+	2

!	single_plane_enabled	(	enabled	)	||	dev_priv	->	sprite_scaling_enabled

(	latency_ns	/	line_time_us	+	1000	)	/	1000
latency_ns	/	line_time_us	+	1000	/	1000
adjusted_mode	->	clock	>=	100000	&&	adjusted_mode	->	clock	<	140500

adjusted_mode	->	clock	>=	140500	&&	adjusted_mode	->	clock	<=	200000

pipe	==	0	&&	INTEL_INFO	(	dev	)	->	gen	<	4

(	adjusted_mode	->	crtc_hdisplay	-	1	)	|	(	(	adjusted_mode	->	crtc_htotal	-	1	)	<<	16	)

(	adjusted_mode	->	crtc_hblank_start	-	1	)	|	(	(	adjusted_mode	->	crtc_hblank_end	-	1	)	<<	16	)

(	adjusted_mode	->	crtc_hsync_start	-	1	)	|	(	(	adjusted_mode	->	crtc_hsync_end	-	1	)	<<	16	)

(	adjusted_mode	->	crtc_vdisplay	-	1	)	|	(	(	adjusted_mode	->	crtc_vtotal	-	1	)	<<	16	)

(	adjusted_mode	->	crtc_vblank_start	-	1	)	|	(	(	adjusted_mode	->	crtc_vblank_end	-	1	)	<<	16	)

(	adjusted_mode	->	crtc_vsync_start	-	1	)	|	(	(	adjusted_mode	->	crtc_vsync_end	-	1	)	<<	16	)

(	(	mode	->	vdisplay	-	1	)	<<	16	)	|	(	mode	->	hdisplay	-	1	)

(	(	mode	->	hdisplay	-	1	)	<<	16	)	|	(	mode	->	vdisplay	-	1	)

adjusted_mode	->	clock	>=	100000	&&	adjusted_mode	->	clock	<	140500

adjusted_mode	->	clock	>=	140500	&&	adjusted_mode	->	clock	<=	200000

!	has_edp_encoder	||	intel_encoder_is_pch_edp	(	&	has_edp_encoder	->	base	)

!	intel_crtc	->	no_pll	&&	(	!	has_edp_encoder	||	intel_encoder_is_pch_edp	(	&	has_edp_encoder	->	base	)	)
!	intel_crtc	->	no_pll	&&	!	has_edp_encoder	||	intel_encoder_is_pch_edp	(	&	has_edp_encoder	->	base	)
adjusted_mode	->	crtc_hsync_start	-	adjusted_mode	->	crtc_htotal	/	2

(	adjusted_mode	->	crtc_hdisplay	-	1	)	|	(	(	adjusted_mode	->	crtc_htotal	-	1	)	<<	16	)

(	adjusted_mode	->	crtc_hblank_start	-	1	)	|	(	(	adjusted_mode	->	crtc_hblank_end	-	1	)	<<	16	)

(	adjusted_mode	->	crtc_hsync_start	-	1	)	|	(	(	adjusted_mode	->	crtc_hsync_end	-	1	)	<<	16	)

(	adjusted_mode	->	crtc_vdisplay	-	1	)	|	(	(	adjusted_mode	->	crtc_vtotal	-	1	)	<<	16	)

(	adjusted_mode	->	crtc_vblank_start	-	1	)	|	(	(	adjusted_mode	->	crtc_vblank_end	-	1	)	<<	16	)

(	adjusted_mode	->	crtc_vsync_start	-	1	)	|	(	(	adjusted_mode	->	crtc_vsync_end	-	1	)	<<	16	)

(	(	mode	->	hdisplay	-	1	)	<<	16	)	|	(	mode	->	vdisplay	-	1	)

!	crtc	->	enabled	||	!	intel_crtc	->	active

palreg	+	4	*	i

(	htot	&	0xffff	)	+	1
htot	&	0xffff	+	1
(	(	htot	&	0xffff0000	)	>>	16	)	+	1
htot	&	0xffff0000	>>	16	+	1
(	hsync	&	0xffff	)	+	1
hsync	&	0xffff	+	1
(	(	hsync	&	0xffff0000	)	>>	16	)	+	1
hsync	&	0xffff0000	>>	16	+	1
(	vtot	&	0xffff	)	+	1
vtot	&	0xffff	+	1
(	(	vtot	&	0xffff0000	)	>>	16	)	+	1
(	vtot	&	0xffff0000	>>	16	)	+	1
(	vsync	&	0xffff	)	+	1
vsync	&	0xffff	+	1
(	(	vsync	&	0xffff0000	)	>>	16	)	+	1
(	vsync	&	0xffff0000	>>	16	)	+	1
!	HAS_PIPE_CXSR	(	dev	)	&&	intel_crtc	->	lowfreq_avail

10	*	(	timeval_to_ns	(	&	tnow	)	-	timeval_to_ns	(	&	tvbl	)	)	>	9	*	crtc	->	framedur_ns
10	*	timeval_to_ns	(	&	tnow	)	-	timeval_to_ns	(	&	tvbl	)	>	9	*	crtc	->	framedur_ns
(	++	intel_crtc	->	unpin_work	->	pending	)	>	1

(	div	*	133333	)	/	(	(	1	<<	post	)	*	pre	)
(	div	*	133333	)	/	(	1	<<	post	*	pre	)
max_ia_freq	-	(	(	diff	*	scaling_factor	)	/	2	)

IS_I945G	(	dev	)	||	(	IS_G33	(	dev	)	&&	!	IS_PINEVIEW_M	(	dev	)	)

obj	->	gtt_space	&&	!	obj	->	active	&&	obj	->	pin_count	==	0

args	->	width	*	(	(	args	->	bpp	+	7	)	/	8	)
args	->	width	*	(	args	->	bpp	+	7	/	8	)
obj_do_bit17_swizzling	&&	(	page_to_phys	(	page	)	&	(	1	<<	17	)	)	!=	0
obj_do_bit17_swizzling	&&	page_to_phys	(	page	)	&	(	1	<<	17	)	!=	0
args	->	offset	>	obj	->	base	.	size	||	args	->	size	>	obj	->	base	.	size	-	args	->	offset

obj_do_bit17_swizzling	&&	(	page_to_phys	(	page	)	&	(	1	<<	17	)	)	!=	0
obj_do_bit17_swizzling	&&	page_to_phys	(	page	)	&	(	1	<<	17	)	!=	0
args	->	offset	>	obj	->	base	.	size	||	args	->	size	>	obj	->	base	.	size	-	args	->	offset

obj	->	last_fenced_seqno	&&	pipelined	!=	obj	->	last_fenced_ring

obj	->	last_fenced_ring	&&	obj	->	last_fenced_ring	!=	pipelined

obj	->	pin_count	++	==	0

--	obj	->	pin_count	==	0

ch	!=	(	SIL164_VID	&	0xff	)
ch	!=	SIL164_VID	&	0xff
ch	!=	(	SIL164_DID	&	0xff	)
ch	!=	SIL164_DID	&	0xff
(	pixel_clock	*	bpp	+	9	)	/	10
pixel_clock	*	bpp	+	9	/	10
(	pixel_clock	*	bpp	)	>>	3

(	lane	&	1	)	*	4
lane	&	1	*	4
(	1	<<	0	)	|	(	1	<<	1	)	|	(	1	<<	2	)

IS_G4X	(	dev	)	&&	!	IS_GM45	(	dev	)

obj	->	base	.	write_domain	&&	(	(	(	obj	->	base	.	write_domain	!=	obj	->	base	.	pending_read_domains	||	obj	->	ring	!=	ring	)	)	||	(	obj	->	fenced_gpu_access	&&	!	obj	->	pending_fenced_gpu_access	)	)
obj	->	base	.	write_domain	&&	(	(	obj	->	base	.	write_domain	!=	obj	->	base	.	pending_read_domains	||	obj	->	ring	!=	ring	)	)	||	(	obj	->	fenced_gpu_access	&&	!	obj	->	pending_fenced_gpu_access	)
reloc	->	write_domain	&	(	reloc	->	write_domain	-	1	)

reloc	->	write_domain	&&	target_obj	->	pending_write_domain	&&	reloc	->	write_domain	!=	target_obj	->	pending_write_domain

reloc	->	offset	>	obj	->	base	.	size	-	4

(	(	exec	->	batch_start_offset	|	exec	->	batch_len	)	&	0x7	)	==	0
(	exec	->	batch_start_offset	|	exec	->	batch_len	&	0x7	)	==	0
2	*	tv_mode	->	nbr_end	+	1

tv_mode	->	nbr_end	<	480	&&	mode_ptr	->	vdisplay	==	480

tv_mode	->	max_srcw	&&	input	->	w	>	tv_mode	->	max_srcw

input	->	w	>	1024	&&	(	!	tv_mode	->	progressive	&&	!	tv_mode	->	component_only	)

(	1	<<	0	)	|	(	1	<<	1	)

(	1	<<	0	)	|	(	1	<<	1	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	i	%	8	)	==	0

dev_priv	->	forcewake_count	++	==	0

--	dev_priv	->	forcewake_count	==	0

!	dev	||	!	dev	->	dev_private

ret	!=	i	+	3

(	(	dtd	->	part1	.	h_high	>>	4	)	&	0x0f	)	<<	8
(	dtd	->	part1	.	h_high	>>	4	)	&	0x0f	<<	8
(	dtd	->	part2	.	sync_off_width_high	&	0xc0	)	<<	2
dtd	->	part2	.	sync_off_width_high	&	0xc0	<<	2
(	dtd	->	part2	.	sync_off_width_high	&	0x30	)	<<	4
dtd	->	part2	.	sync_off_width_high	&	0x30	<<	4
(	dtd	->	part1	.	h_high	&	0xf	)	<<	8
dtd	->	part1	.	h_high	&	0xf	<<	8
(	(	dtd	->	part1	.	v_high	>>	4	)	&	0x0f	)	<<	8
(	dtd	->	part1	.	v_high	>>	4	)	&	0x0f	<<	8
(	dtd	->	part2	.	v_sync_off_width	>>	4	)	&	0xf

(	dtd	->	part2	.	sync_off_width_high	&	0x0c	)	<<	2
dtd	->	part2	.	sync_off_width_high	&	0x0c	<<	2
mode	->	vsync_start	+	(	dtd	->	part2	.	v_sync_off_width	&	0xf	)
mode	->	vsync_start	+	dtd	->	part2	.	v_sync_off_width	&	0xf
(	dtd	->	part2	.	sync_off_width_high	&	0x3	)	<<	4
dtd	->	part2	.	sync_off_width_high	&	0x3	<<	4
(	dtd	->	part1	.	v_high	&	0xf	)	<<	8
dtd	->	part1	.	v_high	&	0xf	<<	8
1	<<	(	(	mapping	->	ddc_pin	&	0xf0	)	>>	4	)
1	<<	(	mapping	->	ddc_pin	&	0xf0	>>	4	)
INTEL_INFO	(	dev	)	->	gen	>=	4	&&	IS_MOBILE	(	dev	)

intel_sdvo_supports_hotplug	(	intel_sdvo	)	&	(	1	<<	device	)

(	1	<<	0	)	|	(	1	<<	1	)	|	(	1	<<	2	)

(	dvo_timing	->	hactive_hi	<<	8	)	|	dvo_timing	->	hactive_lo

panel_fixed_mode	->	hdisplay	+	(	(	dvo_timing	->	hsync_off_hi	<<	8	)	|	dvo_timing	->	hsync_off_lo	)
panel_fixed_mode	->	hdisplay	+	(	dvo_timing	->	hsync_off_hi	<<	8	)	|	dvo_timing	->	hsync_off_lo
panel_fixed_mode	->	hdisplay	+	(	(	dvo_timing	->	hblank_hi	<<	8	)	|	dvo_timing	->	hblank_lo	)
panel_fixed_mode	->	hdisplay	+	(	dvo_timing	->	hblank_hi	<<	8	)	|	dvo_timing	->	hblank_lo
(	dvo_timing	->	vactive_hi	<<	8	)	|	dvo_timing	->	vactive_lo

panel_fixed_mode	->	vdisplay	+	(	(	dvo_timing	->	vblank_hi	<<	8	)	|	dvo_timing	->	vblank_lo	)
panel_fixed_mode	->	vdisplay	+	(	dvo_timing	->	vblank_hi	<<	8	)	|	dvo_timing	->	vblank_lo
(	char	*	)	lvds_lfp_data	->	data	+	lfp_data_size	*	index

fp_timing	->	x_res	==	panel_fixed_mode	->	hdisplay	&&	fp_timing	->	y_res	==	panel_fixed_mode	->	vdisplay

index	==	-	1

bus_pin	>=	1	&&	bus_pin	<=	6

p_child	->	slave_addr	!=	SLAVE_ADDR1	&&	p_child	->	slave_addr	!=	SLAVE_ADDR2

(	edp	->	color_depth	>>	(	panel_type	*	2	)	)	&	3

(	params	->	dst_y	<<	16	)	|	params	->	dst_x

(	params	->	dst_h	<<	16	)	|	params	->	dst_w

(	params	->	src_w	/	uv_hscale	)	<<	16

(	params	->	src_h	/	uv_vscale	)	<<	16

rec	->	dst_x	<	mode	->	hdisplay	&&	rec	->	dst_x	+	rec	->	dst_width	<=	mode	->	hdisplay	&&	rec	->	dst_y	<	mode	->	vdisplay	&&	rec	->	dst_y	+	rec	->	dst_height	<=	mode	->	vdisplay

mode	->	hdisplay	>	1024	&&	intel_panel_fitter_pipe	(	dev	)	==	crtc	->	pipe

params	->	src_scan_h	>	params	->	src_h	||	params	->	src_scan_w	>	params	->	src_w

(	overlay	->	contrast	<<	18	)	|	(	overlay	->	brightness	&	0xff	)

attrs	->	brightness	<	-	128	||	attrs	->	brightness	>	127

(	cmd	>>	29	)	&	0x7

(	cmd	>>	23	)	&	0x3f

(	cmd	&	0xff	)	+	2
cmd	&	0xff	+	2
(	(	cmd	>>	24	)	&	0x1f	)	<=	0x18
(	cmd	>>	24	)	&	0x1f	<=	0x18
(	cmd	>>	24	)	&	0x1f

(	cmd	>>	16	)	&	0xff

(	cmd	&	0x1f	)	+	2
cmd	&	0x1f	+	2
(	cmd	&	0xf	)	+	2
cmd	&	0xf	+	2
(	cmd	&	0xffff	)	+	2
cmd	&	0xffff	+	2
cmd	&	(	1	<<	23	)

(	cmd	&	0xffff	)	+	1
cmd	&	0xffff	+	1
(	cmd	&	(	1	<<	23	)	)	==	0
cmd	&	(	1	<<	23	)	==	0
(	cmd	&	0x1ffff	)	+	2
cmd	&	0x1ffff	+	2
cmd	&	(	1	<<	17	)

(	cmd	&	0xffff	)	==	0
cmd	&	0xffff	==	0
(	(	(	cmd	&	0xffff	)	+	1	)	/	2	)	+	1
(	(	cmd	&	0xffff	+	1	)	/	2	)	+	1
(	dwords	+	1	)	&	~	1

box	->	y2	<=	box	->	y1	||	box	->	x2	<=	box	->	x1	||	box	->	y2	<=	0	||	box	->	x2	<=	0

(	box	->	x1	&	0xffff	)	|	(	box	->	y1	<<	16	)

(	(	box	->	x2	-	1	)	&	0xffff	)	|	(	(	box	->	y2	-	1	)	<<	16	)

(	box	->	x1	&	0xffff	)	|	(	box	->	y1	<<	16	)

(	(	box	->	x2	-	1	)	&	0xffff	)	|	(	(	box	->	y2	-	1	)	<<	16	)

!	IS_I830	(	dev	)	&&	!	IS_845G	(	dev	)

INTEL_INFO	(	dev	)	->	gen	>	3	||	IS_G33	(	dev	)

!	(	IS_GM45	(	dev	)	||	HAS_PCH_SPLIT	(	dev	)	)
!	IS_GM45	(	dev	)	||	HAS_PCH_SPLIT	(	dev	)
prealloc_size	>	(	36	*	1024	*	1024	)

(	(	m	*	x	)	/	127	)	-	b

(	t	*	2349	)	+	135940

(	t	*	964	)	+	29317

(	t	*	301	)	+	1004

corr	*	(	(	150142	*	state1	)	/	10000	-	78642	)
corr	*	(	150142	*	state1	)	/	10000	-	78642
!	IS_I945G	(	dev	)	&&	!	IS_I945GM	(	dev	)

IS_MOBILE	(	dev	)	||	!	IS_GEN2	(	dev	)

INTEL_INFO	(	dev	)	->	gen	>=	4	&&	!	HAS_PCH_SPLIT	(	dev	)

IS_G4X	(	dev	)	&&	!	IS_GM45	(	dev	)

!	edid	&&	!	intel_gmbus_is_forced_bit	(	i2c	)

ret	||	!	IS_G4X	(	dev	)

(	1	<<	0	)	|	(	1	<<	1	)

INTEL_INFO	(	dev	)	->	gen	<	4	&&	intel_crtc	->	pipe	==	0

adjusted_mode	->	hdisplay	==	mode	->	hdisplay	&&	adjusted_mode	->	vdisplay	==	mode	->	vdisplay

mode	->	vdisplay	!=	adjusted_mode	->	vdisplay	||	mode	->	hdisplay	!=	adjusted_mode	->	hdisplay

!	HAS_PCH_SPLIT	(	encoder	->	dev	)	&&	intel_lvds	->	pfit_dirty

IS_MOBILE	(	dev	)	&&	!	IS_I830	(	dev	)

(	1	<<	0	)	|	(	1	<<	1	)	|	(	1	<<	2	)

mode	->	hdisplay	!=	adjusted_mode	->	hdisplay	||	mode	->	vdisplay	!=	adjusted_mode	->	vdisplay

(	bus	->	reg0	&	~	(	0x3	<<	8	)	)	|	speed
(	bus	->	reg0	&	~	0x3	<<	8	)	|	speed
(	crtc_y	<<	16	)	|	crtc_x

(	crtc_h	<<	16	)	|	crtc_w

(	crtc_y	<<	16	)	|	crtc_x

(	crtc_h	<<	16	)	|	crtc_w

(	crtc_x	<	0	)	&&	(	(	crtc_x	+	crtc_w	)	>	0	)

(	crtc_x	+	crtc_w	)	<=	0

(	crtc_x	+	crtc_w	)	>	primary_w

(	crtc_y	<	0	)	&&	(	(	crtc_y	+	crtc_h	)	>	0	)

(	crtc_y	+	crtc_h	)	<=	0

crtc_y	+	crtc_h	>	primary_h

!	crtc_w	||	!	crtc_h

adjusted_mode	->	hdisplay	==	mode	->	hdisplay	&&	adjusted_mode	->	vdisplay	==	mode	->	vdisplay

(	adjusted_mode	->	hdisplay	-	width	+	1	)	/	2
adjusted_mode	->	hdisplay	-	width	+	1	/	2
(	adjusted_mode	->	vdisplay	-	height	+	1	)	/	2
adjusted_mode	->	vdisplay	-	height	+	1	/	2
(	adjusted_mode	->	hdisplay	-	width	+	1	)	/	2
adjusted_mode	->	hdisplay	-	width	+	1	/	2
(	adjusted_mode	->	vdisplay	-	height	+	1	)	/	2
adjusted_mode	->	vdisplay	-	height	+	1	/	2
(	x	<<	16	)	|	y

(	width	<<	16	)	|	height

~	mode	->	valid_norms	&	1	<<	priv	->	norm

mode	->	mode	.	hdisplay	!=	drm_mode	->	hdisplay	||	mode	->	mode	.	vdisplay	!=	drm_mode	->	vdisplay	||	mode	->	mode	.	vtotal	!=	drm_mode	->	vtotal	||	mode	->	mode	.	htotal	!=	drm_mode	->	htotal	||	mode	->	mode	.	clock	!=	drm_mode	->	clock

(	drm_mode	->	htotal	&	~	0x7	)	-	(	drm_mode	->	hsync_start	&	~	0x7	)
drm_mode	->	htotal	&	~	0x7	-	(	drm_mode	->	hsync_start	&	~	0x7	)
~	mode	->	valid_scales	&	1	<<	priv	->	scale	||	~	mode	->	valid_norms	&	1	<<	priv	->	norm

vendor	!=	0x1	||	device	!=	0x6

++	i	,	--	nr_pages

event_w	<	hw_w	||	(	event_w	==	hw_w	&&	event_e	<=	hw_e	)

d	->	request_count	<	0	||	d	->	request_count	>	dma	->	buf_count

count	+	(	count	+	254	)	/	255	+	count2	+	(	count2	+	254	)	/	255
count	+	count	+	254	/	255	+	count2	+	(	count2	+	254	)	/	255
n	%	3	!=	0

10	-	(	skip	&	1	)	-	(	skip	>>	1	&	1	)	-	(	skip	>>	2	&	1	)	-	(	skip	>>	3	&	1	)	-	(	skip	>>	4	&	1	)	-	(	skip	>>	5	&	1	)	-	(	skip	>>	6	&	1	)	-	(	skip	>>	7	&	1	)
10	-	skip	&	1	-	skip	>>	1	&	1	-	skip	>>	2	&	1	-	skip	>>	3	&	1	-	skip	>>	4	&	1	-	skip	>>	5	&	1	-	skip	>>	6	&	1	-	skip	>>	7	&	1
start	+	n	>	dmabuf	->	total	/	32

(	count	+	1	+	1	)	/	2
count	+	1	+	1	/	2
i	+	1	<	start	+	count

(	i	+	1	)	%	3
i	+	1	%	3
i	<	start	+	count

(	count	+	1	+	1	)	/	2
count	+	1	+	1	/	2
i	+	1	<	start	+	count

i	|	(	(	i	+	1	)	<<	16	)

i	<	start	+	count

(	count	+	2	+	1	)	/	2
count	+	2	+	1	/	2
i	+	1	<	start	+	count

i	|	(	(	i	+	1	)	<<	16	)

i	<	start	+	count

n	%	3	!=	0

(	skip	&	1	)	+	(	skip	>>	1	&	1	)	+	(	skip	>>	2	&	1	)	+	(	skip	>>	3	&	1	)	+	(	skip	>>	4	&	1	)	+	(	skip	>>	5	&	1	)	+	(	skip	>>	6	&	1	)	+	(	skip	>>	7	&	1	)
skip	&	1	+	skip	>>	1	&	1	+	skip	>>	2	&	1	+	skip	>>	3	&	1	+	(	skip	>>	4	&	1	)	+	skip	>>	5	&	1	+	skip	>>	6	&	1	+	skip	>>	7	&	1
start	+	n	>	vb_size	/	(	vb_stride	*	4	)

count	*	vtx_size	+	1

i	<	start	+	count

count	*	vtx_size	+	1

i	<	start	+	count

n	%	3	!=	0

10	-	(	skip	&	1	)	-	(	skip	>>	1	&	1	)	-	(	skip	>>	2	&	1	)	-	(	skip	>>	3	&	1	)	-	(	skip	>>	4	&	1	)	-	(	skip	>>	5	&	1	)	-	(	skip	>>	6	&	1	)	-	(	skip	>>	7	&	1	)
10	-	(	skip	&	1	)	-	skip	>>	1	&	1	-	skip	>>	2	&	1	-	(	skip	>>	3	&	1	)	-	(	skip	>>	4	&	1	)	-	skip	>>	5	&	1	-	(	skip	>>	6	&	1	)	-	skip	>>	7	&	1
(	count	+	1	+	1	)	/	2
count	+	1	+	1	/	2
(	count	+	1	+	1	)	/	2
count	+	1	+	1	/	2
(	count	+	2	+	1	)	/	2
count	+	2	+	1	/	2
n	%	3	!=	0

(	skip	&	1	)	+	(	skip	>>	1	&	1	)	+	(	skip	>>	2	&	1	)	+	(	skip	>>	3	&	1	)	+	(	skip	>>	4	&	1	)	+	(	skip	>>	5	&	1	)	+	(	skip	>>	6	&	1	)	+	(	skip	>>	7	&	1	)
skip	&	1	+	skip	>>	1	&	1	+	skip	>>	2	&	1	+	skip	>>	3	&	1	+	skip	>>	4	&	1	+	skip	>>	5	&	1	+	(	skip	>>	6	&	1	)	+	skip	>>	7	&	1
count	*	vtx_size	+	1

count	*	vtx_size	+	1

vgasr_priv	.	registered_clients	==	0x3	&&	vgasr_priv	.	handler

client_id	==	-	1

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

rsrc	&	~	vgadev	->	owns

(	vgadev	->	owns	&	old_decodes	)	&&	(	vga_count	>	1	)

(	drawctxt	->	gpustate	.	gpuaddr	+	REG_OFFSET	)	&	0xFFFFE000

(	(	TEX_SIZE_MEM_OBJECTS	/	4	)	<<	REG_TO_MEM_LOOP_COUNT_SHIFT	)	|	(	(	HLSQ_SHADOW_BASE	+	HLSQ_MEMOBJ_OFFSET	)	/	4	)
(	(	TEX_SIZE_MEM_OBJECTS	/	4	)	<<	REG_TO_MEM_LOOP_COUNT_SHIFT	)	|	(	(	HLSQ_SHADOW_BASE	+	HLSQ_MEMOBJ_OFFSET	)	/	4	)
(	drawctxt	->	gpustate	.	gpuaddr	+	VS_TEX_OFFSET_MEM_OBJECTS	)	&	0xfffffffc
(	drawctxt	->	gpustate	.	gpuaddr	+	VS_TEX_OFFSET_MEM_OBJECTS	)	&	0xfffffffc
(	(	TEX_SIZE_MIPMAP	/	4	)	<<	REG_TO_MEM_LOOP_COUNT_SHIFT	)	|	(	(	HLSQ_SHADOW_BASE	+	HLSQ_MIPMAP_OFFSET	)	/	4	)
(	(	TEX_SIZE_MIPMAP	/	4	)	<<	REG_TO_MEM_LOOP_COUNT_SHIFT	)	|	(	(	HLSQ_SHADOW_BASE	+	HLSQ_MIPMAP_OFFSET	)	/	4	)
(	drawctxt	->	gpustate	.	gpuaddr	+	VS_TEX_OFFSET_MIPMAP	)	&	0xfffffffc
(	drawctxt	->	gpustate	.	gpuaddr	+	VS_TEX_OFFSET_MIPMAP	)	&	0xfffffffc
(	(	TEX_SIZE_SAMPLER_OBJ	/	4	)	<<	REG_TO_MEM_LOOP_COUNT_SHIFT	)	|	(	(	HLSQ_SHADOW_BASE	+	HLSQ_SAMPLER_OFFSET	)	/	4	)
(	(	TEX_SIZE_SAMPLER_OBJ	/	4	)	<<	REG_TO_MEM_LOOP_COUNT_SHIFT	)	|	(	HLSQ_SHADOW_BASE	+	HLSQ_SAMPLER_OFFSET	/	4	)
(	drawctxt	->	gpustate	.	gpuaddr	+	VS_TEX_OFFSET_SAMPLER_OBJ	)	&	0xfffffffc
(	drawctxt	->	gpustate	.	gpuaddr	+	VS_TEX_OFFSET_SAMPLER_OBJ	)	&	0xfffffffc
(	(	TEX_SIZE_MEM_OBJECTS	/	4	)	<<	REG_TO_MEM_LOOP_COUNT_SHIFT	)	|	(	(	HLSQ_SHADOW_BASE	+	HLSQ_MEMOBJ_OFFSET	+	SSIZE	)	/	4	)
(	(	TEX_SIZE_MEM_OBJECTS	/	4	)	<<	REG_TO_MEM_LOOP_COUNT_SHIFT	)	|	(	HLSQ_SHADOW_BASE	+	HLSQ_MEMOBJ_OFFSET	+	SSIZE	/	4	)
(	drawctxt	->	gpustate	.	gpuaddr	+	FS_TEX_OFFSET_MEM_OBJECTS	)	&	0xfffffffc
(	drawctxt	->	gpustate	.	gpuaddr	+	FS_TEX_OFFSET_MEM_OBJECTS	)	&	0xfffffffc
(	(	TEX_SIZE_MIPMAP	/	4	)	<<	REG_TO_MEM_LOOP_COUNT_SHIFT	)	|	(	(	HLSQ_SHADOW_BASE	+	HLSQ_MIPMAP_OFFSET	+	SSIZE	)	/	4	)
(	(	TEX_SIZE_MIPMAP	/	4	)	<<	REG_TO_MEM_LOOP_COUNT_SHIFT	)	|	(	HLSQ_SHADOW_BASE	+	HLSQ_MIPMAP_OFFSET	+	SSIZE	/	4	)
(	drawctxt	->	gpustate	.	gpuaddr	+	FS_TEX_OFFSET_MIPMAP	)	&	0xfffffffc
(	drawctxt	->	gpustate	.	gpuaddr	+	FS_TEX_OFFSET_MIPMAP	)	&	0xfffffffc
(	(	TEX_SIZE_SAMPLER_OBJ	/	4	)	<<	REG_TO_MEM_LOOP_COUNT_SHIFT	)	|	(	(	HLSQ_SHADOW_BASE	+	HLSQ_SAMPLER_OFFSET	+	SSIZE	)	/	4	)
(	(	TEX_SIZE_SAMPLER_OBJ	/	4	)	<<	REG_TO_MEM_LOOP_COUNT_SHIFT	)	|	(	(	HLSQ_SHADOW_BASE	+	HLSQ_SAMPLER_OFFSET	+	SSIZE	)	/	4	)
(	drawctxt	->	gpustate	.	gpuaddr	+	FS_TEX_OFFSET_SAMPLER_OBJ	)	&	0xfffffffc
(	drawctxt	->	gpustate	.	gpuaddr	+	FS_TEX_OFFSET_SAMPLER_OBJ	)	&	0xfffffffc
(	drawctxt	->	gpustate	.	gpuaddr	+	SHADER_OFFSET	)	&	0xfffffffc
(	drawctxt	->	gpustate	.	gpuaddr	+	SHADER_OFFSET	)	&	0xfffffffc
(	drawctxt	->	gpustate	.	gpuaddr	+	SHADER_OFFSET	+	(	SHADER_SHADOW_SIZE	/	2	)	)	&	0xfffffffc
(	drawctxt	->	gpustate	.	gpuaddr	+	SHADER_OFFSET	+	(	SHADER_SHADOW_SIZE	/	2	)	)	&	0xfffffffc
(	HLSQ_SHADOW_BASE	+	0x1000	+	SSIZE	)	/	4
(	HLSQ_SHADOW_BASE	+	0x1000	+	SSIZE	)	/	4
shadow	->	height	|	(	shadow	->	width	<<	14	)

(	shadow	->	pitch	*	4	*	8	)	<<	9

(	drawctxt	->	gpustate	.	gpuaddr	+	REG_OFFSET	)	&	0xFFFFE000

i	<	ARRAY_SIZE	(	context_register_ranges	)	/	2

i	*	2	+	1

(	1	<<	24	)	|	(	4	<<	16	)

(	drawctxt	->	gpustate	.	gpuaddr	+	REG_OFFSET	)	&	0xFFFFE000

(	drawctxt	->	gpustate	.	gpuaddr	+	REG_OFFSET	)	&	0xFFFFE000

(	4	<<	16	)	|	(	1	<<	24	)

(	(	drawctxt	->	gpustate	.	gpuaddr	)	&	0xfffffffc	)	|	1

(	numunits	<<	22	)	|	(	stateblock	<<	19	)	|	(	mode	<<	16	)

(	(	drawctxt	->	gpustate	.	gpuaddr	+	VS_TEX_OFFSET_MEM_OBJECTS	)	&	0xfffffffc	)	|	statetype
(	(	drawctxt	->	gpustate	.	gpuaddr	+	VS_TEX_OFFSET_MEM_OBJECTS	)	&	0xfffffffc	)	|	statetype
(	numunits	<<	22	)	|	(	stateblock	<<	19	)	|	(	mode	<<	16	)

(	(	drawctxt	->	gpustate	.	gpuaddr	+	VS_TEX_OFFSET_MIPMAP	)	&	0xfffffffc	)	|	statetype
(	(	drawctxt	->	gpustate	.	gpuaddr	+	VS_TEX_OFFSET_MIPMAP	)	&	0xfffffffc	)	|	statetype
(	numunits	<<	22	)	|	(	stateblock	<<	19	)	|	(	mode	<<	16	)

(	(	drawctxt	->	gpustate	.	gpuaddr	+	VS_TEX_OFFSET_SAMPLER_OBJ	)	&	0xfffffffc	)	|	statetype
(	(	drawctxt	->	gpustate	.	gpuaddr	+	VS_TEX_OFFSET_SAMPLER_OBJ	)	&	0xfffffffc	)	|	statetype
(	numunits	<<	22	)	|	(	stateblock	<<	19	)	|	(	mode	<<	16	)

(	(	drawctxt	->	gpustate	.	gpuaddr	+	FS_TEX_OFFSET_MEM_OBJECTS	)	&	0xfffffffc	)	|	statetype
(	(	drawctxt	->	gpustate	.	gpuaddr	+	FS_TEX_OFFSET_MEM_OBJECTS	)	&	0xfffffffc	)	|	statetype
(	numunits	<<	22	)	|	(	stateblock	<<	19	)	|	(	mode	<<	16	)

(	(	drawctxt	->	gpustate	.	gpuaddr	+	FS_TEX_OFFSET_MIPMAP	)	&	0xfffffffc	)	|	statetype
(	(	drawctxt	->	gpustate	.	gpuaddr	+	FS_TEX_OFFSET_MIPMAP	)	&	0xfffffffc	)	|	statetype
(	numunits	<<	22	)	|	(	stateblock	<<	19	)	|	(	mode	<<	16	)

(	(	drawctxt	->	gpustate	.	gpuaddr	+	FS_TEX_OFFSET_SAMPLER_OBJ	)	&	0xfffffffc	)	|	statetype
(	(	drawctxt	->	gpustate	.	gpuaddr	+	FS_TEX_OFFSET_SAMPLER_OBJ	)	&	0xfffffffc	)	|	statetype
(	drawctxt	->	gpustate	.	gpuaddr	+	SHADER_OFFSET	)	&	0xfffffffc
(	drawctxt	->	gpustate	.	gpuaddr	+	SHADER_OFFSET	)	&	0xfffffffc
(	drawctxt	->	gpustate	.	gpuaddr	+	SHADER_OFFSET	+	(	SHADER_SHADOW_SIZE	/	2	)	)	&	0xfffffffc
(	drawctxt	->	gpustate	.	gpuaddr	+	SHADER_OFFSET	+	(	SHADER_SHADOW_SIZE	/	2	)	)	&	0xfffffffc
reg	&	(	1	<<	28	)

(	reg	&	0xFFFFF	)	>>	2
reg	&	0xFFFFF	>>	2
(	reg	>>	20	)	&	0x3

(	reg	>>	24	)	&	0x3

tmp	&&	i	<	ARRAY_SIZE	(	a3xx_irq_funcs	)

range	*	2	+	1

32	*	3	+	2	+	32	+	1

32	*	3	+	2	+	32	+	1

num	&&	sptr	<	slen

num	--	,	l	++

ilen	>	(	slen	-	sptr	)

2	<<	(	r2	&	(	BIT	(	6	)	-	1	)	)
2	<<	r2	&	(	BIT	(	6	)	-	1	)
2	<<	(	r2	&	(	BIT	(	6	)	-	1	)	)
2	<<	r2	&	(	BIT	(	6	)	-	1	)
2	<<	(	cp_rb_ctrl	&	(	BIT	(	6	)	-	1	)	)
2	<<	cp_rb_ctrl	&	(	BIT	(	6	)	-	1	)
!	KGSL_IS_PAGE_ALIGNED	(	(	unsigned	long	)	hostptr	)	||	!	KGSL_IS_PAGE_ALIGNED	(	len	)

param	->	fd	==	0	||	param	->	len	==	0

cmd	&	(	IOC_IN	|	IOC_OUT	)
cmd	&	IOC_IN	|	IOC_OUT
ret	==	0	&&	(	cmd	&	IOC_OUT	)
==	0	&&	(	cmd	&	IOC_OUT	ret	==	0	&&	(	cmd	&	IOC_OUT	)
res	->	start	==	0	||	resource_size	(	res	)	==	0

args	->	active	<	0	||	args	->	active	>=	priv	->	bufcount

map	->	size	<	vma	->	vm_end	-	vma	->	vm_start

ptr	+	(	rb_offset	(	timestamp	)	+	(	Z180_MARKER_SIZE	*	sizeof	(	unsigned	int	)	)	)

(	(	1	)	&	VGV3_CONTROL_MARKADD_FMASK	)	<<	VGV3_CONTROL_MARKADD_FSHIFT
(	1	)	&	VGV3_CONTROL_MARKADD_FMASK	<<	VGV3_CONTROL_MARKADD_FSHIFT
(	sizedwords	+	1	)	*	sizeof	(	unsigned	int	)
sizedwords	+	1	*	sizeof	(	unsigned	int	)
(	sizedwords	+	2	)	*	sizeof	(	unsigned	int	)
sizedwords	+	2	*	sizeof	(	unsigned	int	)
(	(	2	)	&	VGV3_CONTROL_MARKADD_FMASK	)	<<	VGV3_CONTROL_MARKADD_FSHIFT
(	2	)	&	VGV3_CONTROL_MARKADD_FMASK	<<	VGV3_CONTROL_MARKADD_FSHIFT
memdesc	->	size	==	0	||	memdesc	->	gpuaddr	==	0

gpummu_pt	&&	pt_base	&&	(	gpummu_pt	->	base	.	gpuaddr	==	pt_base	)

(	mmu	->	config	&	~	0x1	)	>	0
mmu	->	config	&	~	0x1	>	0
(	mmu	->	config	&	0x1	)	==	0
mmu	->	config	&	0x1	==	0
!	device	->	d_debugfs	||	IS_ERR	(	device	->	d_debugfs	)

offsetbytes	+	sizebytes	>	memdesc	->	size

in_size	--	>	0

sizeof	(	cff_op_write_membuf	)	/	3	*	4	+	16

(	cur_secs	-	last_sec	)	>	10	||	(	last_sec	-	cur_secs	)	>	10

!	debugfs_dir	||	IS_ERR	(	debugfs_dir	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

bank	|	(	addr	<<	4	)

(	id	<<	8	)	|	(	1	<<	16	)

sizedwords	>	(	sizeof	(	link	)	/	sizeof	(	unsigned	int	)	)

(	coreid	&	0xF	)	<<	24
coreid	&	0xF	<<	24
(	(	majorid	>>	4	)	&	0xF	)	<<	16
(	majorid	>>	4	)	&	0xF	<<	16
(	revid	>>	0	)	&	0xFF

(	revid	>>	16	)	&	0xFF

cpu_is_msm8625	(	)	&&	minorid	==	0

(	minorid	<<	8	)	|	patchid

pdata	->	chipid	==	0	||	ADRENO_CHIPID_MAJOR	(	pdata	->	chipid	)	==	2

entry	==	ANY_ID	||	entry	==	id

pdata	->	init_level	<	0	||	pdata	->	init_level	>	pdata	->	num_levels

!	(	rbbm_status	&	0x80000000	)
!	rbbm_status	&	0x80000000
!	(	idle_count	%	MAX_IDLE_COUNT	)	&&	(	device	->	fence_event_counter	)
!	idle_count	%	MAX_IDLE_COUNT	&&	(	device	->	fence_event_counter	)
(	rb	->	rptr	==	rb	->	wptr	)	&&	adreno_isgpuidle	(	device	)

device	->	reg_virt	+	(	offsetwords	<<	2	)
device	->	reg_virt	+	offsetwords	<<	2
device	->	reg_virt	+	(	offsetwords	<<	2	)
device	->	reg_virt	+	offsetwords	<<	2
(	io_cnt	+	1	)	%	100
io_cnt	+	1	%	100
!	msecs	||	time_elapsed	<	msecs

(	0x0003	<<	16	)	|	(	(	int	)	adreno_dev	->	gpurev	)

(	itr	->	pos	+	size	)	<=	itr	->	offset

size	+	offset	>	entry	->	memdesc	.	size

j	*	2	+	1

j	*	2	+	1

i	<	(	vfd_control_0	)	>>	27

(	index	%	3	)	==	0

(	index	%	3	)	==	1

(	index	%	2	)	==	0

rem	--	,	i	++

(	pktsize	+	1	)	>	rem

index	+	pktsize	>	rptr

(	index	+	pktsize	)	%	rb	->	sizedwords
index	+	pktsize	%	rb	->	sizedwords
(	obj	->	dwords	-	i	)	<	type3_pkt_size	(	*	src	)	+	1

freecmds	==	0	||	freecmds	>	numcmds

(	rb	->	wptr	+	numcmds	)	>	(	rb	->	sizedwords	-	GSL_RB_NOP_SIZEDWORDS	)

(	rb	->	wptr	+	numcmds	)	>=	rb	->	rptr

!	ret	&&	(	rb	->	wptr	+	numcmds	)	>	(	rb	->	sizedwords	-	GSL_RB_NOP_SIZEDWORDS	)

reg	<	0x0192	||	(	reg	+	cnt	)	>=	0x8000

sizeof	(	unsigned	int	)	*	(	numibs	*	3	+	4	)
sizeof	(	unsigned	int	)	*	numibs	*	3	+	4
(	start_ptr	/	sizeof	(	unsigned	int	)	)	!=	rb	->	wptr

(	start_ptr	/	sizeof	(	unsigned	int	)	)	!=	rb	->	wptr

(	i	+	2	)	%	3
i	+	2	%	3
(	i	+	2	)	%	3
i	+	2	%	3
(	i	+	1	)	%	3
i	+	1	%	3
(	i	+	1	)	%	3
i	+	1	%	3
temp_rb_rptr	/	sizeof	(	unsigned	int	)	!=	rb	->	wptr

temp_rb_rptr	/	sizeof	(	unsigned	int	)	!=	rb	->	wptr

(	i	+	1	)	%	2
i	+	1	%	2
(	i	+	1	)	%	2
i	+	1	%	2
(	i	+	1	)	%	2
i	+	1	%	2
temp_rb_rptr	/	sizeof	(	unsigned	int	)	!=	rb	->	wptr

(	i	+	1	)	%	2
i	+	1	%	2
(	i	+	1	)	%	2
i	+	1	%	2
(	rb_rptr	/	sizeof	(	unsigned	int	)	)	!=	rb	->	wptr

rb_rptr	+	(	3	*	sizeof	(	unsigned	int	)	)	%	size

rb	->	buffer_desc	.	gpuaddr	+	sizeof	(	unsigned	int	)	*	rb	->	wptr

(	uintval	&	(	~	(	1	<<	exp	)	)	)	<<	(	23	-	exp	)
uintval	&	(	~	1	<<	exp	)	<<	(	23	-	exp	)
(	exp	+	127	)	<<	23

0	<<	1	|	1	<<	4	|	2	<<	7	|	3	<<	10	|	2	<<	23

(	0	<<	16	)	|	dwords

dwords	--	>	0

(	drawctxt	->	gpustate	.	gpuaddr	+	REG_OFFSET	)	&	0xFFFFE000

(	drawctxt	->	gpustate	.	gpuaddr	+	TEX_OFFSET	)	&	0xFFFFE000
(	drawctxt	->	gpustate	.	gpuaddr	+	TEX_OFFSET	)	&	0xFFFFE000
(	addr	-	(	addr	&	0xfffff000	)	)	/	bytesperpixel
addr	-	addr	&	0xfffff000	/	bytesperpixel
(	0x1	<<	16	)	|	SHADER_CONST_ADDR

(	0	<<	16	)	|	0

(	0x1fff	<<	16	)	|	(	0x1fff	)

(	1U	<<	31	)	|	(	0	<<	16	)	|	0

(	0x1fff	<<	16	)	|	(	0x1fff	)

(	0x1	<<	16	)	|	(	9	*	6	)

(	0x1	<<	16	)	|	(	0	*	6	)

(	shadow	->	pitch	>>	5	)	<<	22

(	shadow	->	width	-	1	)	|	(	shadow	->	height	-	1	)	<<	13

(	0	<<	16	)	|	0

(	(	0x1fff	)	<<	16	)	|	0x1fff

(	1U	<<	31	)	|	(	0	<<	16	)	|	0

(	(	0x1fff	)	<<	16	)	|	0x1fff

(	drawctxt	->	gpustate	.	gpuaddr	+	REG_OFFSET	)	&	0xFFFFE000

i	<	(	reg_array_size	/	2	)

i	*	2	+	1

(	1	<<	24	)	|	(	4	<<	16	)

(	1	<<	24	)	|	(	0	<<	16	)	|	0

(	drawctxt	->	gpustate	.	gpuaddr	+	TEX_OFFSET	)	&	0xFFFFE000
(	drawctxt	->	gpustate	.	gpuaddr	+	TEX_OFFSET	)	&	0xFFFFE000
(	1	<<	24	)	|	(	1	<<	16	)	|	0

(	2	<<	16	)	|	0

(	3	<<	16	)	|	0

(	clkstats	->	elapsed	>	UPDATE_BUSY_VAL	)	||	!	test_bit	(	KGSL_PWRFLAGS_AXI_ON	,	&	device	->	pwrctrl	.	power_flags	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

priv	->	enabled	&&	!	priv	->	gpu_busy

kgsl_debugfs_dir	&&	!	IS_ERR	(	kgsl_debugfs_dir	)

!	device	->	d_debugfs	||	IS_ERR	(	device	->	d_debugfs	)

rb_gpuaddr	+	i	*	sizeof	(	unsigned	int	)

ib_size	-	j	*	sizeof	(	unsigned	int	)

rb_gpuaddr	+	j	*	sizeof	(	unsigned	int	)

domain_ptbase	&&	pt_base	&&	(	domain_ptbase	==	pt_base	)

!	cpu_is_msm8960	(	)	&&	msm_soc_version_supports_iommu_v1	(	)

range	==	0	||	gpuaddr	==	0

(	delayed_unmap	&&	ref_count	>	1	)	||	!	delayed_unmap

j	&&	!	client_name

!	heap	->	ops	->	allocate	||	!	heap	->	ops	->	free	||	!	heap	->	ops	->	map_dma	||	!	heap	->	ops	->	unmap_dma

!	cp_heap	->	cpu_addr	&&	(	++	tries	<	DMA_ALLOC_RETRIES	)

!	secure_allocation	&&	cp_heap	->	heap_protected	==	HEAP_PROTECTED

!	secure_allocation	&&	cp_heap	->	disallow_non_secure_allocation

secure_allocation	&&	(	cp_heap	->	umap_count	>	0	||	cp_heap	->	kmap_cached_count	>	0	)
secure_allocation	&&	cp_heap	->	umap_count	>	0	||	cp_heap	->	kmap_cached_count	>	0
(	cp_heap	->	total_size	-	cp_heap	->	allocated_bytes	)	>=	size

!	cp_heap	->	allocated_bytes	&&	cp_heap	->	heap_protected	==	HEAP_NOT_PROTECTED

!	cp_heap	->	allocated_bytes	&&	cp_heap	->	heap_protected	==	HEAP_NOT_PROTECTED

(	cp_heap	->	umap_count	+	ion_cp_get_total_kmap_count	(	cp_heap	)	)	==	0

(	cp_heap	->	umap_count	+	ion_cp_get_total_kmap_count	(	cp_heap	)	)	==	0

(	cp_heap	->	heap_protected	==	HEAP_NOT_PROTECTED	)	||	(	(	cp_heap	->	heap_protected	==	HEAP_PROTECTED	)	&&	!	ION_IS_CACHED	(	buffer	->	flags	)	)

cp_heap	->	umap_count	==	0	&&	cp_heap	->	kmap_cached_count	==	0

!	ret_value	&&	domain

(	carveout_heap	->	total_size	-	carveout_heap	->	allocated_bytes	)	>=	size

!	(	(	1	<<	buffer	->	heap	->	type	)	&	mapper	->	heap_mask	)
!	(	1	<<	buffer	->	heap	->	type	)	&	mapper	->	heap_mask
!	(	(	1	<<	buffer	->	heap	->	type	)	&	mapper	->	heap_mask	)
!	(	1	<<	buffer	->	heap	->	type	)	&	mapper	->	heap_mask
!	(	(	1	<<	buffer	->	heap	->	type	)	&	mapper	->	heap_mask	)
!	(	1	<<	buffer	->	heap	->	type	)	&	mapper	->	heap_mask
i	<	data	->	nrpages	&&	curr_addr	<	vma	->	vm_end

!	heap	->	base	&&	heap	->	extra_data

heap1_base	<	heap2_base	&&	heap1_end	>=	heap2_base

heap2_base	<	heap1_base	&&	heap2_end	>=	heap1_base

!	ret	&&	memory_name_prop

heap	->	size	&&	(	ret	||	!	memory_name_prop	)
heap	->	size	&&	ret	||	!	memory_name_prop
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

!	*	cntp	||	(	read_config_reg	(	gpioc	,	cr	,	field	)	!=	value	)

!	gpioc	||	get_data_reg	(	gpioc	,	gpio	,	&	dr	,	&	bit	)	!=	0

!	gpioc	||	get_data_reg	(	gpioc	,	gpio	,	&	dr	,	&	bit	)	!=	0

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	1	<<	(	unit	-	1	)	)	&	0x1f

(	port	<<	16	)	|	len	|	0x80000000

mq	->	command	|	(	to	<<	8	)	|	(	from	<<	16	)	|	(	len	<<	24	)

len	--	>	0

mdev	->	port	==	ds	->	port	&&	mdev	->	unit	==	ds	->	unit

(	1	<<	(	mdev	->	unit	-	1	)	)	&	0x1f

!	started	||	!	fullscan

!	started	||	(	scanning	==	2	)	||	!	fullscan

irq_balancing_disabled	(	irq	)	||	!	handle

irq_balancing_disabled	(	irq	)	||	!	handle

~	(	(	(	1	<<	width	)	-	1	)	<<	shift	)
~	(	1	<<	width	-	1	)	<<	shift
(	(	1	<<	width	)	-	1	)	<<	shift
(	1	<<	width	-	1	)	<<	shift
(	value	&	mask	)	>>	shift
value	&	mask	>>	shift
(	1	<<	_INTC_WIDTH	(	handle	)	)	-	1
1	<<	_INTC_WIDTH	(	handle	)	-	1
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

src_table	->	divisors	&&	i	<	src_table	->	nr_divisors

src_table	->	multipliers	&&	i	<	src_table	->	nr_multipliers

!	div	||	!	mult	||	(	bitmap	&&	!	test_bit	(	i	,	bitmap	)	)

!	(	--	clk	->	usecount	)

clk	->	usecount	++	==	0

!	mapping	->	base	&&	mapping	->	phys

!	parent	||	!	clk

ioread32	(	clk	->	mapped_reg	)	&	~	(	1	<<	clk	->	enable_bit	)
ioread32	(	clk	->	mapped_reg	)	&	~	1	<<	clk	->	enable_bit
ioread32	(	clk	->	mapped_reg	)	|	(	1	<<	clk	->	enable_bit	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

td	->	curdata	.	contactid	!=	0	||	td	->	num_received	==	0

(	fmax	-	fmin	)	/	snratio
fmax	-	fmin	/	snratio
slotnum	>=	0	&&	slotnum	<	td	->	maxcontacts

(	td	->	mtclass	.	quirks	&	MT_QUIRK_NOT_SEEN_MEANS_UP	)	&&	!	s	->	seen_in_this_frame

field	->	index	==	td	->	last_field_index	&&	td	->	num_received	>=	td	->	num_expected

!	id	&&	td	->	touches_by_report	==	1

!	ext	->	plugged	||	!	atomic_read	(	&	ext	->	opened	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

parser	->	device	->	collection	+	parser	->	device	->	maxcollection	++

(	parser	->	global	.	usage_page	<<	16	)	+	data
parser	->	global	.	usage_page	<<	16	+	data
(	parser	->	global	.	usage_page	<<	16	)	+	data
parser	->	global	.	usage_page	<<	16	+	data
(	parser	->	global	.	usage_page	<<	16	)	+	data
parser	->	global	.	usage_page	<<	16	+	data
value	&	(	1	<<	(	n	-	1	)	)

value	|	(	-	1	<<	n	)

1	<<	(	n	-	1	)

(	1	<<	(	n	-	1	)	)	-	1
1	<<	(	n	-	1	)	-	1
value	&	(	(	1	<<	n	)	-	1	)
value	&	(	1	<<	n	-	1	)
*	array	++	==	value

offset	+	n	*	size

(	(	report	->	size	-	1	)	>>	3	)	+	1
(	report	->	size	-	1	)	>>	3	+	1
(	(	report	->	size	-	1	)	>>	3	)	+	1
(	report	->	size	-	1	)	>>	3	+	1
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	list	->	tail	+	1	)	&	(	HIDRAW_BUFFER_SIZE	-	1	)
(	list	->	tail	+	1	)	&	HIDRAW_BUFFER_SIZE	-	1
!	dev	->	open	++

!	--	dev	->	open

len	>	HID_MAX_DESCRIPTOR_SIZE	-	1

(	(	dir	)	<<	_IOC_DIRSHIFT	)	|	(	(	type	)	<<	_IOC_TYPESHIFT	)	|	(	(	nr	)	<<	_IOC_NRSHIFT	)	|	(	(	size	)	<<	_IOC_SIZESHIFT	)
(	(	dir	)	<<	_IOC_DIRSHIFT	)	|	(	(	type	)	<<	_IOC_TYPESHIFT	)	|	(	(	nr	)	<<	_IOC_NRSHIFT	)	|	(	size	)	<<	_IOC_SIZESHIFT
(	(	dir	)	<<	_IOC_DIRSHIFT	)	|	(	(	type	)	<<	_IOC_TYPESHIFT	)	|	(	(	nr	)	<<	_IOC_NRSHIFT	)	|	(	(	size	)	<<	_IOC_SIZESHIFT	)
(	dir	)	<<	_IOC_DIRSHIFT	|	(	type	)	<<	_IOC_TYPESHIFT	|	(	nr	)	<<	_IOC_NRSHIFT	|	(	size	)	<<	_IOC_SIZESHIFT
(	(	dir	)	<<	_IOC_DIRSHIFT	)	|	(	(	type	)	<<	_IOC_TYPESHIFT	)	|	(	(	nr	)	<<	_IOC_NRSHIFT	)	|	(	(	size	)	<<	_IOC_SIZESHIFT	)
(	(	dir	)	<<	_IOC_DIRSHIFT	)	|	(	type	)	<<	_IOC_TYPESHIFT	|	(	(	nr	)	<<	_IOC_NRSHIFT	)	|	(	size	)	<<	_IOC_SIZESHIFT
(	(	dir	)	<<	_IOC_DIRSHIFT	)	|	(	(	type	)	<<	_IOC_TYPESHIFT	)	|	(	(	nr	)	<<	_IOC_NRSHIFT	)	|	(	(	size	)	<<	_IOC_SIZESHIFT	)
(	dir	)	<<	_IOC_DIRSHIFT	|	(	(	type	)	<<	_IOC_TYPESHIFT	)	|	(	nr	)	<<	_IOC_NRSHIFT	|	(	(	size	)	<<	_IOC_SIZESHIFT	)
--	idx	>	1

!	(	quirks	&	CP_RDESC_SWAPPED_MIN_MAX	)
!	quirks	&	CP_RDESC_SWAPPED_MIN_MAX
i	<	*	rsize	-	4

!	(	quirks	&	CP_2WHEEL_MOUSE_HACK	)
!	quirks	&	CP_2WHEEL_MOUSE_HACK
usage	->	type	==	EV_REL	&&	usage	->	code	==	REL_WHEEL

usage	->	code	==	REL_WHEEL	&&	(	quirks	&	CP_2WHEEL_MOUSE_HACK_ON	)

djdev	->	reports_supported	&	(	1	<<	i	)

offset	==	-	1

size	>	16	||	size	==	0

(	offset	>>	16	)	&	0xff

(	offset	>>	8	)	&	0xff

(	offset	>>	16	)	&	0xff

(	offset	>>	8	)	&	0xff

(	size	>>	8	)	&	0xff

state	&	~	flag

hid	->	product	<	0x21d	||	hid	->	product	>=	0x300

(	fnmode	==	2	&&	asc	->	fn_on	)	||	(	fnmode	==	1	&&	!	asc	->	fn_on	)

(	uhid	->	head	+	1	)	%	UHID_BUFSIZE
uhid	->	head	+	1	%	UHID_BUFSIZE
!	ret	||	!	uhid	->	running

(	uhid	->	tail	+	1	)	%	UHID_BUFSIZE
uhid	->	tail	+	1	%	UHID_BUFSIZE
(	64	-	(	int	)	scroll_speed	)	*	msc	->	scroll_accel
64	-	(	int	)	scroll_speed	*	msc	->	scroll_accel
step_x	*	(	64	-	scroll_speed	)	*	msc	->	scroll_accel
step_x	*	64	-	scroll_speed	*	msc	->	scroll_accel
(	64	-	(	int	)	scroll_speed	)	*	msc	->	scroll_accel
64	-	(	int	)	scroll_speed	*	msc	->	scroll_accel
step_y	*	(	64	-	scroll_speed	)	*	msc	->	scroll_accel
step_y	*	64	-	scroll_speed	*	msc	->	scroll_accel
size	<	4	||	(	(	size	-	4	)	%	9	)	!=	0
size	<	4	||	(	size	-	4	%	9	)	!=	0
(	size	-	4	)	/	9
size	-	4	/	9
size	<	6	||	(	(	size	-	6	)	%	8	)	!=	0
size	<	6	||	(	size	-	6	%	8	)	!=	0
(	size	-	6	)	/	8
size	-	6	/	8
(	quirks	&	LG_RDESC	)	&&	*	rsize	>=	90

(	quirks	&	LG_RDESC_REL_ABS	)	&&	*	rsize	>=	50

(	quirks	&	LG_FF4	)	&&	*	rsize	>=	101

(	quirks	&	LG_WIRELESS	)	&&	lg_wireless_mapping	(	hi	,	usage	,	bit	,	max	)

(	quirks	&	LG_IGNORE_DOUBLED_WHEEL	)	&&	(	hid	==	7	||	hid	==	8	)
(	quirks	&	LG_IGNORE_DOUBLED_WHEEL	)	&&	hid	==	7	||	hid	==	8
ret	<	0	&&	limit	--	>	0

ret	<	0	&&	limit	--	>	0

new_speed	==	0	||	new_speed	==	1

range	==	200	||	range	==	900

(	(	full_range	-	range	+	1	)	*	2047	)	/	full_range
(	full_range	-	range	+	1	*	2047	)	/	full_range
(	start_right	&	0xe	)	<<	4	|	(	start_left	&	0xe	)
start_right	&	0xe	<<	4	|	(	start_left	&	0xe	)
j	<	7	*	cmd	->	cmd_num

(	quirks	&	MS_RDESC	)	&&	*	rsize	==	571

(	quirks	&	MS_RDESC_3K	)	&&	*	rsize	==	106

(	quirks	&	MS_PRESENTER	)	&&	ms_presenter_8k_quirk	(	hi	,	usage	,	bit	,	max	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

mode	<	0	||	mode	>	3

nd	->	w	<	nd	->	min_width	||	nd	->	h	<	nd	->	min_height

nd	->	w	>=	nd	->	activation_width	&&	nd	->	h	>=	nd	->	activation_height

nd	->	first_contact_touch	&&	nd	->	act_state	<=	0

0	==	sustain	||	!	pk	->	pm	->	midi_mode

pm	->	midi_octave	<	-	2

(	size	-	1	)	/	2
size	-	1	/	2
note	-	0x54	+	PCMIDI_MIDDLE_C	+	(	pm	->	midi_octave	*	12	)

note	-	0x94	+	PCMIDI_MIDDLE_C	+	(	pm	->	midi_octave	*	12	)

(	unsigned	long	)	packet	+	(	packet	->	offset8	<<	3	)
(	unsigned	long	)	packet	+	packet	->	offset8	<<	3
(	pipe_msg	->	size	+	sizeof	(	struct	pipe_prt_msg	)	-	sizeof	(	unsigned	char	)	)	>	sizeof	(	struct	mousevsc_prt_msg	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

logical_extents	<=	0	||	physical_extents	<=	0

(	usage	->	hid	&	0xf0	)	==	0x80
usage	->	hid	&	0xf0	==	0x80
(	usage	->	hid	&	0xf0	)	==	0x90
usage	->	hid	&	0xf0	==	0x90
device	->	driver	->	input_mapped	&&	device	->	driver	->	input_mapped	(	device	,	hidinput	,	field	,	usage	,	&	bit	,	&	max	)	<	0

usage	->	code	<=	max	&&	test_and_set_bit	(	usage	->	code	,	bit	)

(	b	-	a	)	>>	8

(	b	-	a	)	>>	4

i	<	usage	->	code	+	2	&&	i	<=	max

usage	->	hat_dir	&&	!	field	->	dpad

usage	->	hat_min	<	usage	->	hat_max	||	usage	->	hat_dir

(	value	-	usage	->	hat_min	)	*	8	/	(	usage	->	hat_max	-	usage	->	hat_min	+	1	)	+	1
value	-	usage	->	hat_min	*	8	/	usage	->	hat_max	-	usage	->	hat_min	+	1	+	1
hat_dir	<	0	||	hat_dir	>	8

usage	->	type	==	EV_REL	&&	usage	->	code	==	REL_WHEEL

(	a4	->	quirks	&	A4_2WHEEL_MOUSE_HACK_7	)	&&	usage	->	hid	==	0x00090007

usage	->	type	==	EV_REL	&&	usage	->	code	==	REL_WHEEL

(	a4	->	quirks	&	A4_2WHEEL_MOUSE_HACK_7	)	&&	usage	->	hid	==	0x00090007

usage	->	code	==	REL_WHEEL	&&	a4	->	hw_wheel

(	timeout	>>	8	)	&	0xff

(	reader	->	cbuf_start	+	1	)	%	ROCCAT_CBUF_SIZE
reader	->	cbuf_start	+	1	%	ROCCAT_CBUF_SIZE
!	device	->	open	++

!	--	device	->	open

(	device	->	cbuf_end	+	1	)	%	ROCCAT_CBUF_SIZE
device	->	cbuf_end	+	1	%	ROCCAT_CBUF_SIZE
p	->	page	==	(	usage	>>	16	)

p	->	description	&&	p	->	usage	!=	0

p	->	usage	==	(	usage	&	0xffff	)
p	->	usage	==	usage	&	0xffff
i	<	sizeof	(	__u32	)	*	2

earlier_unit	++	>	0

-	(	(	0x7	&	~	val	)	+	1	)
-	(	0x7	&	~	val	+	1	)
!	list	->	hdev	||	!	list	->	hdev	->	debug

usage	->	type	==	EV_REL	&&	usage	->	code	==	REL_HWHEEL

i	*	(	field	->	logical_maximum	-	field	->	logical_minimum	)	/	max	+	field	->	logical_minimum
i	*	field	->	logical_maximum	-	field	->	logical_minimum	/	max	+	field	->	logical_minimum
i	*	field	->	logical_minimum	/	-	0x8000

envelope	->	attack_level	!=	old	->	attack_level	||	envelope	->	fade_level	!=	old	->	fade_level	||	envelope	->	attack_length	!=	old	->	attack_length	||	envelope	->	fade_length	!=	old	->	fade_length

effect	->	replay	.	length	!=	old	->	replay	.	length	||	effect	->	trigger	.	interval	!=	old	->	trigger	.	interval	||	effect	->	trigger	.	button	!=	old	->	trigger	.	button	||	effect	->	direction	!=	old	->	direction	||	effect	->	replay	.	delay	!=	old	->	replay	.	delay

effect	->	u	.	periodic	.	magnitude	!=	old	->	u	.	periodic	.	magnitude	||	effect	->	u	.	periodic	.	offset	!=	old	->	u	.	periodic	.	offset	||	effect	->	u	.	periodic	.	phase	!=	old	->	u	.	periodic	.	phase	||	effect	->	u	.	periodic	.	period	!=	old	->	u	.	periodic	.	period

cond	->	center	!=	old_cond	->	center	||	cond	->	right_coeff	!=	old_cond	->	right_coeff	||	cond	->	left_coeff	!=	old_cond	->	left_coeff	||	cond	->	right_saturation	!=	old_cond	->	right_saturation	||	cond	->	left_saturation	!=	old_cond	->	left_saturation	||	cond	->	deadband	!=	old_cond	->	deadband

effect	->	u	.	ramp	.	start_level	!=	old	->	u	.	ramp	.	start_level	||	effect	->	u	.	ramp	.	end_level	!=	old	->	u	.	ramp	.	end_level

!	old	||	pidff_needs_set_effect	(	effect	,	old	)

!	old	||	pidff_needs_set_constant	(	effect	,	old	)

!	old	||	pidff_needs_set_envelope	(	&	effect	->	u	.	constant	.	envelope	,	&	old	->	u	.	constant	.	envelope	)

!	old	||	pidff_needs_set_effect	(	effect	,	old	)

!	old	||	pidff_needs_set_periodic	(	effect	,	old	)

!	old	||	pidff_needs_set_envelope	(	&	effect	->	u	.	periodic	.	envelope	,	&	old	->	u	.	periodic	.	envelope	)

!	old	||	pidff_needs_set_effect	(	effect	,	old	)

!	old	||	pidff_needs_set_ramp	(	effect	,	old	)

!	old	||	pidff_needs_set_envelope	(	&	effect	->	u	.	ramp	.	envelope	,	&	old	->	u	.	ramp	.	envelope	)

!	old	||	pidff_needs_set_effect	(	effect	,	old	)

!	old	||	pidff_needs_set_condition	(	effect	,	old	)

!	old	||	pidff_needs_set_effect	(	effect	,	old	)

!	old	||	pidff_needs_set_condition	(	effect	,	old	)

!	old	||	pidff_needs_set_effect	(	effect	,	old	)

!	old	||	pidff_needs_set_condition	(	effect	,	old	)

!	old	||	pidff_needs_set_effect	(	effect	,	old	)

!	old	||	pidff_needs_set_condition	(	effect	,	old	)

!	found	&&	strict

!	pidff	->	create_new_effect_type	||	!	pidff	->	set_effect_type

i	++	>	20

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	(	report	->	size	-	1	)	>>	3	)	+	1	+	(	report	->	id	>	0	)
(	report	->	size	-	1	)	>>	3	+	1	+	(	report	->	id	>	0	)
(	(	report	->	size	-	1	)	>>	3	)	+	1	+	(	report	->	id	>	0	)
(	report	->	size	-	1	)	>>	3	+	1	+	report	->	id	>	0
(	(	report	->	type	+	1	)	<<	8	)	|	report	->	id

(	(	report	->	size	-	1	)	>>	3	)	+	1	+	(	report	->	id	>	0	)
(	(	report	->	size	-	1	)	>>	3	)	+	1	+	report	->	id	>	0
result	<	size	&&	retries

!	hid	->	open	++

!	--	hid	->	open

!	usbhid	->	inbuf	||	!	usbhid	->	outbuf	||	!	usbhid	->	cr	||	!	usbhid	->	ctrlbuf

ret	>	0	&&	skipped_report_id

ret	>	0	&&	skipped_report_id

!	rsize	||	rsize	>	HID_MAX_DESCRIPTOR_SIZE

interface	->	desc	.	bInterfaceSubClass	==	USB_INTERFACE_SUBCLASS_BOOT	&&	interface	->	desc	.	bInterfaceProtocol	==	USB_INTERFACE_PROTOCOL_KEYBOARD

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

!	kbd	||	!	input_dev

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

!	mouse	||	!	input_dev

rinfo	->	report_id	&	~	HID_REPORT_ID_MASK

!	--	list	->	hiddev	->	open

!	list	->	hiddev	->	open	++

!	list	->	hiddev	->	open	++

(	list	->	flags	&	HIDDEV_FLAG_UREF	)	!=	0
list	->	flags	&	HIDDEV_FLAG_UREF	!=	0
(	list	->	flags	&	HIDDEV_FLAG_UREF	)	==	0
list	->	flags	&	HIDDEV_FLAG_UREF	==	0
(	list	->	flags	&	HIDDEV_FLAG_REPORT	)	!=	0
list	->	flags	&	HIDDEV_FLAG_REPORT	!=	0
(	list	->	tail	+	1	)	&	(	HIDDEV_BUFFER_SIZE	-	1	)

cmd	==	HIDIOCGUSAGES	||	cmd	==	HIDIOCSUSAGES
HIDIOCGUSAGES	||	cmd	==	cmd	==	HIDIOCGUSAGES	||	cmd	==	==	HIDIOCGUSAGES	||	cmd	==	cmd	==	HIDIOCGUSAGES	||	cmd	==	HIDIOCSUSAGES
cmd	!=	HIDIOCGUSAGE	&&	cmd	!=	HIDIOCGUSAGES	&&	uref	->	report_type	==	HID_REPORT_TYPE_INPUT
!=	HIDIOCGUSAGE	&&	cmd	!=	HIDIOCGUSAGES	&&	uref	->	report_type	==	cmd	!=	HIDIOCGUSAGE	&&	cmd	!=	HIDIOCGUSAGES	&&	uref	->	report_type	==	HID_REPORT_TYPE_INPUT
(	cmd	==	HIDIOCGUSAGES	||	cmd	==	HIDIOCSUSAGES	)	&&	(	uref_multi	->	num_values	>	HID_MAX_MULTI_USAGES	||	uref	->	usage_index	+	uref_multi	->	num_values	>	field	->	report_count	)
cmd	==	HIDIOCGUSAGES	||	cmd	==	HIDIOCSUSAGES	&&	uref_multi	->	num_values	>	HID_MAX_MULTI_USAGES	||	uref	->	usage_index	+	uref_multi	->	num_values	>	field	->	report_count
arg	<	0	||	arg	>=	hid	->	maxapplication

(	newflags	&	~	HIDDEV_FLAGS	)	!=	0	||	(	(	newflags	&	HIDDEV_FLAG_REPORT	)	!=	0	&&	(	newflags	&	HIDDEV_FLAG_UREF	)	==	0	)
(	newflags	&	~	HIDDEV_FLAGS	)	!=	0	||	(	newflags	&	HIDDEV_FLAG_REPORT	!=	0	&&	newflags	&	HIDDEV_FLAG_UREF	==	0	)
(	(	dir	)	<<	_IOC_DIRSHIFT	)	|	(	(	type	)	<<	_IOC_TYPESHIFT	)	|	(	(	nr	)	<<	_IOC_NRSHIFT	)	|	(	(	size	)	<<	_IOC_SIZESHIFT	)
(	(	dir	)	<<	_IOC_DIRSHIFT	)	|	(	(	type	)	<<	_IOC_TYPESHIFT	)	|	(	nr	)	<<	_IOC_NRSHIFT	|	(	size	)	<<	_IOC_SIZESHIFT
(	(	dir	)	<<	_IOC_DIRSHIFT	)	|	(	(	type	)	<<	_IOC_TYPESHIFT	)	|	(	(	nr	)	<<	_IOC_NRSHIFT	)	|	(	(	size	)	<<	_IOC_SIZESHIFT	)
(	dir	)	<<	_IOC_DIRSHIFT	|	(	(	type	)	<<	_IOC_TYPESHIFT	)	|	(	nr	)	<<	_IOC_NRSHIFT	|	(	(	size	)	<<	_IOC_SIZESHIFT	)
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	(	len	)	+	NLMSG_ALIGNTO	-	1	)	&	~	(	NLMSG_ALIGNTO	-	1	)
(	len	)	+	NLMSG_ALIGNTO	-	1	&	~	NLMSG_ALIGNTO	-	1
(	nlh	->	nlmsg_len	<	(	sizeof	(	*	nlh	)	+	sizeof	(	*	hdr	)	)	)	||	(	skb	->	len	<	nlh	->	nlmsg_len	)

(	hdr	->	version	!=	SCSI_NL_VERSION	)	||	(	hdr	->	magic	!=	SCSI_NL_MAGIC	)

nlh	->	nlmsg_len	<	(	sizeof	(	*	nlh	)	+	hdr	->	msglen	)

(	err	)	||	(	nlh	->	nlmsg_flags	&	NLM_F_ACK	)

page_count	(	sg_page	(	sg	)	)	>=	1	&&	!	recv

tcp_task	->	data_offset	+	tcp_conn	->	in	.	datalen	>	total_in_length

r2t	->	data_offset	+	r2t	->	data_length	>	scsi_out	(	task	->	sc	)	->	length

kfifo_out	(	&	tcp_task	->	r2tqueue	,	(	void	*	)	&	tcp_task	->	r2t	,	sizeof	(	void	*	)	)	!=	sizeof	(	void	*	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

instance	->	io_port	+	(	reg	<<	4	)
instance	->	io_port	+	reg	<<	4
instance	->	io_port	+	(	reg	<<	4	)
instance	->	io_port	+	reg	<<	4
n	--	>	0

(	r	&	bit	)	==	val
r	&	bit	==	val
(	r	&	bit	)	==	val
r	&	bit	==	val
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	--	SCp	->	buffers_residual	)	==	0

(	cmd	->	SCp	.	Status	)	&&	(	(	z	>	0	)	||	(	odd	)	)
(	cmd	->	SCp	.	Status	)	&&	(	z	>	0	)	||	(	odd	)
(	z	>	0	)	&&	(	cmd	->	SCp	.	this_residual	==	1	)

(	cmd	->	SCp	.	Status	)	&&	(	(	z	>	0	)	||	(	odd	)	)
(	cmd	->	SCp	.	Status	)	&&	(	z	>	0	)	||	(	odd	)
(	z	>	0	)	&&	(	cmd	->	SCp	.	this_residual	==	1	)

z	>	0	||	odd

--	loop	==	0

--	loop	==	0

--	loop	==	0

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

--	lim	==	0

(	esp	->	max_period	+	3	)	>>	2

(	esp	->	min_period	+	3	)	>>	2

p	->	cur_residue	<	0	||	p	->	tot_residue	<	0

!	p	->	cur_residue	&&	p	->	tot_residue

cmd	->	cmd_len	==	6	||	cmd	->	cmd_len	==	10	||	cmd	->	cmd_len	==	12

!	spi_offset	(	target	)	&&	!	tp	->	nego_goal_offset

spi_offset	(	target	)	==	tp	->	nego_goal_offset	&&	spi_period	(	target	)	==	tp	->	nego_goal_period

spi_width	(	tp	->	starget	)	==	tp	->	nego_goal_width	&&	spi_period	(	tp	->	starget	)	==	tp	->	nego_goal_period	&&	spi_offset	(	tp	->	starget	)	==	tp	->	nego_goal_offset

status	|	(	message	<<	8	)	|	(	driver_code	<<	16	)

size	!=	8	&&	size	!=	16

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

pDev	->	subsystem_device	>=	0xc032	&&	pDev	->	subsystem_device	<=	0xc03b

!	d	||	d	->	tid	==	0

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

esp	->	regs	+	reg	*	16

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

!	(	NCR5380_read	(	DTC_CONTROL_REG	)	&	D_CR_ACCESS	)
!	NCR5380_read	(	DTC_CONTROL_REG	)	&	D_CR_ACCESS
!	(	NCR5380_read	(	DTC_CONTROL_REG	)	&	D_CR_ACCESS	)
!	NCR5380_read	(	DTC_CONTROL_REG	)	&	D_CR_ACCESS
n	--	>	0

(	r	&	bit	)	==	val
r	&	bit	==	val
(	r	&	bit	)	==	val
r	&	bit	==	val
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	sc	->	device	->	lun	>>	8	)	|	0x40

(	sc	->	device	->	lun	>>	8	)	|	0x40

(	sc	->	device	->	lun	>>	8	)	|	0x40

(	aen	&	0x0ff	)	<	table_max
aen	&	0x0ff	<	table_max
(	aen	&	0x0ff	)	<	table_max
aen	&	0x0ff	<	table_max
(	data_buffer_length	+	511	)	&	~	511

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	readb	(	p	->	mem_base	+	0x0d	)	&	0xf0	)	>>	4
readb	(	p	->	mem_base	+	0x0d	)	&	0xf0	>>	4
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

0	==	(	k	%	16	)

0	==	(	k	%	16	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

!	--	pool	->	users

cmd	->	device	->	lun	<<	5	&	0xe0

blk_queue_tagged	(	sdev	->	request_queue	)	&&	blk_queue_resize_tags	(	sdev	->	request_queue	,	tags	)	!=	0

i	>=	buf_len	-	4

(	sdev	->	channel	==	starget	->	channel	)	&&	(	sdev	->	id	==	starget	->	id	)

(	sdev	->	channel	==	starget	->	channel	)	&&	(	sdev	->	id	==	starget	->	id	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

sec	%	3600	/	60

id	==	-	1

(	channel	*	15	)	+	tgt

rval	!=	-	1

(	shost	->	hostt	->	vendor_id	==	0L	)	||	(	req	->	rqst_data	.	h_vendor	.	vendor_id	!=	shost	->	hostt	->	vendor_id	)

!	session	||	!	conn

ev	->	r	.	retcode	||	!	transport	->	ep_connect

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

n	--	>	0

(	r	&	bit	)	==	val
r	&	bit	==	val
(	r	&	bit	)	==	val
r	&	bit	==	val
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

!	sht	->	present	++

!	--	sht	->	present	&&	sht	->	proc_dir

sdev	->	scsi_level	-	(	sdev	->	scsi_level	>	1	)
sdev	->	scsi_level	-	sdev	->	scsi_level	>	1
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	sizeof	(	hostrcb	->	hcam	)	>>	8	)	&	0xff

!	memcmp	(	&	res	->	dev_id	,	&	cfgtew	->	u	.	cfgte64	->	dev_id	,	sizeof	(	cfgtew	->	u	.	cfgte64	->	dev_id	)	)	&&	!	memcmp	(	&	res	->	dev_lun	.	scsi_lun	,	&	cfgtew	->	u	.	cfgte64	->	lun	,	sizeof	(	cfgtew	->	u	.	cfgte64	->	lun	)	)

res	->	bus	==	cfgtew	->	u	.	cfgte	->	res_addr	.	bus	&&	res	->	target	==	cfgtew	->	u	.	cfgte	->	res_addr	.	target	&&	res	->	lun	==	cfgtew	->	u	.	cfgte	->	res_addr	.	lun

!	res	->	sdev	||	res	->	del_from_ml

i	<	len	/	4

fabric	->	cascaded_expander	==	0xff	&&	fabric	->	phy	==	0xff

cfg	->	cascaded_expander	==	0xff	&&	cfg	->	phy	==	0xff

!	ioa_cfg	->	in_reset_reload	||	ioa_cfg	->	reset_cmd	==	ipr_cmd

!	ioa_cfg	->	allow_cmds	||	!	ioa_cfg	->	allow_ml_add_del

(	buf_len	/	bsize_elem	)	+	1

!	ipr_is_vset_device	(	res	)	&&	!	ipr_is_naca_model	(	res	)

ioa_cfg	->	ioa_is_dead	||	!	res

(	ioa_cfg	->	cfg_table_size	>>	16	)	&	0xff

(	ioa_cfg	->	cfg_table_size	>>	8	)	&	0xff

!	ioa_cfg	->	sis64	&&	!	ipr_sdt_is_fmt2	(	mailbox	)

!	ipr_reset_allowed	(	ioa_cfg	)	&&	ipr_cmd	->	u	.	time_left

(	sglist	->	buffer_len	&	0xff0000	)	>>	16
sglist	->	buffer_len	&	0xff0000	>>	16
(	sglist	->	buffer_len	&	0x00ff00	)	>>	8
sglist	->	buffer_len	&	0x00ff00	>>	8
pass	==	0	&&	scsi_is_sas_port	(	dev	)

pass	==	1	&&	scsi_is_sas_phy	(	dev	)

msdata	-	buffer	>	BUF_SIZE	-	8

dev	->	release	==	sas_end_device_release	||	dev	->	release	==	sas_expander_release

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

hba	->	dma_mem	+	hba	->	req_head	*	hba	->	rq_size

hba	->	dma_mem	+	hba	->	req_head	*	hba	->	rq_size	+	sizeof	(	struct	st_msg_header	)

hba	->	pdev	->	vendor	<<	16	|	hba	->	pdev	->	device

hba	->	pdev	->	subsystem_vendor	<<	16	|	hba	->	pdev	->	subsystem_device

page	==	0x8	||	page	==	0x3f

hba	->	cardtype	==	st_shasta	||	id	==	host	->	max_id	-	1

!	lun	&&	!	cmd	->	device	->	channel

hba	->	out_req_cnt	<=	0	||	(	hba	->	mu_status	==	MU_STATE_RESETTING	&&	hba	->	cardtype	!=	st_yosemite	)

size	<	sizeof	(	*	resp	)	-	STATUS_VAR_LEN	||	size	>	sizeof	(	*	resp	)

hba	->	out_req_cnt	<=	0	||	hba	->	mu_status	==	MU_STATE_RESETTING

size	<	sizeof	(	*	resp	)	-	STATUS_VAR_LEN	||	size	>	sizeof	(	*	resp	)

!	(	le32_to_cpu	(	*	scratch	)	&	SS_STS_HANDSHAKE	)
!	le32_to_cpu	(	*	scratch	)	&	SS_STS_HANDSHAKE
ret	==	-	1

!	pci_set_dma_mask	(	pdev	,	DMA_BIT_MASK	(	64	)	)	&&	!	pci_set_consistent_dma_mask	(	pdev	,	DMA_BIT_MASK	(	64	)	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	rport	->	port_id	!=	-	1	)	&&	(	rport	->	port_id	&	FC_WELLKNOWN_PORTID_MASK	)	==	FC_WELLKNOWN_PORTID_MASK
(	rport	->	port_id	!=	-	1	)	&&	rport	->	port_id	&	FC_WELLKNOWN_PORTID_MASK	==	FC_WELLKNOWN_PORTID_MASK
rport	->	fast_io_fail_tmo	==	-	1

(	j	<<	4	)	|	value

rport	->	scsi_target_id	!=	-	1

rport	->	scsi_target_id	==	-	1

!	done	&&	i	->	f	->	bsg_timeout

(	!	job	->	request_payload	.	payload_len	)	||	(	!	job	->	reply_payload	.	payload_len	)

(	!	job	->	request_payload	.	payload_len	)	||	(	!	job	->	reply_payload	.	payload_len	)

(	shost	->	hostt	->	vendor_id	==	0L	)	||	(	job	->	request	->	rqst_data	.	h_vendor	.	vendor_id	!=	shost	->	hostt	->	vendor_id	)

(	!	job	->	request_payload	.	payload_len	)	||	(	!	job	->	reply_payload	.	payload_len	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

req	->	resid_len	>	0	&&	req	->	resid_len	<=	bufflen

scsi_host_in_recovery	(	shost	)	&&	(	shost	->	host_failed	||	shost	->	host_eh_scheduled	)
scsi_host_in_recovery	(	shost	)	&&	shost	->	host_failed	||	shost	->	host_eh_scheduled
sdev	->	device_busy	>=	sdev	->	queue_depth	||	sdev	->	device_blocked

(	starget	->	can_queue	>	0	&&	starget	->	target_busy	>=	starget	->	can_queue	)	||	starget	->	target_blocked

(	shost	->	can_queue	>	0	&&	shost	->	host_busy	>=	shost	->	can_queue	)	||	shost	->	host_blocked	||	shost	->	host_self_blocked

sense_valid	&&	!	sense_deferred

sdev	->	device_busy	==	0	&&	sdev	->	device_blocked

--	sdev	->	device_blocked	==	0

starget	->	starget_sdev_user	&&	starget	->	starget_sdev_user	!=	sdev

starget	->	target_busy	==	0	&&	starget	->	target_blocked

--	starget	->	target_blocked	==	0

shost	->	host_busy	==	0	&&	shost	->	host_blocked

--	shost	->	host_blocked	==	0

(	cmd	->	allowed	+	1	)	*	rq	->	timeout
cmd	->	allowed	+	1	*	rq	->	timeout
!	req	||	!	scsi_dev_queue_ready	(	q	,	sdev	)

!	(	blk_queue_tagged	(	q	)	&&	!	blk_queue_start_tag	(	q	,	req	)	)
!	blk_queue_tagged	(	q	)	&&	!	blk_queue_start_tag	(	q	,	req	)
blk_queue_tagged	(	q	)	&&	!	blk_rq_tagged	(	req	)

(	sshdr	->	sense_key	==	ILLEGAL_REQUEST	)	&&	(	sshdr	->	asc	==	0x20	)	&&	(	sshdr	->	ascq	==	0	)

modepage	==	6	||	modepage	==	8

sdev	->	removable	&&	scsi_sense_valid	(	sshdr	)	&&	sshdr	->	sense_key	==	UNIT_ATTENTION

scsi_sense_valid	(	sshdr	)	&&	sshdr	->	sense_key	==	UNIT_ATTENTION	&&	--	retries

period	<	0	||	period	>	0xff

picosec	==	-	1

period	==	-	1

j	<	min	(	len	,	k	+	32	)

j	<	min	(	len	,	k	+	32	)

j	<	min	(	len	,	k	+	32	)

result	||	!	scsi_device_online	(	sdev	)

result	||	!	scsi_device_online	(	sdev	)

retval	==	SPI_COMPARE_SUCCESS	||	retval	==	SPI_COMPARE_SKIP_TEST

period	>	0xff	||	period	==	prevperiod

!	spi_support_sync	(	starget	)	&&	!	spi_support_dt	(	starget	)

spi_support_ius	(	starget	)	&&	spi_max_iu	(	starget	)	&&	min_period	<	9

tp	->	offset	>	0	&&	tp	->	period	>	0

(	10000000	+	picosec	/	2	)	/	picosec
10000000	+	picosec	/	2	/	picosec
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	(	WAITbits	&	allof	)	==	allof	)	&&	(	(	WAITbits	&	noneof	)	==	0	)
(	WAITbits	&	allof	==	allof	)	&&	(	WAITbits	&	noneof	==	0	)
!	WAIT	(	host	->	iobase	+	ASC_STAT	,	ASC_STATMASK	,	CMD_RDY	,	0	)

inb	(	host	->	iobase	+	ASC_STAT	)	&	CMD_REJ

i	<	MAX_SCBS	-	1

(	ogmb	+	1	)	%	OGMB_CNT
ogmb	+	1	%	OGMB_CNT
(	ogmb	+	1	)	%	OGMB_CNT
ogmb	+	1	%	OGMB_CNT
(	hosterr	>>	8	)	&	0xff

scsierr	|	(	hosterr	<<	16	)

!	(	inb	(	host	->	iobase	+	ASC_STAT	)	&	INT_IM	)
!	inb	(	host	->	iobase	+	ASC_STAT	)	&	INT_IM
!	(	flag	&	MB_INTR	)
!	flag	&	MB_INTR
!	(	flag	&	IMB_INTR	)
!	flag	&	IMB_INTR
--	(	SCpnt	->	SCp	.	phase	)	<=	0

scb	->	vue	|	(	icmb_status	<<	8	)

icb	.	vue	|	(	icb	.	status	<<	8	)

wd7000_adapter_reset	(	host	)	==	-	1

inb	(	iobase	+	ASC_INTR_STAT	)	==	1

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	len	&	0x00FF00	)	>>	8
len	&	0x00FF00	>>	8
(	len	&	0xFF0000	)	>>	16
len	&	0xFF0000	>>	16
fastpio	&&	bytes_left	>	3

inb	(	base	+	PIO_INT_REG	)	&	SCI

inb	(	base	+	PIO_INT_REG	)	&	EMPTY

fastpio	&&	bufferfree	>	3

inb	(	base	+	PIO_INT_REG	)	&	FULL

pio_int_reg	&	(	CE	|	OUE	)
pio_int_reg	&	CE	|	OUE
i	<	host_index	&&	i	>=	0

inb	(	base	+	COMMAND_REG	)	!=	NOOP

!	inb	(	base	+	TC_HIGH	)	||	inb	(	base	+	TC_HIGH	)	==	0xFF

(	inb	(	base	+	PIO_INT_REG	)	&	(	FULL	|	EMPTY	|	CE	|	OUE	|	FIE	|	EIE	)	)	!=	EMPTY
(	inb	(	base	+	PIO_INT_REG	)	&	FULL	|	EMPTY	|	CE	|	OUE	|	FIE	|	EIE	)	!=	EMPTY
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

i	==	sg_count	-	1

destlen	||	i	!=	orig_sgl_count	-	1

destlen	==	0	&&	i	==	orig_sgl_count	-	1

srclen	||	i	!=	orig_sgl_count	-	1

srclen	==	0	&&	i	==	orig_sgl_count	-	1

vstor_packet	->	operation	!=	VSTOR_OPERATION_COMPLETE_IO	||	vstor_packet	->	status	!=	0

vstor_packet	->	operation	!=	VSTOR_OPERATION_COMPLETE_IO	||	vstor_packet	->	status	!=	0

vstor_packet	->	operation	!=	VSTOR_OPERATION_COMPLETE_IO	||	vstor_packet	->	status	!=	0

vstor_packet	->	operation	!=	VSTOR_OPERATION_COMPLETE_IO	||	vstor_packet	->	status	!=	0

vstor_packet	->	vm_srb	.	scsi_status	!=	0	||	vstor_packet	->	vm_srb	.	srb_status	!=	SRB_STATUS_SUCCESS

(	vstor_packet	->	vm_srb	.	scsi_status	&	0xFF	)	==	0x02
vstor_packet	->	vm_srb	.	scsi_status	&	0xFF	==	0x02
(	request	==	&	stor_device	->	init_request	)	||	(	request	==	&	stor_device	->	reset_request	)

do_bounce_buffer	(	sgl	,	scsi_sg_count	(	scmnd	)	)	!=	-	1

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

scb	->	tastat	|	(	scb	->	hastat	<<	16	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

~	(	1	<<	host	->	scsi_id	)
~	1	<<	host	->	scsi_id
wait_tulip	(	host	)	!=	-	1

initio_next_state	(	host	)	==	-	1

wait_tulip	(	host	)	!=	-	1

initio_next_state	(	host	)	==	-	1

wait_tulip	(	host	)	==	-	1

wait_tulip	(	host	)	==	-	1

initio_msgin	(	host	)	==	-	1

initio_status_msg	(	host	)	==	-	1

wait_tulip	(	host	)	==	-	1

wait_tulip	(	host	)	==	-	1

(	initio_status_msg	(	host	)	)	==	-	1

initio_msgin	(	host	)	==	-	1

initio_msgout_ide	(	host	)	==	-	1

wait_tulip	(	host	)	==	-	1

wait_tulip	(	host	)	==	-	1

(	initio_status_msg	(	host	)	)	==	-	1

(	initio_msgin	(	host	)	)	==	-	1

wait_tulip	(	host	)	==	-	1

wait_tulip	(	host	)	==	-	1

(	wait_tulip	(	host	)	)	==	-	1

wait_tulip	(	host	)	==	-	1

(	initio_msgin_accept	(	host	)	)	==	-	1

(	scb	->	tastat	&	0x18	)	==	0x10
scb	->	tastat	&	0x18	==	0x10
(	scb	->	tastat	&	0x18	)	==	0x10
scb	->	tastat	&	0x18	==	0x10
(	initio_msgin_accept	(	host	)	)	==	-	1

wait_tulip	(	host	)	==	-	1

initio_msgin_accept	(	host	)	==	-	1

wait_tulip	(	host	)	==	-	1

(	initio_msgin_accept	(	host	)	)	==	-	1

(	initio_msgin_accept	(	host	)	)	==	-	1

initio_msgin_accept	(	host	)	==	-	1

initio_msgin_accept	(	host	)	==	-	1

wait_tulip	(	host	)	==	-	1

initio_msgin_accept	(	host	)	==	-	1

wait_tulip	(	host	)	==	-	1

cblk	->	tastat	|	(	cblk	->	hastat	<<	16	)

n	--	>	0

(	r	&	bit	)	==	val
r	&	bit	==	val
(	r	&	bit	)	==	val
r	&	bit	==	val
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

16	*	2	+	2

(	*	(	h	->	reply_pool_head	)	&	1	)	==	(	h	->	reply_pool_wraparound	)
*	(	h	->	reply_pool_head	)	&	1	==	(	h	->	reply_pool_wraparound	)
h	->	reply_pool_head	==	(	h	->	reply_pool	+	h	->	max_commands	)

device	->	lun	!=	-	1

device	->	lun	==	-	1

new_entry	->	target	==	-	1

!	added	||	!	removed

hostno	==	-	1	||	!	changes

sd	->	bus	==	bus	&&	sd	->	target	==	target	&&	sd	->	lun	==	lun

(	asc	==	0x25	)	&&	(	ascq	==	0x0	)

(	asc	==	0x04	)	&&	(	ascq	==	0x03	)

check_for_unit_attention	(	h	,	c	)	&&	retry_count	<=	3

ei	->	CommandStatus	!=	0	&&	ei	->	CommandStatus	!=	CMD_DATA_UNDERRUN

ei	->	CommandStatus	!=	0	&&	ei	->	CommandStatus	!=	CMD_DATA_UNDERRUN

this_device	->	devtype	==	TYPE_DISK	&&	is_logical_dev_addr_mode	(	scsi3addr	)

this_device	->	devtype	==	TYPE_ROM	&&	strncmp	(	obdr_sig	,	OBDR_TAPE_SIG	,	OBDR_SIG_LEN	)	==	0

nphysicals	+	(	raid_ctlr_position	==	0	)
nphysicals	+	raid_ctlr_position	==	0
nphysicals	+	nlogicals	+	(	raid_ctlr_position	==	0	)
nphysicals	+	nlogicals	+	raid_ctlr_position	==	0
i	-	(	raid_ctlr_position	==	0	)
i	-	raid_ctlr_position	==	0
i	-	nphysicals	-	(	raid_ctlr_position	==	0	)
i	-	nphysicals	-	raid_ctlr_position	==	0
!	currentsd	||	!	physdev_list	||	!	logdev_list	||	!	tmpdevice

i	==	h	->	max_cmd_sg_entries	-	1	&&	use_sg	>	h	->	max_cmd_sg_entries

use_sg	+	chained	>	h	->	maxSG

(	vmaj	<<	16	)	|	(	vmin	<<	8	)	|	vsubmin

(	iocommand	.	buf_size	<	1	)	&&	(	iocommand	.	Request	.	Type	.	Direction	!=	XFER_NONE	)

iocommand	.	Request	.	Type	.	Direction	==	XFER_READ	&&	iocommand	.	buf_size	>	0

(	ioc	->	buf_size	<	1	)	&&	(	ioc	->	Request	.	Type	.	Direction	!=	XFER_NONE	)

ioc	->	Request	.	Type	.	Direction	==	XFER_READ	&&	ioc	->	buf_size	>	0

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

mhba	->	ib_list	+	cur_ib_entry	*	mhba	->	ib_max_size

mhba	->	ob_list	+	cur_obf	*	mhba	->	ob_max_size

mhba	->	ob_list	+	cur_obf	*	mhba	->	ob_max_size

1	<<	(	device_id	%	bitcount	)

retry	++	>=	5

128	+	mhba	->	ob_max_size	*	mhba	->	max_io

sizeof	(	unsigned	short	)	*	mhba	->	max_io	+	sizeof	(	struct	mvumi_cmd	*	)	*	mhba	->	max_io

(	hs_header	->	page_code	+	1	)	<=	mhba	->	hba_total_pages

mhba	->	instancet	->	clear_intr	(	mhba	)	||	!	mhba	->	global_isr

1	<<	(	sdev	->	id	%	bitcount	)

(	(	unsigned	short	)	scmd	->	device	->	id	)	|	(	(	(	unsigned	short	)	scmd	->	device	->	lun	)	<<	8	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	j	&	0x80	)	!=	0
j	&	0x80	!=	0
(	inb	(	tmport1	)	&	0x80	)	==	0
inb	(	tmport1	)	&	0x80	==	0
(	inb	(	tmpcip	)	&	0x08	)	!=	0
inb	(	tmpcip	)	&	0x08	!=	0
(	inb	(	tmpcip	)	&	0x08	)	==	0
inb	(	tmpcip	)	&	0x08	==	0
(	inb	(	tmpcip	)	&	0x01	)	==	0
inb	(	tmpcip	)	&	0x01	==	0
(	target_id	&	0x40	)	!=	0
target_id	&	0x40	!=	0
(	target_id	&	0x07	)	|	0x08

(	j	&	0x40	)	!=	0
j	&	0x40	!=	0
(	inb	(	tmport	)	&	0x01	)	!=	0x01
inb	(	tmport	)	&	0x01	!=	0x01
(	i	==	0x4c	)	||	(	i	==	0x4d	)	||	(	i	==	0x8c	)	||	(	i	==	0x8d	)

(	i	==	0x4c	)	||	(	i	==	0x8c	)

(	i	==	0x80	)	||	(	i	==	0x8f	)

cmdp	==	0x44	||	i	==	0x80

inb	(	dev	->	baseport	+	0x29	)	&	0xfe

(	target_id	&	0x10	)	!=	0
target_id	&	0x10	!=	0
(	target_id	&	0x07	)	|	0x08

(	j	&	0x07	)	|	0x40

(	inb	(	tmport	)	&	0x3f	)	|	0xc0

(	inb	(	tmport	)	&	0xf3	)	|	0x08

(	inb	(	tmport	)	&	0x01	)	!=	j
inb	(	tmport	)	&	0x01	!=	j
inb	(	dev	->	baseport	+	0x29	)	|	0x01

(	inb	(	tmport	)	&	0x01	)	!=	0x01
inb	(	tmport	)	&	0x01	!=	0x01
(	inb	(	tmport	)	&	0xb0	)	!=	0
inb	(	tmport	)	&	0xb0	!=	0
(	inb	(	tmport	)	&	0x01	)	!=	j
inb	(	tmport	)	&	0x01	!=	j
(	j	&	0x08	)	!=	0
j	&	0x08	!=	0
(	j	&	0x07	)	|	0x40

(	inb	(	tmport	)	&	0x3f	)	|	0xc0

(	inb	(	tmport	)	&	0xf3	)	|	0x08

(	k	&	0x8000	)	!=	0
k	&	0x8000	!=	0
(	inw	(	tmport	)	&	0x2000	)	!=	0
inw	(	tmport	)	&	0x2000	!=	0
(	inw	(	tmport	)	&	0x4000	)	!=	0
inw	(	tmport	)	&	0x4000	!=	0
(	dev	->	scam_on	&	0x40	)	==	0
dev	->	scam_on	&	0x40	==	0
(	m	&	assignid_map	)	!=	0
m	&	assignid_map	!=	0
(	i	&	0x07	)	|	0x40

(	inb	(	tmport	)	&	0x80	)	==	0x00
inb	(	tmport	)	&	0x80	==	0x00
(	k	==	0x85	)	||	(	k	==	0x42	)

(	inb	(	tmport	)	&	0x04	)	!=	0
inb	(	tmport	)	&	0x04	!=	0
(	inb	(	tmport	)	&	0x80	)	!=	0
inb	(	tmport	)	&	0x80	!=	0
(	inb	(	tmport	)	&	0x81	)	==	0x0081
inb	(	tmport	)	&	0x81	==	0x0081
(	inb	(	tmport	)	&	0x80	)	==	0x00
inb	(	tmport	)	&	0x80	==	0x00
(	inb	(	tmport	)	&	0x80	)	==	0
inb	(	tmport	)	&	0x80	==	0
(	inw	(	tmport	)	&	0x2000	)	==	0
inw	(	tmport	)	&	0x2000	==	0
(	k	&	0x03	)	==	0
k	&	0x03	==	0
(	k	&	0x02	)	!=	0
k	&	0x02	!=	0
(	j	&	0x20	)	!=	0
j	&	0x20	!=	0
(	j	&	0x06	)	==	0
j	&	0x06	==	0
(	m	&	assignid_map	)	==	0
m	&	assignid_map	==	0
(	m	&	assignid_map	)	==	0
m	&	assignid_map	==	0
(	dev	->	chip_ver	!=	4	)	&&	(	i	>	7	)

(	j	&	0x08	)	!=	0
j	&	0x08	!=	0
(	j	&	0x07	)	|	0x40

(	inb	(	tmport	)	&	0x80	)	==	0x00
inb	(	tmport	)	&	0x80	==	0x00
inb	(	tmport	)	!=	0x11	&&	inb	(	tmport	)	!=	0x8e

(	inb	(	tmport	)	&	0x80	)	==	0x00
inb	(	tmport	)	&	0x80	==	0x00
(	inb	(	tmport	)	&	0x80	)	==	0x00
inb	(	tmport	)	&	0x80	==	0x00
inb	(	tmport	)	!=	0x11	&&	inb	(	tmport	)	!=	0x8e

(	k	&	0x01	)	!=	0
k	&	0x01	!=	0
(	k	&	0x80	)	==	0
k	&	0x80	==	0
(	inb	(	tmport	)	&	0x80	)	==	0x00
inb	(	tmport	)	&	0x80	==	0x00
(	inb	(	tmport	)	&	0x80	)	==	0x00
inb	(	tmport	)	&	0x80	==	0x00
inb	(	tmport	)	!=	0x11	&&	inb	(	tmport	)	!=	0x8e

(	inb	(	tmport	)	&	0x80	)	==	0
inb	(	tmport	)	&	0x80	==	0
(	inb	(	tmport	)	&	0x01	)	!=	0
inb	(	tmport	)	&	0x01	!=	0
(	inb	(	tmport	)	&	0x80	)	==	0x00
inb	(	tmport	)	&	0x80	==	0x00
(	inb	(	tmport	)	&	0x80	)	==	0
inb	(	tmport	)	&	0x80	==	0
(	inb	(	tmport	)	&	0x01	)	!=	0
inb	(	tmport	)	&	0x01	!=	0
(	j	&	0x01	)	!=	0
j	&	0x01	!=	0
(	j	&	0x80	)	==	0x00
j	&	0x80	==	0x00
(	inb	(	tmport	)	&	0x80	)	==	0x00
inb	(	tmport	)	&	0x80	==	0x00
(	n	&	0x10	)	!=	0
n	&	0x10	!=	0
(	inb	(	tmport	)	&	0x80	)	==	0x00
inb	(	tmport	)	&	0x80	==	0x00
inb	(	tmport	)	!=	0x11	&&	inb	(	tmport	)	!=	0x8e

(	inb	(	tmport	)	&	0x80	)	==	0
inb	(	tmport	)	&	0x80	==	0
(	inb	(	tmport	)	&	0x01	)	!=	0
inb	(	tmport	)	&	0x01	!=	0
(	inb	(	tmport	)	&	0x80	)	==	0x00
inb	(	tmport	)	&	0x80	==	0x00
(	inb	(	tmport	)	&	0x80	)	==	0x00
inb	(	tmport	)	&	0x80	==	0x00
(	inb	(	tmport	)	&	0x01	)	!=	0x00
inb	(	tmport	)	&	0x01	!=	0x00
(	j	&	0x01	)	!=	0x00
j	&	0x01	!=	0x00
(	j	&	0x80	)	==	0x00
j	&	0x80	==	0x00
(	inb	(	tmport	)	&	0x80	)	==	0x00
inb	(	tmport	)	&	0x80	==	0x00
(	inb	(	tmport	)	&	0x80	)	==	0x00
inb	(	tmport	)	&	0x80	==	0x00
inb	(	wkport	+	0x3f	)	&	0x40

(	j	&	0x08	)	!=	0
j	&	0x08	!=	0
(	j	&	0x07	)	|	0x40

(	inb	(	tmport	)	&	0x80	)	==	0x00
inb	(	tmport	)	&	0x80	==	0x00
inb	(	tmport	)	!=	0x11	&&	inb	(	tmport	)	!=	0x8e

(	inb	(	tmport	)	&	0x80	)	==	0x00
inb	(	tmport	)	&	0x80	==	0x00
(	inb	(	tmport	)	&	0x80	)	==	0x00
inb	(	tmport	)	&	0x80	==	0x00
inb	(	tmport	)	!=	0x11	&&	inb	(	tmport	)	!=	0x8e

(	k	&	0x01	)	!=	0
k	&	0x01	!=	0
(	k	&	0x80	)	==	0
k	&	0x80	==	0
(	inb	(	tmport	)	&	0x80	)	==	0x00
inb	(	tmport	)	&	0x80	==	0x00
(	inb	(	tmport	)	&	0x80	)	==	0x00
inb	(	tmport	)	&	0x80	==	0x00
inb	(	tmport	)	!=	0x11	&&	inb	(	tmport	)	!=	0x8e

(	inb	(	tmport	)	&	0x80	)	==	0
inb	(	tmport	)	&	0x80	==	0
(	inb	(	tmport	)	&	0x01	)	!=	0
inb	(	tmport	)	&	0x01	!=	0
(	inb	(	tmport	)	&	0x80	)	==	0x00
inb	(	tmport	)	&	0x80	==	0x00
(	inb	(	tmport	)	&	0x80	)	==	0
inb	(	tmport	)	&	0x80	==	0
(	inb	(	tmport	)	&	0x01	)	!=	0
inb	(	tmport	)	&	0x01	!=	0
(	j	&	0x01	)	!=	0
j	&	0x01	!=	0
(	j	&	0x80	)	==	0x00
j	&	0x80	==	0x00
(	inb	(	tmport	)	&	0x80	)	==	0x00
inb	(	tmport	)	&	0x80	==	0x00
(	inb	(	tmport	)	&	0x80	)	==	0x00
inb	(	tmport	)	&	0x80	==	0x00
inb	(	tmport	)	!=	0x11	&&	inb	(	tmport	)	!=	0x8e

(	inb	(	tmport	)	&	0x80	)	==	0
inb	(	tmport	)	&	0x80	==	0
(	inb	(	tmport	)	&	0x01	)	!=	0
inb	(	tmport	)	&	0x01	!=	0
(	inb	(	tmport	)	&	0x80	)	==	0x00
inb	(	tmport	)	&	0x80	==	0x00
(	inb	(	tmport	)	&	0x80	)	==	0
inb	(	tmport	)	&	0x80	==	0
(	inb	(	tmport	)	&	0x01	)	!=	0
inb	(	tmport	)	&	0x01	!=	0
(	j	&	0x01	)	!=	0
j	&	0x01	!=	0
(	j	&	0x80	)	==	0x00
j	&	0x80	==	0x00
(	inb	(	tmport	)	&	0x80	)	==	0x00
inb	(	tmport	)	&	0x80	==	0x00
(	n	&	0x10	)	!=	0
n	&	0x10	!=	0
(	inb	(	tmport	)	&	0x80	)	==	0x00
inb	(	tmport	)	&	0x80	==	0x00
(	inb	(	tmport	)	!=	0x11	)	&&	(	inb	(	tmport	)	!=	0x8e	)

(	inb	(	tmport	)	&	0x80	)	==	0
inb	(	tmport	)	&	0x80	==	0
(	inb	(	tmport	)	&	0x01	)	!=	0
inb	(	tmport	)	&	0x01	!=	0
(	inb	(	tmport	)	&	0x80	)	==	0x00
inb	(	tmport	)	&	0x80	==	0x00
(	inb	(	tmport	)	&	0x80	)	==	0x00
inb	(	tmport	)	&	0x80	==	0x00
(	inb	(	tmport	)	&	0x01	)	!=	0x00
inb	(	tmport	)	&	0x01	!=	0x00
(	j	&	0x01	)	!=	0x00
j	&	0x01	!=	0x00
(	j	&	0x80	)	==	0x00
j	&	0x80	==	0x00
(	inb	(	tmport	)	&	0x80	)	==	0x00
inb	(	tmport	)	&	0x80	==	0x00
(	inb	(	tmport	)	&	0x80	)	==	0x00
inb	(	tmport	)	&	0x80	==	0x00
inb	(	base_io	+	0x30	)	==	0xff

(	inb	(	tmport	)	&	0x80	)	==	0
inb	(	tmport	)	&	0x80	==	0
inl	(	base_io	+	0x38	)	==	0xffffffff

(	k	&	0x40	)	!=	0
k	&	0x40	!=	0
inb	(	base_io	+	0x28	)	&	0x8f

(	k	&	0x07	)	|	0x40

(	inb	(	tmport	)	&	0x80	)	==	0
inb	(	tmport	)	&	0x80	==	0
(	k	&	0x07	)	|	0x40

(	inb	(	tmport	)	&	0x80	)	==	0
inb	(	tmport	)	&	0x80	==	0
inb	(	base_io	+	0x28	)	&	0xcf

inb	(	base_io	+	0x1f	)	|	0x80

inb	(	base_io	+	0x29	)	|	0x01

(	inb	(	tmport	)	&	0xf3	)	|	0x10

(	inb	(	tmport	)	&	0x80	)	==	0
inb	(	tmport	)	&	0x80	==	0
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

!	(	DONE_SC	->	SCp	.	phase	&	not_issued	)
!	DONE_SC	->	SCp	.	phase	&	not_issued
~	(	selecting	|	not_issued	)
~	selecting	|	not_issued
!	(	selid	&	(	1	<<	target	)	)
!	selid	&	(	1	<<	target	)
selid	&	~	(	1	<<	target	)
selid	&	~	1	<<	target
(	MSGI	(	3	)	*	4	+	49	)	/	50
MSGI	(	3	)	*	4	+	49	/	50
ticks	>	9	||	MSGI	(	4	)	<	1	||	MSGI	(	4	)	>	8

(	(	ticks	-	2	)	<<	4	)	+	MSGI	(	4	)
(	ticks	-	2	)	<<	4	+	MSGI	(	4	)
ticks	<=	9	&&	MSGI	(	4	)	>=	1

(	(	ticks	-	2	)	<<	4	)	+	MSGI	(	4	)
(	ticks	-	2	)	<<	4	+	MSGI	(	4	)
(	CURRENT_SC	->	SCp	.	phase	&	syncneg	)	&&	SYNCNEG	==	2	&&	SYNCRATE	==	0

fifodata	>	0	&&	CURRENT_SC	->	SCp	.	this_residual	>	0

-	2	*	data_count

(	s	&	0xf0	)	>>	4
s	&	0xf0	>>	4
!	shpnt	||	!	buffer	||	length	<	8

(	setup	->	irq	<	IRQ_MIN	)	||	(	setup	->	irq	>	IRQ_MAX	)

(	setup	->	scsiid	<	0	)	||	(	setup	->	scsiid	>	7	)

(	setup	->	reconnect	<	0	)	||	(	setup	->	reconnect	>	1	)

(	setup	->	parity	<	0	)	||	(	setup	->	parity	>	1	)

(	setup	->	synchronous	<	0	)	||	(	setup	->	synchronous	>	1	)

(	setup	->	ext_trans	<	0	)	||	(	setup	->	ext_trans	>	1	)

(	prev	->	device	->	id	!=	cmd	->	device	->	id	)	||	(	prev	->	device	->	lun	!=	cmd	->	device	->	lun	)

(	cmd	->	SCp	.	phase	==	0	)	&&	(	hostdata	->	no_dma	==	0	)

!	cmd	->	SCp	.	this_residual	&&	cmd	->	SCp	.	buffers_residual

~	(	1	<<	cmd	->	device	->	lun	)
~	1	<<	cmd	->	device	->	lun
*	p1	&&	(	i	<	MAX_SETUP_ARGS	)

freq	>	7	&&	freq	<	11

freq	>	11	&&	freq	<	16

freq	>	15	&&	freq	<	21

!	done_setup	&&	setup_strings

val	==	-	1

!	(	status	&	0x02	)
!	status	&	0x02
!	(	status	&	0x01	)
!	status	&	0x01
!	current_SC	->	SCp	.	this_residual	&&	current_SC	->	SCp	.	buffers_residual

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

sdt	->	app_tag	==	0xffff	&&	sdt	->	ref_tag	==	0xffffffff

sdt	->	app_tag	==	0xffff	||	sdt	->	ref_tag	==	0xffffffff

!	dix	&&	scsi_host_dix_capable	(	sdp	->	host	,	0	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

driver_setup	.	no_sync	||	(	driver_setup	.	sync_mask	&&	(	~	driver_setup	.	sync_mask	&	(	1	<<	target	)	)	)

driver_setup	.	no_wide	||	(	driver_setup	.	wide_mask	&&	(	~	driver_setup	.	wide_mask	&	(	1	<<	target	)	)	)

driver_setup	.	no_ppr	||	(	driver_setup	.	ppr_mask	&&	(	~	driver_setup	.	ppr_mask	&	(	1	<<	target	)	)	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

result	==	-	EDRIVE_CANT_DO_THIS

retries	++	<	10

retries	++	<	10

rc	==	-	ENOMEDIUM

-	EDRIVE_CANT_DO_THIS	!=	rc

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

ips_FlashData	&&	!	test_and_set_bit	(	0	,	&	ips_FlashDataInUse	)

(	p	)	&&	(	item	!=	(	struct	scsi_cmnd	*	)	p	->	host_scribble	)

(	time	>	0	)	&&	(	!	done	)

(	time	>	0	)	&&	(	!	done	)

n	--	>	0

(	r	&	bit	)	==	val
r	&	bit	==	val
(	r	&	bit	)	==	val
r	&	bit	==	val
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	0	==	reset_only	)	&&	devip	->	stopped

(	dev_id_num	>>	16	)	&	0xff

(	dev_id_num	>>	8	)	&	0xff

(	port_a	>>	16	)	&	0xff

(	port_a	>>	8	)	&	0xff

(	port_group_id	>>	8	)	&	0xff

(	target_dev_id	>>	16	)	&	0xff

(	target_dev_id	>>	8	)	&	0xff

(	(	plen	/	4	)	+	1	)	*	4
(	plen	/	4	)	+	1	*	4
(	(	plen	/	4	)	+	1	)	*	4
(	plen	/	4	)	+	1	*	4
(	port_a	>>	16	)	&	0xff

(	port_a	>>	8	)	&	0xff

(	port_b	>>	16	)	&	0xff

(	port_b	>>	8	)	&	0xff

(	gran	>>	8	)	&	0xff

(	sdebug_store_sectors	>>	24	)	&	0xff

(	sdebug_store_sectors	>>	16	)	&	0xff

(	sdebug_store_sectors	>>	8	)	&	0xff

scsi_debug_no_lun_0	&&	(	0	==	devip	->	lun	)

(	(	(	host_no	+	1	)	&	0x7f	)	<<	8	)	+	(	devip	->	channel	&	0x7f	)
(	host_no	+	1	)	&	0x7f	<<	8	+	devip	->	channel	&	0x7f
(	(	host_no	+	1	)	*	2000	)	+	(	devip	->	target	*	1000	)	+	devip	->	lun
(	host_no	+	1	*	2000	)	+	(	devip	->	target	*	1000	)	+	devip	->	lun
(	(	host_no	+	1	)	*	2000	)	+	(	devip	->	target	*	1000	)	-	3
(	host_no	+	1	*	2000	)	+	(	devip	->	target	*	1000	)	-	3
(	capac	>>	16	)	&	0xff

(	capac	>>	8	)	&	0xff

(	scsi_debug_sector_size	>>	8	)	&	0xff

(	scsi_debug_sector_size	>>	24	)	&	0xff

(	scsi_debug_sector_size	>>	16	)	&	0xff

(	scsi_debug_sector_size	>>	8	)	&	0xff

(	scsi_debug_lowest_aligned	>>	8	)	&	0x3f

(	scsi_debug_dif	-	1	)	<<	1

(	(	(	host_no	+	1	)	&	0x7f	)	<<	8	)	+	(	devip	->	channel	&	0x7f	)
(	host_no	+	1	)	&	0x7f	<<	8	+	devip	->	channel	&	0x7f
(	(	(	host_no	+	1	)	&	0x7f	)	<<	8	)	+	(	devip	->	channel	&	0x7f	)	+	0x80
(	(	(	host_no	+	1	)	&	0x7f	)	<<	8	)	+	devip	->	channel	&	0x7f	+	0x80
(	port_group_a	>>	8	)	&	0xff

(	port_a	>>	8	)	&	0xff

(	port_group_b	>>	8	)	&	0xff

(	port_b	>>	8	)	&	0xff

(	rlen	>>	24	)	&	0xff

(	rlen	>>	16	)	&	0xff

(	rlen	>>	8	)	&	0xff

(	sdebug_sectors_per	>>	8	)	&	0xff

(	scsi_debug_sector_size	>>	8	)	&	0xff

(	port_a	>>	16	)	&	0xff

(	port_a	>>	8	)	&	0xff

(	port_b	>>	16	)	&	0xff

(	port_b	>>	8	)	&	0xff

(	0	==	scsi_debug_ptype	)	&&	(	0	==	dbd	)

(	(	devip	->	sdbg_host	->	shost	->	host_no	+	1	)	*	2000	)	+	(	devip	->	target	*	1000	)	-	3
(	devip	->	sdbg_host	->	shost	->	host_no	+	1	*	2000	)	+	(	devip	->	target	*	1000	)	-	3
(	scsi_debug_sector_size	>>	8	)	&	0xff

(	scsi_debug_sector_size	>>	24	)	&	0xff

(	scsi_debug_sector_size	>>	16	)	&	0xff

(	scsi_debug_sector_size	>>	8	)	&	0xff

(	subpcode	>	0x0	)	&&	(	subpcode	<	0xff	)	&&	(	0x19	!=	pcode	)

(	subpcode	>	0x2	)	&&	(	subpcode	<	0xff	)

(	0x0	==	subpcode	)	||	(	0xff	==	subpcode	)

(	0x1	==	subpcode	)	||	(	0xff	==	subpcode	)

(	0x2	==	subpcode	)	||	(	0xff	==	subpcode	)

(	0	==	subpcode	)	||	(	0xff	==	subpcode	)

(	(	offset	-	2	)	>>	8	)	&	0xff

(	offset	-	2	)	&	0xff

(	0	==	pf	)	||	sp	||	(	param_len	>	SDEBUG_MAX_MSELECT_SZ	)

(	pg_len	+	off	)	>	param_len

block	+	num	>	sdebug_store_sectors

fake_storep	+	(	block	*	scsi_debug_sector_size	)

(	num	-	rest	)	*	scsi_debug_sector_size
num	-	rest	*	scsi_debug_sector_size
!	ret	&&	rest

(	SCSI_DEBUG_OPT_MEDIUM_ERR	&	scsi_debug_opts	)	&&	(	lba	<=	(	OPT_MEDIUM_ERR_ADDR	+	OPT_MEDIUM_ERR_NUM	-	1	)	)	&&	(	(	lba	+	num	)	>	OPT_MEDIUM_ERR_ADDR	)

(	ret	>>	24	)	&	0xff

(	ret	>>	16	)	&	0xff

(	ret	>>	8	)	&	0xff

c	>=	0x20	&&	c	<	0x7e

fake_storep	+	(	lba	*	scsi_debug_sector_size	)

-	1	==	ret

fake_storep	+	(	(	lba	+	i	)	*	scsi_debug_sector_size	)
fake_storep	+	(	lba	+	i	*	scsi_debug_sector_size	)
fake_storep	+	(	lba	*	scsi_debug_sector_size	)

(	payload_len	-	8	)	/	16
payload_len	-	8	/	16
(	alloc_len	<	4	)	||	(	select_report	>	2	)

scsi_debug_no_lun_0	&&	(	lun_cnt	>	0	)

(	i	<	lun_cnt	)	&&	(	(	unsigned	char	*	)	(	one_lun	+	i	)	<	max_addr	)

(	lun	>>	8	)	&	0x3f

sqcp	->	in_use	&&	(	cmnd	==	sqcp	->	a_cmnd	)

(	SCSI_DEBUG_OPT_NOISE	&	scsi_debug_opts	)	&&	cmd

(	scsi_debug_every_nth	!=	0	)	&&	(	++	scsi_debug_cmnd_count	>=	abs	(	scsi_debug_every_nth	)	)

scsi_debug_every_nth	<	-	1

inj_recovered	&&	(	0	==	errsts	)

inj_transport	&&	(	0	==	errsts	)

inj_dif	&&	(	0	==	errsts	)

inj_dix	&&	(	0	==	errsts	)

inj_recovered	&&	(	0	==	errsts	)

inj_dif	&&	(	0	==	errsts	)

inj_dix	&&	(	0	==	errsts	)

scsi_debug_unmap_max_desc	==	0	||	scsi_debug_lbpu	==	0

(	hpnt	->	this_id	>=	0	)	&&	(	scsi_debug_num_tgts	>	hpnt	->	this_id	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

!	do_wait	&&	(	(	STp	->	buffer	)	->	last_SRpnt	)

!	STp	->	linux_media	||	STp	->	linux_media_version	!=	2

STp	->	block_size	!=	blk_sz	&&	blk_sz	>	0

result	==	-	EIO

STp	->	first_frame_position	==	curr	&&	(	(	minlast	<	0	&&	(	signed	)	STp	->	last_frame_position	>	(	signed	)	curr	+	minlast	)	||	(	minlast	>=	0	&&	STp	->	cur_frames	>	minlast	)	)	&&	result	>=	0
STp	->	first_frame_position	==	curr	&&	(	minlast	<	0	&&	(	signed	)	STp	->	last_frame_position	>	(	signed	)	curr	+	minlast	)	||	(	minlast	>=	0	&&	STp	->	cur_frames	>	minlast	)	&&	result	>=	0
frame_seq_number	==	-	1	&&	STp	->	frame_in_buffer

cnt	++	>	400

osst_initiate_read	(	STp	,	aSRpnt	)	||	(	(	!	STp	->	frame_in_buffer	)	&&	osst_read_frame	(	STp	,	aSRpnt	,	30	)	)

position	>=	0xbae	&&	position	<	0xbb8

position	>	STp	->	eod_frame_ppos	||	++	bad	==	10

++	past	>	3

STp	->	first_frame_position	>=	3000	&&	position	<	3000

++	retries	<	10

(	logical_blk_num	-	STp	->	logical_blk_num	)	*	STp	->	block_size
logical_blk_num	-	STp	->	logical_blk_num	*	STp	->	block_size
osst_get_logical_frame	(	STp	,	aSRpnt	,	-	1	,	1	)	<	0

(	STp	->	buffer	->	buffer_bytes	>>	OSST_SECTOR_SHIFT	)	&	OSST_SECTOR_MASK

(	STp	->	buffer	->	read_pointer	>>	OSST_SECTOR_SHIFT	)	&	OSST_SECTOR_MASK

(	sector	&	OSST_SECTOR_MASK	)	<<	OSST_SECTOR_SHIFT
sector	&	OSST_SECTOR_MASK	<<	OSST_SECTOR_SHIFT
frame	<	0	||	frame	>=	STp	->	capacity

ntohl	(	STp	->	buffer	->	aux	->	logical_blk_num	)	-	(	nframes	+	pending	-	1	)	*	blks_per_frame
ntohl	(	STp	->	buffer	->	aux	->	logical_blk_num	)	-	nframes	+	pending	-	1	*	blks_per_frame
(	STp	->	buffer	)	->	syscall_result	||	!	SRpnt

i	<	nframes	+	pending

new_frame	<	2990	&&	new_frame	+	skip	+	nframes	+	pending	>=	2990

new_frame	>	frame	+	1000

i	>=	nframes	+	pending

logical_blk_num	+	i	*	blks_per_frame

i	==	nframes	+	pending

frame	<	2990	&&	frame	+	skip	+	STp	->	cur_frames	+	pending	>=	2990

osst_get_logical_frame	(	STp	,	aSRpnt	,	-	1	,	0	)	<	0

last_mark_ppos	>	10	&&	last_mark_ppos	<	STp	->	eod_frame_ppos

osst_get_logical_frame	(	STp	,	aSRpnt	,	-	1	,	0	)	<	0

last_mark_ppos	==	-	1

osst_get_logical_frame	(	STp	,	aSRpnt	,	-	1	,	0	)	<	0

osst_get_logical_frame	(	STp	,	aSRpnt	,	-	1	,	0	)	<	0

osst_get_logical_frame	(	STp	,	aSRpnt	,	-	1	,	0	)	<	0

STp	->	first_frame_position	>	STp	->	eod_frame_ppos	+	1

osst_get_logical_frame	(	STp	,	aSRpnt	,	-	1	,	0	)	<	0

next_mark_ppos	<=	10	||	next_mark_ppos	>	STp	->	eod_frame_ppos

osst_get_logical_frame	(	STp	,	aSRpnt	,	-	1	,	0	)	<	0

ntohl	(	STp	->	buffer	->	aux	->	filemark_cnt	)	!=	cnt	+	mt_count

STp	->	first_mark_ppos	==	-	1

osst_get_logical_frame	(	STp	,	aSRpnt	,	-	1	,	0	)	<	0

!	next_mark_ppos	||	next_mark_ppos	>	STp	->	eod_frame_ppos

osst_get_logical_frame	(	STp	,	aSRpnt	,	-	1	,	0	)	<	0

STp	->	filemark_cnt	++	==	0

ppos	==	5	||	ppos	==	0xbae	||	STp	->	buffer	->	syscall_result

osst_get_logical_frame	(	STp	,	aSRpnt	,	-	1	,	0	)	<	0

result	==	-	EINVAL

result	==	-	EIO

STp	->	cur_frames	==	0	&&	STp	->	first_frame_position	!=	STp	->	last_frame_position

ppos	==	3000	&&	!	skip

ppos	<	0	||	ppos	>	STp	->	capacity

(	offset	+	STp	->	block_size	-	1	)	/	STp	->	block_size
offset	+	STp	->	block_size	-	1	/	STp	->	block_size
(	(	STp	->	buffer	)	->	buffer_bytes	+	(	STp	->	buffer	)	->	read_pointer	)	/	STp	->	block_size	-	(	(	STp	->	buffer	)	->	read_pointer	+	STp	->	block_size	-	1	)	/	STp	->	block_size
(	STp	->	buffer	)	->	buffer_bytes	+	(	STp	->	buffer	)	->	read_pointer	/	STp	->	block_size	-	(	(	STp	->	buffer	)	->	read_pointer	+	STp	->	block_size	-	1	)	/	STp	->	block_size
!	result	&&	backspace	>	0

(	!	STp	->	raw	)	&&	(	STp	->	first_frame_position	==	0xbae	)

!	STp	->	header_ok	||	(	STp	->	first_frame_position	==	STp	->	first_data_ppos	&&	STps	->	drv_block	<	0	)	||	(	STps	->	drv_file	==	0	&&	STps	->	drv_block	==	0	)

(	STp	->	fast_open	&&	osst_verify_position	(	STp	,	&	SRpnt	)	)	||	STps	->	drv_file	<	0	||	STps	->	drv_block	<	0

(	STps	->	drv_file	+	STps	->	drv_block	)	>	0	&&	STps	->	drv_file	<	STp	->	filemark_cnt

STm	->	do_async_writes	&&	(	(	STp	->	buffer	)	->	buffer_bytes	>=	STp	->	write_threshold	)

!	(	(	STp	->	buffer	)	->	writing	==	(	STp	->	buffer	)	->	buffer_bytes	)
!	(	STp	->	buffer	)	->	writing	==	(	STp	->	buffer	)	->	buffer_bytes
STps	->	drv_block	>	0	&&	STps	->	drv_file	>=	0

(	options	&	MT_ST_BUFFER_WRITES	)	!=	0
options	&	MT_ST_BUFFER_WRITES	!=	0
(	options	&	MT_ST_ASYNC_WRITES	)	!=	0
options	&	MT_ST_ASYNC_WRITES	!=	0
(	options	&	MT_ST_DEF_WRITES	)	!=	0
options	&	MT_ST_DEF_WRITES	!=	0
(	options	&	MT_ST_READ_AHEAD	)	!=	0
options	&	MT_ST_READ_AHEAD	!=	0
(	options	&	MT_ST_TWO_FM	)	!=	0
options	&	MT_ST_TWO_FM	!=	0
(	options	&	MT_ST_FAST_MTEOM	)	!=	0
options	&	MT_ST_FAST_MTEOM	!=	0
(	options	&	MT_ST_AUTO_LOCK	)	!=	0
options	&	MT_ST_AUTO_LOCK	!=	0
(	options	&	MT_ST_CAN_BSR	)	!=	0
options	&	MT_ST_CAN_BSR	!=	0
(	options	&	MT_ST_NO_BLKLIMS	)	!=	0
options	&	MT_ST_NO_BLKLIMS	!=	0
(	options	&	MT_ST_CAN_PARTITIONS	)	!=	0
options	&	MT_ST_CAN_PARTITIONS	!=	0
(	options	&	MT_ST_SCSI2LOGICAL	)	!=	0
options	&	MT_ST_SCSI2LOGICAL	!=	0
(	options	&	MT_ST_SYSV	)	!=	0
options	&	MT_ST_SYSV	!=	0
code	==	MT_ST_SETBOOLEANS	||	code	==	MT_ST_CLEARBOOLEANS

(	options	&	MT_ST_BUFFER_WRITES	)	!=	0
options	&	MT_ST_BUFFER_WRITES	!=	0
(	options	&	MT_ST_ASYNC_WRITES	)	!=	0
options	&	MT_ST_ASYNC_WRITES	!=	0
(	options	&	MT_ST_DEF_WRITES	)	!=	0
options	&	MT_ST_DEF_WRITES	!=	0
(	options	&	MT_ST_READ_AHEAD	)	!=	0
options	&	MT_ST_READ_AHEAD	!=	0
(	options	&	MT_ST_TWO_FM	)	!=	0
options	&	MT_ST_TWO_FM	!=	0
(	options	&	MT_ST_FAST_MTEOM	)	!=	0
options	&	MT_ST_FAST_MTEOM	!=	0
(	options	&	MT_ST_AUTO_LOCK	)	!=	0
options	&	MT_ST_AUTO_LOCK	!=	0
(	options	&	MT_ST_CAN_BSR	)	!=	0
options	&	MT_ST_CAN_BSR	!=	0
(	options	&	MT_ST_NO_BLKLIMS	)	!=	0
options	&	MT_ST_NO_BLKLIMS	!=	0
(	options	&	MT_ST_SCSI2LOGICAL	)	!=	0
options	&	MT_ST_SCSI2LOGICAL	!=	0
(	options	&	MT_ST_SYSV	)	!=	0
options	&	MT_ST_SYSV	!=	0
(	options	&	~	MT_ST_OPTIONS	)	*	ST_KILOBYTE
options	&	~	MT_ST_OPTIONS	*	ST_KILOBYTE
value	<	1	||	value	>	osst_buffer_size

options	&	~	MT_ST_OPTIONS

value	==	~	MT_ST_OPTIONS

options	&	~	MT_ST_OPTIONS

(	value	&	MT_ST_SET_LONG_TIMEOUT	)	!=	0
value	&	MT_ST_SET_LONG_TIMEOUT	)	!=	(	value	&	MT_ST_SET_LONG_TIMEOUT	)	!=	0
options	&	~	MT_ST_CLEAR_DEFAULT

(	osst_position_tape_and_confirm	(	STp	,	&	SRpnt	,	STp	->	eod_frame_ppos	)	<	0	)	||	(	osst_get_logical_frame	(	STp	,	&	SRpnt	,	-	1	,	0	)	<	0	)

STp	->	dirty	||	(	STp	->	buffer	)	->	buffer_bytes	!=	0

(	cmd_in	==	MTSETBLK	||	cmd_in	==	SET_DENS_AND_BLK	)	&&	(	arg	&	MT_ST_BLKSIZE_MASK	)	!=	0	&&	(	arg	&	MT_ST_BLKSIZE_MASK	)	!=	STp	->	block_size
cmd_in	==	MTSETBLK	||	cmd_in	==	SET_DENS_AND_BLK	&&	arg	&	MT_ST_BLKSIZE_MASK	!=	0	&&	(	arg	&	MT_ST_BLKSIZE_MASK	)	!=	STp	->	block_size
cmd_in	==	MTOFFL	||	cmd_in	==	MTUNLOAD

cmd_in	==	MTBSF	||	cmd_in	==	MTBSFM

cmd_in	==	MTFSF	||	cmd_in	==	MTFSFM

cmd_in	==	MTBSR	||	cmd_in	==	MTFSR	||	cmd_in	==	MTWEOF	||	cmd_in	==	MTEOM

(	flags	&	O_ACCMODE	)	==	O_RDONLY
flags	&	O_ACCMODE	==	O_RDONLY
!	STp	->	buffer	->	syscall_result	&&	STp	->	header_ok	&&	!	SRpnt	->	result

STp	->	header_ok	&&	i	==	osst_get_frame_position	(	STp	,	&	SRpnt	)

(	flags	&	O_ACCMODE	)	==	O_WRONLY	||	(	flags	&	O_ACCMODE	)	==	O_RDWR
flags	&	O_ACCMODE	==	O_WRONLY	||	(	flags	&	O_ACCMODE	)	==	O_RDWR
result	!=	0	&&	result	!=	(	-	ENOSPC	)

result	==	0	&&	result2	<	0

cmd_type	==	_IOC_TYPE	(	MTIOCTOP	)	&&	cmd_nr	==	_IOC_NR	(	MTIOCTOP	)
==	_IOC_TYPE	(	MTIOCTOP	)	&&	cmd_nr	==	_IOC_NR	(	MTIOCTOP	cmd_type	==	_IOC_TYPE	(	MTIOCTOP	)	&&	cmd_nr	==	_IOC_NR	(	MTIOCTOP	)
!	STm	->	defined	&&	(	mtc	.	mt_op	!=	MTSETDRVBUFFER	&&	(	mtc	.	mt_count	&	MT_ST_OPTIONS	)	==	0	)
!	STm	->	defined	&&	(	mtc	.	mt_op	!=	MTSETDRVBUFFER	&&	mtc	.	mt_count	&	MT_ST_OPTIONS	==	0	)
mtc	.	mt_op	==	MTFSF	||	mtc	.	mt_op	==	MTFSFM	||	mtc	.	mt_op	==	MTEOM

mtc	.	mt_op	==	MTBSF	||	mtc	.	mt_op	==	MTBSFM

!	STp	->	can_partitions	||	(	STp	->	new_partition	!=	STp	->	partition	)

mtc	.	mt_op	==	MTREW	||	mtc	.	mt_op	==	MTOFFL	||	mtc	.	mt_op	==	MTRETEN	||	mtc	.	mt_op	==	MTEOM	||	mtc	.	mt_op	==	MTLOCK	||	mtc	.	mt_op	==	MTLOAD	||	mtc	.	mt_op	==	MTFSF	||	mtc	.	mt_op	==	MTFSFM	||	mtc	.	mt_op	==	MTBSF	||	mtc	.	mt_op	==	MTBSFM	||	mtc	.	mt_op	==	MTCOMPRESSION

mtc	.	mt_op	!=	MTREW	&&	mtc	.	mt_op	!=	MTOFFL	&&	mtc	.	mt_op	!=	MTRETEN	&&	mtc	.	mt_op	!=	MTERASE	&&	mtc	.	mt_op	!=	MTSEEK	&&	mtc	.	mt_op	!=	MTEOM

mtc	.	mt_op	!=	MTCOMPRESSION	&&	mtc	.	mt_op	!=	MTLOCK	&&	mtc	.	mt_op	!=	MTNOP	&&	mtc	.	mt_op	!=	MTSETBLK	&&	mtc	.	mt_op	!=	MTSETDENSITY	&&	mtc	.	mt_op	!=	MTSETDRVBUFFER	&&	mtc	.	mt_op	!=	MTMKPART	&&	mtc	.	mt_op	!=	MTSETPART	&&	mtc	.	mt_op	!=	MTWEOF	&&	mtc	.	mt_op	!=	MTWSM

!	(	mtc	.	mt_op	==	MTREW	||	mtc	.	mt_op	==	MTOFFL	)
!	mtc	.	mt_op	==	MTREW	||	mtc	.	mt_op	==	MTOFFL
mtc	.	mt_op	==	MTSETDRVBUFFER	&&	(	mtc	.	mt_count	&	MT_ST_OPTIONS	)	!=	0
mtc	.	mt_op	==	MTSETDRVBUFFER	&&	mtc	.	mt_count	&	MT_ST_OPTIONS	!=	0
mtc	.	mt_op	==	MTLOCK	||	mtc	.	mt_op	==	MTUNLOCK

cmd_type	==	_IOC_TYPE	(	MTIOCGET	)	&&	cmd_nr	==	_IOC_NR	(	MTIOCGET	)
cmd_type	==	_IOC_TYPE	(	MTIOCGET	)	&&	cmd_nr	==	_IOC_NR	(	MTIOCGET	)
(	(	STp	->	block_size	<<	MT_ST_BLKSIZE_SHIFT	)	&	MT_ST_BLKSIZE_MASK	)	|	(	(	STp	->	density	<<	MT_ST_DENSITY_SHIFT	)	&	MT_ST_DENSITY_MASK	)

(	(	STp	->	buffer	)	->	buffer_bytes	+	STp	->	block_size	-	1	)	/	STp	->	block_size
(	STp	->	buffer	)	->	buffer_bytes	+	STp	->	block_size	-	1	/	STp	->	block_size
STm	->	do_async_writes	||	(	STm	->	do_buffer_writes	&&	STp	->	block_size	!=	0	)	||	STp	->	drv_buffer	!=	0

cmd_type	==	_IOC_TYPE	(	MTIOCPOS	)	&&	cmd_nr	==	_IOC_NR	(	MTIOCPOS	)
_IOC_TYPE	(	MTIOCPOS	)	&&	cmd_nr	==	_IOC_NR	(	MTIOCPOS	cmd_type	==	_IOC_TYPE	(	MTIOCPOS	)	&&	cmd_nr	==	_IOC_NR	(	MTIOCPOS	==	_IOC_TYPE	(	MTIOCPOS	)	&&	cmd_nr	==	_IOC_NR	(	MTIOCPOS	cmd_type	==	_IOC_TYPE	(	MTIOCPOS	)	&&	cmd_nr	==	_IOC_NR	(	MTIOCPOS	)
i	<	st_bp	->	sg_segs	&&	do_count	>	0

i	<	st_bp	->	sg_segs	&&	do_count	>	0

i	<	st_bp	->	sg_segs	&&	do_count	>	0

SDp	->	type	!=	TYPE_TAPE	||	!	osst_supports	(	SDp	)

(	SDp	->	type	!=	TYPE_TAPE	)	||	(	osst_nr_dev	<=	0	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

!	qbase	||	qlirq	==	-	1

qlirq	!=	-	1

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

*	(	unsigned	short	*	)	(	buf	+	64	)	==	0xAA55

p	->	cyl	+	(	(	p	->	sector	&	0xc0	)	<<	2	)
p	->	cyl	+	(	p	->	sector	&	0xc0	<<	2	)
largest	->	end_cyl	+	(	(	largest	->	end_sector	&	0xc0	)	<<	2	)
largest	->	end_cyl	+	(	largest	->	end_sector	&	0xc0	<<	2	)
end_head	+	1	==	0	||	end_sector	==	0

end_cyl	*	(	end_head	+	1	)	*	end_sector	+	end_head	*	end_sector	+	end_sector
end_cyl	*	end_head	+	1	*	end_sector	+	end_head	*	end_sector	+	end_sector
(	logical_end	-	(	end_head	*	end_sector	+	end_sector	)	)	/	(	end_head	+	1	)	/	end_sector
logical_end	-	(	end_head	*	end_sector	+	end_sector	)	/	end_head	+	1	/	end_sector
ext_cyl	*	(	end_head	+	1	)	*	end_sector	+	end_head	*	end_sector	+	end_sector
ext_cyl	*	end_head	+	1	*	end_sector	+	end_head	*	end_sector	+	end_sector
(	logical_end	==	physical_end	)	||	(	end_cyl	==	1023	&&	ext_physical_end	==	logical_end	)

capacity	/	(	(	end_head	+	1	)	*	end_sector	)
capacity	/	(	end_head	+	1	*	end_sector	)
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

esp	->	regs	+	(	reg	*	4UL	)

--	lim	==	0

--	lim	==	0

n	--	>	0

(	r	&	bit	)	==	val
r	&	bit	==	val
(	r	&	bit	)	==	val
r	&	bit	==	val
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

!	tcp_sw_conn	||	!	tcp_sw_conn	->	sock

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

reqlen	&&	!	(	(	j	&	0x10	)	&&	(	j	&	0xc0	)	)
reqlen	&&	!	(	j	&	0x10	)	&&	(	j	&	0xc0	)
reqlen	&&	!	(	(	j	&	2	)	&&	(	j	&	0xc0	)	)
reqlen	&&	!	(	j	&	2	)	&&	(	j	&	0xc0	)
inb	(	qbase	+	8	)	&	0xc0

inb	(	qbase	+	7	)	&	0x1f

j	!=	3	&&	j	!=	4

inb	(	qbase	+	7	)	&	0x1f

inb	(	qbase	+	7	)	&	0x1f

!	(	(	i	==	8	&&	j	==	2	)	||	(	i	==	0x10	&&	j	==	1	)	)
!	(	i	==	8	&&	j	==	2	)	||	(	i	==	0x10	&&	j	==	1	)
!	priv	->	qabort	&&	(	(	i	&	0x20	)	!=	0x20	)
!	priv	->	qabort	&&	(	i	&	0x20	!=	0x20	)
!	(	inb	(	qbase	+	4	)	&	0x80	)
!	inb	(	qbase	+	4	)	&	0x80
i	--	&&	inb	(	qbase	+	5	)

inb	(	qbase	+	0xe	)	&	0xf8

(	(	inb	(	qbase	+	0xe	)	^	inb	(	qbase	+	0xe	)	)	==	7	)	&&	(	(	inb	(	qbase	+	0xe	)	^	inb	(	qbase	+	0xe	)	)	==	7	)
(	inb	(	qbase	+	0xe	)	^	inb	(	qbase	+	0xe	)	==	7	)	&&	(	(	inb	(	qbase	+	0xe	)	^	inb	(	qbase	+	0xe	)	)	==	7	)
kfifo_out_locked	(	&	target	->	iu_queue	.	queue	,	(	void	*	)	&	iue	,	sizeof	(	void	*	)	,	&	target	->	iu_queue	.	lock	)	!=	sizeof	(	void	*	)

cmd	->	add_cdb_len	&	~	3

cmd	->	add_cdb_len	&	~	3

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	(	r	&	0xc0	)	!=	0xc0	)	&&	(	k	)
(	r	&	0xc0	!=	0xc0	)	&&	(	k	)
(	r_ecr	(	ppb_hi	)	&	0xe0	)	==	0x60
r_ecr	(	ppb_hi	)	&	0xe0	==	0x60
h	|	(	(	r_str	(	base	)	&	0xf0	)	>>	4	)
h	|	(	r_str	(	base	)	&	0xf0	>>	4	)
(	r	&	0x50	)	!=	0x40
r	&	0x50	!=	0x40
!	(	(	(	long	)	buffer	|	len	)	&	0x03	)
!	(	(	long	)	buffer	|	len	)	&	0x03
!	(	r_str	(	ppb	)	&	0x01	)
!	r_str	(	ppb	)	&	0x01
(	r	&	0x50	)	!=	0x50
r	&	0x50	!=	0x50
!	(	(	(	long	)	buffer	|	len	)	&	0x03	)
!	(	(	long	)	buffer	|	len	&	0x03	)
!	(	r_str	(	ppb	)	&	0x01	)
!	r_str	(	ppb	)	&	0x01
(	r_str	(	ppb	)	&	0x40	)	&&	(	k	)

!	(	r_str	(	ppb	)	&	0x40	)	&&	(	k	)
!	r_str	(	ppb	)	&	0x40	&&	(	k	)
(	r_str	(	ppb	)	&	0x08	)	==	0x08
r_str	(	ppb	)	&	0x08	==	0x08
(	r_str	(	ppb	)	&	0x08	)	==	0x00
r_str	(	ppb	)	&	0x08	==	0x00
(	v	==	READ_6	)	||	(	v	==	READ_10	)	||	(	v	==	WRITE_6	)	||	(	v	==	WRITE_10	)

(	r	&	0xc0	)	!=	0xc0
r	&	0xc0	!=	0xc0
cmd	->	SCp	.	buffer	&&	!	cmd	->	SCp	.	this_residual

!	(	r	&	0x80	)
!	r	&	0x80
(	r_str	(	ppb	)	&	0x08	)	==	0x08
r_str	(	ppb	)	&	0x08	==	0x08
(	r_str	(	ppb	)	&	0x08	)	==	0x00
r_str	(	ppb	)	&	0x08	==	0x00
!	(	r_str	(	ppb	)	&	0x80	)
!	r_str	(	ppb	)	&	0x80
!	(	r_str	(	ppb	)	&	0x80	)
!	r_str	(	ppb	)	&	0x80
retv	==	-	1

!	(	l	&	0x80	)	&&	(	k	)
!	l	&	0x80	&&	(	k	)
(	modes	&	PARPORT_MODE_EPP	)	&&	(	modes	&	PARPORT_MODE_ECP	)
&	PARPORT_MODE_EPP	)	&&	(	modes	&	PARPORT_MODE_ECP	(	modes	&	PARPORT_MODE_EPP	)	&&	(	modes	&	PARPORT_MODE_ECP	modes	&	PARPORT_MODE_EPP	)	&&	(	modes	&	PARPORT_MODE_ECP	(	modes	&	PARPORT_MODE_EPP	)	&&	(	modes	&	PARPORT_MODE_ECP	)
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

n	--	>	0

(	r	&	bit	)	==	val
r	&	bit	==	val
(	r	&	bit	)	==	val
r	&	bit	==	val
q	->	next	&&	q	->	next	!=	(	m_link_s	*	)	b

*	vbpp	&&	(	*	vbpp	)	->	vaddr	!=	m

mp	&&	mp	->	bush	!=	bush

*	pp	&&	*	pp	!=	p

mp	&&	!	mp	->	nump

mp	&&	!	mp	->	nump

vp	&&	(	m_addr_t	)	vp	->	vaddr	!=	a

~	(	0x3	<<	6	)
~	0x3	<<	6
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

count	++	==	descriptor

count	++	==	descriptor

desc_ptr	>=	buf	+	page7_len

!	IS_ERR	(	ecomp	)	&&	addl_desc_ptr

!	buf	||	scsi_get_vpd_page	(	sdev	,	0x83	,	buf	,	INIT_ALLOC_SIZE	)

!	buf	||	scsi_get_vpd_page	(	sdev	,	0x83	,	buf	,	vpd_len	)

desc	<	buf	+	vpd_len

!	hdr_buf	||	!	ses_dev

i	<	num_enclosures	&&	type_ptr	<	buf	+	len

i	<	types	&&	type_ptr	<	buf	+	len

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

~	(	1	<<	pSRB	->	TagNumber	)
~	1	<<	pSRB	->	TagNumber
pSRB	->	TotalXferredLen	+	(	unsigned	long	)	sg_dma_len	(	psgl	)	<	pSRB	->	Saved_Ptr

pDCB	&&	pACB	->	scan_devices	&&	pDCB	->	GoingSRBCnt	==	1

!	pACB	->	DCBCnt	++

n	--	>	0

(	r	&	bit	)	==	val
r	&	bit	==	val
(	r	&	bit	)	==	val
r	&	bit	==	val
(	cmd	->	SCp	.	this_residual	+	511	)	&	~	0x1ff

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

!	sdev	->	removable	||	!	sdev	->	lockable

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

inb	(	iobase	+	REG_AUX_STATUS	)	&	ABSY_ASSERTED

--	loop	==	0

!	info	.	haaval	||	info	.	ata

subversion	==	ESA	&&	!	info	.	irq_tr

subversion	==	ISA	&&	request_dma	(	dma_channel	,	driver_name	)

shost	->	sg_tablesize	>	MAX_SGLIST	||	shost	->	sg_tablesize	<	2

shost	->	can_queue	>	MAX_MAILBOXES	||	shost	->	can_queue	<	2

info	.	max_chan	>	0	&&	info	.	max_chan	<	MAX_CHANNEL

info	.	max_id	>	7	&&	info	.	max_id	<	MAX_TARGET

info	.	large_sg	&&	shost	->	sg_tablesize	==	MAX_SGLIST

info	.	max_lun	>	7	&&	info	.	max_lun	<	MAX_LUN

tag_mode	!=	TAG_DISABLED	&&	tag_mode	!=	TAG_SIMPLE

shost	->	max_id	>	8	||	shost	->	max_lun	>	8

cur	&&	isdigit	(	*	cur	)	&&	i	<	MAX_INT_PARAM

linked_comm	&&	SCpnt	->	device	->	queue_depth	>	2	&&	TLDEV	(	SCpnt	->	device	->	type	)
linked_comm	&&	SCpnt	->	device	->	queue_depth	>	2	&&	TLDEV	(	SCpnt	->	device	->	type	)
inb	(	shost	->	io_port	+	REG_AUX_STATUS	)	&	IRQ_ASSERTED

i	<	n	-	1

link_statistics	&&	!	(	++	flushcount	%	link_statistics	)
link_statistics	&&	!	++	flushcount	%	link_statistics
seeknosort	/	(	readycount	+	1	)
seeknosort	/	readycount	+	1
seeksorted	/	(	readycount	+	1	)
seeksorted	/	readycount	+	1
cursec	>	(	(	maxsec	+	minsec	)	/	2	)
cursec	>	(	maxsec	+	minsec	/	2	)
ioseek	>	(	(	maxsec	-	minsec	)	/	2	)
ioseek	>	(	maxsec	-	minsec	/	2	)
!	(	(	rev	&&	r	)	||	(	!	rev	&&	s	)	)
!	(	rev	&&	r	)	||	(	!	rev	&&	s	)
(	iseek	+	maxsec	-	minsec	)	/	1024
iseek	+	maxsec	-	minsec	/	1024
rev	&&	!	r

!	rev	&&	!	s

!	(	inb	(	shost	->	io_port	+	REG_AUX_STATUS	)	&	IRQ_ASSERTED	)
!	inb	(	shost	->	io_port	+	REG_AUX_STATUS	)	&	IRQ_ASSERTED
spp	->	eoc	==	0	&&	ha	->	iocount	>	1

spp	->	cpp_index	<	0	||	spp	->	cpp_index	>=	shost	->	can_queue

spp	->	eoc	==	0	||	spp	->	cpp_index	<	0	||	spp	->	cpp_index	>=	shost	->	can_queue

linked_comm	&&	SCpnt	->	device	->	queue_depth	>	2	&&	TLDEV	(	SCpnt	->	device	->	type	)
linked_comm	&&	SCpnt	->	device	->	queue_depth	>	2	&&	TLDEV	(	SCpnt	->	device	->	type	)
spp	->	target_status	&&	SCpnt	->	device	->	type	==	TYPE_DISK

tstatus	==	CHECK_CONDITION	&&	ha	->	iocount	<=	1000

SCpnt	->	device	->	type	!=	TYPE_TAPE	&&	ha	->	retries	<	MAX_INTERNAL_RETRIES

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

cmdstatp	->	have_sense	&&	cmdstatp	->	sense_hdr	.	asc	==	0	&&	cmdstatp	->	sense_hdr	.	ascq	==	0x17

!	do_wait	&&	(	(	STp	->	buffer	)	->	last_SRpnt	)

!	cmdstatp	->	remainder_valid	||	cmdstatp	->	uremainder64	==	0

retval	==	-	EIO

(	(	STp	->	buffer	)	->	buffer_bytes	+	(	STp	->	buffer	)	->	read_pointer	)	/	STp	->	block_size	-	(	(	STp	->	buffer	)	->	read_pointer	+	STp	->	block_size	-	1	)	/	STp	->	block_size
(	STp	->	buffer	)	->	buffer_bytes	+	(	STp	->	buffer	)	->	read_pointer	/	STp	->	block_size	-	(	STp	->	buffer	)	->	read_pointer	+	STp	->	block_size	-	1	/	STp	->	block_size
!	result	&&	backspace	>	0

!	STp	->	density_changed	&&	STm	->	default_density	>=	0	&&	STm	->	default_density	!=	STp	->	density

!	STp	->	blksize_changed	&&	STm	->	default_blksize	>=	0	&&	STm	->	default_blksize	!=	STp	->	block_size

(	filp	->	f_flags	&	O_NONBLOCK	)	==	0
filp	->	f_flags	&	O_NONBLOCK	==	0
retval	==	CHKRES_NOT_READY	||	retval	==	CHKRES_NO_TAPE

!	SRpnt	->	result	&&	!	STp	->	buffer	->	cmdstat	.	have_sense

!	STp	->	drv_buffer	&&	STp	->	immediate_filemark

do_wait	&&	(	(	st_flags	&	O_ACCMODE	)	==	O_WRONLY	||	(	st_flags	&	O_ACCMODE	)	==	O_RDWR	)
do_wait	&&	st_flags	&	O_ACCMODE	==	O_WRONLY	||	st_flags	&	O_ACCMODE	==	O_RDWR
STp	->	can_partitions	&&	STp	->	nbr_partitions	<	1

(	iminor	(	inode	)	&	0x80	)	==	0
iminor	(	inode	)	&	0x80	==	0
(	filp	->	f_flags	&	O_ACCMODE	)	==	O_RDONLY
filp	->	f_flags	&	O_ACCMODE	==	O_RDONLY
(	filp	->	f_flags	&	O_NONBLOCK	)	==	0	&&	retval	!=	CHKRES_READY
filp	->	f_flags	&	O_NONBLOCK	==	0	&&	retval	!=	CHKRES_READY
result	!=	0	&&	result	!=	(	-	ENOSPC	)

bufsize	>	STbp	->	buffer_size	&&	!	enlarge_buffer	(	STbp	,	bufsize	,	STp	->	restr_dma	)

!	(	STbp	->	writing	==	STbp	->	buffer_bytes	)
!	STbp	->	writing	==	STbp	->	buffer_bytes
STp	->	block_size	==	0	&&	scode	==	VOLUME_OVERFLOW

!	retry_eot	&&	!	cmdstatp	->	deferred	&&	(	scode	==	NO_SENSE	||	scode	==	RECOVERED_ERROR	)
!	retry_eot	&&	!	cmdstatp	->	deferred	&&	scode	==	NO_SENSE	||	scode	==	RECOVERED_ERROR
!	(	STp	->	try_dio_now	&&	try_rdio	)	&&	STm	->	do_read_ahead
!	STp	->	try_dio_now	&&	try_rdio	&&	STm	->	do_read_ahead
!	STbp	->	do_dio	&&	bytes	>	(	STp	->	buffer	)	->	buffer_size

STp	->	block_size	==	0	&&	cmdstatp	->	sense_hdr	.	sense_key	==	MEDIUM_ERROR

(	blks	-	transfer	)	*	STp	->	block_size
blks	-	transfer	*	STp	->	block_size
(	options	&	MT_ST_BUFFER_WRITES	)	!=	0
options	&	MT_ST_BUFFER_WRITES	!=	0
(	options	&	MT_ST_ASYNC_WRITES	)	!=	0
options	&	MT_ST_ASYNC_WRITES	!=	0
(	options	&	MT_ST_DEF_WRITES	)	!=	0
options	&	MT_ST_DEF_WRITES	!=	0
(	options	&	MT_ST_READ_AHEAD	)	!=	0
options	&	MT_ST_READ_AHEAD	!=	0
(	options	&	MT_ST_TWO_FM	)	!=	0
options	&	MT_ST_TWO_FM	!=	0
(	options	&	MT_ST_FAST_MTEOM	)	!=	0
options	&	MT_ST_FAST_MTEOM	!=	0
(	options	&	MT_ST_AUTO_LOCK	)	!=	0
options	&	MT_ST_AUTO_LOCK	!=	0
(	options	&	MT_ST_CAN_BSR	)	!=	0
options	&	MT_ST_CAN_BSR	!=	0
(	options	&	MT_ST_NO_BLKLIMS	)	!=	0
options	&	MT_ST_NO_BLKLIMS	!=	0
(	options	&	MT_ST_CAN_PARTITIONS	)	!=	0
options	&	MT_ST_CAN_PARTITIONS	!=	0
(	options	&	MT_ST_SCSI2LOGICAL	)	!=	0
options	&	MT_ST_SCSI2LOGICAL	!=	0
(	options	&	MT_ST_NOWAIT	)	!=	0
options	&	MT_ST_NOWAIT	!=	0
(	options	&	MT_ST_NOWAIT_EOF	)	!=	0
options	&	MT_ST_NOWAIT_EOF	!=	0
(	options	&	MT_ST_SYSV	)	!=	0
options	&	MT_ST_SYSV	!=	0
(	options	&	MT_ST_SILI	)	!=	0
options	&	MT_ST_SILI	!=	0
code	==	MT_ST_SETBOOLEANS	||	code	==	MT_ST_CLEARBOOLEANS

(	options	&	MT_ST_BUFFER_WRITES	)	!=	0
options	&	MT_ST_BUFFER_WRITES	!=	0
(	options	&	MT_ST_ASYNC_WRITES	)	!=	0
options	&	MT_ST_ASYNC_WRITES	!=	0
(	options	&	MT_ST_DEF_WRITES	)	!=	0
options	&	MT_ST_DEF_WRITES	!=	0
(	options	&	MT_ST_READ_AHEAD	)	!=	0
options	&	MT_ST_READ_AHEAD	!=	0
(	options	&	MT_ST_TWO_FM	)	!=	0
options	&	MT_ST_TWO_FM	!=	0
(	options	&	MT_ST_FAST_MTEOM	)	!=	0
options	&	MT_ST_FAST_MTEOM	!=	0
(	options	&	MT_ST_AUTO_LOCK	)	!=	0
options	&	MT_ST_AUTO_LOCK	!=	0
(	options	&	MT_ST_CAN_BSR	)	!=	0
options	&	MT_ST_CAN_BSR	!=	0
(	options	&	MT_ST_NO_BLKLIMS	)	!=	0
options	&	MT_ST_NO_BLKLIMS	!=	0
(	options	&	MT_ST_SCSI2LOGICAL	)	!=	0
options	&	MT_ST_SCSI2LOGICAL	!=	0
(	options	&	MT_ST_NOWAIT	)	!=	0
options	&	MT_ST_NOWAIT	!=	0
(	options	&	MT_ST_NOWAIT_EOF	)	!=	0
options	&	MT_ST_NOWAIT_EOF	!=	0
(	options	&	MT_ST_SYSV	)	!=	0
options	&	MT_ST_SYSV	!=	0
(	options	&	MT_ST_SILI	)	!=	0
options	&	MT_ST_SILI	!=	0
options	&	~	MT_ST_OPTIONS

value	==	~	MT_ST_OPTIONS

options	&	~	MT_ST_OPTIONS

(	value	&	MT_ST_SET_LONG_TIMEOUT	)	!=	0
&	MT_ST_SET_LONG_TIMEOUT	!=	value	&	MT_ST_SET_LONG_TIMEOUT	!=	0
(	options	&	~	MT_ST_OPTIONS	)	&	0xff

(	options	>>	8	)	&	0xff

(	options	>>	16	)	&	0xff

options	&	~	MT_ST_CLEAR_DEFAULT

(	value	&	0xff00	)	!=	0
value	&	0xff00	!=	0
(	value	&	0xff00	)	>>	8
value	&	0xff00	>>	8
(	value	&	0xff	)	!=	0xff
value	&	0xff	!=	0xff
load_code	>=	1	+	MT_ST_HPLOADER_OFFSET	&&	load_code	<=	6	+	MT_ST_HPLOADER_OFFSET

STp	->	dirty	||	(	STp	->	buffer	)	->	buffer_bytes	!=	0

(	cmd_in	==	MTSETBLK	||	cmd_in	==	SET_DENS_AND_BLK	)	&&	(	arg	&	MT_ST_BLKSIZE_MASK	)	!=	0	&&	STp	->	max_block	>	0	&&	(	(	arg	&	MT_ST_BLKSIZE_MASK	)	<	STp	->	min_block	||	(	arg	&	MT_ST_BLKSIZE_MASK	)	>	STp	->	max_block	)
(	cmd_in	==	MTSETBLK	||	cmd_in	==	SET_DENS_AND_BLK	)	&&	arg	&	MT_ST_BLKSIZE_MASK	!=	0	&&	STp	->	max_block	>	0	&&	arg	&	MT_ST_BLKSIZE_MASK	<	STp	->	min_block	||	(	arg	&	MT_ST_BLKSIZE_MASK	)	>	STp	->	max_block
(	arg	&	7	)	<<	4
arg	&	7	<<	4
cmd_in	==	MTSETBLK	||	cmd_in	==	SET_DENS_AND_BLK

cmd_in	==	MTSETBLK	||	cmd_in	==	SET_DENS_AND_BLK

cmdstatp	->	sense_hdr	.	sense_key	==	NO_SENSE	||	cmdstatp	->	sense_hdr	.	sense_key	==	RECOVERED_ERROR

(	cmd_in	==	MTFSF	)	||	(	cmd_in	==	MTFSFM	)

(	cmd_in	==	MTBSF	)	||	(	cmd_in	==	MTBSFM	)

arg	>	0	&&	undone	<	0

arg	>	0	&&	undone	<	0

cmd_in	==	MTSETBLK	||	cmd_in	==	MTSETDENSITY	||	cmd_in	==	MTSETDRVBUFFER	||	cmd_in	==	SET_DENS_AND_BLK

!	STps	->	last_block_valid	||	STps	->	last_block_visited	!=	block

(	size	>>	8	)	&	0xff

!	scsi_block_when_processing_errors	(	STp	->	device	)	||	retval	!=	-	ENODEV

cmd_type	==	_IOC_TYPE	(	MTIOCTOP	)	&&	cmd_nr	==	_IOC_NR	(	MTIOCTOP	)
==	_IOC_TYPE	(	MTIOCTOP	)	&&	cmd_nr	==	_IOC_NR	(	MTIOCTOP	cmd_type	==	_IOC_TYPE	(	MTIOCTOP	)	&&	cmd_nr	==	_IOC_NR	(	MTIOCTOP	)
!	STm	->	defined	&&	(	mtc	.	mt_op	!=	MTSETDRVBUFFER	&&	(	mtc	.	mt_count	&	MT_ST_OPTIONS	)	==	0	)
!	STm	->	defined	&&	(	mtc	.	mt_op	!=	MTSETDRVBUFFER	&&	mtc	.	mt_count	&	MT_ST_OPTIONS	==	0	)
mtc	.	mt_op	==	MTFSF	||	mtc	.	mt_op	==	MTFSFM	||	mtc	.	mt_op	==	MTEOM

mtc	.	mt_op	==	MTBSF	||	mtc	.	mt_op	==	MTBSFM

!	STp	->	can_partitions	||	(	STp	->	new_partition	!=	STp	->	partition	)

mtc	.	mt_op	==	MTREW	||	mtc	.	mt_op	==	MTOFFL	||	mtc	.	mt_op	==	MTRETEN	||	mtc	.	mt_op	==	MTEOM	||	mtc	.	mt_op	==	MTLOCK	||	mtc	.	mt_op	==	MTLOAD	||	mtc	.	mt_op	==	MTFSF	||	mtc	.	mt_op	==	MTFSFM	||	mtc	.	mt_op	==	MTBSF	||	mtc	.	mt_op	==	MTBSFM	||	mtc	.	mt_op	==	MTCOMPRESSION

mtc	.	mt_op	==	MTBSF	||	mtc	.	mt_op	==	MTBSFM

mtc	.	mt_op	!=	MTREW	&&	mtc	.	mt_op	!=	MTOFFL	&&	mtc	.	mt_op	!=	MTRETEN	&&	mtc	.	mt_op	!=	MTERASE	&&	mtc	.	mt_op	!=	MTSEEK	&&	mtc	.	mt_op	!=	MTEOM

mtc	.	mt_op	==	MTSETDRVBUFFER	&&	(	mtc	.	mt_count	&	MT_ST_OPTIONS	)	!=	0
mtc	.	mt_op	==	MTSETDRVBUFFER	&&	mtc	.	mt_count	&	MT_ST_OPTIONS	!=	0
mtc	.	mt_op	==	MTUNLOAD	||	mtc	.	mt_op	==	MTOFFL

mtc	.	mt_op	==	MTLOCK	||	mtc	.	mt_op	==	MTUNLOCK

cmd_type	==	_IOC_TYPE	(	MTIOCGET	)	&&	cmd_nr	==	_IOC_NR	(	MTIOCGET	)
_IOC_TYPE	(	MTIOCGET	)	&&	cmd_nr	==	_IOC_NR	(	MTIOCGET	cmd_type	==	_IOC_TYPE	(	MTIOCGET	)	&&	cmd_nr	==	_IOC_NR	(	MTIOCGET	==	_IOC_TYPE	(	MTIOCGET	)	&&	cmd_nr	==	_IOC_NR	(	MTIOCGET	cmd_type	==	_IOC_TYPE	(	MTIOCGET	)	&&	cmd_nr	==	_IOC_NR	(	MTIOCGET	)
(	(	STp	->	block_size	<<	MT_ST_BLKSIZE_SHIFT	)	&	MT_ST_BLKSIZE_MASK	)	|	(	(	STp	->	density	<<	MT_ST_DENSITY_SHIFT	)	&	MT_ST_DENSITY_MASK	)

(	(	STp	->	buffer	)	->	buffer_bytes	+	STp	->	block_size	-	1	)	/	STp	->	block_size
(	STp	->	buffer	)	->	buffer_bytes	+	STp	->	block_size	-	1	/	STp	->	block_size
STm	->	do_async_writes	||	(	STm	->	do_buffer_writes	&&	STp	->	block_size	!=	0	)	||	STp	->	drv_buffer	!=	0

cmd_type	==	_IOC_TYPE	(	MTIOCPOS	)	&&	cmd_nr	==	_IOC_NR	(	MTIOCPOS	)
==	_IOC_TYPE	(	MTIOCPOS	)	&&	cmd_nr	==	_IOC_NR	(	MTIOCPOS	cmd_type	==	_IOC_TYPE	(	MTIOCPOS	)	&&	cmd_nr	==	_IOC_NR	(	MTIOCPOS	)
i	!=	-	ENOTTY

!	retval	&&	cmd_in	==	SCSI_IOCTL_STOP_UNIT

segs	<	max_segs	&&	got	<	new_size

i	<	st_bp	->	frp_segs	&&	offset	>=	length

mode	==	0	&&	rew	==	0

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

RES_IS_GSCSI	(	res	->	cfg_entry	)	&&	scsi_dev	->	type	!=	TYPE_ENCLOSURE

scsi_dev	->	tagged_supported	&&	(	RES_IS_GSCSI	(	res	->	cfg_entry	)	||	RES_IS_VSET	(	res	->	cfg_entry	)	)
scsi_dev	->	tagged_supported	&&	RES_IS_GSCSI	(	res	->	cfg_entry	)	||	RES_IS_VSET	(	res	->	cfg_entry	)
(	res	)	&&	scsi_dev	->	tagged_supported	&&	(	RES_IS_GSCSI	(	res	->	cfg_entry	)	||	RES_IS_VSET	(	res	->	cfg_entry	)	)
(	res	)	&&	scsi_dev	->	tagged_supported	&&	RES_IS_GSCSI	(	res	->	cfg_entry	)	||	RES_IS_VSET	(	res	->	cfg_entry	)
(	rcb_size	>>	8	)	&	0xFF

(	cfgte	->	unique_flags1	&	0x80	)	==	0
cfgte	->	unique_flags1	&	0x80	==	0
(	cfgte	->	unique_flags0	&	0x80	)	==	0	&&	(	cfgte	->	unique_flags1	&	0x80	)	==	0
cfgte	->	unique_flags0	&	0x80	==	0	&&	(	cfgte	->	unique_flags1	&	0x80	)	==	0
pinstance	->	host	->	unique_id	<<	16	|	MINOR	(	pinstance	->	cdev	.	dev	)

(	pinstance	->	force_ioa_reset	&&	!	pinstance	->	ioa_bringdown	)	||	pinstance	->	ioa_unit_check

(	sgcount	+	ioadl_count	)	>	(	ARRAY_SIZE	(	ioarcb	->	add_data	.	u	.	ioadl	)	)

(	buflen	/	bsize_elem	)	+	1

!	wait_for_completion_timeout	(	&	cmd	->	wait_for_completion	,	msecs_to_jiffies	(	buffer	->	ioarcb	.	cmd_timeout	*	1000	)	)

!	wait_for_completion_timeout	(	&	cmd	->	wait_for_completion	,	msecs_to_jiffies	(	150	*	1000	)	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

scsi_sense_valid	(	sshdr	)	&&	sshdr	->	asc	!=	0

retries	++	<	3

0	!=	ch_checkrange	(	ch	,	mv	.	cm_fromtype	,	mv	.	cm_fromunit	)	||	0	!=	ch_checkrange	(	ch	,	mv	.	cm_totype	,	mv	.	cm_tounit	)

0	!=	ch_checkrange	(	ch	,	mv	.	ce_srctype	,	mv	.	ce_srcunit	)	||	0	!=	ch_checkrange	(	ch	,	mv	.	ce_fdsttype	,	mv	.	ce_fdstunit	)	||	0	!=	ch_checkrange	(	ch	,	mv	.	ce_sdsttype	,	mv	.	ce_sdstunit	)

ces	.	ces_type	<	0	||	ces	.	ces_type	>=	CH_TYPES

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

wce	<<	2	|	rcd

sdkp	->	RCD	+	2	*	sdkp	->	WCE

!	dif	&&	!	dix

max_blocks	*	(	logical_block_size	>>	9	)
max_blocks	*	logical_block_size	>>	9
(	unsigned	char	)	(	this_count	>>	24	)	&	0xff

(	unsigned	char	)	(	this_count	>>	16	)	&	0xff

(	unsigned	char	)	(	this_count	>>	8	)	&	0xff

(	unsigned	char	)	(	this_count	>>	24	)	&	0xff

(	unsigned	char	)	(	this_count	>>	16	)	&	0xff

(	unsigned	char	)	(	this_count	>>	8	)	&	0xff

(	unsigned	char	)	(	this_count	>>	8	)	&	0xff

(	atomic_inc_return	(	&	sdkp	->	openers	)	==	1	)	&&	sdev	->	removable

atomic_dec_return	(	&	sdkp	->	openers	)	==	0	&&	sdev	->	removable

!	scsi_block_when_processing_errors	(	sdp	)	||	!	error

error	!=	-	ENOTTY

!	scsi_device_online	(	scmd	->	device	)	||	!	scsi_medium_access_command	(	scmd	)

!	spintime	&&	!	scsi_status_is_good	(	the_result	)

sdp	->	removable	&&	sense_valid	&&	sshdr	->	sense_key	==	NOT_READY

--	reset_retries	>	0

(	sizeof	(	sdkp	->	capacity	)	==	4	)	&&	(	lba	>=	0xffffffffULL	)

--	reset_retries	>	0

sector_size	==	-	EOVERFLOW

sector_size	==	-	ENODEV

sector_size	==	-	EOVERFLOW

(	sizeof	(	sdkp	->	capacity	)	>	4	)	&&	(	sdkp	->	capacity	>	0xffffffffULL	)

sdp	->	fix_capacity	||	(	sdp	->	guess_capacity	&&	(	sdkp	->	capacity	&	0x01	)	)

sector_size	!=	512	&&	sector_size	!=	1024	&&	sector_size	!=	2048	&&	sector_size	!=	4096	&&	sector_size	!=	256

sdkp	->	first_scan	||	old_wp	!=	sdkp	->	write_prot

modepage	==	0x3F	&&	sdp	->	use_192_bytes_for_3f

len	-	offset	<=	2

sdkp	->	DPOFUA	&&	!	sdkp	->	device	->	use_10_for_rw

~	(	1	<<	31	)
~	1	<<	31
!	buffer	||	scsi_get_vpd_page	(	sdkp	->	device	,	0xb2	,	buffer	,	vpd_len	)

(	index	/	unit	)	-	1

(	index	&	0xf0	)	>>	4

(	(	index	&	0xf	)	<<	4	)	|	(	index	&	0xfff00	)

error	==	-	EAGAIN

(	cmd	->	SCp	.	this_residual	+	511	)	&	~	0x1ff

(	~	wh	->	dma_xfer_mask	>>	18	)	&	0x01c0

bank_mask	&	(	addr	>>	18	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

eh	->	nea	||	eh	->	notification_class	!=	0x4

cd	->	tur_mismatch	++	>	8

~	(	block_sectors	-	1	)
~	block_sectors	-	1
(	error_sector	-	blk_rq_pos	(	SCpnt	->	request	)	)	<<	9

good_bytes	<	0	||	good_bytes	>=	this_count

error_sector	<	get_capacity	(	cd	->	disk	)	&&	cd	->	capacity	-	error_sector	<	4	*	75

!	cd	->	device	||	!	scsi_device_online	(	cd	->	device	)

s_size	!=	512	&&	s_size	!=	1024	&&	s_size	!=	2048

(	(	unsigned	int	)	blk_rq_pos	(	rq	)	%	(	s_size	>>	9	)	)	||	(	scsi_bufflen	(	SCpnt	)	%	s_size	)
(	(	unsigned	int	)	blk_rq_pos	(	rq	)	%	s_size	>>	9	)	||	(	scsi_bufflen	(	SCpnt	)	%	s_size	)
(	scsi_bufflen	(	SCpnt	)	>>	9	)	/	(	s_size	>>	9	)
scsi_bufflen	(	SCpnt	)	>>	9	/	(	s_size	>>	9	)
(	unsigned	int	)	blk_rq_pos	(	rq	)	/	(	s_size	>>	9	)
(	unsigned	int	)	blk_rq_pos	(	rq	)	/	s_size	>>	9
(	unsigned	char	)	(	block	>>	24	)	&	0xff

(	unsigned	char	)	(	block	>>	16	)	&	0xff

(	unsigned	char	)	(	block	>>	8	)	&	0xff

(	unsigned	char	)	(	this_count	>>	8	)	&	0xff

ret	!=	-	ENOSYS

ret	!=	-	ENODEV

sdev	->	type	!=	TYPE_ROM	&&	sdev	->	type	!=	TYPE_WORM

(	cd	->	cdi	.	mask	&	(	CDC_DVD_RAM	|	CDC_MRW_W	|	CDC_RAM	|	CDC_CD_RW	)	)	!=	(	CDC_DVD_RAM	|	CDC_MRW_W	|	CDC_RAM	|	CDC_CD_RW	)
(	cd	->	cdi	.	mask	&	CDC_DVD_RAM	|	CDC_MRW_W	|	CDC_RAM	|	CDC_CD_RW	)	!=	CDC_DVD_RAM	|	CDC_MRW_W	|	CDC_RAM	|	CDC_CD_RW
(	dma_stat	&	0x02	)	&&	!	(	dma_stat	&	0x40	)
(	dma_stat	&	0x02	)	&&	!	dma_stat	&	0x40
(	dma_stat	&	1	)	==	0
dma_stat	&	1	==	0
512	-	(	atari_dma_residual	&	0x1ff	)
512	-	atari_dma_residual	&	0x1ff
(	atari_dma_residual	+	511	)	&	~	0x1ff

(	dma_stat	&	1	)	==	0
dma_stat	&	1	==	0
!	(	dma_stat	&	0x01	)
!	dma_stat	&	0x01
atari_dma_active	&&	(	dma_stat	&	0x02	)

falcon_got_lock	&&	!	hostdata	->	disconnected_queue	&&	!	hostdata	->	issue_queue	&&	!	hostdata	->	connected

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

inb	(	iobase	+	REG_LCL_INTR	)	&	BSY_ASSERTED

--	loop	==	0

inb	(	port_base	+	REG_PRODUCT_ID1	)	!=	PRODUCT_ID1

(	in_byte	&	0xf0	)	!=	PRODUCT_ID2
in_byte	&	0xf0	!=	PRODUCT_ID2
subversion	==	ISA	&&	request_dma	(	dma_channel	,	driver_name	)

tag_mode	!=	TAG_DISABLED	&&	tag_mode	!=	TAG_SIMPLE

cur	&&	isdigit	(	*	cur	)	&&	i	<	MAX_INT_PARAM

linked_comm	&&	SCpnt	->	device	->	queue_depth	>	2	&&	TLDEV	(	SCpnt	->	device	->	type	)
linked_comm	&&	SCpnt	->	device	->	queue_depth	>	2	&&	TLDEV	(	SCpnt	->	device	->	type	)
i	<	n	-	1

link_statistics	&&	!	(	++	flushcount	%	link_statistics	)
link_statistics	&&	!	++	flushcount	%	link_statistics
seeknosort	/	(	readycount	+	1	)
seeknosort	/	readycount	+	1
seeksorted	/	(	readycount	+	1	)
seeksorted	/	readycount	+	1
!	(	cpp	->	xdir	==	DTD_IN	)
!	cpp	->	xdir	==	DTD_IN
cursec	>	(	(	maxsec	+	minsec	)	/	2	)
cursec	>	(	maxsec	+	minsec	/	2	)
ioseek	>	(	(	maxsec	-	minsec	)	/	2	)
ioseek	>	(	maxsec	-	minsec	/	2	)
!	(	(	rev	&&	r	)	||	(	!	rev	&&	s	)	)
!	(	rev	&&	r	)	||	(	!	rev	&&	s	)
(	iseek	+	maxsec	-	minsec	)	/	1024
iseek	+	maxsec	-	minsec	/	1024
rev	&&	!	r

!	rev	&&	!	s

linked_comm	&&	SCpnt	->	device	->	queue_depth	>	2	&&	TLDEV	(	SCpnt	->	device	->	type	)
linked_comm	&&	SCpnt	->	device	->	queue_depth	>	2	&&	TLDEV	(	SCpnt	->	device	->	type	)
SCpnt	->	device	->	type	!=	TYPE_TAPE	&&	HD	(	j	)	->	retries	<	MAX_INTERNAL_RETRIES

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

!	model	||	!	strflags

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	regions	-	8	)	/	16
regions	-	8	/	16
(	i	&	0x40	)	&&	len	==	0

fast_pio	&&	len	>	3

reqlen	&&	!	(	i	&	0x40	)
reqlen	&&	!	i	&	0x40
fast_pio	&&	len	>	3

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

!	(	inb	(	IM_STAT_REG	(	shpnt	)	)	&	IM_INTR_REQUEST	)
!	inb	(	IM_STAT_REG	(	shpnt	)	)	&	IM_INTR_REQUEST
(	reset_status	(	shpnt	)	==	IM_RESET_NOT_IN_PROGRESS_NO_INT	)	||	(	reset_status	(	shpnt	)	==	IM_RESET_FINISHED_OK_NO_INT	)

!	(	inb	(	IM_STAT_REG	(	shpnt	)	)	&	IM_BUSY	)
!	inb	(	IM_STAT_REG	(	shpnt	)	)	&	IM_BUSY
--	disk_rw_in_progress	==	0

!	(	inb	(	IM_STAT_REG	(	shpnt	)	)	&	IM_BUSY	)
!	inb	(	IM_STAT_REG	(	shpnt	)	)	&	IM_BUSY
(	stat_result	(	shpnt	)	==	IM_SCB_CMD_COMPLETED	)	||	(	stat_result	(	shpnt	)	==	IM_SCB_CMD_COMPLETED_WITH_RETRIES	)

(	stat_result	(	shpnt	)	==	IM_SCB_CMD_COMPLETED	)	||	(	stat_result	(	shpnt	)	==	IM_SCB_CMD_COMPLETED_WITH_RETRIES	)

(	stat_result	(	shpnt	)	==	IM_SCB_CMD_COMPLETED	)	||	(	stat_result	(	shpnt	)	==	IM_SCB_CMD_COMPLETED_WITH_RETRIES	)

(	lun	&	7	)	<<	24
lun	&	7	<<	24
(	operation	&	1	)	<<	23
operation	&	1	<<	23
(	unsigned	long	)	(	(	pun	&	7	)	<<	20	)	|	(	(	pun	&	8	)	<<	24	)
(	unsigned	long	)	(	pun	&	7	<<	20	)	|	(	pun	&	8	<<	24	)
(	ldn	&	15	)	<<	16
ldn	&	15	<<	16
(	lun	&	7	)	<<	24
lun	&	7	<<	24
(	operation	&	1	)	<<	23
operation	&	1	<<	23
(	pun	&	7	)	<<	20
pun	&	7	<<	20
(	ldn	&	15	)	<<	16
ldn	&	15	<<	16
(	speed	&	0x7	)	<<	29
speed	&	0x7	<<	29
(	timeout	&	0x1fff	)	<<	16
timeout	&	0x1fff	<<	16
!	(	display_mode	&	LED_DISP	)
!	display_mode	&	LED_DISP
(	info	->	pos_4b	&	8	)	>>	3
info	->	pos_4b	&	8	>>	3
(	special	(	shpnt	)	==	IBM_SCSI_WCACHE	)	||	(	special	(	shpnt	)	==	IBM_7568_WCACHE	)

!	(	(	info	->	cache_stat	>>	ldn	)	&	1	)
!	(	info	->	cache_stat	>>	ldn	)	&	1
!	(	(	info	->	retry_stat	>>	ldn	)	&	1	)
!	(	info	->	retry_stat	>>	ldn	)	&	1
id	<	max_pun	&&	ldn	<	MAX_LOG_DEV

lun	<	8	&&	ldn	<	MAX_LOG_DEV

id	<	max_pun	&&	ldn	<	MAX_LOG_DEV

*	(	buf	+	7	)	+	(	*	(	buf	+	6	)	<<	8	)	+	(	*	(	buf	+	5	)	<<	16	)	+	(	*	(	buf	+	4	)	<<	24	)
*	buf	+	7	+	*	buf	+	6	<<	8	+	(	*	buf	+	5	<<	16	)	+	*	buf	+	4	<<	24
*	(	buf	+	7	)	+	(	*	(	buf	+	6	)	<<	8	)	+	(	*	(	buf	+	5	)	<<	16	)	+	(	*	(	buf	+	4	)	<<	24	)
*	buf	+	7	+	(	*	(	buf	+	6	)	<<	8	)	+	(	*	(	buf	+	5	)	<<	16	)	+	(	*	buf	+	4	<<	24	)
2	*	i	+	2

2	*	i	+	2

2	*	i	+	2

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	lc_reg	&	0xff00	)	==	0
lc_reg	&	0xff00	==	0
(	irq_stat	==	0xffff	)	&&	(	trans_stat	==	0xffff	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

slot	==	-	1

(	v	&	~	0xff	)	|	0x10	|	4

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

macio_resource_count	(	mdev	)	!=	2	||	macio_irq_count	(	mdev	)	!=	2

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

!	config	.	dma_channel	||	!	(	config_2	.	tfr_port	&	0x2	)
!	config	.	dma_channel	||	!	config_2	.	tfr_port	&	0x2
!	(	inb	(	addr	+	4	)	&	1	)
!	inb	(	addr	+	4	)	&	1
(	config_2	>>	3	)	&	3

(	config_2	>>	3	)	&	3

config	.	slot	&&	inb	(	config	.	ogm_address	-	1	)	==	0

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

--	starget	->	reap_ref	==	0	&&	list_empty	(	&	starget	->	devices	)

--	len	,	++	s

terminated	||	*	s	<	0x20	||	*	s	>	0x7e

!	async	&&	scsi_sysfs_add_sdev	(	sdev	)	!=	0

rescan	||	!	scsi_device_created	(	sdev	)

(	lun	>>	8	)	&	0xFF

scsi_host_scan_allowed	(	shost	)	&&	scsi_autopm_get_host	(	shost	)	==	0

res	==	SCSI_SCAN_LUN_PRESENT	||	res	==	SCSI_SCAN_TARGET_PRESENT

scsi_host_scan_allowed	(	shost	)	&&	scsi_autopm_get_host	(	shost	)	==	0

scsi_host_scan_allowed	(	shost	)	&&	scsi_autopm_get_host	(	shost	)	==	0

!	scsi_host_scan_allowed	(	shost	)	||	scsi_sysfs_add_sdev	(	sdev	)	!=	0

bios_major	<	0	&&	bios_minor	<	0

chip	==	tmc18c50	||	chip	==	tmc18c30

inb	(	port	+	LSB_ID_Code	)	!=	0xe9

inb	(	port	+	LSB_ID_Code	)	!=	0x27

inb	(	port	+	MSB_ID_Code	)	!=	0x61

inb	(	port	+	MSB_ID_Code	)	!=	0x60

(	inb	(	port	+	Configuration2	)	&	0x80	)	==	0x80
inb	(	port	+	Configuration2	)	&	0x80	==	0x80
(	inb	(	port	+	Configuration2	)	&	0x80	)	==	0x00
inb	(	port	+	Configuration2	)	&	0x80	==	0x00
chip	!=	tmc18c30	&&	!	PCI_bus

(	options	&	0xc0	)	>>	6
options	&	0xc0	>>	6
(	options	&	0x0e	)	>>	1
options	&	0x0e	>>	1
PCI_bus	||	(	bios_major	==	3	&&	bios_minor	>=	2	)	||	bios_major	<	0

retcode	==	-	EINVAL

retcode	==	-	EBUSY

adapter_mask	|	(	1	<<	target	)

!	in_command	||	!	current_SC

!	(	status	&	0x02	)
!	status	&	0x02
adapter_mask	|	(	1	<<	scmd_id	(	current_SC	)	)

!	(	status	&	0x01	)
!	status	&	0x01
chip	!=	tmc1800	&&	!	current_SC	->	SCp	.	have_data_in

chip	!=	tmc1800	&&	!	current_SC	->	SCp	.	have_data_in

chip	==	tmc1800	&&	!	current_SC	->	SCp	.	have_data_in	&&	(	current_SC	->	SCp	.	sent_command	>=	current_SC	->	cmd_len	)

current_SC	->	SCp	.	have_data_in	==	-	1

!	current_SC	->	SCp	.	this_residual	&&	current_SC	->	SCp	.	buffers_residual

0x1f33	+	drive	*	25

0x1f36	+	drive	*	15

0x1f34	+	drive	*	15

0x1f31	+	drive	*	25

bios_major	==	3	&&	bios_minor	>=	0	&&	bios_minor	<	4

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

sec	%	3600	/	60

id	==	-	1

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	period	*	4	*	hostdata	->	sync_clock	)	/	1000	-	4

(	offset	&	0x0f	)	|	(	XFERP	&	0x07	)	<<	4
(	offset	&	0x0f	)	|	XFERP	&	0x07	<<	4
(	1	<<	i	)	&	sbcl

i	<	8	&&	!	(	bitmap	&	(	1	<<	i	)	)
i	<	8	&&	!	bitmap	&	(	1	<<	i	)
hostdata	->	clock	>	50	&&	hostdata	->	clock	<=	75

hostdata	->	clock	>	37	&&	hostdata	->	clock	<=	50

hostdata	->	clock	>	25	&&	hostdata	->	clock	<=	37

1000	*	(	4	+	min_xferp	)	/	(	4	*	hostdata	->	sync_clock	)
1000	*	4	+	min_xferp	/	(	4	*	hostdata	->	sync_clock	)
offset	==	0	||	period	==	0

~	(	1	<<	scmd_id	(	SCp	)	)
~	1	<<	scmd_id	(	SCp	)
(	SCp	->	device	->	lun	&	0x7	)	<<	5
SCp	->	device	->	lun	&	0x7	<<	5
(	dsps	&	0xf00	)	>>	8
dsps	&	0xf00	>>	8
~	(	1	<<	host	->	this_id	)
~	1	<<	host	->	this_id
hostdata	->	tag_negotiated	&	(	1	<<	reselection_id	)

(	dsps	&	0xfffff000	)	==	0
dsps	&	0xfffff000	==	0
(	dsps	&	0xf0	)	>>	4
dsps	&	0xf0	>>	4
(	dsps	&	0xf00	)	>>	8
dsps	&	0xf00	>>	8
~	(	1	<<	host	->	this_id	)
~	1	<<	host	->	this_id
hostdata	->	tag_negotiated	&	(	1	<<	id	)

(	dsp	-	(	__u32	)	(	hostdata	->	pScript	)	)	/	4
dsp	-	(	__u32	)	(	hostdata	->	pScript	)	/	4
NCR_700_get_depth	(	SCp	->	device	)	!=	0	&&	(	!	(	hostdata	->	tag_negotiated	&	(	1	<<	scmd_id	(	SCp	)	)	)	||	!	blk_rq_tagged	(	SCp	->	request	)	)
NCR_700_get_depth	(	SCp	->	device	)	!=	0	&&	!	hostdata	->	tag_negotiated	&	(	1	<<	scmd_id	(	SCp	)	)	||	!	blk_rq_tagged	(	SCp	->	request	)
!	blk_rq_tagged	(	SCp	->	request	)	&&	(	hostdata	->	tag_negotiated	&	(	1	<<	scmd_id	(	SCp	)	)	)

~	(	1	<<	scmd_id	(	SCp	)	)
~	1	<<	scmd_id	(	SCp	)
(	hostdata	->	tag_negotiated	&	(	1	<<	scmd_id	(	SCp	)	)	)	&&	scsi_get_tag_type	(	SCp	->	device	)

spi_offset	(	STp	)	==	0	&&	(	spi_period	(	STp	)	<	hostdata	->	min_period	||	spi_period	(	STp	)	>	0xff	)
spi_offset	(	STp	)	==	0	&&	spi_period	(	STp	)	<	hostdata	->	min_period	||	spi_period	(	STp	)	>	0xff
(	tag_type	==	0	&&	scsi_get_tag_type	(	SDp	)	!=	0	)	||	(	tag_type	!=	0	&&	scsi_get_tag_type	(	SDp	)	==	0	)

~	(	1	<<	sdev_id	(	SDp	)	)
~	1	<<	sdev_id	(	SDp	)
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	ms	->	stat	<<	16	)	+	cmd	->	SCp	.	Status
ms	->	stat	<<	16	+	cmd	->	SCp	.	Status
(	ms	->	clk_freq	+	250000	)	/	500000
ms	->	clk_freq	+	250000	/	500000
(	v	+	99999	)	/	100000	-	2
v	+	99999	/	100000	-	2
(	(	ms	->	clk_freq	/	(	v	+	2	)	)	+	199999	)	/	200000
(	ms	->	clk_freq	/	(	v	+	2	)	)	+	199999	/	200000
0x20	<=	b	&&	b	<=	0x2f

(	b	&	(	1	<<	t	)	)	!=	0	&&	t	!=	ms	->	host	->	this_id
b	&	(	1	<<	t	)	!=	0	&&	t	!=	ms	->	host	->	this_id
(	1	<<	t	)	+	(	1	<<	ms	->	host	->	this_id	)
(	1	<<	t	)	+	1	<<	ms	->	host	->	this_id
cmd	&&	scsi_bufflen	(	cmd	)	&&	ms	->	data_ptr	>	scsi_bufflen	(	cmd	)

--	t	<	0

macio_resource_count	(	mdev	)	!=	2	||	macio_irq_count	(	mdev	)	!=	2

(	cmd	->	SCp	.	this_residual	+	511	)	&	~	0x1ff

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

!	(	r	&	0x80	)	&&	(	k	)
!	r	&	0x80	&&	(	k	)
(	r_ecr	(	ppb_hi	)	&	0xe0	)	==	0x60
r_ecr	(	ppb_hi	)	&	0xe0	==	0x60
(	r_str	(	base	)	&	0xf0	)	>>	4
r_str	(	base	)	&	0xf0	>>	4
(	r_str	(	base	)	&	0xf0	)	|	l

(	r	&	0x18	)	!=	0x08
r	&	0x18	!=	0x08
!	(	(	(	long	)	buffer	|	len	)	&	0x03	)
!	(	(	long	)	buffer	|	len	)	&	0x03
!	(	r_str	(	ppb	)	&	0x01	)
!	r_str	(	ppb	)	&	0x01
(	r	&	0x18	)	!=	0x18
r	&	0x18	!=	0x18
!	(	(	(	long	)	buffer	|	len	)	&	0x03	)
!	(	(	long	)	buffer	|	len	)	&	0x03
!	(	r_str	(	ppb	)	&	0x01	)
!	r_str	(	ppb	)	&	0x01
(	s1	==	0xb8	)	&&	(	s2	==	0x18	)	&&	(	s3	==	0x30	)

(	s1	==	0xb8	)	&&	(	s2	==	0x18	)	&&	(	s3	==	0x38	)

(	r_str	(	ppb	)	&	0x08	)	&&	(	k	)

0x80	|	(	1	<<	target	)

!	(	r_str	(	ppb	)	&	0x08	)	&&	(	k	)
!	r_str	(	ppb	)	&	0x08	&&	(	k	)
(	v	==	READ_6	)	||	(	v	==	READ_10	)	||	(	v	==	WRITE_6	)	||	(	v	==	WRITE_10	)

(	(	r	&	0x88	)	!=	0x88	)	||	(	cmd	->	SCp	.	this_residual	<=	0	)
(	r	&	0x88	!=	0x88	)	||	(	cmd	->	SCp	.	this_residual	<=	0	)
cmd	->	SCp	.	buffer	&&	!	cmd	->	SCp	.	this_residual

!	(	r	&	0x80	)
!	r	&	0x80
!	(	r_str	(	ppb	)	&	0x80	)
!	r_str	(	ppb	)	&	0x80
!	(	r_str	(	ppb	)	&	0x80	)
!	r_str	(	ppb	)	&	0x80
!	(	r_str	(	ppb	)	&	0x80	)
!	r_str	(	ppb	)	&	0x80
retv	==	-	1

(	l	<	3	)	&&	(	status	)

!	(	l	&	0x80	)	&&	(	k	)
!	l	&	0x80	&&	(	k	)
!	list_empty	(	&	session	->	leadconn	->	cmdqueue	)	||	!	list_empty	(	&	session	->	leadconn	->	mgmtqueue	)

!	rhdr	&&	conn	->	ping_task

lun	!=	-	1	&&	lun	!=	task	->	sc	->	device	->	lun

!	conn	->	recv_timeout	&&	!	conn	->	ping_timeout

!	kfifo_out	(	&	session	->	cmdpool	.	queue	,	(	void	*	)	&	conn	->	login_task	,	sizeof	(	void	*	)	)

(	session	->	imm_data_en	||	!	session	->	initial_r2t_en	)	&&	session	->	first_burst	>	session	->	max_burst
session	->	imm_data_en	||	!	session	->	initial_r2t_en	&&	session	->	first_burst	>	session	->	max_burst
conn	->	ping_timeout	&&	!	conn	->	recv_timeout

conn	->	recv_timeout	&&	!	conn	->	ping_timeout

(	blocklength	>>	8	)	&	0xff

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

!	(	(	flags	&	O_NONBLOCK	)	||	scsi_block_when_processing_errors	(	sdp	->	device	)	)
!	(	flags	&	O_NONBLOCK	)	||	scsi_block_when_processing_errors	(	sdp	->	device	)
!	list_empty	(	&	sdp	->	sfds	)	&&	(	flags	&	O_NONBLOCK	)

!	list_empty	(	&	sdp	->	sfds	)	||	sdp	->	exclude

(	srp	->	data	.	cmd_opcode	>=	0xc0	)	&&	(	12	==	hp	->	cmd_len	)

(	hp	->	mx_sb_len	>	0	)	&&	hp	->	sbp

!	(	(	filp	->	f_flags	&	O_NONBLOCK	)	||	scsi_block_when_processing_errors	(	sdp	->	device	)	)
!	(	filp	->	f_flags	&	O_NONBLOCK	)	||	scsi_block_when_processing_errors	(	sdp	->	device	)
!	(	filp	->	f_flags	&	O_NONBLOCK	)
!	filp	->	f_flags	&	O_NONBLOCK
(	opcode	>=	0xc0	)	&&	old_hdr	.	twelve_byte

(	0	==	sfp	->	low_dma	)	&&	(	0	==	sg_res_in_use	(	sfp	)	)

(	1	==	srp	->	done	)	&&	(	!	srp	->	sg_io_owned	)

(	1	==	srp	->	done	)	&&	(	!	srp	->	sg_io_owned	)

(	0	==	res	)	&&	(	1	==	srp	->	done	)	&&	(	!	srp	->	sg_io_owned	)

k	<	rsv_schp	->	k_use_sg	&&	sa	<	vma	->	vm_end

(	!	filp	)	||	(	!	vma	)

k	<	rsv_schp	->	k_use_sg	&&	sa	<	vma	->	vm_end

!	sdp	||	sdp	->	detached

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

!	sht	->	change_queue_depth	||	sdev	->	queue_depth	>=	sdev	->	max_queue_depth

sdev	->	lun	<<	5	&	0xe0

!	scsi_device_online	(	scmd	->	device	)	||	(	try_stu	&&	!	scsi_eh_try_stu	(	scmd	)	&&	!	scsi_eh_tur	(	scmd	)	)	||	!	scsi_eh_tur	(	scmd	)

!	scsi_device_online	(	sdev	)	||	!	scsi_eh_tur	(	stu_scmd	)

msg_byte	(	scmd	->	result	)	==	COMMAND_COMPLETE	&&	status_byte	(	scmd	->	result	)	==	RESERVATION_CONFLICT

msg_byte	(	scmd	->	result	)	==	COMMAND_COMPLETE	&&	status_byte	(	scmd	->	result	)	==	RESERVATION_CONFLICT

(	++	scmd	->	retries	)	<=	scmd	->	allowed	&&	!	scsi_noretry_cmd	(	scmd	)

(	shost	->	host_failed	==	0	&&	shost	->	host_eh_scheduled	==	0	)	||	shost	->	host_failed	!=	shost	->	host_busy

!	shost	->	eh_noresume	&&	scsi_autopm_get_host	(	shost	)	!=	0

add_sen_len	<	(	sb_len	-	8	)

(	(	resp_sb	->	flags	&	0x70	)	>>	4	)	-	1
(	resp_sb	->	flags	&	0x70	>>	4	)	-	1
(	asd_ha	->	seq	.	can_queue	-	num	)	<	0

(	asd_ha	->	seq	.	tc_index_bitmap_bits	+	7	)	/	8
asd_ha	->	seq	.	tc_index_bitmap_bits	+	7	/	8
2	*	(	1	+	asd_ha	->	hw_prof	.	num_phys	)
2	*	1	+	asd_ha	->	hw_prof	.	num_phys
1	+	(	asd_ha	->	hw_prof	.	max_scbs	-	seq	->	pending	)	/	2
1	+	asd_ha	->	hw_prof	.	max_scbs	-	seq	->	pending	/	2
--	count	>	0

max_devs	<=	asd_ha	->	hw_prof	.	max_ddbs	||	max_devs	>	0xFFFF

max_cmnds	<=	asd_ha	->	hw_prof	.	max_scbs	||	max_cmnds	>	0xFFFF

(	asd_ha	->	hw_prof	.	max_ddbs	+	7	)	/	8
asd_ha	->	hw_prof	.	max_ddbs	+	7	/	8
!	ascb	->	uldd_timer	&&	!	del_timer	(	&	ascb	->	timer	)

ascb	->	tc_index	==	-	1

--	count	>	0

--	count	>	0

--	count	>	0

--	count	>	0

~	(	1	<<	i	)
~	1	<<	i
~	(	1	<<	i	)
~	1	<<	i
(	pe	->	sas_link_rates	&	0xF0	)	>>	4
pe	->	sas_link_rates	&	0xF0	>>	4
(	pe	->	sata_link_rates	&	0xF0	)	>>	4
pe	->	sata_link_rates	&	0xF0	>>	4
(	(	resp_sb	->	flags	&	0x70	)	>>	4	)	-	1
resp_sb	->	flags	&	0x70	>>	4	-	1
~	(	1U	<<	sas_phy	->	id	)
~	1U	<<	sas_phy	->	id
(	dl	->	opcode	&	DL_PHY_MASK	)	-	1
dl	->	opcode	&	DL_PHY_MASK	-	1
edb	>	6	||	edb	<	0

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	hdr_ptr	->	contrl_id	.	vendor	!=	asd_ha	->	pcidev	->	vendor	||	hdr_ptr	->	contrl_id	.	device	!=	asd_ha	->	pcidev	->	device	)	&&	(	hdr_ptr	->	contrl_id	.	sub_vendor	!=	asd_ha	->	pcidev	->	vendor	||	hdr_ptr	->	contrl_id	.	sub_device	!=	asd_ha	->	pcidev	->	device	)
hdr_ptr	->	contrl_id	.	vendor	!=	asd_ha	->	pcidev	->	vendor	||	hdr_ptr	->	contrl_id	.	device	!=	asd_ha	->	pcidev	->	device	&&	hdr_ptr	->	contrl_id	.	sub_vendor	!=	asd_ha	->	pcidev	->	vendor	||	hdr_ptr	->	contrl_id	.	sub_device	!=	asd_ha	->	pcidev	->	device
!	sas_phys	||	!	sas_ports

!	ddb	||	ddb	>=	0xFFFF

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	fsp	->	req_flags	&	FC_SRB_READ	)	&&	(	lport	->	lro_enabled	)	&&	(	lport	->	tt	.	ddp_setup	)

unlikely	(	fsp	->	state	&	FC_SRB_RCV_STATUS	)	&&	fsp	->	xfer_len	==	fsp	->	data_len	-	fsp	->	scsi_resid

fsp	->	state	&	(	FC_SRB_ABORTED	|	FC_SRB_ABORT_PENDING	)
fsp	->	state	&	FC_SRB_ABORTED	|	FC_SRB_ABORT_PENDING
fsp	->	recov_retry	++	>=	FC_MAX_RECOV_RETRY

!	fsp	->	seq_ptr	||	!	fsp	->	wait_for_comp

fsp	->	recov_retry	++	<	FC_MAX_RECOV_RETRY

fsp	->	recov_retry	++	<	FC_MAX_RECOV_RETRY

fsp	->	recov_retry	++	<	FC_MAX_RECOV_RETRY

!	(	fsp	->	state	&	FC_SRB_FCP_PROCESSING_TMO	)
!	fsp	->	state	&	FC_SRB_FCP_PROCESSING_TMO
(	fsp	->	cdb_status	==	0	)	&&	!	(	fsp	->	req_flags	&	FC_SRB_READ	)
(	fsp	->	cdb_status	==	0	)	&&	!	fsp	->	req_flags	&	FC_SRB_READ
!	prov	||	!	try_module_get	(	prov	->	module	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	plen	%	4	)	!=	0	||	plen	>	len	||	plen	<	16

fr_len	(	fp	)	%	4	!=	0

ep	->	sid	!=	0	&&	ep	->	sid	!=	ntoh24	(	fh	->	fh_d_id	)

(	disc	->	disc_id	+	2	)	|	1

rdata	->	ids	.	port_name	==	-	1

(	op	>=	ELS_LS_RJT	)	&&	(	op	<=	ELS_AUTH_ELS	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	fr_len	(	fp	)	+	3	)	&	~	3

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

fr_len	(	fp	)	%	4	!=	0

i	<	ARRAY_LABEL_LEN	-	1

(	2	*	i	)	+	1

(	inqp	->	avte_cvp	>>	5	)	&	0x1

(	h	->	lun_state	==	RDAC_LUN_UNOWNED	)	&&	(	h	->	preferred	==	RDAC_PREFERRED	)

sense_hdr	->	asc	==	0x94	&&	sense_hdr	->	ascq	==	0x01

h	->	buff	&&	h	->	buff	!=	h	->	inq

(	h	->	bufflen	>>	24	)	&	0xff

(	h	->	bufflen	>>	16	)	&	0xff

(	h	->	bufflen	>>	8	)	&	0xff

(	h	->	group_id	>>	8	)	&	0xff

(	stpg_len	>>	24	)	&	0xff

(	stpg_len	>>	16	)	&	0xff

(	stpg_len	>>	8	)	&	0xff

d	<	h	->	buff	+	len

h	->	group_id	==	-	1

h	->	tpgs	&	TPGS_MODE_EXPLICIT	&&	h	->	state	!=	TPGS_STATE_OPTIMIZED	&&	h	->	state	!=	TPGS_STATE_LBA_DEPENDENT

h	->	state	!=	TPGS_STATE_OPTIMIZED	&&	h	->	state	!=	TPGS_STATE_NONOPTIMIZED	&&	h	->	state	!=	TPGS_STATE_LBA_DEPENDENT

h	->	buff	&&	h	->	inq	!=	h	->	buff

serial_len	==	0	||	serial_len	+	161	>	len

sp_len	==	0	||	serial_len	+	sp_len	+	161	>	len

!	(	csdev	->	flags	&	CLARIION_HONOR_RESERVATIONS	)
!	csdev	->	flags	&	CLARIION_HONOR_RESERVATIONS
!	(	csdev	->	flags	&	CLARIION_HONOR_RESERVATIONS	)
!	csdev	->	flags	&	CLARIION_HONOR_RESERVATIONS
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	ep	->	speed_hi	<<	16	)	|	ep	->	speed

(	ETHTOOL_RX_FLOW_SPEC_RING_VF	&	ring_cookie	)	>>	ETHTOOL_RX_FLOW_SPEC_RING_VF_OFF
ETHTOOL_RX_FLOW_SPEC_RING_VF	&	ring_cookie	>>	ETHTOOL_RX_FLOW_SPEC_RING_VF_OFF
!	fcf	||	(	ports	&&	!	lp	->	port_id	)

sel_time	&&	!	fip	->	sel_fcf	&&	!	fip	->	sel_time

!	fcf	->	fc_map	||	(	fcf	->	fc_map	&	0x10000	)

mtu_valid	&&	!	fip	->	sel_fcf	&&	fcoe_ctlr_fcf_usable	(	fcf	)

!	timer_pending	(	&	fip	->	timer	)	||	time_before	(	fip	->	sel_time	,	fip	->	timer	.	expires	)

!	fcf	||	!	lport	->	port_id

vn_port	&&	(	vn_port	==	lport	)

compare_ether_addr	(	fip	->	get_src_addr	(	vn_port	)	,	vp	->	fd_mac	)	!=	0	||	get_unaligned_be64	(	&	vp	->	fd_wwpn	)	!=	vn_port	->	wwpn

!	fcf	||	fcf	->	flogi_sent

!	fcf	||	!	fip	->	flogi_req_send

!	fcf	||	fcf	->	flogi_sent

!	sel	&&	fip	->	sel_time

(	ids	->	port_name	!=	-	1	&&	ids	->	port_name	!=	new	->	ids	.	port_name	)	||	(	ids	->	node_name	!=	-	1	&&	ids	->	node_name	!=	new	->	ids	.	node_name	)

rdata	->	ids	.	node_name	==	new	->	ids	.	node_name	&&	rdata	->	ids	.	port_name	==	new	->	ids	.	port_name

(	disc	->	disc_id	+	2	)	|	1

(	ep	->	speed_hi	<<	16	)	|	ep	->	speed

(	ETHTOOL_RX_FLOW_SPEC_RING_VF	&	ring_cookie	)	>>	ETHTOOL_RX_FLOW_SPEC_RING_VF_OFF
ETHTOOL_RX_FLOW_SPEC_RING_VF	&	ring_cookie	>>	ETHTOOL_RX_FLOW_SPEC_RING_VF_OFF
fc_fcp_is_read	(	fr_fsp	(	fp	)	)	&&	(	fr_fsp	(	fp	)	->	data_len	>	fcoe_ddp_min	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	i	&	0x40	)	&&	len	==	0

fast_pio	&&	len	>	3

reqlen	&&	!	(	i	&	0x40	)
reqlen	&&	!	i	&	0x40
fast_pio	&&	len	>	3

curSC	->	SCp	.	Message	==	SAVE_POINTERS	||	curSC	->	SCp	.	Message	==	DISCONNECT

pio	==	0	||	pio	==	1

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

period	>=	sync_table	->	min_period	&&	period	<=	sync_table	->	max_period

period	!=	0	&&	sync_table	->	max_period	==	0

(	--	time_out	!=	0	)	&&	(	reg	&	mask	)	!=	0
(	--	time_out	!=	0	)	&&	reg	&	mask	!=	0
time_out	--	!=	0

len	--	,	ptr	++

id_reg	&	(	~	BIT	(	host_id	)	)

(	h	<<	16	)	|	(	m	<<	8	)	|	(	l	<<	0	)

(	time_out	--	!=	0	)	&&	(	SCpnt	->	SCp	.	this_residual	>	0	||	SCpnt	->	SCp	.	buffers_residual	>	0	)
(	time_out	--	!=	0	)	&&	SCpnt	->	SCp	.	this_residual	>	0	||	SCpnt	->	SCp	.	buffers_residual	>	0
~	(	BIT	(	1	)	|	BIT	(	0	)	)
~	BIT	(	1	)	|	BIT	(	0	)
~	(	BIT	(	1	)	|	BIT	(	0	)	)
~	BIT	(	1	)	|	BIT	(	0	)
SCpnt	->	SCp	.	this_residual	==	0	&&	SCpnt	->	SCp	.	buffers_residual	!=	0

(	time_out	--	!=	0	)	&&	(	SCpnt	->	SCp	.	this_residual	>	0	||	SCpnt	->	SCp	.	buffers_residual	>	0	)
(	time_out	--	!=	0	)	&&	SCpnt	->	SCp	.	this_residual	>	0	||	SCpnt	->	SCp	.	buffers_residual	>	0
~	(	BIT	(	1	)	|	BIT	(	0	)	)
~	BIT	(	1	)	|	BIT	(	0	)
~	(	BIT	(	1	)	|	BIT	(	0	)	)
~	BIT	(	1	)	|	BIT	(	0	)
SCpnt	->	SCp	.	this_residual	==	0	&&	SCpnt	->	SCp	.	buffers_residual	!=	0

ret	>	0	&&	len	--	>	0

ret	>	0	&&	len	--	>	0

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

qlirq	!=	-	1

1	|	(	1	<<	1	)

!	dev	||	!	dev	->	lldd_dev

!	task	||	!	task	->	lldd_task	||	!	task	->	dev

!	task	||	!	task	->	lldd_task	||	!	task	->	dev

(	pm8001_ha	->	main_cfg_tbl	.	ctrl_cap_flag	&	0xfe000000	)	>>	25
pm8001_ha	->	main_cfg_tbl	.	ctrl_cap_flag	&	0xfe000000	>>	25
(	pm8001_ha	->	fw_image	->	size	<=	0	)	||	(	pm8001_ha	->	fw_image	->	size	>	4096	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

!	raid_device	||	ioc	->	is_warpdrive

!	sas_device_priv_data	||	!	sas_device_priv_data	->	sas_target

!	sas_device_priv_data	||	!	sas_device_priv_data	->	sas_target

!	sas_device_priv_data	||	!	sas_device_priv_data	->	sas_target

list_empty	(	&	ioc	->	fw_event_list	)	||	!	ioc	->	firmware_event_thread	||	in_interrupt	(	)

!	sas_device_priv_data	||	!	sas_device_priv_data	->	sas_target

!	sas_device_priv_data	||	!	sas_device_priv_data	->	sas_target	||	sas_device_priv_data	->	sas_target	->	deleted

(	ioc	->	facts	.	HeaderVersion	>>	8	)	<	0xC

!	sas_device	||	!	sas_device	->	starget

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

ioc	->	reply_free_host_index	==	(	ioc	->	reply_free_queue_depth	-	1	)

reply_q	->	reply_post_host_index	==	(	ioc	->	reply_post_queue_depth	-	1	)

!	pci_set_dma_mask	(	pdev	,	DMA_BIT_MASK	(	32	)	)	&&	!	pci_set_consistent_dma_mask	(	pdev	,	DMA_BIT_MASK	(	32	)	)

grouping	<	2	||	(	grouping	==	2	&&	!	grouping_mod	)

grouping	<	4	||	(	grouping	==	4	&&	!	grouping_mod	)

grouping	<	8	||	(	grouping	==	8	&&	!	grouping_mod	)

max_sgl_entries	!=	-	1

max_queue_depth	!=	-	1	&&	max_queue_depth	!=	0

!	ioc	->	reply_free_queue_depth	%	16

ioc	->	reply_free_queue_depth	+	32	-	(	ioc	->	reply_free_queue_depth	%	16	)

ioc	->	request	+	(	(	ioc	->	scsiio_depth	+	1	)	*	ioc	->	request_sz	)
ioc	->	request	+	(	ioc	->	scsiio_depth	+	1	*	ioc	->	request_sz	)
ioc	->	request_dma	+	(	(	ioc	->	scsiio_depth	+	1	)	*	ioc	->	request_sz	)
ioc	->	request_dma	+	(	ioc	->	scsiio_depth	+	1	*	ioc	->	request_sz	)
ioc	->	hi_priority	+	(	ioc	->	hi_priority_depth	*	ioc	->	request_sz	)

ioc	->	hi_priority_dma	+	(	ioc	->	hi_priority_depth	*	ioc	->	request_sz	)

ioc	->	is_warpdrive	&&	ioc	->	manu_pg10	.	OEMIdentifier	==	0x80

!	ioc	->	base_cmds	.	reply	||	!	ioc	->	transport_cmds	.	reply	||	!	ioc	->	scsih_cmds	.	reply	||	!	ioc	->	tm_cmds	.	reply	||	!	ioc	->	config_cmds	.	reply	||	!	ioc	->	ctl_cmds	.	reply	||	!	ioc	->	ctl_cmds	.	sense

!	ioc	->	base_cmds	.	reply	||	!	ioc	->	transport_cmds	.	reply	||	!	ioc	->	scsih_cmds	.	reply	||	!	ioc	->	tm_cmds	.	reply	||	!	ioc	->	config_cmds	.	reply	||	!	ioc	->	ctl_cmds	.	reply

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

req	->	bio	->	bi_vcnt	>	1	||	rsp	->	bio	->	bi_vcnt	>	1

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

!	(	IS_QLA24XX_TYPE	(	ha	)	||	IS_QLA25XX	(	ha	)	||	IS_QLA82XX	(	ha	)	)
!	IS_QLA24XX_TYPE	(	ha	)	||	IS_QLA25XX	(	ha	)	||	IS_QLA82XX	(	ha	)
bsg_job	->	request_payload	.	sg_cnt	>	1	||	bsg_job	->	reply_payload	.	sg_cnt	>	1

(	req_sg_cnt	!=	bsg_job	->	request_payload	.	sg_cnt	)	||	(	rsp_sg_cnt	!=	bsg_job	->	reply_payload	.	sg_cnt	)

(	req_sg_cnt	!=	bsg_job	->	request_payload	.	sg_cnt	)	||	(	rsp_sg_cnt	!=	bsg_job	->	reply_payload	.	sg_cnt	)

!	IS_QLA81XX	(	ha	)	&&	!	IS_QLA83XX	(	ha	)

!	IS_QLA81XX	(	ha	)	&&	!	IS_QLA83XX	(	ha	)

++	abts_cnt	<	5

!	IS_QLA25XX	(	ha	)	&&	!	IS_QLA81XX	(	ha	)	&&	!	IS_QLA83XX	(	ha	)

!	IS_FWI2_CAPABLE	(	ha	)	&&	!	IS_QLA2100	(	ha	)	&&	!	IS_QLA2200	(	ha	)

!	IS_FWI2_CAPABLE	(	ha	)	&&	!	IS_QLA2100	(	ha	)	&&	!	IS_QLA2200	(	ha	)

!	IS_QLA24XX_TYPE	(	ha	)	&&	!	IS_QLA25XX	(	ha	)	&&	!	IS_CNA_CAPABLE	(	ha	)	&&	!	IS_QLA2031	(	ha	)

*	en	!=	0x20	&&	*	en	!=	0x00

!	IS_QLA2100	(	ha	)	&&	!	IS_QLA2200	(	ha	)	&&	!	IS_QLA2300	(	ha	)

!	IS_QLA2100	(	ha	)	&&	!	IS_QLA2200	(	ha	)

ha	->	port_down_retry_count	==	le16_to_cpu	(	nv	->	port_down_retry_count	)	&&	ha	->	port_down_retry_count	>	3

ha	->	port_down_retry_count	==	le16_to_cpu	(	nv	->	port_down_retry_count	)	&&	ha	->	port_down_retry_count	>	3

!	ha	->	fcp_prio_cfg	||	!	ha	->	flags	.	fcp_prio_enabled

!	IS_QLA2100	(	ha	)	&&	!	IS_QLA2200	(	ha	)	&&	!	IS_QLA2300	(	ha	)

!	IS_QLA2100	(	ha	)	&&	!	IS_QLA2200	(	ha	)	&&	!	IS_QLA2300	(	ha	)

!	IS_QLA24XX_TYPE	(	ha	)	&&	!	IS_QLA25XX	(	ha	)	&&	!	IS_CNA_CAPABLE	(	ha	)	&&	!	IS_QLA2031	(	ha	)

!	IS_QLA83XX	(	ha	)	&&	!	IS_QLA81XX	(	ha	)

(	IS_QLA8031	(	ha	)	||	IS_QLA81XX	(	ha	)	)	&&	ha	->	beacon_blink_led
IS_QLA8031	(	ha	)	||	IS_QLA81XX	(	ha	)	&&	ha	->	beacon_blink_led
4	-	(	alen	&	3	)
4	-	alen	&	3
4	-	(	alen	&	3	)
4	-	alen	&	3
4	-	(	alen	&	3	)
4	-	alen	&	3
4	-	(	alen	&	3	)
4	-	alen	&	3
4	-	(	alen	&	3	)
4	-	alen	&	3
4	-	(	alen	&	3	)
4	-	alen	&	3
4	-	(	alen	&	3	)
4	-	alen	&	3
4	-	(	alen	&	3	)
4	-	alen	&	3
4	-	(	alen	&	3	)
4	-	alen	&	3
4	-	(	alen	&	3	)
4	-	alen	&	3
ha	->	fw_dumped	&&	!	ha	->	fw_dump_reading

!	IS_QLA82XX	(	ha	)	||	vha	!=	base_vha

iter	->	is4GBp_only	&&	!	IS_FWI2_CAPABLE	(	ha	)

iter	->	is4GBp_only	==	2	&&	!	IS_QLA25XX	(	ha	)

(	cmd	->	cmd_len	%	4	)	!=	0

ha	->	flags	.	cpu_affinity_enabled	&&	affinity	>=	0	&&	affinity	<	ha	->	max_rsp_queues	-	1

(	cmd	->	cmd_len	%	4	)	!=	0

0x04	|	(	ha	->	portnum	<<	5	)	|	(	0	<<	8	)	|	(	0	<<	16	)

(	IS_QLA81XX	(	ha	)	||	IS_QLA83XX	(	ha	)	)	&&	ha	->	ex_init_cb	->	ex_version
IS_QLA81XX	(	ha	)	||	IS_QLA83XX	(	ha	)	&&	ha	->	ex_init_cb	->	ex_version
(	vp_index	-	1	)	/	8
vp_index	-	1	/	8
(	vp_index	-	1	)	&	7

!	IS_QLA25XX	(	ha	)	&&	!	IS_QLA81XX	(	ha	)	&&	!	IS_QLA83XX	(	ha	)

ha	->	msixbase	&&	ha	->	mqiobase	&&	(	ha	->	max_rsp_queues	>	1	||	ha	->	max_req_queues	>	1	)
ha	->	msixbase	&&	ha	->	mqiobase	&&	ha	->	max_rsp_queues	>	1	||	ha	->	max_req_queues	>	1
ha	->	mqiobase	&&	(	ha	->	max_rsp_queues	>	1	||	ha	->	max_req_queues	>	1	)
ha	->	mqiobase	&&	ha	->	max_rsp_queues	>	1	||	ha	->	max_req_queues	>	1
!	IS_QLA2432	(	ha	)	&&	!	IS_QLA2532	(	ha	)	&&	!	IS_QLA8432	(	ha	)	&&	!	IS_CNA_CAPABLE	(	ha	)	&&	!	IS_QLA2031	(	ha	)

!	IS_QLA24XX	(	ha	)	&&	!	IS_QLA2532	(	ha	)	&&	!	IS_QLA8432	(	ha	)	&&	!	IS_QLA8001	(	ha	)

!	ha	->	mqenable	||	IS_QLA83XX	(	ha	)

!	IS_QLA25XX	(	ha	)	&&	!	IS_QLA81XX	(	ha	)	&&	!	IS_QLA83XX	(	ha	)

rv	==	-	1

rv	==	-	1

(	addr	&	0x00ff800	)	==	0xff800
addr	&	0x00ff800	==	0xff800
(	(	window	&	0x1FF	)	<<	7	)	|	(	(	window	&	0x0FFFE0000	)	>>	17	)
(	window	&	0x1FF	<<	7	)	|	(	(	window	&	0x0FFFE0000	)	>>	17	)
(	qla82xx_pci_set_window_warning_count	++	<	8	)	||	(	qla82xx_pci_set_window_warning_count	%	64	==	0	)

(	qla82xx_rom_lock	(	ha	)	!=	0	)	&&	(	loops	<	50000	)

(	qla82xx_rom_lock	(	ha	)	!=	0	)	&&	(	loops	<	50000	)

qla82xx_rom_fast_read	(	ha	,	0	,	&	n	)	!=	0	||	n	!=	0xcafecafeUL	||	qla82xx_rom_fast_read	(	ha	,	4	,	&	n	)	!=	0

(	n	>>	16	)	&	0xffffU

qla82xx_rom_fast_read	(	ha	,	8	*	i	+	4	*	offset	,	&	val	)	!=	0	||	qla82xx_rom_fast_read	(	ha	,	8	*	i	+	4	*	offset	+	4	,	&	addr	)	!=	0

size	<	(	8	-	off0	)

i	%	0x1000	==	0

pci_resource_start	(	ha	->	pdev	,	4	)	+	(	ha	->	pdev	->	devfn	<<	12	)
pci_resource_start	(	ha	->	pdev	,	4	)	+	ha	->	pdev	->	devfn	<<	12
~	(	(	1	<<	28	)	|	(	1	<<	24	)	)
~	(	1	<<	28	)	|	(	1	<<	24	)
!	ha	->	md_tmplt_hdr	||	!	ha	->	md_dump

CMD_SP	(	cmd	)	&&	wait_iter	--

ql2xtargetreset	==	1	&&	ha	->	flags	.	enable_target_reset

ha	->	flags	.	enable_lip_full_login	&&	!	IS_CNA_CAPABLE	(	ha	)

req	->	max_q_depth	<=	sdev	->	queue_depth	||	req	->	max_q_depth	<	qdepth

MSD	(	dma_get_required_mask	(	&	ha	->	pdev	->	dev	)	)	&&	!	pci_set_consistent_dma_mask	(	ha	->	pdev	,	DMA_BIT_MASK	(	64	)	)

!	(	ha	->	bars	&	1	)
!	ha	->	bars	&	1
(	ql2xmaxqueues	<=	1	&&	!	ql2xmultique_tag	)	||	(	ql2xmaxqueues	>	1	&&	ql2xmultique_tag	)	||	(	!	IS_QLA25XX	(	ha	)	&&	!	IS_QLA81XX	(	ha	)	)

ha	->	msix_count	-	1	>	cpus

ha	->	msix_count	-	1	>	cpus

!	(	ha	->	portnum	&	1	)
!	ha	->	portnum	&	1
ha	->	flags	.	mbox_busy	&&	retries	--

1	<<	(	eeprom_no_addr_bits	(	ha	)	-	1	)

(	data	<<	1	)	|	dataBit

(	offset	-	1	)	/	2
offset	-	1	/	2
atomic_read	(	&	ddb_entry	->	relogin_timer	)	&&	(	atomic_dec_and_test	(	&	ddb_entry	->	relogin_timer	)	!=	0	)

!	is_qla8022	(	ha	)	&&	(	ha	->	mac_index	==	3	)

!	username	||	!	password

!	found_index	&&	free_index	!=	-	1

ha	->	bytes_xfered	&	~	0xFFFFF

rv	==	-	1

rv	==	-	1

(	addr	&	0x00ff800	)	==	0xff800
addr	&	0x00ff800	==	0xff800
(	(	window	&	0x1FF	)	<<	7	)	|	(	(	window	&	0x0FFFE0000	)	>>	17	)
(	window	&	0x1FF	<<	7	)	|	(	window	&	0x0FFFE0000	>>	17	)
(	qla4_8xxx_pci_set_window_warning_count	++	<	8	)	||	(	qla4_8xxx_pci_set_window_warning_count	%	64	==	0	)

(	qla4_8xxx_rom_lock	(	ha	)	!=	0	)	&&	(	loops	<	50000	)

qla4_8xxx_rom_fast_read	(	ha	,	0	,	&	n	)	!=	0	||	n	!=	0xcafecafeUL	||	qla4_8xxx_rom_fast_read	(	ha	,	4	,	&	n	)	!=	0

(	n	>>	16	)	&	0xffffU

qla4_8xxx_rom_fast_read	(	ha	,	8	*	i	+	4	*	offset	,	&	val	)	!=	0	||	qla4_8xxx_rom_fast_read	(	ha	,	8	*	i	+	4	*	offset	+	4	,	&	addr	)	!=	0

i	%	0x1000	==	0

size	<	(	8	-	off0	)

(	qla4_8xxx_rom_lock	(	ha	)	!=	0	)	&&	(	loops	<	50000	)

i	<	(	size	/	2	)

(	readw	(	isp_port_ctrl	(	ha	)	)	&	0x8000	)	!=	0
readw	(	isp_port_ctrl	(	ha	)	)	&	0x8000	!=	0
!	(	is_qla4010	(	ha	)	||	is_qla4022	(	ha	)	||	is_qla4032	(	ha	)	)
!	is_qla4010	(	ha	)	||	is_qla4022	(	ha	)	||	is_qla4032	(	ha	)
!	(	is_qla4010	(	ha	)	||	is_qla4022	(	ha	)	||	is_qla4032	(	ha	)	)
!	is_qla4010	(	ha	)	||	is_qla4022	(	ha	)	||	is_qla4032	(	ha	)
i	<	num_possible_cpus	(	)	+	1

(	fcp_rsp_len	==	4	)	||	(	fcp_rsp_len	==	8	)

!	interface	||	!	interface	->	ctlr	.	lp

!	bnx2fc_link_ok	(	lport	)	&&	interface	->	enabled

++	wait_cnt	>	12

!	interface	||	!	interface	->	ctlr	.	lp

!	interface	||	!	interface	->	ctlr	.	lp

tgt	->	sq_prod_idx	|	(	tgt	->	sq_curr_toggle_bit	<<	15	)

--	i	>=	0

tgt	->	fcoe_conn_id	==	-	1

(	hba	->	wait_for_link_down	)	&&	(	hba	->	num_ofld_sess	==	0	)

(	conn	->	max_xmit_dlength	>	65536	)	||	(	conn	->	max_xmit_dlength	==	0	)

beiscsi_ep	->	ep_cid	>	(	phba	->	fw_config	.	iscsi_cid_start	+	phba	->	params	.	cxns_per_ctrl	*	2	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

!	aborted_task	||	!	aborted_task	->	sc

(	num_mcceq_processed	)	&&	(	!	num_ioeq_processed	)

!	(	buf_len	==	48	)
!	buf_len	==	48
phba	->	io_sgl_alloc_index	==	(	phba	->	params	.	ios_per_ctrl	-	1	)

phba	->	io_sgl_free_index	==	(	phba	->	params	.	ios_per_ctrl	-	1	)

pwrb_context	->	alloc_index	==	(	phba	->	params	.	wrbs_per_cxn	-	1	)

pwrb_context	->	free_index	==	(	phba	->	params	.	wrbs_per_cxn	-	1	)

phba	->	eh_sgl_alloc_index	==	(	phba	->	params	.	icds_per_ctrl	-	phba	->	params	.	ios_per_ctrl	-	1	)

phba	->	eh_sgl_free_index	==	(	phba	->	params	.	icds_per_ctrl	-	phba	->	params	.	ios_per_ctrl	-	1	)

!	(	buffer_index	<=	pasync_ctx	->	async_data	.	num_entries	)
!	buffer_index	<=	pasync_ctx	->	async_data	.	num_entries
(	index	<	num_sg	)	&&	(	index	<	2	)

(	unsigned	long	)	(	pasync_ctx	->	async_header	.	va_base	)	+	(	p	->	defpdu_hdr_sz	*	index	)

pasync_ctx	->	async_header	.	pa_base	.	u	.	a64	.	address	+	(	p	->	defpdu_hdr_sz	*	index	)

(	unsigned	long	)	(	pasync_ctx	->	async_data	.	va_base	)	+	(	p	->	defpdu_data_sz	*	index	)

pasync_ctx	->	async_data	.	pa_base	.	u	.	a64	.	address	+	(	p	->	defpdu_data_sz	*	index	)

(	mccq	->	head	&	0x000000FF	)	<<	16
mccq	->	head	&	0x000000FF	<<	16
!	iscsi_task_has_unsol_data	(	task	)	&&	!	task	->	imm_count

bnx2i_adapter_ready	(	hba	)	||	!	hba	->	cid_que	.	cid_free_cnt

(	bnx2i_conn	->	ep	->	qp	.	sq_prod_qe	+	count	)	<=	bnx2i_conn	->	ep	->	qp	.	sq_last_qe

!	ctask	||	!	ctask	->	sc

(	hba	->	num_ccell	&	0xFFFF	)	|	(	hba	->	max_sqes	<<	16	)

4	-	(	pld_len	%	4	)

4	-	(	pld_len	%	4	)

!	task	||	!	task	->	sc

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

ret	!=	-	1

(	(	char	*	)	cdev	->	ports	)	+	nports	*	sizeof	(	struct	net_device	*	)

(	(	char	*	)	cdev	->	hbas	)	+	nports	*	sizeof	(	struct	cxgbi_hba	*	)

++	idx	>=	pmap	->	max_connect

idx	<	0	||	idx	>=	pmap	->	max_connect

csk	->	wr_una_cred	>	csk	->	wr_max_cred	-	csk	->	wr_cred

csk	->	advmss	>	pmtu	-	40

csk	->	wr_cred	+	pending	!=	csk	->	wr_max_cred

csk	->	write_seq	-	csk	->	snd_una	>=	cdev	->	snd_win

skb_shinfo	(	skb	)	->	nr_frags	+	(	skb	->	len	!=	skb	->	data_len	)
skb_shinfo	(	skb	)	->	nr_frags	+	skb	->	len	!=	skb	->	data_len
(	max	-	start	)	<	count

sgpage	==	page	&&	sg	->	offset	==	sgoffset	+	sglen

j	==	gl	->	nelem	||	sg	->	offset

!	gl	||	!	gl	->	nelem

idx	<	0	&&	ddp	->	idx_last	>=	npods

(	1	<<	(	bits	-	1	)	)	-	1
1	<<	(	bits	-	1	)	-	1
(	1	<<	bits	)	-	1
1	<<	bits	-	1
(	1	<<	cdev	->	tag_format	.	rsvd_bits	)	-	1
1	<<	cdev	->	tag_format	.	rsvd_bits	-	1
!	conn	||	conn	->	suspend_rx

!	err	&&	conn	->	hdrdgst_en

!	err	&&	conn	->	datadgst_en

(	(	unsigned	int	)	csk	->	atid	)	|	(	(	(	unsigned	int	)	csk	->	rss_qid	)	<<	14	)

(	3	*	n	)	/	2	+	(	n	&	1	)	+	2
(	3	*	n	)	/	2	+	n	&	1	+	2
cxgb4i_rcv_win	>	(	RCV_BUFSIZ_MASK	<<	10	)

cxgb4i_rcv_win	-	(	RCV_BUFSIZ_MASK	<<	10	)
cxgb4i_rcv_win	-	RCV_BUFSIZ_MASK	<<	10
ntohl	(	*	(	unsigned	int	*	)	(	bhs	+	4	)	)	&	0xFFFFFF

(	hlen	+	dlen	)	!=	ISCSI_PDU_LEN	(	pdu_len_ddp	)	-	40

(	hlen	+	dlen	+	3	)	&	(	~	0x3	)

(	(	cxgb4_port_viid	(	ndev	)	&	0x7F	)	)	<<	1

!	hdr	&&	!	gl

!	hcrc	&&	!	dcrc

skb_shinfo	(	skb	)	->	nr_frags	+	(	len	!=	skb	->	data_len	)
skb_shinfo	(	skb	)	->	nr_frags	+	len	!=	skb	->	data_len
(	req_completion	&&	csk	->	wr_una_cred	==	wrs_needed	)	||	csk	->	wr_una_cred	>=	csk	->	wr_max_cred	/	2

chba	->	vdev	&&	chba	->	ipv4addr	!=	cxgb3i_get_private_ipv4addr	(	chba	->	vdev	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

status	&&	!	dev	->	in_reset	&&	dev	->	queues	&&	dev	->	fsa_dev

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

--	count	==	0

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

--	idx	==	0

wait	&&	!	reply

!	wait	&&	reply

!	wait	&&	!	reply

--	count	==	0

wait	==	-	1

wait	==	-	1

(	le32_to_cpu	(	*	q	->	headers	.	producer	)	+	1	)	==	le32_to_cpu	(	*	q	->	headers	.	consumer	)

!	dev	||	!	dev	->	fsa_dev

!	dev	||	!	dev	->	scsi_host_ptr

(	host	->	sg_tablesize	*	8	)	+	112

(	host	->	sg_tablesize	*	8	)	+	112

!	ret	&&	!	dev	->	queues

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

*	(	__le16	*	)	(	buf	+	0x40	)	==	cpu_to_le16	(	0xaa55	)

num	<	4	&&	end_sec	==	param	->	sectors

end_head	>	0	||	end_sec	>	0

aac	->	jbod	&&	(	sdev	->	type	==	TYPE_DISK	)

sdev	->	tagged_supported	&&	(	sdev	->	type	==	TYPE_DISK	)	&&	(	!	aac	->	raid_scsi_mode	||	(	sdev_channel	(	sdev	)	!=	2	)	)	&&	!	sdev	->	no_uld_attach
sdev	->	tagged_supported	&&	(	sdev	->	type	==	TYPE_DISK	)	&&	!	aac	->	raid_scsi_mode	||	(	sdev_channel	(	sdev	)	!=	2	)	&&	!	sdev	->	no_uld_attach
dev	->	tagged_supported	&&	(	dev	->	type	==	TYPE_DISK	)	&&	(	!	aac	->	raid_scsi_mode	||	(	sdev_channel	(	sdev	)	!=	2	)	)	&&	!	dev	->	no_uld_attach
dev	->	tagged_supported	&&	(	dev	->	type	==	TYPE_DISK	)	&&	!	aac	->	raid_scsi_mode	||	(	sdev_channel	(	sdev	)	!=	2	)	&&	!	dev	->	no_uld_attach
(	host	->	can_queue	-	num_one	)	/	num_lsu
host	->	can_queue	-	num_one	/	num_lsu
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

!	scsicmd	||	!	scsicmd	->	scsi_done

!	device	||	!	scsi_device_online	(	device	)

(	aac_commit	==	1	)	||	commit_flag

(	inq_data	&	0x20	)	&&	(	inq_data	&	0x1f	)	==	TYPE_DISK
(	inq_data	&	0x20	)	&&	inq_data	&	0x1f	==	TYPE_DISK
++	index	>=	status

--	count	>	0

(	fsa_dev_ptr	->	valid	&	1	)	==	0
fsa_dev_ptr	->	valid	&	1	==	0
(	fsa_dev_ptr	->	valid	&	1	)	==	0
fsa_dev_ptr	->	valid	&	1	==	0
!	scsicmd	||	!	scsidev

nondasd	!=	-	1

dacmode	!=	-	1

!	pci_set_dma_mask	(	dev	->	pdev	,	DMA_BIT_MASK	(	64	)	)	&&	!	pci_set_consistent_dma_mask	(	dev	->	pdev	,	DMA_BIT_MASK	(	64	)	)

!	pci_set_dma_mask	(	dev	->	pdev	,	DMA_BIT_MASK	(	32	)	)	&&	!	pci_set_consistent_dma_mask	(	dev	->	pdev	,	DMA_BIT_MASK	(	32	)	)

(	dev	->	scsi_host_ptr	->	sg_tablesize	*	8	)	+	112

dev	->	raw_io_interface	&&	(	(	aac_cache	&	5	)	!=	1	)
dev	->	raw_io_interface	&&	(	aac_cache	&	5	!=	1	)
(	aac_cache	&	6	)	==	2
aac_cache	&	6	==	2
dev	->	raw_io_interface	&&	(	(	aac_cache	&	5	)	!=	1	)
dev	->	raw_io_interface	&&	(	aac_cache	&	5	!=	1	)
(	aac_cache	&	6	)	==	2
aac_cache	&	6	==	2
(	(	aac_cache	&	6	)	==	6	)	&&	dev	->	cache_protected
(	aac_cache	&	6	==	6	)	&&	dev	->	cache_protected
(	aac_cache	&	6	)	!=	2
aac_cache	&	6	!=	2
scmd_id	(	scsicmd	)	>=	dev	->	maximum_num_physicals	||	scsicmd	->	device	->	lun	>	7

scsicmd	->	underflow	&&	(	byte_count	<	scsicmd	->	underflow	)

scsicmd	->	underflow	&&	(	byte_count	<	scsicmd	->	underflow	)

scsicmd	->	underflow	&&	(	byte_count	<	scsicmd	->	underflow	)

!	isci_device	||	!	old_request

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

iport	->	active_phy_mask	&	(	1	<<	iphy	->	phy_index	)

~	(	1	<<	iphy	->	phy_index	)
~	1	<<	iphy	->	phy_index
~	(	1	<<	iphy	->	phy_index	)
~	1	<<	iphy	->	phy_index
(	port_agent	->	phy_configured_mask	==	0x0000	)	&&	(	port_agent	->	phy_ready_mask	!=	0x0000	)	&&	!	port_agent	->	timer_pending

~	(	1	<<	iphy	->	phy_index	)
~	1	<<	iphy	->	phy_index
port_agent	->	phy_configured_mask	&	(	1	<<	iphy	->	phy_index	)

~	(	1	<<	iphy	->	phy_index	)
~	1	<<	iphy	->	phy_index
isci_phy	->	sas_phy	.	port	&&	isci_phy	->	sas_phy	.	port	->	num_phys	==	1

~	(	1	<<	iphy	->	phy_index	)
~	1	<<	iphy	->	phy_index
~	(	1	<<	iphy	->	phy_index	)
~	1	<<	iphy	->	phy_index
(	ihost	->	invalid_phy_mask	&	(	1	<<	iphy	->	phy_index	)	)	==	0
ihost	->	invalid_phy_mask	&	(	1	<<	iphy	->	phy_index	)	==	0
sgl_pair	->	B	.	address_lower	==	0	&&	sgl_pair	->	B	.	address_upper	==	0

sgl_pair	->	next_pair_lower	==	0	&&	sgl_pair	->	next_pair_upper	==	0

resp_iu	->	datapres	==	0x01	||	resp_iu	->	datapres	==	0x02

task	&&	sas_protocol_ata	(	task	->	task_proto	)	&&	!	task	->	ata_task	.	use_ncq

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

!	!	(	selection_byte	&	(	1	<<	phy	)	)
!	!	selection_byte	&	(	1	<<	phy	)
!	!	(	selection_byte	&	(	1	<<	(	phy	+	4	)	)	)
!	!	selection_byte	&	(	1	<<	(	phy	+	4	)	)
selection_byte	&	(	1	<<	phy	)

selection_byte	&	(	1	<<	(	phy	+	4	)	)

(	i	<<	2	)	+	2
i	<<	2	+	2
instance	==	-	1

targ	==	-	1

targ	!=	-	1

instance	!=	-	1

instance	==	-	1

(	tok_end2	)	&&	(	tok_end2	<	tok_end	)

(	ahc	->	user_discenable	&	devinfo	->	target_mask	)	!=	0
ahc	->	user_discenable	&	devinfo	->	target_mask	!=	0
cmd	->	device	->	id	+	cmd	->	device	->	channel	*	8

tinfo	->	curr	.	period	!=	tinfo	->	goal	.	period	||	tinfo	->	curr	.	width	!=	tinfo	->	goal	.	width	||	tinfo	->	curr	.	offset	!=	tinfo	->	goal	.	offset	||	tinfo	->	curr	.	ppr_options	!=	tinfo	->	goal	.	ppr_options

tinfo	->	curr	.	period	==	spi_period	(	starget	)	&&	tinfo	->	curr	.	width	==	spi_width	(	starget	)	&&	tinfo	->	curr	.	offset	==	spi_offset	(	starget	)	&&	tinfo	->	curr	.	ppr_options	==	target_ppr_options

info	->	pos	+	len	>	info	->	offset	+	info	->	length

info	->	pos	+	len	<	info	->	offset

8	*	(	0x01	<<	tinfo	->	width	)
8	*	0x01	<<	tinfo	->	width
scb	->	sg_list_phys	+	(	sg_index	*	sizeof	(	*	scb	->	sg_list	)	)

(	scb	->	hscb	-	ahc	->	hscbs	)	*	sizeof	(	*	scb	->	hscb	)
scb	->	hscb	-	ahc	->	hscbs	*	sizeof	(	*	scb	->	hscb	)
(	ahc	->	qoutfifonext	&	0x03	)	==	0x03
ahc	->	qoutfifonext	&	0x03	==	0x03
--	wait	!=	0

!	dowide	&&	!	dosync	&&	!	doppr

!	dowide	&&	!	dosync	&&	!	doppr

doppr	||	(	dosync	&&	!	dowide	)

ahc	->	msgout_index	==	(	ahc	->	msgout_len	-	1	)

info	->	pos	+	len	>	info	->	offset	+	info	->	length

info	->	pos	+	len	<	info	->	offset

8	*	(	0x01	<<	tinfo	->	width	)
8	*	0x01	<<	tinfo	->	width
(	instance	>=	0	)	&&	(	instance	<	ARRAY_SIZE	(	aic79xx_iocell_info	)	)

instance	==	-	1

targ	==	-	1

targ	!=	-	1

instance	!=	-	1

instance	==	-	1

(	tok_end2	)	&&	(	tok_end2	<	tok_end	)

(	ahd	->	user_discenable	&	devinfo	->	target_mask	)	!=	0
ahd	->	user_discenable	&	devinfo	->	target_mask	!=	0
tinfo	->	curr	.	period	!=	tinfo	->	goal	.	period	||	tinfo	->	curr	.	width	!=	tinfo	->	goal	.	width	||	tinfo	->	curr	.	offset	!=	tinfo	->	goal	.	offset	||	tinfo	->	curr	.	ppr_options	!=	tinfo	->	goal	.	ppr_options

tinfo	->	curr	.	period	==	spi_period	(	starget	)	&&	tinfo	->	curr	.	width	==	spi_width	(	starget	)	&&	tinfo	->	curr	.	offset	==	spi_offset	(	starget	)	&&	tinfo	->	curr	.	ppr_options	==	target_ppr_options

sense	->	extra_len	>=	5	&&	(	sense	->	add_sense_code	==	0x47	||	sense	->	add_sense_code	==	0x48	)
sense	->	extra_len	>=	5	&&	sense	->	add_sense_code	==	0x47	||	sense	->	add_sense_code	==	0x48
sum	<	2	||	(	enableSEC_low	!=	0	)

--	wait	&&	(	(	SEEPROM_STATUS_INB	(	sd	)	&	sd	->	sd_RDY	)	==	0	)
--	wait	&&	(	SEEPROM_STATUS_INB	(	sd	)	&	sd	->	sd_RDY	==	0	)
(	SEEPROM_STATUS_INB	(	sd	)	&	sd	->	sd_RDY	)	==	0
SEEPROM_STATUS_INB	(	sd	)	&	sd	->	sd_RDY	==	0
retval	==	-	1

num_tabs	--	>	0

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	!	cmd	->	abort_aen	)	&&	(	instance	->	unload	==	0	)

(	instance	->	unload	==	0	)	&&	(	(	instance	->	issuepend_done	==	1	)	)

i	<	(	10	*	1000	)

(	readl	(	&	instance	->	reg_set	->	outbound_scratch_pad_2	)	&	0x1F	)	+	1
readl	(	&	instance	->	reg_set	->	outbound_scratch_pad_2	)	&	0x1F	+	1
ctrl_info	&&	!	megasas_get_ctrl_info	(	instance	,	ctrl_info	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

!	fusion	->	sg_dma_pool	||	!	fusion	->	sense_dma_pool

i	<	(	10	*	1000	)

(	instance	->	map_id	-	1	)	&	1

sge_count	>	instance	->	max_num_sge	||	!	sge_count

(	sg_processed	==	(	fusion	->	max_sge_in_main_msg	-	1	)	)	&&	(	sge_count	>	fusion	->	max_sge_in_main_msg	)

index	<	0	||	index	>=	pool	->	size

pool	->	iu_token	+	(	sizeof	(	*	evt	->	xfer_iu	)	*	i	)

req_seg	>	1	||	rsp_seg	>	1

evt	->	cmnd	&&	scsi_target	(	evt	->	cmnd	->	device	)	==	device

evt	->	cmnd	&&	evt	->	cmnd	->	device	==	device

!	cancel_rc	&&	!	abort_rc

!	cancel_rc	&&	!	reset_rc

!	cancel_rc	&&	!	reset_rc

++	async_crq	->	cur	==	async_crq	->	size

++	queue	->	cur	==	queue	->	size

tgt	->	ids	.	port_name	&&	tgt	->	ids	.	port_name	!=	wwn_to_u64	(	rsp	->	service_parms	.	port_name	)

++	queue	->	cur	==	queue	->	size

pool	->	iu_token	+	sizeof	(	*	evt	->	xfer_iu	)	*	i

index	<	0	||	index	>=	pool	->	size

(	offset	+	1	)	%	poolsize
offset	+	1	%	poolsize
request_status	<	-	1

srp_req	&&	request_status	!=	-	1

(	(	cmnd	->	result	>>	1	)	&	0x1f	)	==	CHECK_CONDITION
(	cmnd	->	result	>>	1	)	&	0x1f	==	CHECK_CONDITION
(	0x2	<<	14	)	|	(	dev	->	id	<<	8	)	|	(	dev	->	channel	<<	5	)	|	dev	->	lun

i	<	nmd	&&	rest

++	queue	->	cur	==	queue	->	size

!	dma	||	dma_size	!=	40

(	latency	+	phba	->	bucket_step	-	1	-	phba	->	bucket_base	)	/	phba	->	bucket_step
latency	+	phba	->	bucket_step	-	1	-	phba	->	bucket_base	/	phba	->	bucket_step
!	sgpe	||	!	sgde

(	pde7	->	addrLow	&	0xfff	)	+	protgroup_len	>	0x1000
pde7	->	addrLow	&	0xfff	+	protgroup_len	>	0x1000
0x1000	-	(	pde7	->	addrLow	&	0xfff	)
0x1000	-	pde7	->	addrLow	&	0xfff
(	subtotal	+	remainder	)	<=	protgrp_bytes

(	subtotal	+	remainder	)	==	protgrp_bytes

!	sgpe	||	!	sgde

(	sgl	->	addr_lo	&	0xfff	)	+	protgroup_len	>	0x1000
sgl	->	addr_lo	&	0xfff	+	protgroup_len	>	0x1000
0x1000	-	(	sgl	->	addr_lo	&	0xfff	)
0x1000	-	sgl	->	addr_lo	&	0xfff
(	subtotal	+	remainder	)	<=	protgrp_bytes

(	subtotal	+	remainder	)	==	protgrp_bytes

!	pnode	||	!	NLP_CHK_NODE_ACT	(	pnode	)

!	pnode	||	!	NLP_CHK_NODE_ACT	(	pnode	)

!	ndlp	||	!	NLP_CHK_NODE_ACT	(	ndlp	)

hbq_entry	->	tag	==	-	1

!	pcmd	||	!	pcmd	->	virt

!	prsp	||	!	prsp	->	virt

!	pbuflist	||	!	pbuflist	->	virt

!	ndlp	||	!	NLP_CHK_NODE_ACT	(	ndlp	)

!	ndlp	||	!	NLP_CHK_NODE_ACT	(	ndlp	)

(	phba	->	fc_edtov	+	999999	)	/	1000000
phba	->	fc_edtov	+	999999	/	1000000
(	be32_to_cpu	(	sp	->	cmn	.	w2	.	r_a_tov	)	+	999	)	/	1000
be32_to_cpu	(	sp	->	cmn	.	w2	.	r_a_tov	)	+	999	/	1000
(	(	sp	->	cmn	.	bbRcvSizeMsb	&	0x0F	)	<<	8	)	|	sp	->	cmn	.	bbRcvSizeLsb
(	sp	->	cmn	.	bbRcvSizeMsb	&	0x0F	<<	8	)	|	sp	->	cmn	.	bbRcvSizeLsb
new_ndlp	==	ndlp	&&	NLP_CHK_NODE_ACT	(	new_ndlp	)

!	ndlp	||	!	NLP_CHK_NODE_ACT	(	ndlp	)	||	ndlp	!=	rrq	->	ndlp

!	ndlp	||	!	NLP_CHK_NODE_ACT	(	ndlp	)

!	ndlp	||	!	NLP_CHK_NODE_ACT	(	ndlp	)	||	lpfc_els_chk_latt	(	vport	)

!	ndlp	||	!	NLP_CHK_NODE_ACT	(	ndlp	)

!	ndlp	||	!	NLP_CHK_NODE_ACT	(	ndlp	)

!	vport	||	!	(	elsiocb	->	context2	)

!	mp	||	!	mp	->	virt

!	mp	||	!	mp	->	virt

!	mp	||	!	mp	->	virt

(	pring	->	numCiocb	==	0	)	||	(	pring	->	numRiocb	==	0	)

phba	->	cfg_hostmem_hgp	&&	phba	->	sli_rev	!=	3

!	mp	||	!	mp	->	virt

(	(	phba	->	fc_ratov	*	3	)	+	3	)	*	1000
(	phba	->	fc_ratov	*	3	)	+	3	*	1000
(	phba	->	sli_rev	<	3	)	||	!	(	phba	->	cfg_enable_npiv	)

(	sp	->	cmn	.	bbRcvSizeMsb	&	0xF0	)	|	(	hsp	->	cmn	.	bbRcvSizeMsb	&	0x0F	)

(	(	sp	->	cmn	.	bbRcvSizeMsb	&	0x0F	)	<<	8	)	|	sp	->	cmn	.	bbRcvSizeLsb
(	sp	->	cmn	.	bbRcvSizeMsb	&	0x0F	<<	8	)	|	sp	->	cmn	.	bbRcvSizeLsb
(	(	sp	->	cmn	.	bbRcvSizeMsb	&	0x0F	)	<<	8	)	|	sp	->	cmn	.	bbRcvSizeLsb
(	sp	->	cmn	.	bbRcvSizeMsb	&	0x0F	<<	8	)	|	sp	->	cmn	.	bbRcvSizeLsb
!	ndlp	||	!	NLP_CHK_NODE_ACT	(	ndlp	)

4	-	(	len	&	3	)
4	-	len	&	3
4	-	(	len	&	3	)
4	-	len	&	3
4	-	(	len	&	3	)
4	-	len	&	3
4	-	(	len	&	3	)
4	-	len	&	3
4	-	(	len	&	3	)
4	-	len	&	3
4	-	(	len	&	3	)
4	-	len	&	3
4	-	(	len	&	3	)
4	-	len	&	3
4	-	(	len	&	3	)
4	-	len	&	3
4	-	(	len	&	3	)
4	-	len	&	3
4	-	(	len	&	3	)
4	-	len	&	3
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

cnt	++	>	500

(	j	<<	4	)	|	value

(	j	<<	4	)	|	value

val	>=	LPFC_MIN_DEVLOSS_TMO	&&	val	<=	LPFC_MAX_DEVLOSS_TMO

vport	->	dev_loss_tmo_changed	||	(	lpfc_devloss_tmo	!=	LPFC_DEF_DEVLOSS_TMO	)

val	>=	LPFC_MIN_DEVLOSS_TMO	&&	val	<=	LPFC_MAX_DEVLOSS_TMO

val	>=	LPFC_MIN_DEVLOSS_TMO	&&	val	<=	LPFC_MAX_DEVLOSS_TMO

val	<	0	||	val	>	1

val	<	0	||	val	>	1

val	>=	0	&&	val	<=	6

val	==	0	||	val	==	1

!	ndlp	||	!	NLP_CHK_NODE_ACT	(	ndlp	)

!	reqbfrcnt	||	(	reqbfrcnt	>	(	80	*	BUF_SZ_4K	)	)

i	++	>	500

!	cmdiocbq	||	!	rxbmp	||	!	rxbpl	||	!	rxbuffer

!	cmdiocbq	||	!	txbmp	||	!	txbpl	||	!	txbuffer	||	!	txbmp	->	virt

mbox_req	->	extMboxTag	==	0	&&	mbox_req	->	extSeqNum	==	0

mbox_req	->	extSeqNum	!=	phba	->	mbox_ext_buf_ctx	.	seqNum	+	1

!	dmabuf	||	!	dmabuf	->	virt

!	ndlp	||	!	NLP_CHK_NODE_ACT	(	ndlp	)

!	ndlp	||	!	NLP_CHK_NODE_ACT	(	ndlp	)

(	phba	->	fc_eventTag	<	la	->	eventTag	)	||	(	phba	->	fc_eventTag	==	la	->	eventTag	)

ndlp	->	rport	&&	ndlp	->	rport	->	dd_data	&&	(	(	struct	lpfc_rport_data	*	)	ndlp	->	rport	->	dd_data	)	->	pnode	==	ndlp

!	rport	||	!	get_device	(	&	rport	->	dev	)

ndlp	->	nlp_state	&&	!	list_empty	(	&	ndlp	->	nlp_listp	)

ndlp	->	nlp_state	&&	!	list_empty	(	&	ndlp	->	nlp_listp	)

!	NLP_CHK_NODE_ACT	(	ndlp	)	||	NLP_CHK_FREE_ACK	(	ndlp	)

!	mod	->	num_rports	||	(	mod	->	num_rports	&	(	mod	->	num_rports	-	1	)	)

mod	->	free_sgpgs	&&	!	list_empty	(	&	mod	->	sgpg_wait_q	)

fdmi	->	retry_cnt	++	<	BFA_FCS_FDMI_CMD_MAX_RETRIES

fdmi	->	retry_cnt	++	<	BFA_FCS_FDMI_CMD_MAX_RETRIES

fdmi	->	retry_cnt	++	<	BFA_FCS_FDMI_CMD_MAX_RETRIES

ms	->	retry_cnt	++	<	BFA_FCS_MS_CMD_MAX_RETRIES

ms	->	retry_cnt	++	<	BFA_FCS_MS_CMD_MAX_RETRIES

(	!	port	->	vport	)	&&	bfa_ioc_get_fcmode	(	&	port	->	fcs	->	bfa	->	ioc	)

(	qe	!=	qh	)	&&	(	i	<	nrports	)

(	qe	!=	qh	)	&&	(	i	<	*	nrports	)

(	ad_attr	->	nports	>	1	)	&&	!	bfa_ioc_is_cna	(	ioc	)	&&	!	ad_attr	->	is_mezz

file	->	f_pos	<	0	||	file	->	f_pos	>	debug	->	buffer_len

!	debug	||	!	debug	->	debug_buffer

(	be16_to_cpu	(	prlo	->	payload_len	)	-	4	)	/	16
be16_to_cpu	(	prlo	->	payload_len	)	-	4	/	16
(	be16_to_cpu	(	tprlo	->	payload_len	)	-	4	)	/	16
be16_to_cpu	(	tprlo	->	payload_len	)	-	4	/	16
(	num_pages	*	16	)	+	4

(	num_pages	*	16	)	+	4

(	num_pages	*	16	)	+	4

(	num_pages	*	16	)	+	4

(	num_pages	*	16	)	+	4

(	num_pages	*	16	)	+	4

(	(	be16_to_cpu	(	prlo	->	payload_len	)	)	-	4	)	/	16
(	be16_to_cpu	(	prlo	->	payload_len	)	)	-	4	/	16
(	num_pages	*	16	)	+	4

(	num_pages	*	16	)	+	4

(	be16_to_cpu	(	tprlo	->	payload_len	)	-	4	)	/	16
be16_to_cpu	(	tprlo	->	payload_len	)	-	4	/	16
!	vp_drv	&&	!	vf_drv

!	vp_drv	&&	vf_drv

vp_drv	&&	!	vf_drv

(	pci_set_dma_mask	(	pdev	,	DMA_BIT_MASK	(	64	)	)	!=	0	)	||	(	pci_set_consistent_dma_mask	(	pdev	,	DMA_BIT_MASK	(	64	)	)	!=	0	)

(	pci_set_dma_mask	(	pdev	,	DMA_BIT_MASK	(	32	)	)	!=	0	)	||	(	pci_set_consistent_dma_mask	(	pdev	,	DMA_BIT_MASK	(	32	)	)	!=	0	)

(	bfa_asic_id_ctc	(	pdev	->	device	)	&&	!	msix_disable_ct	)	||	(	bfa_asic_id_cb	(	pdev	->	device	)	&&	!	msix_disable_cb	)

(	nvecs	!=	1	)	&&	(	nvecs	!=	__HFN_NUMINTS	)

itnim	->	fcpim	->	path_tov	&&	itnim	->	iotov_active	&&	(	bfa_sm_cmp_state	(	itnim	,	bfa_itnim_sm_fwcreate	)	||	bfa_sm_cmp_state	(	itnim	,	bfa_itnim_sm_sler	)	||	bfa_sm_cmp_state	(	itnim	,	bfa_itnim_sm_cleanup_offline	)	||	bfa_sm_cmp_state	(	itnim	,	bfa_itnim_sm_fwdelete	)	||	bfa_sm_cmp_state	(	itnim	,	bfa_itnim_sm_offline	)	||	bfa_sm_cmp_state	(	itnim	,	bfa_itnim_sm_iocdisable	)	)
itnim	->	fcpim	->	path_tov	&&	itnim	->	iotov_active	&&	bfa_sm_cmp_state	(	itnim	,	bfa_itnim_sm_fwcreate	)	||	bfa_sm_cmp_state	(	itnim	,	bfa_itnim_sm_sler	)	||	bfa_sm_cmp_state	(	itnim	,	bfa_itnim_sm_cleanup_offline	)	||	bfa_sm_cmp_state	(	itnim	,	bfa_itnim_sm_fwdelete	)	||	bfa_sm_cmp_state	(	itnim	,	bfa_itnim_sm_offline	)	||	bfa_sm_cmp_state	(	itnim	,	bfa_itnim_sm_iocdisable	)
!	(	ioim	->	iotag	<	(	fcpim	->	fcp	->	num_ioim_reqs	+	fcpim	->	fcp	->	num_fwtio_reqs	)	)
!	ioim	->	iotag	<	(	fcpim	->	fcp	->	num_ioim_reqs	+	fcpim	->	fcp	->	num_fwtio_reqs	)
bfa_fcs_lport_is_online	(	rport	->	port	)	&&	(	!	BFA_FCS_PID_IS_WKA	(	rport	->	pid	)	)

!	rport	->	pwwn	&&	(	plogi_rsp	->	port_name	==	twin	->	pwwn	)

rport	->	pid	!=	0	&&	!	BFA_FCS_PID_IS_WKA	(	rport	->	pid	)

(	!	rport	->	pid	)	||	(	!	rport	->	pwwn	)

rpf	->	rpsc_retries	++	<	BFA_FCS_RPF_RETRIES

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

sas_ha	->	lldd_queue_size	==	-	1

!	hard_reset	&&	sas_try_ata_reset	(	asd_phy	)	==	0

ata_dev	&&	!	hard_reset

rates	->	minimum_linkrate	&&	rates	->	minimum_linkrate	<	phy	->	minimum_linkrate_hw

rates	->	maximum_linkrate	&&	rates	->	maximum_linkrate	>	phy	->	maximum_linkrate_hw

(	hs	<<	16	)	|	stat

sas_ha	->	lldd_queue_size	<	core	->	task_queue_size	+	1

--	can_queue	==	0

0	<=	single	&&	single	<	ex	->	num_phys

!	dev	->	parent	&&	(	SAS_ADDR	(	ex_phy	->	attached_sas_addr	)	==	SAS_ADDR	(	dev	->	port	->	sas_addr	)	)

dev	->	parent	&&	(	SAS_ADDR	(	ex_phy	->	attached_sas_addr	)	==	SAS_ADDR	(	dev	->	parent	->	sas_addr	)	)

0	<=	single	&&	single	<	end

(	(	SAS_ADDR	(	parent	->	port	->	disc	.	eeds_a	)	==	SAS_ADDR	(	parent	->	sas_addr	)	)	||	(	SAS_ADDR	(	parent	->	port	->	disc	.	eeds_a	)	==	SAS_ADDR	(	child	->	sas_addr	)	)	)	&&	(	(	SAS_ADDR	(	parent	->	port	->	disc	.	eeds_b	)	==	SAS_ADDR	(	parent	->	sas_addr	)	)	||	(	SAS_ADDR	(	parent	->	port	->	disc	.	eeds_b	)	==	SAS_ADDR	(	child	->	sas_addr	)	)	)
(	(	SAS_ADDR	(	parent	->	port	->	disc	.	eeds_a	)	==	SAS_ADDR	(	parent	->	sas_addr	)	)	||	(	SAS_ADDR	(	parent	->	port	->	disc	.	eeds_a	)	==	SAS_ADDR	(	child	->	sas_addr	)	)	)	&&	(	SAS_ADDR	(	parent	->	port	->	disc	.	eeds_b	)	==	SAS_ADDR	(	parent	->	sas_addr	)	)	||	(	SAS_ADDR	(	parent	->	port	->	disc	.	eeds_b	)	==	SAS_ADDR	(	child	->	sas_addr	)	)
ex_change_count	!=	-	1	&&	ex_change_count	!=	ex	->	ex_change_count

phy_id	!=	-	1

res	==	0	&&	dev

phy_id	==	-	1

req	->	bio	->	bi_vcnt	>	1	||	rsp	->	bio	->	bi_vcnt	>	1

~	(	1U	<<	phy	->	id	)
~	1U	<<	phy	->	id
(	1	<<	5	)	-	1
1	<<	5	-	1
blk_rq_bytes	(	req	)	<	8	||	blk_rq_bytes	(	rsp	)	<	8

blk_rq_bytes	(	req	)	<	base_frame_size	+	to_write	*	4	||	req	->	resid_len	<	base_frame_size	+	to_write	*	4

base_frame_size	+	to_write	*	4

!	port	&&	phy	->	enabled	&&	i	->	dft	->	lldd_control_phy

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

level	!=	0	&&	!	(	level	&	level_mask	)
level	!=	0	&&	!	level	&	level_mask
level	!=	0	&&	!	(	level	&	level_mask	)
level	!=	0	&&	!	level	&	level_mask
level	!=	0	&&	!	(	level	&	level_mask	)
level	!=	0	&&	!	level	&	level_mask
(	ph_ptr	+	1	)	&	(	PH_SIZE	-	1	)

(	cmd_ptr	+	1	)	&	7

(	i	+	1	)	&	(	PH_SIZE	-	1	)

(	(	i	^	ph_ptr	)	&	7	)	==	0
i	^	ph_ptr	&	7	==	0
(	i	^	ph_ptr	)	&	7
i	^	ph_ptr	&	7
(	i	+	1	)	&	7

!	next_SCp	(	SCp	)	&&	bytes_transferred

cfis	<	2	||	cfis	>	4

msgbyte	==	-	3

tot_msglen	==	1	||	tot_msglen	==	3

~	(	255	<<	16	)
~	255	<<	16
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

*	addr	|	*	(	addr	+	1	)	<<	8
*	addr	|	*	addr	+	1	<<	8
transfer	&&	(	transfer	&	255	)

--	length	>	0

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

transfer	&&	(	transfer	&	255	)

!	(	status	&	STATUS_DRQ	)
!	status	&	STATUS_DRQ
!	(	status	&	STATUS_DRQ	)
!	status	&	STATUS_DRQ
--	length	>	0

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

!	(	status	&	EESOX_STAT_DMA	)
!	status	&	EESOX_STAT_DMA
!	(	status	&	EESOX_STAT_DMA	)
!	status	&	EESOX_STAT_DMA
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

q	++	,	nqueues	--

status	&	0x200	||	!	timeout

n	--	>	0

(	r	&	bit	)	==	val
r	&	bit	==	val
(	r	&	bit	)	==	val
r	&	bit	==	val
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	asr	&	stat_mask	)	==	stat
asr	&	stat_mask	==	stat
(	ssr	&	0xf0	)	>>	4
ssr	&	0xf0	>>	4
start_addr	&	(	(	1	<<	12	)	-	1	)
start_addr	&	(	1	<<	12	-	1	)
len	+	offset	>	(	1	<<	12	)

(	1	<<	12	)	-	offset
1	<<	12	-	offset
offset	==	(	1	<<	12	)

start_addr	&	(	(	1	<<	12	)	-	1	)
start_addr	&	(	1	<<	12	-	1	)
len	+	offset	>	(	1	<<	12	)

(	1	<<	12	)	-	offset
1	<<	12	-	offset
offset	==	(	1	<<	12	)

--	timeout	==	0

!	(	status	&	0x40	)
!	status	&	0x40
--	len	==	0

--	len	==	0

!	(	status	&	0x40	)
!	status	&	0x40
--	len	==	0

--	len	==	0

n	--	>	0

(	r	&	bit	)	==	val
r	&	bit	==	val
(	r	&	bit	)	==	val
r	&	bit	==	val
ARRAY_SIZE	(	fnic	->	msix_entry	)	<	n	+	m	+	o	+	1

i	<	n	+	m	+	o	+	1

fnic	->	rq_count	>=	n	&&	fnic	->	raw_wq_count	>=	m	&&	fnic	->	wq_copy_count	>=	o	&&	fnic	->	cq_count	>=	n	+	m	+	o

!	pci_enable_msix	(	fnic	->	pdev	,	fnic	->	msix_entry	,	n	+	m	+	o	+	1	)

fnic	->	rq_count	>=	1	&&	fnic	->	raw_wq_count	>=	1	&&	fnic	->	wq_copy_count	>=	1	&&	fnic	->	cq_count	>=	3	&&	fnic	->	intr_count	>=	1	&&	!	pci_enable_msi	(	fnic	->	pdev	)

fnic	->	rq_count	>=	1	&&	fnic	->	raw_wq_count	>=	1	&&	fnic	->	wq_copy_count	>=	1	&&	fnic	->	cq_count	>=	3	&&	fnic	->	intr_count	>=	3

qd	==	-	1

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

!	rport	||	fc_remote_port_chkready	(	rport	)

32	*	4	+	2

!	seg	->	buff	||	!	seg	->	alloc_size

--	nelem	,	++	oa

(	*	iterator	<	or	->	get_attr	.	buff	)	||	(	or	->	get_attr	.	buff	+	or	->	get_attr	.	alloc_size	<	*	iterator	)

(	n	<	*	nelem	)	&&	(	cur_bytes	<	returned_bytes	)

!	set_one_attr	||	!	set_one_attr	->	attr_page

(	ssdb	->	response_code	!=	0x72	)	&&	(	ssdb	->	response_code	!=	0x73	)

len	*	4	+	2

!	name	||	!	*	name

od	&&	!	IS_ERR	(	od	)

!	oud	||	(	oud	->	od	.	scsi_device	!=	scsi_device	)

0x01	<<	(	15	-	x	)

~	(	0x01	<<	(	15	-	x	)	)
~	0x01	<<	(	15	-	x	)
(	(	1	<<	gen	)	*	(	4340	*	4	)	)	/	ms
(	1	<<	gen	*	(	4340	*	4	)	)	/	ms
np	->	multiplier	!=	mult	||	(	scntl3	&	7	)	<	3	||	!	(	scntl3	&	1	)
np	->	multiplier	!=	mult	||	scntl3	&	7	<	3	||	!	scntl3	&	1
f1	<	80000	&&	mult	>	1

(	scntl3	&	7	)	==	3
scntl3	&	7	==	3
(	scntl3	&	7	)	==	5
scntl3	&	7	==	5
div	--	>	0

~	(	0x3	<<	6	)
~	0x3	<<	6
--	i	>=	0

(	(	script_ofs	&	3	)	==	0	)	&&	(	unsigned	)	script_ofs	<	script_size
(	script_ofs	&	3	==	0	)	&&	(	unsigned	)	script_ofs	<	script_size
tp	->	tprint	.	period	!=	spi_period	(	starget	)	||	tp	->	tprint	.	offset	!=	spi_offset	(	starget	)	||	tp	->	tprint	.	width	!=	spi_width	(	starget	)	||	tp	->	tprint	.	iu	!=	spi_iu	(	starget	)	||	tp	->	tprint	.	dt	!=	spi_dt	(	starget	)	||	tp	->	tprint	.	qas	!=	spi_qas	(	starget	)	||	!	tp	->	tprint	.	check_nego

!	tp	->	tgoal	.	dt	&&	!	tp	->	tgoal	.	iu	&&	!	tp	->	tgoal	.	qas

phase	==	1	||	phase	==	5

(	target	==	-	1	||	cp	->	target	==	target	)	&&	(	lun	==	-	1	||	cp	->	lun	==	lun	)	&&	(	task	==	-	1	||	cp	->	tag	==	task	)
target	==	-	1	||	cp	->	target	==	target	&&	lun	==	-	1	||	cp	->	lun	==	lun	&&	task	==	-	1	||	cp	->	tag	==	task
(	i	-	j	)	/	2
i	-	j	/	2
target	==	-	1

target	!=	-	1

lun	!=	-	1

dp_ofs	+	(	tmp	&	0xffffff	)
dp_ofs	+	tmp	&	0xffffff
dp_sg	<	dp_sgmin	||	(	dp_sg	==	dp_sgmin	&&	dp_ofs	<	0	)

dp_sg	>	cp	->	ext_sg	||	(	dp_sg	==	cp	->	ext_sg	&&	dp_ofs	>	cp	->	ext_ofs	)

!	req	&&	chg

!	req	&&	!	opts

lp	->	busy_itl	!=	0	||	lp	->	busy_itlq	!=	0

!	cp	||	!	cp	->	cmd

!	cp	||	!	cp	->	cmd

!	np	->	scripta0	||	!	np	->	scriptb0	||	!	np	->	scriptz0

p	&&	(	xi	<	8	)

sts	==	-	2

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	char	*	)	p	+	num	*	sizeof	(	struct	vring_desc	)

~	(	align	-	1	)
~	align	-	1
(	(	sizeof	(	struct	vring_desc	)	*	num	+	sizeof	(	__virtio16	)	*	(	3	+	num	)	+	align	-	1	)	&	~	(	align	-	1	)	)	+	sizeof	(	__virtio16	)	*	3	+	sizeof	(	struct	vring_used_elem	)	*	num
(	(	sizeof	(	struct	vring_desc	)	*	num	+	sizeof	(	__virtio16	)	*	3	+	num	+	align	-	1	)	&	~	align	-	1	)	+	sizeof	(	__virtio16	)	*	3	+	sizeof	(	struct	vring_used_elem	)	*	num
(	__u16	)	(	new_idx	-	event_idx	-	1	)	<	(	__u16	)	(	new_idx	-	old	)

!	vring	->	num	||	!	vring	->	align

fw	->	size	<	ehdr	->	e_shoff	+	sizeof	(	struct	elf32_shdr	)

(	char	*	)	p	+	num	*	sizeof	(	struct	vring_desc	)

~	(	align	-	1	)
~	align	-	1
(	(	sizeof	(	struct	vring_desc	)	*	num	+	sizeof	(	__virtio16	)	*	(	3	+	num	)	+	align	-	1	)	&	~	(	align	-	1	)	)	+	sizeof	(	__virtio16	)	*	3	+	sizeof	(	struct	vring_used_elem	)	*	num
(	sizeof	(	struct	vring_desc	)	*	num	+	sizeof	(	__virtio16	)	*	(	3	+	num	)	+	align	-	1	)	&	~	align	-	1	+	sizeof	(	__virtio16	)	*	3	+	sizeof	(	struct	vring_used_elem	)	*	num
(	__u16	)	(	new_idx	-	event_idx	-	1	)	<	(	__u16	)	(	new_idx	-	old	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

gpio	->	irq_base	+	(	port	->	number	<<	3	)	+	irqoffset
gpio	->	irq_base	+	port	->	number	<<	3	+	irqoffset
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

desc	->	name	&&	!	strcmp	(	name	,	desc	->	name	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

map	->	data	.	configs	.	num_configs	&&	!	map	->	data	.	configs	.	configs

!	ops	||	!	ops	->	pin_config_get

!	ops	||	!	ops	->	pin_config_set

!	ops	||	!	ops	->	pin_config_group_get

!	ops	||	(	!	ops	->	pin_config_group_set	&&	!	ops	->	pin_config_set	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

!	pin_grp	->	npins	||	(	match_group_mux	(	pin_grp	,	info	,	pin_grp	->	mux	)	<	0	)

(	cur_temp	*	9	)	/	5	+	32

__nvram_read_byte	(	PC_CKS_LOC	)	<<	8	|	__nvram_read_byte	(	PC_CKS_LOC	+	1	)

(	sum	&	0xffff	)	==	expect
sum	&	0xffff	==	expect
(	i	+	1	)	<	count

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	NumCard	<	1	)	||	(	NumCard	>	MAX_BOARD	)

arg	>	4	||	arg	<	1

arg	>	4	||	arg	<	1

arg	>	31	||	arg	<	0

kfifo_out_locked	(	&	sonypi_device	.	input_fifo	,	(	unsigned	char	*	)	&	kp	,	sizeof	(	kp	)	,	&	sonypi_device	.	input_fifo_lock	)	==	sizeof	(	kp	)

!	SONYPI_ACPI_ACTIVE	&&	fnkeyinit

!	SONYPI_ACPI_ACTIVE	&&	fnkeyinit

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

cur_tsc	+	(	~	0ULL	-	hangcheck_tsc	)

(	g_dcc_buffer_head	+	1	)	%	ARRAY_SIZE	(	g_dcc_buffer	)
g_dcc_buffer_head	+	1	%	ARRAY_SIZE	(	g_dcc_buffer	)
(	g_dcc_buffer_head	+	g_dcc_buffer_count	)	%	ARRAY_SIZE	(	g_dcc_buffer	)
g_dcc_buffer_head	+	g_dcc_buffer_count	%	ARRAY_SIZE	(	g_dcc_buffer	)
copy_len	<	count	&&	copy_len	<	space_left

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

!	smd_pkt_devp	||	!	smd_pkt_devp	->	ch

smd_cur_packet_size	(	chl	)	>	0	&&	smd_read_avail	(	chl	)	>=	smd_cur_packet_size	(	chl	)

bytes_read	==	0	||	bytes_read	<	smd_read_avail	(	smd_pkt_devp	->	ch	)

--	smd_pkt_devp	->	open_count	==	0

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	regs	.	eax	>>	I8K_FN_SHIFT	)	&	I8K_FN_MASK

(	regs	.	eax	&	0xff	)	==	I8K_POWER_AC
regs	.	eax	&	0xff	==	I8K_POWER_AC
(	regs	.	eax	&	0xffff	)	*	fan_mult
regs	.	eax	&	0xffff	*	fan_mult
(	fan	&	0xff	)	|	(	speed	<<	8	)

regs	.	eax	==	1145651527	&&	regs	.	edx	==	1145392204

!	priv	->	dirty	||	priv	->	tag	<	0

(	ndays	+	4	)	%	7
ndays	+	4	%	7
p	<	64	*	1024	&&	(	!	gbWriteBase64Enable	)

count	>	gbFlashSize	-	p

(	(	int	)	(	p	+	count	)	>>	16	)	-	nBlock	+	1
(	int	)	(	p	+	count	)	>>	16	-	nBlock	+	1
(	(	int	)	(	p	+	count	)	&	0xFFFF	)	==	0
(	int	)	(	p	+	count	)	&	0xFFFF	==	0
temp	--	,	nBlock	++

rc	&&	i	<	10

FLASH_BASE	+	0x8000	+	(	nBlock	<<	16	)
FLASH_BASE	+	0x8000	+	nBlock	<<	16
FLASH_BASE	+	(	nBlock	<<	16	)
FLASH_BASE	+	nBlock	<<	16
temp	<	16	*	1024

*	event	++	!=	2

(	desc_end	!=	desc	)	&&	(	(	*	desc_end	==	0xd	)	||	(	*	desc_end	==	0xa	)	)
(	desc_end	!=	desc	)	&&	(	*	desc_end	==	0xd	)	||	(	*	desc_end	==	0xa	)
!	(	status	<	0	)
!	status	<	0
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

sizeof	(	struct	vma_data	)	+	pages	*	sizeof	(	long	)

vdata	->	type	==	MSPEC_FETCHOP	||	vdata	->	type	==	MSPEC_UNCACHED

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	period	+	sgi_clock_period	-	1	)	/	sgi_clock_period
period	+	sgi_clock_period	-	1	/	sgi_clock_period
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

cxt	->	virt_addr	+	(	cxt	->	count	*	cxt	->	record_size	)

(	cxt	->	count	+	1	)	%	cxt	->	max_count
cxt	->	count	+	1	%	cxt	->	max_count
!	tty	->	stopped	||	tty	->	flow_stopped

idx	<	0	||	idx	>=	tty	->	driver	->	num

--	o_tty	->	count	<	0

--	tty	->	count	<	0

!	tty_closing	||	(	o_tty	&&	!	o_tty_closing	)

retval	==	-	EIO

(	!	(	year	%	4	)	&&	(	year	%	100	)	)	||	!	(	year	%	400	)
(	!	(	year	%	4	)	&&	(	year	%	100	)	)	||	!	year	%	400
(	wtime	.	tm_mon	<	0	||	wtime	.	tm_mon	>	11	)	||	(	wtime	.	tm_mday	<	1	)

(	wtime	.	tm_mon	==	1	)	&&	leap_yr

wtime	.	tm_hour	<	0	||	wtime	.	tm_hour	>=	24	||	wtime	.	tm_min	<	0	||	wtime	.	tm_min	>=	60	||	wtime	.	tm_sec	<	0	||	wtime	.	tm_sec	>=	60

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

result	==	-	EBUSY

(	inb	(	TLCLK_REG1	)	&	0x08	)	>>	3
inb	(	TLCLK_REG1	)	&	0x08	>>	3
(	val	==	CLK_8kHz	)	||	(	val	==	CLK_16_384MHz	)

(	val	==	CLK_8kHz	)	||	(	val	==	CLK_16_384MHz	)

mtd	->	type	==	MTD_NANDFLASH	||	mtd	->	type	==	MTD_MLCNANDFLASH

!	(	pp	->	flags	&	PP_CLAIMED	)
!	pp	->	flags	&	PP_CLAIMED
pport	->	ieee1284	.	mode	&	~	(	IEEE1284_DEVICEID	|	IEEE1284_ADDR	)
pport	->	ieee1284	.	mode	&	~	IEEE1284_DEVICEID	|	IEEE1284_ADDR
!	(	pp	->	flags	&	PP_CLAIMED	)
!	pp	->	flags	&	PP_CLAIMED
pport	->	ieee1284	.	mode	&	~	(	IEEE1284_DEVICEID	|	IEEE1284_ADDR	)
pport	->	ieee1284	.	mode	&	~	IEEE1284_DEVICEID	|	IEEE1284_ADDR
(	pp	->	flags	&	PP_FASTWRITE	)	&&	(	mode	==	IEEE1284_MODE_EPP	)
pp	->	flags	&	PP_FASTWRITE	)	&&	(	mode	==	IEEE1284_MODE_EPP	(	pp	->	flags	&	PP_FASTWRITE	)	&&	(	mode	==	IEEE1284_MODE_EPP	)
mode	&	~	(	IEEE1284_DEVICEID	|	IEEE1284_ADDR	)
mode	&	~	IEEE1284_DEVICEID	|	IEEE1284_ADDR
(	pp	->	flags	&	PP_CLAIMED	)	==	0
pp	->	flags	&	PP_CLAIMED	==	0
!	(	pp	->	flags	&	PP_CLAIMED	)	&&	pp	->	pdev	&&	(	pp	->	state	.	mode	!=	IEEE1284_MODE_COMPAT	)
(	pp	->	flags	&	PP_CLAIMED	)	&&	pp	->	pdev	&&	(	pp	->	state	.	mode	!=	IEEE1284_MODE_COMPAT	!	(	pp	->	flags	&	PP_CLAIMED	)	&&	pp	->	pdev	&&	(	pp	->	state	.	mode	!=	IEEE1284_MODE_COMPAT	)
(	pp	->	flags	&	PP_CLAIMED	)	&&	pp	->	pdev	&&	(	pp	->	pdev	->	port	->	ieee1284	.	mode	!=	IEEE1284_MODE_COMPAT	)
pp	->	flags	&	PP_CLAIMED	)	&&	pp	->	pdev	&&	(	pp	->	pdev	->	port	->	ieee1284	.	mode	!=	IEEE1284_MODE_COMPAT	(	pp	->	flags	&	PP_CLAIMED	)	&&	pp	->	pdev	&&	(	pp	->	pdev	->	port	->	ieee1284	.	mode	!=	IEEE1284_MODE_COMPAT	)
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	status	&	LP_PERRORP	)	&&	!	(	LP_F	(	minor	)	&	LP_CAREFUL	)
(	status	&	LP_PERRORP	)	&&	!	LP_F	(	minor	)	&	LP_CAREFUL
!	(	status	&	LP_PSELECD	)
!	status	&	LP_PSELECD
!	(	status	&	LP_PERRORP	)
!	status	&	LP_PERRORP
error	&&	(	nonblock	||	(	LP_F	(	minor	)	&	LP_ABORT	)	)
error	&&	nonblock	||	(	LP_F	(	minor	)	&	LP_ABORT	)
(	file	->	f_flags	&	O_NONBLOCK	)	||	(	LP_F	(	minor	)	&	LP_ABORT	)

(	LP_F	(	minor	)	&	LP_EXIST	)	==	0
LP_F	(	minor	)	&	LP_EXIST	==	0
(	LP_F	(	minor	)	&	LP_ABORTOPEN	)	&&	!	(	file	->	f_flags	&	O_NONBLOCK	)
(	LP_F	(	minor	)	&	LP_ABORTOPEN	)	&&	!	file	->	f_flags	&	O_NONBLOCK
!	(	status	&	LP_PSELECD	)
!	status	&	LP_PSELECD
!	(	status	&	LP_PERRORP	)
!	status	&	LP_PERRORP
(	LP_F	(	minor	)	&	LP_EXIST	)	==	0
LP_F	(	minor	)	&	LP_EXIST	==	0
(	par_timeout	->	tv_sec	<	0	)	||	(	par_timeout	->	tv_usec	<	0	)

0x81	|	(	reg	<<	1	)

0x80	|	(	reg	<<	1	)

(	!	(	yrs	%	4	)	&&	(	yrs	%	100	)	)	||	!	(	yrs	%	400	)
(	!	yrs	%	4	&&	(	yrs	%	100	)	)	||	!	yrs	%	400
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

~	(	1	<<	func	->	num	)
~	1	<<	func	->	num
msm_rotator_dev	->	imem_clk_state	!=	CLK_EN	&&	msm_rotator_dev	->	imem_clk

(	src_width	+	tile_w	-	1	)	/	tile_w
src_width	+	tile_w	-	1	/	tile_w
(	src_height	+	tile_h	-	1	)	/	tile_h
src_height	+	tile_h	-	1	/	tile_h
(	(	row_num_w	*	row_num_h	*	tile_w	*	tile_h	)	+	8191	)	&	~	8191

(	info	->	dst_y	*	info	->	dst	.	width	)	+	info	->	dst_x

(	info	->	dst_y	*	info	->	dst	.	width	)	+	info	->	dst_x

info	->	src	.	width	|	info	->	src	.	width	<<	16

info	->	dst	.	width	|	info	->	dst	.	width	*	2	<<	16

info	->	dst	.	width	|	info	->	dst	.	width	<<	16

(	bpp	-	1	)	<<	9

(	info	->	dst_y	*	info	->	dst	.	width	)	+	info	->	dst_x

(	info	->	dst_y	*	info	->	dst	.	width	)	/	2	+	info	->	dst_x

ALIGN	(	info	->	src	.	width	,	16	)	|	ALIGN	(	(	info	->	src	.	width	/	2	)	,	16	)	<<	16

info	->	src	.	width	|	(	info	->	src	.	width	/	2	)	<<	16

info	->	src	.	width	|	info	->	src	.	width	<<	16

info	->	dst	.	width	|	info	->	dst	.	width	<<	16

(	info	->	dst_y	*	info	->	dst	.	width	)	+	info	->	dst_x

(	info	->	dst_y	*	info	->	dst	.	width	)	/	2	+	info	->	dst_x

info	->	dst	.	width	|	(	info	->	dst	.	width	*	2	)	<<	16

info	->	dst	.	width	|	(	info	->	dst	.	width	)	<<	16

(	bpp	-	1	)	<<	9

(	(	info	->	dst_y	*	info	->	dst	.	width	)	+	info	->	dst_x	)	*	bpp
(	info	->	dst_y	*	info	->	dst	.	width	)	+	info	->	dst_x	*	bpp
(	bpp	-	1	)	<<	9

!	in_chroma_paddr	&&	src_planes	.	num_planes	>=	2

!	out_chroma_paddr	&&	dst_planes	.	num_planes	>=	2

(	status	&	0x03	)	!=	0x01
status	&	0x03	!=	0x01
(	s	==	MAX_SESSIONS	)	&&	(	first_free_index	!=	INVALID_SESSION	)

--	fd_info	->	ref_cnt	>	0

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

1	<<	(	devp	-	devp	->	hd_hpets	->	hp_dev	)

(	devp	->	hd_flags	&	(	HPET_IE	|	HPET_PERIODIC	)	)	==	HPET_IE
devp	->	hd_flags	&	HPET_IE	|	HPET_PERIODIC	==	HPET_IE
(	mc	-	base	+	hpetp	->	hp_delta	)	/	t
mc	-	base	+	hpetp	->	hp_delta	/	t
t	*	(	k	+	1	)	+	base
t	*	k	+	1	+	base
hpetp	&&	!	devp

~	(	HPET_OPEN	|	HPET_IE	|	HPET_PERIODIC	)
~	HPET_OPEN	|	HPET_IE	|	HPET_PERIODIC
1	<<	(	devp	-	devp	->	hd_hpets	->	hp_dev	)

1	<<	(	devp	-	devp	->	hd_hpets	->	hp_dev	)

hpets	->	hp_tick_freq	+	(	dis	>>	1	)
hpets	->	hp_tick_freq	+	dis	>>	1
(	devp	->	hd_flags	&	HPET_IE	)	==	0
devp	->	hd_flags	&	HPET_IE	==	0
(	devp	->	hd_flags	&	HPET_OPEN	)	==	0
devp	->	hd_flags	&	HPET_OPEN	==	0
i	++	,	(	m	-	start	)	<	count

(	m	-	start	)	/	i
m	-	start	/	i
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	i	-	1	)	&	wordmask

(	i	+	tap1	)	&	wordmask

(	i	+	tap2	)	&	wordmask

(	i	+	tap3	)	&	wordmask

(	i	+	tap4	)	&	wordmask

(	i	+	tap5	)	&	wordmask

(	i	-	j	)	&	wordmask

(	i	+	1	)	&	3

!	r	->	initialized	&&	nbits	>	0

r	==	&	input_pool	&&	entropy_count	>=	random_read_wakeup_thresh

(	type	<<	4	)	^	code	^	(	code	>>	4	)	^	value

r	->	entropy_count	/	8	<	min	+	reserved

end	<=	start	+	len

get_random_int	(	)	%	range	+	start

i	%	5	==	0

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	eax	==	0xff00	)	&&	(	ecx	==	0x0000	)

(	eax	==	0xff00	)	&&	(	ecx	==	0x0001	)

(	eax	==	0xff00	)	&&	(	ecx	==	0x0000	)

0xe0	|	(	(	al	&	0xfe	)	<<	8	)
0xe0	|	(	al	&	0xfe	<<	8	)
(	eax	==	0xff00	)	&&	(	ecx	==	0x0001	)

0xe0	|	(	(	al	|	0x01	)	<<	8	)
0xe0	|	(	al	|	0x01	<<	8	)
(	(	ax	==	0xf300	)	||	(	ax	==	0xf400	)	)	&&	(	bx	==	0x0004	)
(	ax	==	0xf300	)	||	(	ax	==	0xf400	)	&&	(	bx	==	0x0004	)
(	(	cx	&	0xff	)	<<	8	)	+	(	(	cx	&	0xff00	)	>>	8	)
(	cx	&	0xff	<<	8	)	+	cx	&	0xff00	>>	8
(	flag	==	1	)	||	(	(	regs	.	eax	&	0xff00	)	==	0x8600	)
(	flag	==	1	)	||	(	regs	.	eax	&	0xff00	==	0x8600	)
(	major	*	0x100	)	+	minor

(	(	(	year	-	90	)	&	0x1f	)	<<	10	)	|	(	(	month	&	0xf	)	<<	6	)	|	(	(	day	&	0x1f	)	<<	1	)
(	(	(	year	-	90	)	&	0x1f	)	<<	10	)	|	(	month	&	0xf	<<	6	)	|	(	day	&	0x1f	<<	1	)
(	tosh_id	==	0xfccb	)	||	(	tosh_id	==	0xfccc	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

id	==	SIO_SID_PC87365	||	id	==	SIO_SID_PC87366

id	==	SIO_SID_PC87365	||	id	==	SIO_SID_PC87366

(	(	iminor	<<	1	)	&	0xF0	)	|	(	iminor	&	0x7	)

curval	&	~	(	1	<<	bit	)
curval	&	~	1	<<	bit
(	curval	&	~	(	1	<<	bit	)	)	|	(	val	<<	bit	)
(	curval	&	~	1	<<	bit	)	|	(	val	<<	bit	)
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	q	->	event_tail	+	1	)	%	APM_MAX_EVENTS
q	->	event_tail	+	1	%	APM_MAX_EVENTS
(	q	->	event_head	+	1	)	%	APM_MAX_EVENTS
q	->	event_head	+	1	%	APM_MAX_EVENTS
(	q	->	event_tail	+	1	)	%	APM_MAX_EVENTS
q	->	event_tail	+	1	%	APM_MAX_EVENTS
(	i	>=	sizeof	(	event	)	)	&&	!	queue_empty	(	&	as	->	queue	)

as	->	suspend_state	==	SUSPEND_PENDING	&&	(	event	==	APM_SYS_SUSPEND	||	event	==	APM_USER_SUSPEND	)
as	->	suspend_state	==	SUSPEND_PENDING	&&	event	==	APM_SYS_SUSPEND	||	event	==	APM_USER_SUSPEND
!	port	&&	cpkt	->	event	!=	VIRTIO_CONSOLE_PORT_ADD

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	status	&	(	1	<<	STAT_RDA	)	)	!=	0
status	&	(	1	<<	STAT_RDA	)	!=	0
status	&	1	<<	wait_for_bit

--	loops	>	0

(	i	+	1	)	%	16	==	0
i	+	1	%	16	==	0
!	i2c_check_functionality	(	client	->	adapter	,	I2C_FUNC_SMBUS_BYTE	|	I2C_FUNC_SMBUS_I2C_BLOCK	|	I2C_FUNC_I2C	)

!	pd	||	!	pd	->	gpio_setup	||	!	pd	->	gpio_release

(	ioread8	(	chip	->	vendor	.	iobase	+	TPM_ACCESS	(	l	)	)	&	(	TPM_ACCESS_ACTIVE_LOCALITY	|	TPM_ACCESS_VALID	)	)	==	(	TPM_ACCESS_ACTIVE_LOCALITY	|	TPM_ACCESS_VALID	)
ioread8	(	chip	->	vendor	.	iobase	+	TPM_ACCESS	(	l	)	)	&	TPM_ACCESS_ACTIVE_LOCALITY	|	TPM_ACCESS_VALID	==	TPM_ACCESS_ACTIVE_LOCALITY	|	TPM_ACCESS_VALID
(	ioread8	(	chip	->	vendor	.	iobase	+	TPM_ACCESS	(	l	)	)	&	(	TPM_ACCESS_REQUEST_PENDING	|	TPM_ACCESS_VALID	)	)	==	(	TPM_ACCESS_REQUEST_PENDING	|	TPM_ACCESS_VALID	)
ioread8	(	chip	->	vendor	.	iobase	+	TPM_ACCESS	(	l	)	)	&	TPM_ACCESS_REQUEST_PENDING	|	TPM_ACCESS_VALID	==	TPM_ACCESS_REQUEST_PENDING	|	TPM_ACCESS_VALID
ioread8	(	chip	->	vendor	.	iobase	+	TPM_STS	(	chip	->	vendor	.	locality	)	+	2	)	<<	8
ioread8	(	chip	->	vendor	.	iobase	+	TPM_STS	(	chip	->	vendor	.	locality	)	+	2	)	<<	8
(	status	&	TPM_STS_COMMAND_READY	)	==	0
status	&	TPM_STS_COMMAND_READY	==	0
(	status	&	TPM_STS_DATA_EXPECT	)	!=	0
status	&	TPM_STS_DATA_EXPECT	!=	0
i	<=	irq_e	&&	chip	->	vendor	.	irq	==	0

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	fidi	>>	4	)	&	0x0F

ifno	==	1	&&	(	ch	&	0x10	)

(	ifno	==	2	)	&&	(	ch	&	0x10	)

(	ch	&	0x10	)	>>	4
ch	&	0x10	>>	4
(	ch	&	0x20	)	>>	5
ch	&	0x20	>>	5
(	ch	&	0x40	)	>>	6
ch	&	0x40	>>	6
(	ch	&	0x80	)	>>	7
ch	&	0x80	>>	7
dev	->	flags1	|	(	(	(	dev	->	baudv	-	1	)	&	0x0100	)	>>	8	)
dev	->	flags1	|	(	(	dev	->	baudv	-	1	)	&	0x0100	>>	8	)
(	dev	->	baudv	-	1	)	&	0xFF

(	dev	->	baudv	-	1	)	&	0xFF

(	dev	->	ta1	>>	4	)	&	0x0F

(	dev	->	baudv	>>	8	)	&	0x01

(	inb	(	REG_FLAGS0	(	iobase	)	)	&	8	)	==	0
inb	(	REG_FLAGS0	(	iobase	)	)	&	8	==	0
(	dev	->	flags0	&	1	)	==	0
dev	->	flags0	&	1	==	0
(	dev	->	flags0	&	1	)	&&	test_bit	(	IS_CMM_ABSENT	,	&	dev	->	flags	)

dev	->	atr_len_retry	++	>=	MAX_ATR_LEN_RETRY

(	test_bit	(	IS_AUTOPPS_ACT	,	&	dev	->	flags	)	==	0	)	&&	(	dev	->	ta1	!=	0x11	)	&&	!	(	test_bit	(	IS_ANY_T0	,	&	dev	->	flags	)	&&	test_bit	(	IS_ANY_T1	,	&	dev	->	flags	)	)
(	test_bit	(	IS_AUTOPPS_ACT	,	&	dev	->	flags	)	==	0	)	&&	(	dev	->	ta1	!=	0x11	)	&&	!	test_bit	(	IS_ANY_T0	,	&	dev	->	flags	)	&&	test_bit	(	IS_ANY_T1	,	&	dev	->	flags	)
dev	->	cwarn	==	0	||	dev	->	cwarn	==	10

(	dev	->	flags0	&	1	)	==	0
dev	->	flags0	&	1	==	0
k	+	j	>	255

k	+	j	>	255

(	dev	->	flags0	&	1	)	==	0
dev	->	flags0	&	1	==	0
(	(	dev	->	baudv	-	1	)	&	0x0100	)	>>	8
(	dev	->	baudv	-	1	)	&	0x0100	>>	8
(	(	dev	->	baudv	-	1	)	&	0x0100	)	>>	8
(	dev	->	baudv	-	1	)	&	0x0100	>>	8
(	nsend	&	0x100	)	>>	8
nsend	&	0x100	>>	8
(	nsend	&	0x100	)	>>	8
nsend	&	0x100	>>	8
dev	->	rlen	>=	infolen	+	4

(	dev	->	flags0	&	0x01	)	&&	(	dev	->	flags0	&	0x02	)

info	->	rx_buf	+	(	info	->	rx_put	*	info	->	rx_buf_size	)

!	fifo_count	&&	eom

!	fifo_count	&&	(	read_reg	(	info	,	CHA	+	STAR	)	&	BIT5	)
!	fifo_count	&&	(	read_reg	(	info	,	CHA	+	STAR	)	&	BIT5	)
status	&	(	BIT7	+	BIT6	)
status	&	BIT7	+	BIT6
(	info	->	tx_get	+	c	)	&	(	TXBUFSIZE	-	1	)

(	info	->	cts_chkcount	)	++	>=	IO_PIN_SHUTDOWN_LIMIT

!	(	info	->	serial_signals	&	SerialSignal_CTS	)
!	info	->	serial_signals	&	SerialSignal_CTS
(	info	->	dcd_chkcount	)	++	>=	IO_PIN_SHUTDOWN_LIMIT

(	info	->	dsr_chkcount	)	++	>=	IO_PIN_SHUTDOWN_LIMIT

(	info	->	ri_chkcount	)	++	>=	IO_PIN_SHUTDOWN_LIMIT

(	gis	&	0x70	)	||	count	>	1000

gis	&	(	BIT1	+	BIT0	)
gis	&	BIT1	+	BIT0
gis	&	(	BIT3	+	BIT2	)
gis	&	BIT3	+	BIT2
isr	&	(	IRQ_RXEOM	+	IRQ_RXFIFO	)
isr	&	IRQ_RXEOM	+	IRQ_RXFIFO
info	->	pending_bh	&&	!	info	->	bh_running	&&	!	info	->	bh_requested

!	(	info	->	port	.	flags	&	ASYNC_INITIALIZED	)
(	info	->	port	.	flags	&	ASYNC_INITIALIZED	!	(	info	->	port	.	flags	&	ASYNC_INITIALIZED	)
!	tty	||	tty	->	termios	->	c_cflag	&	HUPCL

~	(	SerialSignal_DTR	+	SerialSignal_RTS	)
~	SerialSignal_DTR	+	SerialSignal_RTS
info	->	params	.	mode	==	MGSL_MODE_HDLC	||	info	->	netcount

info	->	netcount	||	(	tty	&&	(	tty	->	termios	->	c_cflag	&	CREAD	)	)

!	tty	||	!	tty	->	termios

~	(	SerialSignal_RTS	+	SerialSignal_DTR	)
~	SerialSignal_RTS	+	SerialSignal_DTR
info	->	params	.	mode	==	MGSL_MODE_ASYNC	||	!	info	->	tx_active

info	->	tx_count	<	TXBUFSIZE	-	1

info	->	tx_count	<=	0	||	tty	->	stopped	||	tty	->	hw_stopped	||	!	info	->	tx_buf

(	info	->	tx_put	+	c	)	&	(	TXBUFSIZE	-	1	)

info	->	tx_count	&&	!	tty	->	stopped	&&	!	tty	->	hw_stopped

info	->	tx_active	&&	info	->	tx_count	&&	info	->	params	.	mode	==	MGSL_MODE_HDLC

(	info	->	params	.	mode	==	MGSL_MODE_HDLC	)	&&	(	mask	&	MgslEvent_ExitHuntMode	)

newsigs	.	dsr_up	==	oldsigs	.	dsr_up	&&	newsigs	.	dsr_down	==	oldsigs	.	dsr_down	&&	newsigs	.	dcd_up	==	oldsigs	.	dcd_up	&&	newsigs	.	dcd_down	==	oldsigs	.	dcd_down	&&	newsigs	.	cts_up	==	oldsigs	.	cts_up	&&	newsigs	.	cts_down	==	oldsigs	.	cts_down	&&	newsigs	.	ri_up	==	oldsigs	.	ri_up	&&	newsigs	.	ri_down	==	oldsigs	.	ri_down	&&	cnow	.	exithunt	==	cprev	.	exithunt	&&	cnow	.	rxidle	==	cprev	.	rxidle

cnow	.	rng	==	cprev	.	rng	&&	cnow	.	dsr	==	cprev	.	dsr	&&	cnow	.	dcd	==	cprev	.	dcd	&&	cnow	.	cts	==	cprev	.	cts

(	arg	&	TIOCM_RNG	&&	cnow	.	rng	!=	cprev	.	rng	)	||	(	arg	&	TIOCM_DSR	&&	cnow	.	dsr	!=	cprev	.	dsr	)	||	(	arg	&	TIOCM_CD	&&	cnow	.	dcd	!=	cprev	.	dcd	)	||	(	arg	&	TIOCM_CTS	&&	cnow	.	cts	!=	cprev	.	cts	)

break_state	==	-	1

(	cmd	!=	TIOCGSERIAL	)	&&	(	cmd	!=	TIOCSSERIAL	)	&&	(	cmd	!=	TIOCMIWAIT	)

(	tty	->	termios	->	c_cflag	==	old_termios	->	c_cflag	)	&&	(	RELEVANT_IFLAG	(	tty	->	termios	->	c_iflag	)	==	RELEVANT_IFLAG	(	old_termios	->	c_iflag	)	)
(	tty	->	termios	->	c_cflag	==	old_termios	->	c_cflag	)	&&	(	RELEVANT_IFLAG	(	tty	->	termios	->	c_iflag	)	==	RELEVANT_IFLAG	(	old_termios	->	c_iflag	)	)
old_termios	->	c_cflag	&	CBAUD	&&	!	(	tty	->	termios	->	c_cflag	&	CBAUD	)
old_termios	->	c_cflag	&	CBAUD	&&	!	tty	->	termios	->	c_cflag	&	CBAUD
~	(	SerialSignal_RTS	+	SerialSignal_DTR	)
~	SerialSignal_RTS	+	SerialSignal_DTR
!	(	old_termios	->	c_cflag	&	CBAUD	)	&&	tty	->	termios	->	c_cflag	&	CBAUD
!	old_termios	->	c_cflag	&	CBAUD	&&	tty	->	termios	->	c_cflag	&	CBAUD
old_termios	->	c_cflag	&	CRTSCTS	&&	!	(	tty	->	termios	->	c_cflag	&	CRTSCTS	)
old_termios	->	c_cflag	&	CRTSCTS	&&	!	tty	->	termios	->	c_cflag	&	CRTSCTS
!	(	info	->	port	.	flags	&	ASYNC_INITIALIZED	)
info	->	port	.	flags	&	!	info	->	port	.	flags	&	ASYNC_INITIALIZED
(	info	->	tx_count	||	info	->	tx_active	)	&&	info	->	tx_enabled
info	->	tx_count	||	info	->	tx_active	&&	info	->	tx_enabled
~	SerialSignal_RTS	+	SerialSignal_DTR

info	&&	info	->	line	!=	line

tty_hung_up_p	(	filp	)	||	port	->	flags	&	ASYNC_CLOSING
(	filp	)	||	port	->	flags	&	tty_hung_up_p	(	filp	)	||	port	->	flags	&	ASYNC_CLOSING
N	>	64	&&	M	<	16

(	M	<<	6	)	+	N
M	<<	6	+	N
(	M	<<	4	)	&	0xc0

info	->	params	.	mode	==	MGSL_MODE_HDLC	&&	info	->	params	.	clock_speed

info	->	params	.	mode	==	MGSL_MODE_HDLC	&&	info	->	params	.	clock_speed

info	->	params	.	mode	==	MGSL_MODE_HDLC	&&	info	->	params	.	clock_speed

info	->	params	.	flags	&	HDLC_FLAG_RXC_DPLL	&&	info	->	params	.	flags	&	HDLC_FLAG_TXC_DPLL

info	->	params	.	flags	&	HDLC_FLAG_RXC_BRG	&&	info	->	params	.	flags	&	HDLC_FLAG_TXC_BRG

clkmode	==	2	||	clkmode	==	3	||	clkmode	==	6	||	clkmode	==	7	||	(	clkmode	==	0	&&	clksubmode	==	1	)

!	(	info	->	serial_signals	&	SerialSignal_RTS	)
!	info	->	serial_signals	&	SerialSignal_RTS
!	(	info	->	serial_signals	&	SerialSignal_RTS	)
!	info	->	serial_signals	&	SerialSignal_RTS
!	(	status	&	PVR_RI	)
!	status	&	PVR_RI
!	(	status	&	PVR_DSR	)
!	status	&	PVR_DSR
info	->	rx_buf	+	(	i	*	info	->	rx_buf_size	)

info	->	rx_buf	+	(	info	->	rx_get	*	info	->	rx_buf_size	)

(	status	&	0xf0	)	!=	0xA0
status	&	0xf0	!=	0xA0
!	(	status	&	BIT7	)	||	(	status	&	BIT4	)
!	status	&	BIT7	||	(	status	&	BIT4	)
!	(	status	&	BIT5	)
!	status	&	BIT5
(	info	->	params	.	crc_type	&	HDLC_CRC_RETURN_EX	&&	framesize	+	1	>	info	->	max_frame_size	)	||	framesize	>	info	->	max_frame_size

(	i	+	1	)	%	count
i	+	1	%	count
(	i	+	1	)	%	count
i	+	1	%	count
end_time	--	&&	!	info	->	irq_occurred

info	->	tx_active	&&	info	->	params	.	mode	==	MGSL_MODE_HDLC

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	inBX	<<	16	)	|	inCX

(	inDI	<<	16	)	|	inSI

(	usDI	&	0x00FF	)	<	numDspBases
usDI	&	0x00FF	<	numDspBases
(	(	usSI	&	0xFF00	)	>>	8	)	<	numUartBases
(	usSI	&	0xFF00	>>	8	)	<	numUartBases
(	usSI	>>	8	)	==	uartio_index

(	usSI	>>	8	)	==	uartio_index

(	usCX	&	0xff	)	!=	0xff
usCX	&	0xff	!=	0xff
(	usSI	&	0xff	)	==	uartio_index
usSI	&	0xff	==	uartio_index
(	usSI	&	0x00ff	)	|	(	uartio_index	<<	8	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

buf	&&	r	>	0

hdlc	&&	hdlc	->	src_ptr	&&	hdlc	->	dest_ptr	&&	(	hdlc	->	src_size	-	hdlc	->	src_idx	>	0	)	&&	(	hdlc	->	dest_size	-	hdlc	->	dest_idx	>	0	)

i	==	(	src_length	-	1	)

driver	->	count	==	0	&&	driver	->	ref_count	==	0

driver	->	count_hdlc_pool	==	0	&&	driver	->	ref_count	==	0

driver	->	count_write_struct_pool	==	0	&&	driver	->	count_hdlc_pool	==	0	&&	driver	->	ref_count	==	0

r1	>	0	&&	r1	==	r2

r1	>	0	&&	r1	==	r2

r1	>	0	&&	r1	==	r2

buf	&&	r	>	0

count_bytes	+	HDR_SIZ	<=	r

data_len	<	0	||	data_len	>	r

i	<	last_ssid	-	first_ssid	+	1

start	>=	first	&&	start	<=	actual_last

chk_apps_master	(	)	&&	(	int	)	(	*	(	char	*	)	buf	)	==	MODE_CMD

(	int	)	(	*	(	char	*	)	(	buf	+	1	)	)	==	RESET_ID

wr_size	!=	header_size	+	num_bytes

(	updated_ssid_first	>=	first	&&	updated_ssid_last	<=	actual_last	)	||	(	updated_ssid_first	==	ALL_SSID	)

*	buf	==	0x73	&&	*	(	int	*	)	(	buf	+	4	)	==	3

*	buf	==	0x73	&&	*	(	int	*	)	(	buf	+	4	)	==	4

*	buf	==	0x73	&&	*	(	int	*	)	(	buf	+	4	)	==	0

(	*	buf	==	0x7d	)	&&	(	*	(	buf	+	1	)	==	0x3	)
(	*	buf	==	0x7d	)	&&	(	*	buf	+	1	==	0x3	)
(	*	buf	==	0x7d	)	&&	(	*	(	buf	+	1	)	==	0x4	)
(	*	buf	==	0x7d	)	&&	(	*	buf	+	1	==	0x4	)
4	*	(	ssid_last	-	ssid_first	+	1	)
4	*	ssid_last	-	ssid_first	+	1
(	*	buf	==	0x7d	)	&&	(	*	(	buf	+	1	)	==	0x5	)
(	*	buf	==	0x7d	)	&&	(	*	buf	+	1	==	0x5	)
chk_apps_master	(	)	&&	cmd_code	==	MODE_CMD

type	==	1	&&	chk_apps_only	(	)

success	>=	0	||	ioarg

index	==	-	1

(	ipmb_addr1	->	slave_addr	==	ipmb_addr2	->	slave_addr	)	&&	(	ipmb_addr1	->	lun	==	ipmb_addr2	->	lun	)

(	lan_addr1	->	remote_SWID	==	lan_addr2	->	remote_SWID	)	&&	(	lan_addr1	->	local_SWID	==	lan_addr2	->	local_SWID	)	&&	(	lan_addr1	->	session_handle	==	lan_addr2	->	session_handle	)	&&	(	lan_addr1	->	lun	==	lan_addr2	->	lun	)

(	addr	->	channel	==	IPMI_BMC_CHANNEL	)	||	(	addr	->	channel	>=	IPMI_MAX_CHANNELS	)	||	(	addr	->	channel	<	0	)

(	addr_type	==	IPMI_IPMB_ADDR_TYPE	)	||	(	addr_type	==	IPMI_IPMB_BROADCAST_ADDR_TYPE	)

(	msg	->	addr	.	channel	==	channel	)	&&	(	msg	->	msg	.	cmd	==	cmd	)	&&	(	msg	->	msg	.	netfn	==	netfn	)	&&	(	ipmi_addr_equal	(	addr	,	&	(	msg	->	addr	)	)	)

(	(	1	<<	i	)	&	chans	)	==	0
(	1	<<	i	)	&	chans	==	0
size	--	,	data	++

(	msg	->	netfn	<<	2	)	|	(	ipmb_addr	->	lun	&	0x3	)

(	ipmb_seq	<<	2	)	|	source_lun

(	msg	->	netfn	<<	2	)	|	(	lan_addr	->	lun	&	0x3	)

(	ipmb_seq	<<	2	)	|	source_lun

(	msg	->	netfn	==	IPMI_NETFN_APP_REQUEST	)	&&	(	(	msg	->	cmd	==	IPMI_SEND_MSG_CMD	)	||	(	msg	->	cmd	==	IPMI_GET_MSG_CMD	)	||	(	msg	->	cmd	==	IPMI_READ_EVENT_MSG_BUFFER_CMD	)	)
(	msg	->	netfn	==	IPMI_NETFN_APP_REQUEST	)	&&	(	msg	->	cmd	==	IPMI_SEND_MSG_CMD	)	||	(	msg	->	cmd	==	IPMI_GET_MSG_CMD	)	||	(	msg	->	cmd	==	IPMI_READ_EVENT_MSG_BUFFER_CMD	)
(	(	msg	->	netfn	==	IPMI_NETFN_APP_REQUEST	)	&&	(	(	msg	->	cmd	==	IPMI_COLD_RESET_CMD	)	||	(	msg	->	cmd	==	IPMI_WARM_RESET_CMD	)	)	)	||	(	msg	->	netfn	==	IPMI_NETFN_FIRMWARE_REQUEST	)
(	(	msg	->	netfn	==	IPMI_NETFN_APP_REQUEST	)	&&	(	msg	->	cmd	==	IPMI_COLD_RESET_CMD	)	||	(	msg	->	cmd	==	IPMI_WARM_RESET_CMD	)	)	||	(	msg	->	netfn	==	IPMI_NETFN_FIRMWARE_REQUEST	)
(	msg	->	data_len	+	2	)	>	IPMI_MAX_MSG_LENGTH

(	msg	->	netfn	<<	2	)	|	(	smi_addr	->	lun	&	0x3	)

(	msg	->	data_len	+	10	+	broadcast	)	>	IPMI_MAX_MSG_LENGTH

(	msg	->	data_len	+	12	)	>	IPMI_MAX_MSG_LENGTH

bmc	->	id	.	product_id	==	id	->	product_id	&&	bmc	->	id	.	device_id	==	id	->	device_id

(	bmc	->	id	.	device_revision	&	0x80	)	>>	7
bmc	->	id	.	device_revision	&	0x80	>>	7
(	msg	->	addr	.	addr_type	!=	IPMI_SYSTEM_INTERFACE_ADDR_TYPE	)	||	(	msg	->	msg	.	netfn	!=	IPMI_NETFN_APP_RESPONSE	)	||	(	msg	->	msg	.	cmd	!=	IPMI_GET_DEVICE_GUID_CMD	)

(	msg	->	addr	.	addr_type	==	IPMI_SYSTEM_INTERFACE_ADDR_TYPE	)	&&	(	msg	->	msg	.	netfn	==	IPMI_NETFN_APP_RESPONSE	)	&&	(	msg	->	msg	.	cmd	==	IPMI_GET_CHANNEL_INFO_CMD	)

(	netfn	+	1	)	<<	2

user	&&	!	user	->	valid

!	recv_msg	->	user	||	!	recv_msg	->	user	->	valid

(	IPMI_NETFN_APP_REQUEST	|	1	)	<<	2
IPMI_NETFN_APP_REQUEST	|	1	<<	2
(	IPMI_NETFN_APP_REQUEST	|	1	)	<<	2
IPMI_NETFN_APP_REQUEST	|	1	<<	2
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	kcs	->	state	!=	KCS_IDLE	)	&&	(	kcs	->	state	!=	KCS_HOSED	)

(	length	>=	3	)	&&	(	kcs	->	read_pos	<	3	)

(	state	!=	KCS_READ_STATE	)	&&	(	state	!=	KCS_IDLE_STATE	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

msg_len	<	3	||	msg_len	>	IPMI_MAX_MSG_LENGTH

length	<	msg_len	||	bt	->	truncated

!	(	BT_STATUS	&	BT_B2H_ATN	)
!	BT_STATUS	&	BT_B2H_ATN
bt	->	read_count	<	4	||	bt	->	read_count	>=	IPMI_MAX_MSG_LENGTH

bt	->	seq	<=	(	unsigned	char	)	(	bt	->	BT_CAP_retries	&	0xFF	)

(	bt_debug	&	BT_DEBUG_STATES	)	&&	(	bt	->	state	!=	last_printed	)

(	bt	->	state	<	BT_STATE_WRITE_BYTES	)	&&	(	status	&	BT_B2H_ATN	)

(	bt	->	state	!=	BT_STATE_IDLE	)	&&	(	bt	->	state	<	BT_STATE_PRINTME	)

status	&	(	BT_B_BUSY	|	BT_H2B_ATN	)
status	&	BT_B_BUSY	|	BT_H2B_ATN
status	&	(	BT_B_BUSY	|	BT_H2B_ATN	)
status	&	BT_B_BUSY	|	BT_H2B_ATN
!	(	status	&	BT_B2H_ATN	)
!	status	&	BT_B2H_ATN
!	(	status	&	BT_H_BUSY	)
!	status	&	BT_H_BUSY
!	(	status	&	BT_B_BUSY	)
!	status	&	BT_B_BUSY
(	BT_STATUS	==	0xFF	)	&&	(	BT_INTMASK_R	==	0xFF	)

(	ifnum_to_use	<	0	)	||	(	ifnum_to_use	==	ipmi_ifnum	)

rv	&&	rv	!=	IPMI_UNKNOWN_ERR_COMPLETION_CODE

(	mfg_id	==	IPMI_MOTOROLA_MANUFACTURER_ID	)	&&	(	prod_id	==	IPMI_MOTOROLA_PPS_IPMC_PRODUCT_ID	)

rv	&&	rv	!=	IPMI_UNKNOWN_ERR_COMPLETION_CODE

(	mfg_id	==	IPMI_CPI1_MANUFACTURER_ID	)	&&	(	prod_id	==	IPMI_CPI1_PRODUCT_ID	)

0xb0	+	2	*	slot

0xae	+	2	*	slot

(	ipmi_version	>>	4	)	&	0xF

!	memcmp	(	mfr	,	&	mfg_id	,	sizeof	(	mfr	)	)	&&	ipmi_version_major	<=	1	&&	ipmi_version_minor	<	5

(	ifnum_to_use	>=	0	)	&&	(	ifnum_to_use	!=	if_num	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	smic	->	state	!=	SMIC_IDLE	)	&&	(	smic	->	state	!=	SMIC_HOSED	)

(	length	>=	3	)	&&	(	smic	->	read_pos	<	3	)

(	ifnum_to_use	<	0	)	||	(	ifnum_to_use	==	watchdog_ifnum	)

(	ipmi_version_major	>	1	)	||	(	(	ipmi_version_major	==	1	)	&&	(	ipmi_version_minor	>=	5	)	)

(	pretimeout	>	0	)	&&	(	ipmi_watchdog_state	!=	WDOG_TIMEOUT_NONE	)

(	do_heartbeat	==	IPMI_SET_TIMEOUT_FORCE_HB	)	||	(	(	send_heartbeat_now	)	&&	(	do_heartbeat	==	IPMI_SET_TIMEOUT_HB_IF_NECESSARY	)	)

(	ifnum_to_use	>=	0	)	&&	(	ifnum_to_use	!=	ipmi_intf	)

(	start_now	)	&&	(	rv	==	0	)

cCode	<	0	||	cCode	>	IPMI_ERR_UNSPECIFIED

(	smi_info	->	irq	)	&&	(	!	smi_info	->	interrupt_disabled	)

smi_info	->	msg_flags	&	OEM_DATA_AVAIL	&&	smi_info	->	oem_data_avail_handler
smi_info	->	msg_flags	&	OEM_DATA_AVAIL	&&	smi_info	->	oem_data_avail_handler
~	(	IPMI_BMC_RCV_MSG_INTR	|	IPMI_BMC_EVT_MSG_INTR	)
~	IPMI_BMC_RCV_MSG_INTR	|	IPMI_BMC_EVT_MSG_INTR
ts	->	tv_nsec	!=	-	1

atomic_read	(	&	smi_info	->	stop_operation	)	||	!	smi_info	->	has_event_buffer

(	smi_info	->	irq	)	&&	(	!	smi_info	->	interrupt_disabled	)

(	new_smi	->	si_type	!=	SI_BT	)	&&	(	!	new_smi	->	irq	)

(	inw	(	addr	+	(	offset	*	io	->	regspacing	)	)	>>	io	->	regshift	)	&	0xff

(	inl	(	addr	+	(	offset	*	io	->	regspacing	)	)	>>	io	->	regshift	)	&	0xff

(	io	->	addr	)	+	(	offset	*	io	->	regspacing	)

(	io	->	addr	)	+	(	offset	*	io	->	regspacing	)

(	readw	(	(	io	->	addr	)	+	(	offset	*	io	->	regspacing	)	)	>>	io	->	regshift	)	&	0xff

(	io	->	addr	)	+	(	offset	*	io	->	regspacing	)

(	readl	(	(	io	->	addr	)	+	(	offset	*	io	->	regspacing	)	)	>>	io	->	regshift	)	&	0xff

(	io	->	addr	)	+	(	offset	*	io	->	regspacing	)

(	info	->	io_size	*	info	->	io	.	regspacing	)	-	(	info	->	io	.	regspacing	-	info	->	io	.	regsize	)

(	info	->	io_size	*	info	->	io	.	regspacing	)	-	(	info	->	io	.	regspacing	-	info	->	io	.	regsize	)

(	IPMI_NETFN_APP_REQUEST	|	1	)	<<	2
IPMI_NETFN_APP_REQUEST	|	1	<<	2
(	IPMI_NETFN_APP_REQUEST	|	1	)	<<	2
IPMI_NETFN_APP_REQUEST	|	1	<<	2
smi	->	irq	&&	!	smi	->	interrupt_disabled

(	smi_info	->	msg_flags	&	~	OEM_DATA_AVAIL	)	|	RECEIVE_MSG_AVAIL
(	smi_info	->	msg_flags	&	~	OEM_DATA_AVAIL	)	|	RECEIVE_MSG_AVAIL
id	->	device_id	==	DELL_POWEREDGE_8G_BMC_DEVICE_ID	&&	id	->	device_revision	==	DELL_POWEREDGE_8G_BMC_DEVICE_REV	&&	id	->	ipmi_version	==	DELL_POWEREDGE_8G_BMC_IPMI_VERSION

ipmi_version_major	(	id	)	<	1	||	(	ipmi_version_major	(	id	)	==	1	&&	ipmi_version_minor	(	id	)	<	5	)

to_clean	->	curr_msg	||	(	to_clean	->	si_state	!=	SI_NORMAL	)

to_clean	->	curr_msg	||	(	to_clean	->	si_state	!=	SI_NORMAL	)

to_clean	->	curr_msg	||	(	to_clean	->	si_state	!=	SI_NORMAL	)

(	dev	->	class	>>	8	)	&	0xff00

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

i	<	(	first_entry	+	num_entries	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	size	+	offset	)	>	current_size

type	!=	0	||	mem	->	type	!=	0

type	!=	0	||	mem	->	type	!=	0

i	<	io_pg_count	+	io_pg_start

!	table	&&	(	i	<	bridge	->	driver	->	num_aperture_sizes	)

readb	(	serverworks_private	.	registers	+	SVWRKS_POSTFLUSH	)	==	1

readl	(	serverworks_private	.	registers	+	SVWRKS_DIRFLUSH	)	==	1

type	!=	0	||	mem	->	type	!=	0

type	!=	0	||	mem	->	type	!=	0

!	mem	&&	uninorth_rev	<=	0x30

(	uninorth_rev	>=	0x30	)	&&	(	uninorth_rev	<=	0x33	)

!	table	&&	(	i	<	bridge	->	driver	->	num_aperture_sizes	)

type	!=	0	||	mem	->	type	!=	0

type	!=	0	||	mem	->	type	!=	0

(	(	cpuid_ebx	(	1	)	>>	8	)	&	0xff	)	<<	3
(	cpuid_ebx	(	1	)	>>	8	)	&	0xff	<<	3
(	(	cpuid_ebx	(	1	)	>>	8	)	&	0xff	)	<<	3
(	cpuid_ebx	(	1	)	>>	8	)	&	0xff	<<	3
~	(	clflush_chunk	-	1	)
~	clflush_chunk	-	1
last_page	&&	(	(	(	unsigned	long	)	page	^	(	unsigned	long	)	last_page	)	&	clflush_mask	)
last_page	&&	(	(	unsigned	long	)	page	^	(	unsigned	long	)	last_page	&	clflush_mask	)
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

!	wait	||	timeriomem_rng_data	->	present

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

data	||	!	wait

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	c	->	x86	==	6	)	&&	(	c	->	x86_model	>=	0x0f	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

data	||	!	wait

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

readl	(	trng	->	base	+	TRNG_ISR	)	&	1

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

++	busy_count	>	100

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

data	||	!	wait

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

!	busy	||	!	wait

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

data	||	!	wait

data	||	!	wait

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

procbytes	<	numbytes	&&	skb	->	len	<	bcs	->	rx_bufsize

2	*	skb	->	len	+	skb	->	mac_len

(	state	&	~	clear	)	|	set

!	(	ucs	->	basstate	&	BS_ATOPEN	)
!	ucs	->	basstate	&	BS_ATOPEN
!	(	ucs	->	basstate	&	BS_B1OPEN	)
!	ucs	->	basstate	&	BS_B1OPEN
!	(	ucs	->	basstate	&	BS_B2OPEN	)
!	ucs	->	basstate	&	BS_B2OPEN
!	(	ucs	->	basstate	&	BS_RESETTING	)
!	ucs	->	basstate	&	BS_RESETTING
!	(	update_basstate	(	ucs	,	BS_ATTIMER	,	BS_ATREADY	)	&	BS_ATTIMER	)
!	update_basstate	(	ucs	,	BS_ATTIMER	,	BS_ATREADY	)	&	BS_ATTIMER
!	(	ucs	->	basstate	&	BS_ATOPEN	)
!	ucs	->	basstate	&	BS_ATOPEN
!	(	cs	->	hw	.	bas	->	basstate	&	BS_ATRDPEND	)
!	cs	->	hw	.	bas	->	basstate	&	BS_ATRDPEND
ucs	->	basstate	&	(	BS_B1OPEN	|	BS_B2OPEN	|	BS_ATRDPEND	|	BS_ATWRPEND	)
ucs	->	basstate	&	BS_B1OPEN	|	BS_B2OPEN	|	BS_ATRDPEND	|	BS_ATWRPEND
c	<	0x20	||	c	==	0x7f

bcs	->	use_count	||	!	try_module_get	(	bcs	->	cs	->	driver	->	owner	)

!	(	cs	->	flags	&	VALID_MINOR	)
!	cs	->	flags	&	VALID_MINOR
!	gigaset_initbcs	(	cs	->	bcs	+	i	,	cs	,	i	)

!	gigaset_initbcs	(	cs	->	bcs	+	i	,	cs	,	i	)

!	(	cs	->	flags	&	VALID_MINOR	)
!	cs	->	flags	&	VALID_MINOR
i	--	>	0

iif	->	ctr	.	cnr	|	(	(	bcs	->	channel	+	1	)	<<	8	)

iif	->	ctr	.	cnr	|	(	(	bcs	->	channel	+	1	)	<<	8	)

iif	->	ctr	.	cnr	|	(	(	bcs	->	channel	+	1	)	<<	8	)	|	(	1	<<	16	)

iif	->	ctr	.	cnr	|	(	(	bcs	->	channel	+	1	)	<<	8	)

!	channel	||	channel	>	cs	->	channels

!	channel	||	channel	>	cs	->	channels

!	channel	||	channel	>	cs	->	channels

cid	<	1	||	cid	>	65535

curarg	+	1	<	params

--	cs	->	retry_count	<=	0

ev	->	parameter	>	0	&&	ev	->	parameter	<=	65535

ev	->	parameter	!=	at_state	->	timer_index	||	!	at_state	->	timer_active

(	rcode	==	RSP_ANY	||	rcode	==	ev	->	type	)	&&	(	(	int	)	at_state	->	ConState	>=	rep	->	min_ConState	)	&&	(	rep	->	max_ConState	<	0	||	(	int	)	at_state	->	ConState	<=	rep	->	max_ConState	)	&&	(	rep	->	parameter	<	0	||	rep	->	parameter	==	ev	->	parameter	)
rcode	==	RSP_ANY	||	rcode	==	ev	->	type	&&	(	(	int	)	at_state	->	ConState	>=	rep	->	min_ConState	)	&&	rep	->	max_ConState	<	0	||	(	int	)	at_state	->	ConState	<=	rep	->	max_ConState	&&	rep	->	parameter	<	0	||	rep	->	parameter	==	ev	->	parameter
~	(	PC_DLE1	|	PC_ACCEPT	|	PC_DIAL	)
~	PC_DLE1	|	PC_ACCEPT	|	PC_DIAL
~	(	PC_DLE1	|	PC_ACCEPT	|	PC_DIAL	)
~	PC_DLE1	|	PC_ACCEPT	|	PC_DIAL
bcs	->	at_state	.	pending_commands	||	bcs	->	at_state	.	cid	>	0

channel	<	0	||	channel	>=	cs	->	channels

(	le16_to_cpu	(	udev	->	descriptor	.	idVendor	)	!=	USB_M105_VENDOR_ID	)	||	(	le16_to_cpu	(	udev	->	descriptor	.	idProduct	)	!=	USB_M105_PRODUCT_ID	)

(	1	<<	iwb	->	wbits	)	-	1
1	<<	iwb	->	wbits	-	1
dst	<	limit	&&	src	<	write

isowbuf_freebytes	(	iwb	)	<	count	+	count	/	5	+	6	||	!	isowbuf_startwrite	(	iwb	)

count	--	>	0

isowbuf_freebytes	(	iwb	)	<	count	||	!	isowbuf_startwrite	(	iwb	)

--	count	>	0

(	tabentry	>>	4	)	&	0x0f

seqlen	==	6	&&	trail1	!=	7

c	>>	(	lead1	+	1	)

seqlen	<	5	&&	trail1	<	7

inbits	>	7	-	lead1

inbits	<	7	-	lead1

c	>>	(	lead1	+	1	)

(	1	<<	lead1	)	-	1
1	<<	lead1	-	1
(	c	&	mask	)	|	(	(	c	&	~	mask	)	>>	1	)
(	c	&	mask	)	|	(	c	&	~	mask	>>	1	)
count	>	0	&&	dobytes	>	0

new_state	&	~	old_state

old_state	&	~	new_state

!	set	&&	!	clear

!	cs	||	!	cs	->	hw	.	ser

len	<	(	*	(	cp	+	1	)	+	2	)
len	<	(	*	cp	+	1	+	2	)
*	(	cp	+	1	)	!=	1
*	cp	+	1	!=	1
*	(	cp	+	1	)	!=	1
*	cp	+	1	!=	1
*	(	cp	+	1	)	!=	6
*	cp	+	1	!=	6
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	ctrl_no	<=	0	)	||	(	ctrl_no	>	CAPI_MAXCONTR	)	||	(	app_id	<=	0	)	||	(	app_id	>	CAPI_MAXAPPL	)

1	<<	(	ctrl_no	-	1	)

1	<<	(	ctrl	->	cnr	-	1	)

_hycapi_appCheck	(	i	+	1	,	ctrl	->	cnr	)	==	1

~	(	1	<<	(	ctrl	->	cnr	-	1	)	)
~	1	<<	(	ctrl	->	cnr	-	1	)
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

lp	->	sk_count	--	==	MAX_SKB_BUFFERS

i	*	10	+	*	cp	++

cnf	->	buf_size	>=	CONF_LINE_LEN	-	1

(	(	cp	-	tmp	)	%	(	INFO_OUT_LEN	+	1	)	)	!=	INFO_OUT_LEN
(	cp	-	tmp	%	(	INFO_OUT_LEN	+	1	)	)	!=	INFO_OUT_LEN
(	(	cp	-	tmp	)	%	(	INFO_OUT_LEN	+	1	)	)	!=	INFO_OUT_LEN
(	cp	-	tmp	%	INFO_OUT_LEN	+	1	)	!=	INFO_OUT_LEN
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	pd	->	log_head	->	usage_cnt	<=	0	)	&&	(	pd	->	log_head	->	next	->	usage_cnt	<=	0	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

++	wr_mirror	>=	buflen

len	<	4	||	len	>	56

dtmfthreshold	<	20	||	dtmfthreshold	>	500

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

i	<	16	+	2

i	<	16	+	2

!	conf	||	!	dsp

!	dsp	->	echo	.	software	&&	!	dsp	->	echo	.	hardware

dsp	->	pcm_slot_tx	>=	0	||	dsp	->	pcm_slot_rx	>=	0

dsp	->	pcm_slot_tx	>=	0	&&	dsp	->	pcm_slot_rx	<	0	&&	dsp	->	pcm_bank_tx	==	2	&&	dsp	->	pcm_bank_rx	==	2

member	->	dsp	->	features	.	pcm_banks	>	1	&&	nextm	->	dsp	->	features	.	pcm_banks	>	1	&&	member	->	dsp	->	features	.	hfc_id	!=	nextm	->	dsp	->	features	.	hfc_id

member	->	dsp	->	pcm_slot_tx	>=	0	&&	member	->	dsp	->	pcm_slot_rx	>=	0	&&	nextm	->	dsp	->	pcm_slot_tx	>=	0	&&	nextm	->	dsp	->	pcm_slot_rx	>=	0	&&	nextm	->	dsp	->	pcm_slot_tx	==	member	->	dsp	->	pcm_slot_rx	&&	nextm	->	dsp	->	pcm_slot_rx	==	member	->	dsp	->	pcm_slot_tx	&&	nextm	->	dsp	->	pcm_slot_tx	==	member	->	dsp	->	pcm_slot_tx	&&	member	->	dsp	->	pcm_bank_tx	!=	member	->	dsp	->	pcm_bank_rx	&&	nextm	->	dsp	->	pcm_bank_tx	!=	nextm	->	dsp	->	pcm_bank_rx

member	->	dsp	->	pcm_slot_tx	>=	0	&&	member	->	dsp	->	pcm_slot_rx	>=	0	&&	nextm	->	dsp	->	pcm_slot_tx	>=	0	&&	nextm	->	dsp	->	pcm_slot_rx	>=	0	&&	nextm	->	dsp	->	pcm_slot_tx	==	member	->	dsp	->	pcm_slot_rx	&&	nextm	->	dsp	->	pcm_slot_rx	==	member	->	dsp	->	pcm_slot_tx	&&	member	->	dsp	->	pcm_slot_tx	!=	member	->	dsp	->	pcm_slot_rx	&&	member	->	dsp	->	pcm_bank_tx	==	0	&&	member	->	dsp	->	pcm_bank_rx	==	0	&&	nextm	->	dsp	->	pcm_bank_tx	==	0	&&	nextm	->	dsp	->	pcm_bank_rx	==	0

dsp	->	hdlc	&&	!	member	->	dsp	->	hdlc

!	dsp	->	hdlc	&&	member	->	dsp	->	hdlc

!	(	dsp	->	tone	.	tone	&&	dsp	->	tone	.	software	)
!	dsp	->	tone	.	tone	&&	dsp	->	tone	.	software
dsp	->	cmx_delay	&&	!	dsp	->	last_tx

!	dsp	->	tx_mix	&&	t	!=	tt

r	!=	rr	&&	t	!=	tt

!	conf	||	members	<=	1

r	!=	rr	&&	t	!=	tt

r	!=	rr	&&	t	!=	tt

o_r	!=	o_rr	&&	t	!=	tt

r	!=	rr	&&	t	!=	tt

r	!=	rr	&&	t	!=	tt

r	!=	rr	&&	t	!=	tt

(	l2	->	ch	.	nr	<<	16	)	|	l2	->	ch	.	addr

(	l2	->	ch	.	nr	<<	16	)	|	l2	->	ch	.	addr

(	l2	->	vs	-	l2	->	va	)	%	128
l2	->	vs	-	l2	->	va	%	128
(	l2	->	vs	-	l2	->	va	)	%	8
l2	->	vs	-	l2	->	va	%	8
(	*	skb	->	data	&	0x2	)	>>	1
*	skb	->	data	&	0x2	>>	1
(	(	nr	-	l2	->	va	)	%	128	)	<=	(	(	l2	->	vs	-	l2	->	va	)	%	128	)
(	nr	-	l2	->	va	%	128	)	<=	(	l2	->	vs	-	l2	->	va	%	128	)
(	(	nr	-	l2	->	va	)	%	8	)	<=	(	(	l2	->	vs	-	l2	->	va	)	%	8	)
(	nr	-	l2	->	va	%	8	)	<=	(	(	l2	->	vs	-	l2	->	va	)	%	8	)
(	l2	->	sow	+	1	)	%	l2	->	window
l2	->	sow	+	1	%	l2	->	window
(	l2	->	vs	+	1	)	%	128
l2	->	vs	+	1	%	128
(	l2	->	vs	+	1	)	%	8
l2	->	vs	+	1	%	8
!	rsp	&&	PollFlag

(	psapi	&	1	)	||	!	(	ptei	&	1	)
(	psapi	&	1	)	||	!	ptei	&	1
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	mISDN_HEAD_ID	(	skb	)	>>	16	)	&	0xff

(	mISDN_HEAD_ID	(	skb	)	>>	8	)	&	0xff

(	_pms	(	sk	)	->	ch	.	addr	>>	8	)	&	0xFF

(	_pms	(	sk	)	->	ch	.	addr	>>	8	)	&	0xff

(	(	alaw	&	0x0F	)	<<	4	)	+	8
alaw	&	0x0F	<<	4	+	8
(	(	int	)	alaw	&	0x70	)	>>	4
(	int	)	alaw	&	0x70	>>	4
(	i	+	0x100	)	<<	(	seg	-	1	)

(	mu	&	0x70	)	/	16
mu	&	0x70	/	16
f	*	(	1	<<	(	e	+	3	)	)
f	*	1	<<	(	e	+	3	)
(	sample	>>	8	)	&	0x80

(	sample	>>	7	)	&	0xFF

(	sample	>>	(	exponent	+	3	)	)	&	0x0F

~	(	sign	|	(	exponent	<<	4	)	|	mantissa	)
~	sign	|	(	exponent	<<	4	)	|	mantissa
(	i	&	(	1	<<	j	)	)	!=	0
i	&	(	1	<<	j	)	!=	0
1	<<	(	7	-	j	)

(	mgr	->	ch	.	nr	<<	16	)	|	mgr	->	ch	.	addr

!	hc	->	sin_remote	.	sin_addr	.	s_addr	||	!	hc	->	sin_remote	.	sin_port

!	dch	&&	!	bch

dch	&&	len	>=	2

len	<	1	+	1	+	2

len	<	mlen	+	3

len	==	mlen	+	3

(	hc	->	sin_remote	.	sin_addr	.	s_addr	!=	sin	->	sin_addr	.	s_addr	)	||	(	hc	->	sin_remote	.	sin_port	!=	sin	->	sin_port	)

hc	->	remoteport	|	(	hc	->	localport	<<	16	)

hc	->	ondemand	&&	!	hc	->	id

!	pri	&&	hc	->	b_num	>	2

list_empty	(	&	dev	->	expired	)	&&	(	dev	->	work	==	0	)

dev	->	work	||	!	list_empty	(	&	dev	->	expired	)

dev	->	work	||	!	list_empty	(	&	dev	->	expired	)

i	<	NCOEFF	/	2

i	-	(	NCOEFF	/	2	)

(	strlen	(	dsp	->	dtmf	.	digits	)	+	1	)	<	sizeof	(	dsp	->	dtmf	.	digits	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	fi	->	state	>=	fi	->	fsm	->	state_count	)	||	(	event	>=	fi	->	fsm	->	event_count	)

(	divert_info_head	->	usage_cnt	<=	0	)	&&	(	divert_info_head	->	next	->	usage_cnt	<=	0	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	ds1	)	&&	(	idx	>	0	)

(	ds	)	&&	(	idx	>	0	)

(	ds	)	&&	(	idx	>=	0	)

!	(	idx	--	)

*	p	++	!=	*	p1	++

*	p	++	!=	*	p1	++

*	src	++	!=	0x30

(	*	(	src	+	restlen	-	1	)	)	||	(	*	(	src	+	restlen	-	2	)	)
(	*	src	+	restlen	-	1	)	||	(	*	(	src	+	restlen	-	2	)	)
(	*	src	++	!=	2	)	||	(	*	src	++	!=	1	)	||	(	*	src	++	!=	0x0B	)

(	*	(	src	+	restlen	-	1	)	)	||	(	*	(	src	+	restlen	-	2	)	)
(	*	src	+	restlen	-	1	)	||	(	*	src	+	restlen	-	2	)
*	src	++	!=	0x30

(	*	p	++	!=	0x0A	)	||	(	*	p	++	!=	1	)

(	*	p	++	)	&	0xFF

(	*	p	++	!=	0x0A	)	||	(	*	p	++	!=	1	)

(	*	p	++	)	&	0xFF

*	p	++	!=	0x30

cs1	->	ics	.	driver	==	-	1

cs1	->	ics	.	driver	==	-	1

action	==	-	1

i	++	,	left	--

timer	++	>	5

timer	++	>	5

timer	++	>	5

loop	++	>	20

callid	>=	0x8000	&&	callid	<=	0xFFFF

callid	>=	0x0000	&&	callid	<=	0x7FFF

(	nBuffers	*	buffer_size	)	*	(	c	-	1	)
(	nBuffers	*	buffer_size	)	*	c	-	1
i	<	nBuffers	/	2

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

0x9	+	(	c	&	0x0f	)
0x9	+	c	&	0x0f
(	sc	&	3	)	*	(	0x9	+	0x9	)	+	c
sc	&	3	*	0x9	+	0x9	+	c
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

card	->	state	==	p	->	actstate	&&	p	->	event	==	event

plci	->	state	==	p	->	actstate	&&	p	->	event	==	event

ncci	->	state	==	p	->	actstate	&&	p	->	event	==	event

digit1	<=	0	||	digit1	>	30

digit2	<=	0	||	digit2	>	30

(	!	ap	)	||	(	ap	->	release_in_progress	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

action	->	init	==	chan	->	fsm_state	&&	action	->	event	==	event

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

mem_base	>=	0xA0000	&&	mem_base	<=	0xFFFFF

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	dev	->	send_seq	+	1	)	%	8
dev	->	send_seq	+	1	%	8
(	dev	->	send_seq	+	(	8	-	dev	->	unack_seq	)	)	&	0x07

dev	->	free	>	16	&&	dev	->	write_queue	&&	unacked	<	7

cp_len	>	flen	-	count

(	tt	&	0x7fffU	)	>	511
tt	&	0x7fffU	>	511
!	(	tt	&	0x8000U	)
!	tt	&	0x8000U
frame	->	hdr_len	>	1024	||	frame	->	dt_len	>	2048

frame	->	hdr_len	+	frame	->	dt_len	+	(	(	frame	->	hdr_len	+	15	)	&	~	15	)
frame	->	hdr_len	+	frame	->	dt_len	+	(	frame	->	hdr_len	+	15	)	&	~	15
(	frame	->	hdr_len	+	15	)	&	~	15

frame	->	copied	==	frame	->	hdr_len	+	frame	->	dt_len

(	dev	->	rcv_seq	+	1	)	%	8
dev	->	rcv_seq	+	1	%	8
(	dev	->	send_seq	+	(	8	-	dev	->	unack_seq	)	)	&	0x07

ack	<=	dev	->	unack_seq	||	ack	>	dev	->	send_seq

ack	>	dev	->	send_seq	&&	ack	<=	dev	->	unack_seq

(	i	+	1	)	%	8
i	+	1	%	8
count	<	7	&&	dev	->	write_queue

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	chan	->	s_refnum	+	1	)	%	8
chan	->	s_refnum	+	1	%	8
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

action	==	-	1

(	ch	<	0	)	||	(	ch	>	2	)

s	->	command	&&	(	ch	!=	0	)

action	==	-	1

(	si1	!=	7	)	&&	(	si1	!=	1	)

j	<	16	&&	cnt	<	maxlen

buf	+	j	*	3

ipc	->	num	%	(	sizeof	(	long	)	*	8	)
ipc	->	num	%	sizeof	(	long	)	*	8
(	proto	>>	8	)	&	0xff

!	i	||	len	-	i	!=	4

*	proto	<	0	||	*	proto	>	0x3fff

!	skb	||	skb	->	len	<	3

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

db	->	in_count	>=	RATIO_MAX	||	db	->	bytes_out	>=	RATIO_MAX
db	->	in_count	>=	RATIO_MAX	||	db	->	bytes_out	>=	RATIO_MAX
new_ratio	<	db	->	ratio	||	new_ratio	<	1	*	RATIO_SCALE
new_ratio	<	db	->	ratio	||	new_ratio	<	1	*	RATIO_SCALE
sizeof	(	struct	bsd_db	)	+	(	sizeof	(	struct	bsd_dict	)	*	hsize	)

!	state	||	!	data

indx	--	!=	0

proto	<	0x21	||	proto	>	0xf9	||	!	(	proto	&	0x1	)
proto	<	0x21	||	proto	>	0xf9	||	!	proto	&	0x1
skb_out	&&	skb_tailroom	(	skb_out	)	>=	2

--	ilen	>	0

bitno	<	32	&&	skb_out	&&	skb_tailroom	(	skb_out	)	>	0

(	accm	|	(	0xff	<<	(	bitno	-	8	)	)	)	>>	24
accm	|	(	0xff	<<	(	bitno	-	8	)	)	>>	24
max_ent	>=	mxcode	&&	max_ent	<	db	->	maxmaxcode

!	skb_out	||	(	skb_out	&&	skb_out	->	len	>=	skb_in	->	len	)

!	skb_in	||	!	skb_out

ilen	--	<=	0

*	ibuf	++	<<	bitno

(	incode	>	max_ent	+	2	)	||	(	incode	>	db	->	maxmaxcode	)	||	(	incode	>	max_ent	&&	oldcode	==	CLEAR	)

skb_tailroom	(	skb_out	)	<	codelen	+	extra

--	codelen	<=	0	||	dictp	->	codem1	!=	finchar	-	1

dictp	->	codem1	!=	finchar	-	1

oldcode	!=	CLEAR	&&	max_ent	<	db	->	maxmaxcode

max_ent	>=	MAXCODE	(	n_bits	)	&&	max_ent	<	db	->	maxmaxcode
max_ent	>=	MAXCODE	(	n_bits	)	&&	max_ent	<	db	->	maxmaxcode
!	(	*	s	)	&&	!	(	*	p	)

*	s	<=	*	++	p	&&	*	s	>=	last

!	(	features	&	l2_feature	)
!	features	&	l2_feature
++	i	>	9

(	di	<	0	)	||	(	ch	<	0	)

!	(	dops	&&	dops	->	data_req	&&	dops	->	connect_req	&&	dops	->	disconn_req	)
!	dops	&&	dops	->	data_req	&&	dops	->	connect_req	&&	dops	->	disconn_req
di	<	0	||	ch	<	0

i	<	1	||	i	>	2

tty	->	termios	->	c_cflag	==	old_termios	->	c_cflag	&&	tty	->	termios	->	c_ispeed	==	old_termios	->	c_ispeed	&&	tty	->	termios	->	c_ospeed	==	old_termios	->	c_ospeed

--	cnt	>	0

(	i	>	0	)	&&	(	i	<	9	)

mval	<	0	||	mval	>	255

(	bitpos	<	0	)	||	(	bitpos	>	7	)

bval	<	0	||	bval	>	1

p	++	,	cnt	--

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

b	&	(	bit	>>	j	)

bit	>>	(	keylen	-	j	-	1	)

rbuf	++	,	len	--

len	--	,	rbuf	++

(	line	%	10	)	==	0

(	line	%	10	)	==	5

len	--	,	rbuf	++

(	i	<	len	)	&&	(	line	<	mlen	)

(	mbit	-	1	)	&	0xfe

(	line	)	&&	(	(	line	+	10	)	<	mlen	)

++	line	%	10

(	rlen	+	3	)	/	4
rlen	+	3	/	4
!	(	hdlc	->	cbin	&	0x80	)
!	hdlc	->	cbin	&	0x80
(	!	hdlc	->	do_adapt56	)	&&	(	++	hdlc	->	hdlc_bits1	>=	8	)	&&	(	hdlc	->	bit_shift	==	1	)

hdlc	->	ffvalue	>>	(	8	-	hdlc	->	data_bits	)

++	hdlc	->	hdlc_bits1	==	6

(	par	<	0	)	||	(	par	>	255	)

(	par	<	0	)	||	(	par	>	255	)

(	par	<	0	)	||	(	par	>	255	)

(	par	<	0	)	||	(	par	>	255	)

(	par	<	0	)	||	(	par	>	1	)

(	par	<	0	)	||	(	par	>	1	)

(	par	<	0	)	||	(	par	>	2	)

(	par	<	0	)	||	(	par	>	1	)

(	par	<	0	)	||	(	par	>	255	)

(	par	!=	0	)	&&	(	par	!=	2	)

(	par	<	0	)	||	(	par	>	2	)

(	par	<	0	)	||	(	par	>	5	)

(	par	<	0	)	||	(	par	>	255	)

(	par	<	0	)	||	(	par	>	1	)

(	sample	>>	8	)	&	0x80

(	sample	>>	7	)	&	0xFF

(	sample	>>	(	exponent	+	3	)	)	&	0x0F

~	(	sign	|	(	exponent	<<	4	)	|	mantissa	)
~	sign	|	(	exponent	<<	4	)	|	mantissa
nbits	==	4	&&	e	==	0

e	>>	(	nbits	-	1	)

sign	*	(	(	e	<<	1	)	+	1	)	*	d	>>	1
sign	*	(	e	<<	1	)	+	1	*	d	>>	1
1	<<	(	nbits	-	1	)

--	nmax	&&	delta	>	d

nbits	==	4	&&	(	(	e	&	0x0f	)	==	0	)
nbits	==	4	&&	(	e	&	0x0f	==	0	)
e	>>	(	nbits	-	1	)

sign	*	(	(	e	<<	1	)	+	1	)	*	d	>>	1
sign	*	(	e	<<	1	+	1	)	*	d	>>	1
(	sk	*	sk	)	>>	AMP_BITS

(	sk2	*	sk2	)	>>	AMP_BITS

i	<	NCOEFF	/	2

i	-	NCOEFF	/	2

(	command	<<	2	)	|	3

(	command	<<	4	)	|	(	7	<<	1	)

(	val	>>	2	)	&	0xf

(	val	&	(	ISAC_RSTA_RDO	|	ISAC_RSTA_CRC	|	ISAC_RSTA_RAB	)	)	!=	ISAC_RSTA_CRC
(	val	&	ISAC_RSTA_RDO	|	ISAC_RSTA_CRC	|	ISAC_RSTA_RAB	)	!=	ISAC_RSTA_CRC
(	val	&	(	ISACSX_RSTAD_VFR	|	ISACSX_RSTAD_RDO	|	ISACSX_RSTAD_CRC	|	ISACSX_RSTAD_RAB	)	)	!=	(	ISACSX_RSTAD_VFR	|	ISACSX_RSTAD_CRC	)
(	val	&	ISACSX_RSTAD_VFR	|	ISACSX_RSTAD_RDO	|	ISACSX_RSTAD_CRC	|	ISACSX_RSTAD_RAB	)	!=	ISACSX_RSTAD_VFR	|	ISACSX_RSTAD_CRC
~	(	ISACSX_ISTA_ICD	|	ISACSX_ISTA_CIC	)
~	ISACSX_ISTA_ICD	|	ISACSX_ISTA_CIC
idx	++	<	count

idx	<	(	count	-	3	)

idx	!=	count	-	3

idx	<	(	rcnt	-	3	)

idx	!=	(	rcnt	-	3	)

cs	->	hw	.	hfcD	.	int_s1	&&	count	--

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

base	+	(	(	off	&	0xfc	)	<<	8	)	+	(	(	off	&	3	)	<<	1	)
base	+	(	(	off	&	0xfc	)	<<	8	)	+	(	off	&	3	)	<<	1
cs	->	hw	.	spt	.	cfg_reg	+	i	*	1024

(	retval	&	0xF8	)	+	8
retval	&	0xF8	+	8
1	<<	(	retval	&	7	)
1	<<	retval	&	7
1	<<	(	retval	&	7	)
1	<<	retval	&	7
~	(	1	<<	(	id	&	7	)	)
~	1	<<	id	&	7
(	pc	->	callref	==	-	1	)	&&	(	pc	->	prot	.	ni1	.	invoke_id	==	id	)

cr	>=	-	1

(	!	st	)	||	(	cr	>=	0	)

ilen	>	nlen	||	ilen	==	0

ilen	>	nlen	||	ilen	==	0

(	pc	->	prot	.	ni1	.	invoke_id	)	&&	(	pc	->	prot	.	ni1	.	invoke_id	==	id	)

ilen	>	nlen	||	ilen	==	0

(	pc	->	prot	.	ni1	.	invoke_id	)	&&	(	pc	->	prot	.	ni1	.	invoke_id	==	id	)

*	checklist	!=	-	1

!	(	pc	->	para	.	cause	&	0x80	)
!	pc	->	para	.	cause	&	0x80
(	pc	->	para	.	setup	.	si2	>=	160	)	&&	(	pc	->	para	.	setup	.	si2	<=	175	)

(	pc	->	para	.	setup	.	si2	>=	176	)	&&	(	pc	->	para	.	setup	.	si2	<=	191	)

(	0	==	id	)	||	(	(	3	==	id	)	&&	(	0x10	==	pc	->	para	.	moderate	)	)

id	==	-	1

(	0	==	id	)	||	(	(	3	==	id	)	&&	(	0x10	==	pc	->	para	.	moderate	)	)

id	==	-	1

(	3	==	id	)	&&	(	0x10	==	pc	->	para	.	moderate	)

id	==	-	1

(	ret	<	0	)	&&	(	pc	->	state	!=	11	)

(	0	==	id	)	||	(	(	3	==	id	)	&&	(	0x10	==	pc	->	para	.	moderate	)	)

cr	==	-	2

cr	==	-	1

0	==	(	cr	&	0x7f	)
0	==	cr	&	0x7f
0	==	(	cr	&	0x7fff	)
0	==	cr	&	0x7fff
*	ptr	++	==	2

*	ptr	++	==	2

(	bcs	->	channel	)	&&	(	!	cs	->	hw	.	hfcpci	.	bswapped	)

(	bcs	->	channel	)	&&	(	!	cs	->	hw	.	hfcpci	.	bswapped	)

!	(	3	&	(	long	)	arg	)
!	3	&	(	long	)	arg
!	(	cs	->	hw	.	hfcpci	.	int_m2	&	0x08	)
!	cs	->	hw	.	hfcpci	.	int_m2	&	0x08
cs	->	hw	.	hfcpci	.	int_s1	&&	count	--

(	cs	->	hw	.	hfcpci	.	conn	&	~	7	)	|	1

(	cs	->	hw	.	hfcpci	.	conn	&	~	0x38	)	|	0x08

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

!	(	stard	&	0x40	)
!	stard	&	0x40
(	cs	->	rcvidx	+	count	)	>=	MAX_DFRAME_LEN_L1

(	verA	==	0	)	|	(	verA	==	0xf	)	|	(	verB	==	0	)	|	(	verB	==	0xf	)

count	>	2	*	trans_max

(	count	>	fifo_size	)	||	(	count	<	4	)

(	cs	->	hw	.	hfcsx	.	chip	>>	4	)	==	9

--	count	&&	skb

!	(	3	&	(	long	)	arg	)
!	3	&	(	long	)	arg
--	count	&&	skb

cs	->	hw	.	hfcsx	.	int_s1	&&	count	--

(	cs	->	hw	.	hfcsx	.	conn	&	~	7	)	|	1

(	cs	->	hw	.	hfcsx	.	conn	&	~	0x38	)	|	0x08

(	!	ireg	->	bstat	)	&&	cnt

*	buf	++	==	DLE

*	src	++	==	DLE

features	>=	0	&&	features	<	32

!	(	ival	&	PCI_IRQ_ASSERT	)
!	ival	&	PCI_IRQ_ASSERT
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

++	hfc	->	ctrl_cnt	==	1

state	==	old_state	||	state	<	1	||	state	>	8

state	<	4	||	state	==	7	||	state	==	8

state	==	7	&&	!	hfc	->	l1_activated

old_state	==	7	||	old_state	==	8

fifo	->	active	&&	!	status

hfc	->	threshold_mask	&	(	1	<<	fifon	)

(	0	-	fifo	->	bit_line	)	/	8
0	-	fifo	->	bit_line	/	8
status	&&	!	hfc	->	disc_flag

fifo	->	active	&&	!	status

status	&&	!	hfc	->	disc_flag

fifo	->	skbuff	->	len	+	len	<	fifo	->	max_size

(	!	fifo	->	active	)	||	(	urb	->	status	)

hfc	->	l1_state	!=	3	&&	hfc	->	l1_state	!=	7

(	(	ep_addr	&	0x7f	)	-	1	)	*	2
(	ep_addr	&	0x7f	)	-	1	*	2
(	(	ep_addr	&	0x7f	)	-	1	)	*	2
ep_addr	&	0x7f	-	1	*	2
cs	->	hw	.	njet	.	isac	+	4	*	offset

cs	->	hw	.	njet	.	isac	+	4	*	offset

cs	->	dc	.	amd7930	.	lmr1	|	(	*	chan	+	1	)

cs	->	dc	.	amd7930	.	lmr1	&	~	(	*	chan	+	1	)
cs	->	dc	.	amd7930	.	lmr1	&	~	*	chan	+	1
!	(	cs	->	dc	.	amd7930	.	lmr1	&	3	)
!	cs	->	dc	.	amd7930	.	lmr1	&	3
~	(	TJ_AMD_IRQ	<<	2	)
~	TJ_AMD_IRQ	<<	2
!	(	s1val	&	TJ_AMD_IRQ	)
!	s1val	&	TJ_AMD_IRQ
(	s0val	|	s1val	)	==	0
s0val	|	s1val	==	0
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	cs	->	subtyp	==	DIVA_IPAC_PCI	)	||	(	cs	->	subtyp	==	DIVA_IPACX_PCI	)

(	cs	->	subtyp	==	DIVA_ISA	)	||	(	cs	->	subtyp	==	DIVA_IPAC_ISA	)

(	cs	->	subtyp	==	DIVA_IPAC_PCI	)	||	(	cs	->	subtyp	==	DIVA_IPACX_PCI	)

(	cs	->	subtyp	==	DIVA_IPAC_ISA	)	||	(	cs	->	subtyp	==	DIVA_IPAC_PCI	)	||	(	cs	->	subtyp	==	DIVA_IPACX_PCI	)

(	cs	->	subtyp	!=	DIVA_IPAC_ISA	)	&&	(	cs	->	subtyp	!=	DIVA_IPAC_PCI	)	&&	(	cs	->	subtyp	!=	DIVA_IPACX_PCI	)

(	st	->	l2	.	vs	-	st	->	l2	.	va	)	%	128
st	->	l2	.	vs	-	st	->	l2	.	va	%	128
(	st	->	l2	.	vs	-	st	->	l2	.	va	)	%	8
st	->	l2	.	vs	-	st	->	l2	.	va	%	8
(	skb	->	len	-	i	)	>	st	->	l2	.	maxlen

(	*	skb	->	data	&	0x2	)	>>	1
*	skb	->	data	&	0x2	>>	1
skb	->	len	!=	l2addrsize	(	&	st	->	l2	)	+	1

skb	->	len	>	st	->	l2	.	maxlen	+	l2addrsize	(	&	st	->	l2	)	+	1

skb	->	len	<	headers	+	5

skb	->	len	<	headers	+	3

(	(	nr	-	l2	->	va	)	%	128	)	<=	(	(	l2	->	vs	-	l2	->	va	)	%	128	)
(	nr	-	l2	->	va	%	128	)	<=	(	l2	->	vs	-	l2	->	va	%	128	)
(	(	nr	-	l2	->	va	)	%	8	)	<=	(	(	l2	->	vs	-	l2	->	va	)	%	8	)
(	nr	-	l2	->	va	%	8	)	<=	(	(	l2	->	vs	-	l2	->	va	)	%	8	)
(	l2	->	sow	+	1	)	%	l2	->	window
l2	->	sow	+	1	%	l2	->	window
(	l2	->	vs	-	l2	->	va	)	%	128
l2	->	vs	-	l2	->	va	%	128
(	l2	->	vs	-	l2	->	va	)	%	8
l2	->	vs	-	l2	->	va	%	8
(	p1	+	l2	->	sow	)	%	l2	->	window
p1	+	l2	->	sow	%	l2	->	window
(	l2	->	vs	+	1	)	%	128
l2	->	vs	+	1	%	128
(	l2	->	vs	+	1	)	%	8
l2	->	vs	+	1	%	8
!	rsp	&&	PollFlag

adapter	->	io	+	AVM_DATA	+	(	offset	&	0xf	)
adapter	->	io	+	AVM_DATA	+	offset	&	0xf
adapter	->	io	+	AVM_DATA	+	(	offset	&	0xf	)
adapter	->	io	+	AVM_DATA	+	offset	&	0xf
(	count	+	3	)	/	4
count	+	3	/	4
(	count	+	3	)	/	4
count	+	3	/	4
(	count	+	3	)	/	4
count	+	3	/	4
(	count	+	3	)	/	4
count	+	3	/	4
!	(	sval	&	AVM_STATUS0_IRQ_ISAC	)
!	sval	&	AVM_STATUS0_IRQ_ISAC
!	(	sval	&	AVM_STATUS0_IRQ_HDLC	)
!	sval	&	AVM_STATUS0_IRQ_HDLC
(	!	st	->	l3	.	proc	)	&&	dequeued

(	!	st	->	l3	.	proc	)	&&	dequeued

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

st	->	l2	.	tei	!=	-	1

(	baud_base	/	quot	)	<	2400

serial_inp	(	cs	,	UART_LCR	)	&	~	UART_LCR_SBC

~	(	UART_MCR_DTR	|	UART_MCR_RTS	)
~	UART_MCR_DTR	|	UART_MCR_RTS
count	>	MAX_MODEM_BUF	-	fp

cs	->	hw	.	elsa	.	transcnt	&&	!	(	cs	->	hw	.	elsa	.	IER	&	UART_IER_THRI	)
cs	->	hw	.	elsa	.	transcnt	&&	!	cs	->	hw	.	elsa	.	IER	&	UART_IER_THRI
*	status	&	(	UART_LSR_BI	|	UART_LSR_PE	|	UART_LSR_FE	|	UART_LSR_OE	)
*	status	&	UART_LSR_BI	|	UART_LSR_PE	|	UART_LSR_FE	|	UART_LSR_OE
--	cs	->	hw	.	elsa	.	transcnt	<=	0

--	count	>	0

(	cs	->	hw	.	elsa	.	transcnt	<	WAKEUP_CHARS	)	&&	(	cs	->	hw	.	elsa	.	MFlag	==	2	)

pass_counter	++	>	RS_ISR_PASS_LIMIT

(	iir	&	0xf	)	==	0
iir	&	0xf	==	0
!	(	iir	&	UART_IIR_NO_INT	)
!	iir	&	UART_IIR_NO_INT
count	>	MAX_MODEM_BUF	-	fp

cs	->	hw	.	elsa	.	transcnt	&&	!	(	cs	->	hw	.	elsa	.	IER	&	UART_IER_THRI	)
cs	->	hw	.	elsa	.	transcnt	&&	!	cs	->	hw	.	elsa	.	IER	&	UART_IER_THRI
timeout	--	&&	cs	->	hw	.	elsa	.	transcnt

timeout	--	&&	cs	->	hw	.	elsa	.	transcnt

timeout	--	&&	cs	->	hw	.	elsa	.	transcnt

timeout	--	&&	cs	->	hw	.	elsa	.	transcnt

timeout	--	&&	cs	->	hw	.	elsa	.	transcnt

timeout	--	&&	cs	->	hw	.	elsa	.	transcnt

timeout	--	&&	cs	->	hw	.	elsa	.	transcnt

timeout	--	&&	cs	->	hw	.	elsa	.	transcnt

timeout	--	&&	cs	->	hw	.	elsa	.	transcnt

bcs	->	tx_skb	&&	(	bcs	->	mode	!=	1	)

~	(	RESET_9050	+	RESET_GAZEL	)
~	RESET_9050	+	RESET_GAZEL
~	(	RESET_9050	+	RESET_GAZEL	)
~	RESET_9050	+	RESET_GAZEL
(	cs	->	subtyp	==	R647	)	||	(	cs	->	subtyp	==	R685	)

(	bcs	->	channel	+	1	)	*	2
bcs	->	channel	+	1	*	2
++	adapter	->	led_counter	%	50

(	retval	&	0xF8	)	+	8
retval	&	0xF8	+	8
1	<<	(	retval	&	7	)
1	<<	retval	&	7
1	<<	(	retval	&	7	)
1	<<	retval	&	7
~	(	1	<<	(	id	&	7	)	)
~	1	<<	id	&	7
(	pc	->	callref	==	-	1	)	&&	(	pc	->	prot	.	dss1	.	invoke_id	==	id	)

cr	>=	-	1

(	!	st	)	||	(	cr	>=	0	)

ilen	>	nlen	||	ilen	==	0

ilen	>	nlen	||	ilen	==	0

(	pc	->	prot	.	dss1	.	invoke_id	)	&&	(	pc	->	prot	.	dss1	.	invoke_id	==	id	)

ilen	>	nlen	||	ilen	==	0

(	pc	->	prot	.	dss1	.	invoke_id	)	&&	(	pc	->	prot	.	dss1	.	invoke_id	==	id	)

*	checklist	!=	-	1

!	(	pc	->	para	.	cause	&	0x80	)
!	pc	->	para	.	cause	&	0x80
(	pc	->	para	.	setup	.	si2	>=	160	)	&&	(	pc	->	para	.	setup	.	si2	<=	175	)

(	pc	->	para	.	setup	.	si2	>=	176	)	&&	(	pc	->	para	.	setup	.	si2	<=	191	)

(	0	==	id	)	||	(	(	3	==	id	)	&&	(	0x10	==	pc	->	para	.	moderate	)	)

id	==	-	1

(	0	==	id	)	||	(	(	3	==	id	)	&&	(	0x10	==	pc	->	para	.	moderate	)	)

id	==	-	1

(	3	==	id	)	&&	(	0x10	==	pc	->	para	.	moderate	)

id	==	-	1

(	ret	<	0	)	&&	(	pc	->	state	!=	11	)

(	0	==	id	)	||	(	(	3	==	id	)	&&	(	0x10	==	pc	->	para	.	moderate	)	)

cr	==	-	2

cr	==	-	1

0	==	(	cr	&	0x7f	)
0	==	cr	&	0x7f
0	==	(	cr	&	0x7fff	)
0	==	cr	&	0x7fff
*	ptr	++	==	2

*	ptr	++	==	2

(	idx	<	rcnt	)	&&	WaitNoBusy	(	cs	)

(	idx	<	count	)	&&	WaitNoBusy	(	cs	)

(	receive	||	transmit	)	&&	count
receive	||	transmit	&&	count
~	(	1	<<	bc	)
~	1	<<	bc
(	tag	==	0x80	)	||	(	tag	==	0x81	)

!	(	ftyp	&	1	)
!	ftyp	&	1
(	skb_queue_len	(	&	l1	->	d_tx_queue	)	==	1	)	&&	(	l1	->	tx_cnt	<=	0	)

!	bch	->	tx_skb	&&	(	bch	->	tx_cnt	<=	0	)

~	(	bch	->	bchan	&	3	)
~	bch	->	bchan	&	3
(	z1	<	4	)	||	(	z1	>	MAX_D_FRAME_SIZE	)

1	<<	(	7	-	TRANS_TIMER_MODE	)
1	<<	(	7	-	TRANS_TIMER_MODE	)
~	(	1	<<	i	)
~	1	<<	i
cs	->	subtyp	==	ELSA_QS1000PCI	||	cs	->	subtyp	==	ELSA_QS3000PCI

(	cs	->	subtyp	==	ELSA_PCFPRO	)	||	(	cs	->	subtyp	==	ELSA_QS3000	)	||	(	cs	->	subtyp	==	ELSA_PCF	)	||	(	cs	->	subtyp	==	ELSA_QS3000PCI	)

(	cs	->	subtyp	==	ELSA_QS1000PCI	)	||	(	cs	->	subtyp	==	ELSA_QS3000PCI	)	||	(	cs	->	subtyp	==	ELSA_PCMCIA_IPAC	)

cs	->	subtyp	==	ELSA_PCMCIA	||	cs	->	subtyp	==	ELSA_PCMCIA_IPAC

(	cs	->	subtyp	==	ELSA_QS1000PCI	)	||	(	cs	->	subtyp	==	ELSA_QS3000PCI	)

(	cs	->	subtyp	==	ELSA_QS1000	)	||	(	cs	->	subtyp	==	ELSA_QS3000	)

(	cs	->	subtyp	==	ELSA_PCMCIA	)	||	(	cs	->	subtyp	==	ELSA_PCMCIA_IPAC	)	||	(	cs	->	subtyp	==	ELSA_QS1000PCI	)

(	cs	->	hw	.	elsa	.	counter	>	10	)	&&	(	cs	->	hw	.	elsa	.	counter	<	16	)

65	==	++	p16_1	*	++	p16_2

1025	==	++	pfp_1	*	++	pfp_2

33	==	++	p8_1	*	++	p8_2

17	==	++	pc_1	*	++	pc_2

(	val	>>	2	)	&	0xf

(	!	cs	->	tx_skb	)	||	(	cs	->	tx_skb	->	len	<=	0	)

len	-	packet_offset	<	desc	->	length

!	test_bit	(	0	,	&	d_out	->	busy	)	&&	!	test_bit	(	1	,	&	d_out	->	busy	)

(	fi	->	state	>=	fi	->	fsm	->	state_count	)	||	(	event	>=	fi	->	fsm	->	event_count	)

(	cs	->	hw	.	sedl	.	bus	==	SEDL_BUS_PCMCIA	)	&&	(	*	cs	->	busy_flag	==	1	)

!	(	(	cs	->	hw	.	sedl	.	bus	==	SEDL_BUS_PCMCIA	)	&&	(	cs	->	hw	.	sedl	.	chip	==	SEDL_CHIP_ISAC_HSCX	)	)
!	(	cs	->	hw	.	sedl	.	bus	==	SEDL_BUS_PCMCIA	)	&&	(	cs	->	hw	.	sedl	.	chip	==	SEDL_CHIP_ISAC_HSCX	)
(	cs	->	hw	.	sedl	.	chip	==	SEDL_CHIP_ISAC_ISAR	)	&&	(	cs	->	hw	.	sedl	.	bus	==	SEDL_BUS_PCI	)

++	hw	->	ctrl_cnt	==	1

(	!	!	fifo	->	dch	+	!	!	fifo	->	bch	+	!	!	fifo	->	ech	)	!=	1

fifo	->	active	&&	!	status

(	!	fifo	->	active	)	||	(	urb	->	status	)

fifo	->	active	&&	!	status

(	0	-	fifo	->	bit_line	)	/	8
0	-	fifo	->	bit_line	/	8
hw	->	fifos	+	channel	*	2	+	1

hw	->	fifos	+	channel	*	2	+	1

hw	->	fifos	+	channel	*	2	+	1

hw	->	fifos	+	channel	*	2

(	(	ep_addr	&	0x7f	)	-	1	)	*	2
ep_addr	&	0x7f	-	1	*	2
(	(	ep_addr	&	0x7f	)	-	1	)	*	2
(	ep_addr	&	0x7f	)	-	1	*	2
0xff	&	inl	(	fc	->	addr	+	AVM_ISACX_DATA	)

(	bch	->	nr	-	1	)	&	1

(	bch	->	nr	-	1	)	&	1

(	bch	->	rx_skb	->	len	+	count	)	>	bch	->	maxlen

(	bch	->	nr	-	1	)	&	1

bch	->	tx_skb	&&	bch	->	tx_idx	<	bch	->	tx_skb	->	len

(	bch	->	nr	-	1	)	&	1

cq	->	channel	<	0	||	cq	->	channel	>	3

(	card	->	send	.	dmacur	-	card	->	send	.	dmastart	)	>>	2

(	card	->	recv	.	dmacur	-	card	->	recv	.	dmastart	)	>>	2

(	bc	->	bch	.	rx_skb	->	len	+	cnt	)	>	bc	->	bch	.	maxlen

(	card	->	send	.	dmacur	-	card	->	send	.	dmastart	)	>>	2

bc	->	free	>	card	->	send	.	size	/	2

card	->	send	.	idx	<	(	(	card	->	send	.	size	/	2	)	-	1	)

(	card	->	recv	.	size	/	2	)	-	1

bc	->	txstate	&	(	TX_IDLE	|	TX_INIT	|	TX_UNDERRUN	)
bc	->	txstate	&	TX_IDLE	|	TX_INIT	|	TX_UNDERRUN
bc	->	txstate	&	(	TX_IDLE	|	TX_INIT	|	TX_UNDERRUN	)
bc	->	txstate	&	TX_IDLE	|	TX_INIT	|	TX_UNDERRUN
bc	->	bch	.	tx_skb	&&	bc	->	bch	.	tx_idx	<	bc	->	bch	.	tx_skb	->	len

!	(	bc	->	txstate	&	(	TX_UNDERRUN	|	TX_INIT	)	)
!	bc	->	txstate	&	TX_UNDERRUN	|	TX_INIT
!	(	bc	->	txstate	&	(	TX_IDLE	|	TX_INIT	)	)
!	bc	->	txstate	&	(	TX_IDLE	|	TX_INIT	)
(	card	->	recv	.	dmacur	-	card	->	recv	.	dmastart	)	>>	2

(	card	->	send	.	dmacur	-	card	->	send	.	dmastart	)	>>	2

cq	->	channel	<	0	||	cq	->	channel	>	3

(	isac	->	dch	.	rx_skb	->	len	+	count	)	>=	isac	->	dch	.	maxlen

isac	->	dch	.	tx_skb	&&	isac	->	dch	.	tx_idx	<	isac	->	dch	.	tx_skb	->	len

isac	->	mon_txc	&&	(	isac	->	mon_txp	>=	isac	->	mon_txc	)

isac	->	mon_txc	&&	(	isac	->	mon_txp	>=	isac	->	mon_txc	)

isac	->	mon_txc	&&	(	isac	->	mon_txp	>=	isac	->	mon_txc	)

isac	->	mon_txc	&&	(	isac	->	mon_txp	>=	isac	->	mon_txc	)

!	(	isac	->	adf2	&	0x80	)
!	isac	->	adf2	&	0x80
hx	->	bch	.	tx_skb	&&	hx	->	bch	.	tx_idx	<	hx	->	bch	.	tx_skb	->	len

maxloop	&&	!	cnt

cq	->	channel	<	0	||	cq	->	channel	>	3

(	bch	->	nr	&	2	)	&&	(	!	hc	->	hw	.	bswapped	)

(	!	bch	->	tx_skb	)	||	bch	->	tx_skb	->	len	<=	0

(	bch	->	nr	&	2	)	&&	(	!	hc	->	hw	.	bswapped	)

test_bit	(	FLG_HFC_TIMER_T3	,	&	dch	->	Flags	)	&&	hc	->	hw	.	nt_timer	<	0

bch	->	tx_skb	&&	bch	->	tx_idx	<	bch	->	tx_skb	->	len

dch	->	tx_skb	&&	dch	->	tx_idx	<	dch	->	tx_skb	->	len

!	(	hc	->	hw	.	int_m2	&	0x08	)
!	hc	->	hw	.	int_m2	&	0x08
cq	->	channel	<	0	||	cq	->	channel	>	2

(	hc	->	hw	.	conn	&	~	7	)	|	6

(	hc	->	hw	.	conn	&	~	0x38	)	|	0x30

(	hc	->	hw	.	conn	&	~	0x3f	)	|	0x09

cq	->	channel	<	1	||	cq	->	channel	>	2	||	cq	->	p1	<	1	||	cq	->	p1	>	2

(	hc	->	hw	.	conn	&	~	0x3f	)	|	0x36

(	hc	->	hw	.	conn	&	~	0x3f	)	|	0x09

(	!	isar	->	bstat	)	&&	cnt

(	ch	->	bch	.	rx_skb	->	len	+	ch	->	is	->	clsb	)	>	(	ch	->	bch	.	maxlen	+	2	)

(	ch	->	bch	.	rx_skb	->	len	+	ch	->	is	->	clsb	)	>	(	ch	->	bch	.	maxlen	+	2	)

ch	->	bch	.	tx_skb	&&	(	ch	->	bch	.	tx_skb	->	len	>	ch	->	bch	.	tx_idx	)

ch	->	bch	.	tx_skb	&&	(	ch	->	bch	.	tx_skb	->	len	>	ch	->	bch	.	tx_idx	)

0x01	&	(	addr	>>	8	)

addr	|	(	highbit	<<	8	)

reg	&	~	2

0x02020202	<<	(	x	*	4	)

(	mask	>>	(	i	<<	3	)	)	&	0xff

mask	&	(	0x00000001	<<	i	)

mask	&	(	0x00000001	<<	i	)

mask	&	(	0x00000001	<<	i	)

(	(	ch	/	4	)	*	8	)	+	(	(	ch	%	4	)	*	4	)	+	1

(	(	ch	/	4	)	*	8	)	+	(	(	ch	%	4	)	*	4	)	+	1

(	i	<<	2	)	|	2

0x2	<<	(	i	*	2	)

0x1	<<	(	i	*	2	)

(	i	<<	2	)	|	2

(	i	<<	2	)	|	2

lled	<<	24	|	lled	<<	16	|	lled	<<	8	|	lled

hc	->	DTMFbase	+	(	(	co	<<	7	)	|	(	ch	<<	2	)	)
hc	->	DTMFbase	+	(	co	<<	7	)	|	(	ch	<<	2	)
(	!	dch	)	&&	(	!	bch	)

(	!	len	)	&&	*	txpending	!=	1

ii	-	i	>	Zspace

(	!	dch	)	&&	(	!	bch	)

(	Zsize	+	(	*	sp	)	->	len	)	>	(	maxlen	+	3	)

(	temp	&	0x60	)	==	0x60
temp	&	0x60	==	0x60
(	temp	&	0x60	)	!=	0x60
temp	&	0x60	!=	0x60
(	temp	&	0x60	)	!=	0x60
temp	&	0x60	!=	0x60
(	block	<<	2	)	+	(	j	>>	1	)
block	<<	2	+	j	>>	1
(	!	dch	)	&&	(	!	bch	)

oslot_tx	>=	0	&&	slot_tx	!=	oslot_tx

oslot_rx	>=	0	&&	slot_rx	!=	oslot_rx

(	oslot_rx	<<	1	)	|	1

(	oslot_rx	<<	1	)	|	1

conf	>=	0	||	bank_tx	>	1

conf	>=	0	||	bank_rx	>	1

(	slot_rx	<<	1	)	|	1

(	(	ch	/	4	)	*	8	)	+	(	(	ch	%	4	)	*	4	)	+	1

slot_tx	<	0	||	slot_rx	<	0	||	bank_tx	<	0	||	bank_rx	<	0

num	>=	0	&&	num	<=	7

slot_tx	<	hc	->	slots	&&	bank_tx	<=	2	&&	slot_rx	<	hc	->	slots	&&	bank_rx	<=	2

!	!	(	cq	->	p1	>>	4	)
!	!	cq	->	p1	>>	4
(	pt	<<	2	)	+	2
pt	<<	2	+	2
clock	==	HFC_cnt	+	1

(	val	>>	6	)	&	3

(	dch	->	rx_skb	->	len	+	count	)	>=	dch	->	maxlen

card	->	dch	.	tx_skb	&&	card	->	dch	.	tx_idx	<	card	->	dch	.	tx_skb	->	len

wch	->	bch	.	rx_skb	->	len	+	count	>	wch	->	bch	.	maxlen

wch	->	bch	.	tx_skb	&&	wch	->	bch	.	tx_idx	<	wch	->	bch	.	tx_skb	->	len

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

ctrl	->	profile	.	nbchannel	*	4	*	-	want

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

inb	(	port	+	0x03	)	&	0x1

inb	(	port	+	0x02	)	&	0x1

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	(	cardnr	&	0x01	)	<<	3	)	|	(	(	cardnr	&	0x02	)	<<	1	)	|	(	(	cardnr	&	0x04	)	>>	1	)	|	(	(	cardnr	&	0x08	)	>>	3	)
(	cardnr	&	0x01	<<	3	)	|	(	(	cardnr	&	0x02	)	<<	1	)	|	(	(	cardnr	&	0x04	)	>>	1	)	|	(	cardnr	&	0x08	>>	3	)
(	base	>>	4	)	&	0xff

(	(	base	>>	4	)	)	&	0x3

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

1024	*	(	nconn	+	1	)
1024	*	nconn	+	1
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

bit	--	>	0

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

!	(	length	%	4	)	&&	!	(	length	&	0x03	)
!	length	%	4	&&	!	length	&	0x03
!	(	length	%	4	)	&&	!	(	length	&	0x03	)
!	length	%	4	&&	!	length	&	0x03
i	<	(	tasks	-	1	)

i	<	(	tasks	-	1	)

i	<	(	tasks	-	1	)

i	<	(	tasks	-	1	)

i	<	(	tasks	-	1	)

i	<	(	tasks	-	1	)

!	a	->	xdi_adapter	.	ram	||	!	a	->	xdi_adapter	.	reset	||	!	a	->	xdi_adapter	.	cfg

!	a	->	xdi_adapter	.	ControllerNumber	&&	a	->	xdi_adapter	.	Address

free_id	!=	-	1

*	key	&&	(	*	ref	++	==	*	key	++	)

!	*	key	&&	!	*	ref

!	ref_len	||	(	ref_len	>	nmbr_len	)

*	nmbr	--	!=	*	ref	--

!	req	->	rc	||	req	->	req

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

!	a	->	xdi_adapter	.	ram	||	!	a	->	xdi_adapter	.	reset	||	!	a	->	xdi_adapter	.	cfg

dsp_num	/	7	+	1

!	rc	&&	(	i	>	0	)

--	i	>	0

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

!	divas_um_idi_entity_assigned	(	entity	)	||	p_os	->	aborted

!	divas_um_idi_entity_start_remove	(	entity	)	||	p_os	->	aborted

!	divas_um_idi_entity_assigned	(	entity	)	||	p_os	->	aborted

i	++	<	30

port	!=	-	1

strcmp	(	tdev	->	name	,	id	->	name	)	==	0	&&	strcmp	(	tdev	->	vendor	,	id	->	vendor	)	==	0

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	hwirq	>>	11	)	&	0xF

(	hwirq	>>	3	)	&	0xFF

1	<<	(	hwirq	&	0x7	)
1	<<	hwirq	&	0x7
hwirq	&	~	0x7

hwirq	&	~	0x7

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

status	==	0	&&	id	!=	ctrl	->	nr

status	==	-	EAGAIN

!	ctrl	||	!	ctrl	->	cmd

!	ctrl	||	!	ctrl	->	read_cmd

!	ctrl	||	!	ctrl	->	write_cmd

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

type	==	resource_type	(	r	)	&&	res_num	--	==	0

type	==	resource_type	(	r	)	&&	r	->	name	&&	!	strncmp	(	r	->	name	,	name	,	SPMI_MAX_RES_NAME	)

r	&&	r	->	label	&&	!	strncmp	(	r	->	label	,	label	,	SPMI_MAX_RES_NAME	)

!	retries	--	||	srp_new_cm_id	(	target	)

p	+	i	*	2

(	opt_mask	&	SRP_OPT_ALL	)	==	SRP_OPT_ALL
opt_mask	&	SRP_OPT_ALL	==	SRP_OPT_ALL
!	host	->	srp_dev	->	fmr_pool	&&	!	target	->	allow_ext_sg	&&	target	->	cmd_sg_cnt	<	target	->	sg_tablesize

mcast	->	logcount	++	<	20

mcast	->	logcount	++	<	20

(	priv	->	qp	->	qp_num	>>	16	)	&	0xff

(	priv	->	qp	->	qp_num	>>	8	)	&	0xff

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

(	ep	->	speed_hi	<<	16	)	|	ep	->	speed

(	ETHTOOL_RX_FLOW_SPEC_RING_VF	&	ring_cookie	)	>>	ETHTOOL_RX_FLOW_SPEC_RING_VF_OFF
ETHTOOL_RX_FLOW_SPEC_RING_VF	&	ring_cookie	>>	ETHTOOL_RX_FLOW_SPEC_RING_VF_OFF
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

!	path	->	query	&&	path_rec_start	(	dev	,	path	)

(	priv	->	pkey	>>	8	)	&	0xff

!	path	||	!	path	->	valid

!	path	->	query	&&	path_rec_start	(	dev	,	path	)

(	priv	->	pkey	>>	8	)	&	0xff

(	be16_to_cpup	(	(	__be16	*	)	skb	->	data	)	!=	ETH_P_ARP	)	&&	(	be16_to_cpup	(	(	__be16	*	)	skb	->	data	)	!=	ETH_P_RARP	)

wc	->	slid	==	priv	->	local_lid	&&	wc	->	src_qp	==	priv	->	qp	->	qp_num

priv	->	tx_head	!=	priv	->	tx_tail	||	recvs_pending	(	dev	)

(	int	)	priv	->	tx_tail	-	(	int	)	priv	->	tx_head	<	0

list_empty	(	&	priv	->	cm	.	rx_flush_list	)	||	!	list_empty	(	&	priv	->	cm	.	rx_drain_list	)

!	--	p	->	recv_count

!	(	wr_id	&	IPOIB_CM_RX_UPDATE_MASK	)
!	wr_id	&	IPOIB_CM_RX_UPDATE_MASK
!	IPOIB_CM_SUPPORTED	(	dev	->	dev_addr	)	||	!	priv	->	cm	.	id

!	list_empty	(	&	priv	->	cm	.	rx_error_list	)	||	!	list_empty	(	&	priv	->	cm	.	rx_flush_list	)	||	!	list_empty	(	&	priv	->	cm	.	rx_drain_list	)

(	int	)	p	->	tx_tail	-	(	int	)	p	->	tx_head	<	0

(	int	)	p	->	tx_tail	-	(	int	)	p	->	tx_head	<	0

datalen	>	rx_data_len	||	(	datalen	+	4	)	<	rx_data_len

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

ib_conn	->	post_recv_buf_count	==	0	&&	(	atomic_read	(	&	ib_conn	->	post_send_buf_count	)	==	0	)

ib_conn	->	post_recv_buf_count	==	0	&&	atomic_read	(	&	ib_conn	->	post_send_buf_count	)	==	0

!	(	completed_rx	&	63	)
!	completed_rx	&	63
20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

!	sdev	||	sdev	->	device	!=	event	->	device

!	sport	->	lid	&&	!	sport	->	sm_lid

!	mad_wc	||	!	mad_wc	->	recv_buf	.	mad

srp_cmd	->	add_cdb_len	&	~	3

ioctx	->	n_rbuf	>	(	srp_cmd	->	data_out_desc_cnt	+	srp_cmd	->	data_in_desc_cnt	)

ioctx	->	n_rdma	&&	!	ioctx	->	rdma_ius

!	rsp	||	!	rej	||	!	rep_param

ret	&&	i	>	0

(	tmp	!=	0	)	&&	(	tmp	!=	1	)

cma_any_addr	(	(	struct	sockaddr	*	)	&	id_priv	->	id	.	route	.	addr	.	src_addr	)	&&	!	id_priv	->	cma_dev

!	cma_any_addr	(	(	struct	sockaddr	*	)	&	id	->	route	.	addr	.	src_addr	)

!	status	&&	!	id_priv	->	cma_dev

!	src_addr	||	!	src_addr	->	sa_family

net_random	(	)	%	remaining	+	low

last_used_port	!=	rover	&&	!	idr_find	(	ps	,	(	unsigned	short	)	rover	)

(	rover	<	low	)	||	(	rover	>	high	)

ret	&&	!	IS_ERR	(	id	)

!	id	->	qp	&&	conn_param

!	status	&&	id_priv	->	id	.	qp

(	dev_addr	->	bound_dev_if	==	ndev	->	ifindex	)	&&	memcmp	(	dev_addr	->	src_dev_addr	,	ndev	->	dev_addr	,	ndev	->	addr_len	)

index	<	0	||	index	>=	cache	->	table_len

p	<=	end_port	(	device	)	-	start_port	(	device	)

index	<	0	||	index	>=	cache	->	table_len

!	device	->	cache	.	pkey_cache	||	!	device	->	cache	.	gid_cache	||	!	device	->	cache	.	lmc_cache

p	<=	end_port	(	device	)	-	start_port	(	device	)

p	<=	end_port	(	device	)	-	start_port	(	device	)

p	<=	end_port	(	device	)	-	start_port	(	device	)

qpn	==	-	1

qpn	==	-	1

!	mad_snoop_priv	||	!	(	mad_snoop_priv	->	mad_snoop_flags	&	mad_snoop_flags	)
!	mad_snoop_priv	||	!	mad_snoop_priv	->	mad_snoop_flags	&	mad_snoop_flags
!	mad_snoop_priv	||	!	(	mad_snoop_priv	->	mad_snoop_flags	&	mad_snoop_flags	)
!	mad_snoop_priv	||	!	mad_snoop_priv	->	mad_snoop_flags	&	mad_snoop_flags
!	port_priv	||	!	recv_mad_agent

seg_size	-	data_len	%	seg_size

!	send_buf	->	mad_agent	->	send_handler	||	(	send_buf	->	timeout_ms	&&	!	send_buf	->	mad_agent	->	recv_handler	)

1	+	(	mad_send_wr	->	timeout	>	0	)
1	+	mad_send_wr	->	timeout	>	0
index	==	-	1

--	mad_send_wr	->	refcount	>	0

send_queue	->	count	--	>	send_queue	->	max_active

!	mad_send_wr	->	timeout	||	mad_send_wr	->	refcount	>	1

++	recv_queue	->	count	<	recv_queue	->	max_active

!	src_data	||	!	dst_data

(	cur_cm_id_priv	->	id	.	service_mask	&	service_id	)	==	(	service_mask	&	cur_cm_id_priv	->	id	.	service_id	)	&&	(	cm_id_priv	->	id	.	device	==	cur_cm_id_priv	->	id	.	device	)	&&	!	data_cmp
cur_cm_id_priv	->	id	.	service_mask	&	service_id	==	(	service_mask	&	cur_cm_id_priv	->	id	.	service_id	)	&&	(	cm_id_priv	->	id	.	device	==	cur_cm_id_priv	->	id	.	device	)	&&	!	data_cmp
(	cm_id_priv	->	id	.	service_mask	&	service_id	)	==	cm_id_priv	->	id	.	service_id	&&	(	cm_id_priv	->	id	.	device	==	device	)	&&	!	data_cmp
cm_id_priv	->	id	.	service_mask	&	service_id	==	cm_id_priv	->	id	.	service_id	&&	(	cm_id_priv	->	id	.	device	==	device	)	&&	!	data_cmp
1	<<	max	(	iba_time	-	8	,	0	)

cm_convert_to_ms	(	param	->	primary_path	->	packet_life_time	)	*	2	+	cm_convert_to_ms	(	param	->	remote_cm_response_timeout	)

be64_to_cpu	(	local_ca_guid	)	>	be64_to_cpu	(	remote_ca_guid	)	||	(	(	local_ca_guid	==	remote_ca_guid	)	&&	(	be32_to_cpu	(	local_qpn	)	>	be32_to_cpu	(	remote_qpn	)	)	)

!	ret	&&	!	atomic_add_negative	(	-	1	,	&	cm_id_priv	->	work_count	)

1	+	(	(	(	struct	cm_req_msg	*	)	mad_recv_wc	->	recv_buf	.	mad	)	->	alt_local_lid	!=	0	)
1	+	(	(	struct	cm_req_msg	*	)	mad_recv_wc	->	recv_buf	.	mad	)	->	alt_local_lid	!=	0
!	hdr1	->	grh_present	&&	!	hdr2	->	grh_present

ureq	.	qpn	!=	0	&&	ureq	.	qpn	!=	1

--	i	>=	s

i	<=	umad_dev	->	end_port	-	umad_dev	->	start_port

rec	->	hop_limit	>	1	||	force_grh

i	<=	e	-	s

i	<=	e	-	s

--	i	>=	0

i	<=	sa_dev	->	end_port	-	sa_dev	->	start_port

!	inode	||	atomic_dec_and_test	(	&	xrcd	->	usecnt	)

inode	&&	!	live

!	pd	||	!	scq

rcq	&&	rcq	!=	scq

rcq	&&	rcq	!=	scq

!	attr	||	!	init_attr

(	4	-	payload_bytes	)	&	3

new_buf	&&	(	get_seg_num	(	new_buf	)	==	rmpp_recv	->	seg_num	+	1	)

hdr_size	+	rmpp_recv	->	seg_num	*	data_size	-	pad

(	rmpp_recv	->	state	==	RMPP_STATE_TIMEOUT	)	||	(	seg_num	>	rmpp_recv	->	newwin	)

(	seg_num	<=	rmpp_recv	->	last_ack	)	||	(	rmpp_recv	->	state	==	RMPP_STATE_COMPLETE	)

!	timeout	||	timeout	>	2000

rmpp_recv	&&	rmpp_recv	->	state	==	RMPP_STATE_COMPLETE

(	mad_send_wr	->	last_ack	==	mad_send_wr	->	send_buf	.	seg_count	)	&&	(	mad_send_wr	->	timeout	)

seg_num	>	mad_send_wr	->	send_buf	.	seg_count	||	seg_num	>	mad_send_wr	->	newwin

newwin	<	mad_send_wr	->	newwin	||	seg_num	<	mad_send_wr	->	last_ack

mad_send_wr	->	refcount	==	1	&&	mad_send_wr	->	seg_num	<	mad_send_wr	->	newwin	&&	mad_send_wr	->	seg_num	<	mad_send_wr	->	send_buf	.	seg_count

!	list_empty	(	&	group	->	pending_list	)	||	(	group	->	state	!=	MCAST_BUSY	)

i	<=	dev	->	end_port	-	dev	->	start_port

i	<=	dev	->	end_port	-	dev	->	start_port

atomic_read	(	&	pool	->	flush_ser	)	-	atomic_read	(	&	pool	->	req_ser	)	<	0

atomic_read	(	&	pool	->	flush_ser	)	-	atomic_read	(	&	pool	->	req_ser	)	>=	0	&&	!	kthread_should_stop	(	)

!	device	->	alloc_fmr	||	!	device	->	dealloc_fmr	||	!	device	->	map_phys_fmr	||	!	device	->	unmap_fmr

atomic_read	(	&	pool	->	flush_ser	)	-	serial	>=	0

list_len	<	1	||	list_len	>	pool	->	max_pages

++	pool	->	dirty_len	>=	pool	->	dirty_watermark

cmd	.	backlog	>	0	&&	cmd	.	backlog	<	max_backlog

20	-	2	*	sizeof	(	__kernel_ulong_t	)	-	sizeof	(	__u32	)

!	device	->	pkey_tbl_len	||	!	device	->	gid_tbl_len

(	tab_attr	->	index	>>	16	)	&	0xff

!	in_mad	||	!	out_mad

--	i	>=	0

(	pd	->	port_piocnt	/	subport_cnt	)	+	(	pd	->	port_piocnt	%	subport_cnt	)

(	kinfo	->	spi_piobufbase	-	(	dd	->	ipath_piobufbase	&	0xffffffff	)	)	/	dd	->	ipath_palign
kinfo	->	spi_piobufbase	-	dd	->	ipath_piobufbase	&	0xffffffff	/	dd	->	ipath_palign
pidx	==	-	1

pidx	==	-	1

(	egrcnt	+	egrperchunk	-	1	)	/	egrperchunk
egrcnt	+	egrperchunk	-	1	/	egrperchunk
(	pd	->	port_port	-	1	)	*	egrcnt	+	dd	->	ipath_p0_rcvegrcnt
pd	->	port_port	-	1	*	egrcnt	+	dd	->	ipath_p0_rcvegrcnt
e	<	egrcnt	&&	i	<	egrperchunk

(	vma	->	vm_end	-	vma	->	vm_start	)	>	len

(	vma	->	vm_end	-	vma	->	vm_start	)	>	(	piocnt	*	dd	->	ipath_palign	)

pd	->	subport_rcvhdr_base	+	pd	->	port_rcvhdrq_size	*	subport

(	pd	->	port_piocnt	/	pd	->	port_subport_cnt	)	+	(	pd	->	port_piocnt	%	pd	->	port_subport_cnt	)

pd	->	port_piobufs	+	dd	->	ipath_palign	*	(	pd	->	port_piocnt	-	piocnt	)
pd	->	port_piobufs	+	dd	->	ipath_palign	*	pd	->	port_piocnt	-	piocnt
pd	->	port_piobufs	+	dd	->	ipath_palign	*	piocnt	*	slave

(	user_swmajor	>	1	)	||	(	user_swminor	>=	3	)

!	ipath_compatible_subports	(	uinfo	->	spu_userversion	>>	16	,	uinfo	->	spu_userversion	&	0xffff	)

!	pd	||	!	ptmp

curcpu	!=	-	1	&&	nset	!=	ncpus

prefunit	!=	-	1

prefunit	!=	-	1

!	pd	||	!	pd	->	port_cnt

pd	->	port_subport_cnt	!=	uinfo	->	spu_subport_cnt	||	pd	->	userversion	!=	uinfo	->	spu_userversion	||	pd	->	port_cnt	>=	pd	->	port_subport_cnt

(	dd	->	ipath_pbufsport	+	1	)	*	(	pd	->	port_port	-	1	)
dd	->	ipath_pbufsport	+	1	*	pd	->	port_port	-	1
dd	->	ipath_ports_extrabuf	+	dd	->	ipath_pbufsport	*	(	pd	->	port_port	-	1	)
dd	->	ipath_ports_extrabuf	+	dd	->	ipath_pbufsport	*	pd	->	port_port	-	1
dd	->	ipath_piobufbase	+	pd	->	port_pio_base	*	dd	->	ipath_palign

dd	->	ipath_rcvctrl	&	~	(	1ULL	<<	dd	->	ipath_r_tailupd_shift	)
dd	->	ipath_rcvctrl	&	~	1ULL	<<	dd	->	ipath_r_tailupd_shift
~	(	1	<<	fd	->	subport	)
~	1	<<	fd	->	subport
idx	<	niov	&&	npkts	<	maxpkts

pktnwc	<	pktnw	&&	idx	<	niov

descq	|	cpu_to_le64	(	1ULL	<<	12	)

descq	|	cpu_to_le64	(	1ULL	<<	11	|	1ULL	<<	13	)

(	ofs	<<	2	)	>	dd	->	ipath_ibmaxlen

ipath_sdma_descq_freecnt	(	dd	)	<	ret	*	4

ipath_diag_inuse	==	-	2

ipath_diag_inuse	==	-	1

dd	->	ipath_unit	!=	-	1

++	pd	->	port_seq_cnt	>	13

!	(	++	dd	->	ipath_consec_nopiobuf	%	100000	)
!	++	dd	->	ipath_consec_nopiobuf	%	100000
++	dd	->	ipath_sdma_descq_head	==	dd	->	ipath_sdma_descq_cnt

++	sge	->	m	>=	sge	->	mr	->	mapsz

!	(	d_unhashed	(	tmp	)	&&	tmp	->	d_inode	)
!	d_unhashed	(	tmp	)	&&	tmp	->	d_inode
dd	->	ipath_majrev	!=	3	||	(	dd	->	ipath_minrev	<	2	||	dd	->	ipath_minrev	>	4	)

(	-	1LL	&	INFINIPATH_RT_BUFSIZE_MASK	)	<<	INFINIPATH_RT_BUFSIZE_SHIFT
-	1LL	&	INFINIPATH_RT_BUFSIZE_MASK	<<	INFINIPATH_RT_BUFSIZE_SHIFT
++	qp	->	s_cur	==	qp	->	s_size

++	qp	->	s_cur	==	qp	->	s_size

++	qp	->	s_cur	==	qp	->	s_size

++	qp	->	s_cur	==	qp	->	s_size

++	qp	->	s_cur	>=	qp	->	s_size

++	qp	->	s_last	>=	qp	->	s_size

qp	->	s_rnr_timeout	==	0	&&	!	list_empty	(	&	qp	->	timerwait	)

~	(	1ULL	<<	dd	->	ipath_r_tailupd_shift	)
~	1ULL	<<	dd	->	ipath_r_tailupd_shift
(	dd	->	ipath_revision	&	0xffffffff	)	==	0xffffffff	||	(	dd	->	ipath_sregbase	&	0xffffffff	)	==	0xffffffff	||	(	dd	->	ipath_cregbase	&	0xffffffff	)	==	0xffffffff	||	(	dd	->	ipath_uregbase	&	0xffffffff	)	==	0xffffffff
dd	->	ipath_revision	&	0xffffffff	==	0xffffffff	||	dd	->	ipath_sregbase	&	0xffffffff	==	0xffffffff	||	dd	->	ipath_cregbase	&	0xffffffff	==	0xffffffff	||	dd	->	ipath_uregbase	&	0xffffffff	==	0xffffffff
dd	->	ipath_rcvhdrentsize	*	(	dd	->	ipath_rcvhdrcnt	-	1	)
dd	->	ipath_rcvhdrentsize	*	dd	->	ipath_rcvhdrcnt	-	1
idx	>=	0	&&	idx	<	(	ARRAY_SIZE	(	i2c_chains	)	-	1	)

len	--	>	0

!	--	max_wait_time

t	&&	dd0	->	ipath_nguid	>	1	&&	t	<=	dd0	->	ipath_nguid

++	sqp	->	s_cur	>=	sqp	->	s_size

++	sge	->	m	>=	sge	->	mr	->	mapsz

(	6	<<	28	)	|	(	grh	->	traffic_class	<<	20	)	|	grh	->	flow_label

smp	->	attr_mod	||	(	dd	->	ipath_guid	==	0	)

(	dev	->	mkeyprot	<<	6	)	|	dd	->	ipath_lmc

(	dd	->	ipath_link_speed_active	<<	4	)	|	dd	->	ipath_link_speed_enabled

(	ipath_get_cr_errpkey	(	dd	)	-	dev	->	z_pkey_violations	)	&	0xFFFF

(	get_phyerrthreshold	(	dd	)	<<	4	)	|	get_overrunthreshold	(	dd	)

(	pip	->	neighbormtu_mastersmsl	>>	4	)	&	0xF

(	(	pip	->	operationalvl_pei_peo_fpi_fpo	>>	4	)	&	0xF	)	>	1
(	pip	->	operationalvl_pei_peo_fpi_fpo	>>	4	)	&	0xF	>	1
(	ore	>>	4	)	&	0xF

dev	->	mkey_lease_timeout	||	dev	->	mkey_lease_period	==	0

++	qp	->	s_cur	>=	qp	->	s_size

++	qp	->	s_cur	>=	qp	->	s_size

++	qp	->	s_cur	>=	qp	->	s_size

++	qp	->	s_cur	>=	qp	->	s_size

attr	->	port_num	==	0	||	attr	->	port_num	>	ibqp	->	device	->	phys_port_cnt

init_attr	->	cap	.	max_send_sge	+	init_attr	->	cap	.	max_send_wr	+	init_attr	->	cap	.	max_recv_sge	+	init_attr	->	cap	.	max_recv_wr	==	0

(	dd	->	ipath_piobufbase	>>	32	)	&	0xffffffffUL

++	sge	->	m	>=	sge	->	mr	->	mapsz

++	cnt	&	0x10

--	i	>=	0

pd	->	port_lastrcvhdrqtail	!=	-	1

++	sge	->	m	>=	sge	->	mr	->	mapsz

++	sge	->	m	>=	sge	->	mr	->	mapsz

++	sge	->	m	>=	sge	->	mr	->	mapsz

++	dev	->	pending_index	>=	ARRAY_SIZE	(	dev	->	pending	)

--	qp	->	s_rnr_timeout	==	0

++	sge	->	m	>=	sge	->	mr	->	mapsz

ah_attr	->	port_num	<	1	||	ah_attr	->	port_num	>	pd	->	device	->	phys_port_cnt

(	1ull	<<	IB_USER_VERBS_CMD_GET_CONTEXT	)	|	(	1ull	<<	IB_USER_VERBS_CMD_QUERY_DEVICE	)	|	(	1ull	<<	IB_USER_VERBS_CMD_QUERY_PORT	)	|	(	1ull	<<	IB_USER_VERBS_CMD_ALLOC_PD	)	|	(	1ull	<<	IB_USER_VERBS_CMD_DEALLOC_PD	)	|	(	1ull	<<	IB_USER_VERBS_CMD_CREATE_AH	)	|	(	1ull	<<	IB_USER_VERBS_CMD_DESTROY_AH	)	|	(	1ull	<<	IB_USER_VERBS_CMD_QUERY_AH	)	|	(	1ull	<<	IB_USER_VERBS_CMD_REG_MR	)	|	(	1ull	<<	IB_USER_VERBS_CMD_DEREG_MR	)	|	(	1ull	<<	IB_USER_VERBS_CMD_CREATE_COMP_CHANNEL	)	|	(	1ull	<<	IB_USER_VERBS_CMD_CREATE_CQ	)	|	(	1ull	<<	IB_USER_VERBS_CMD_RESIZE_CQ	)	|	(	1ull	<<	IB_USER_VERBS_CMD_DESTROY_CQ	)	|	(	1ull	<<	IB_USER_VERBS_CMD_POLL_CQ	)	|	(	1ull	<<	IB_USER_VERBS_CMD_REQ_NOTIFY_CQ	)	|	(	1ull	<<	IB_USER_VERBS_CMD_CREATE_QP	)	|	(	1ull	<<	IB_USER_VERBS_CMD_QUERY_QP	)	|	(	1ull	<<	IB_USER_VERBS_CMD_MODIFY_QP	)	|	(	1ull	<<	IB_USER_VERBS_CMD_DESTROY_QP	)	|	(	1ull	<<	IB_USER_VERBS_CMD_POST_SEND	)	|	(	1ull	<<	IB_USER_VERBS_CMD_POST_RECV	)	|	(	1ull	<<	IB_USER_VERBS_CMD_ATTACH_MCAST	)	|	(	1ull	<<	IB_USER_VERBS_CMD_DETACH_MCAST	)	|	(	1ull	<<	IB_USER_VERBS_CMD_CREATE_SRQ	)	|	(	1ull	<<	IB_USER_VERBS_CMD_MODIFY_SRQ	)	|	(	1ull	<<	IB_USER_VERBS_CMD_QUERY_SRQ	)	|	(	1ull	<<	IB_USER_VERBS_CMD_DESTROY_SRQ	)	|	(	1ull	<<	IB_USER_VERBS_CMD_POST_SRQ_RECV	)

!	si	->	n_packets	&&	!	si	->	n_bytes

!	noprint	&&	*	msg

(	allbits	%	10000	)	==	0

(	cm_node	->	listener	==	listener	)	&&	(	!	cm_node	->	accelerated	)

!	cm_node	->	accelerated	&&	cm_node	->	accept_pend

(	tcph	->	doff	<<	2	)	-	sizeof	(	struct	tcphdr	)
tcph	->	doff	<<	2	-	sizeof	(	struct	tcphdr	)
(	tcph	->	doff	<<	2	)	-	sizeof	(	struct	tcphdr	)
tcph	->	doff	<<	2	-	sizeof	(	struct	tcphdr	)
(	tcph	->	doff	<<	2	)	-	sizeof	(	struct	tcphdr	)
tcph	->	doff	<<	2	-	sizeof	(	struct	tcphdr	)
skb	->	len	<	sizeof	(	struct	iphdr	)	+	sizeof	(	struct	tcphdr	)

(	!	tcph	->	syn	)	||	(	tcph	->	ack	)

!	tcph	->	rst	&&	!	tcph	->	fin

(	issue_flush	)	&&	(	nesqp	->	destroyed	==	0	)

(	!	event	)	||	(	!	event	->	cm_node	)	||	(	!	event	->	cm_node	->	cm_core	)

(	!	nesadapter	->	OneG_Mode	)	&&	(	nesadapter	->	port_count	==	2	)

(	(	unsigned	long	)	nesdev	->	cqp_vbase	+	(	512	-	1	)	)	&	~	(	unsigned	long	)	(	512	-	1	)

(	PCI_FUNC	(	nesdev	->	pcidev	->	devfn	)	<<	12	)	+	(	2	<<	10	)
(	PCI_FUNC	(	nesdev	->	pcidev	->	devfn	)	<<	12	)	+	2	<<	10
!	(	nesdev	->	cqp	.	sq_head	==	nesdev	->	cqp	.	sq_tail	)
!	nesdev	->	cqp	.	sq_head	==	nesdev	->	cqp	.	sq_tail
(	(	nesnic	->	rq_size	-	1	)	==	atomic_read	(	&	nesvnic	->	rx_skbs_needed	)	)	&&	(	atomic_read	(	&	nesvnic	->	rx_skb_timer_running	)	==	0	)

(	(	nesnic	->	rq_size	-	1	)	==	atomic_read	(	&	nesvnic	->	rx_skbs_needed	)	)	&&	(	atomic_read	(	&	nesvnic	->	rx_skb_timer_running	)	==	0	)

(	(	unsigned	long	)	nesvnic	->	nic_vbase	+	(	256	-	1	)	)	&	~	(	unsigned	long	)	(	256	-	1	)

(	nesvnic	->	nic	.	sq_tail	+	1	)	&	(	nesvnic	->	nic	.	sq_size	-	1	)

(	(	nesadapter	->	et_rx_coalesce_usecs_irq	)	&&	(	!	nesadapter	->	et_use_adaptive_rx_coalesce	)	)	||	(	(	nesadapter	->	et_use_adaptive_rx_coalesce	)	&&	(	nesdev	->	deepcq_count	>	nesadapter	->	et_pkt_rate_low	)	)

(	!	nesadapter	->	OneG_Mode	)	&&	(	nesadapter	->	port_count	==	2	)

atomic_read	(	&	nesvnic	->	rx_skbs_needed	)	>	(	nesvnic	->	nic	.	rq_size	>>	1	)

++	cqp	->	sq_tail	>=	cqp	->	sq_size

(	!	list_empty	(	&	nesdev	->	cqp_pending_reqs	)	)	&&	(	(	(	(	nesdev	->	cqp	.	sq_tail	+	nesdev	->	cqp	.	sq_size	)	-	nesdev	->	cqp	.	sq_head	)	&	(	nesdev	->	cqp	.	sq_size	-	1	)	)	!=	1	)
(	!	list_empty	(	&	nesdev	->	cqp_pending_reqs	)	)	&&	(	(	(	nesdev	->	cqp	.	sq_tail	+	nesdev	->	cqp	.	sq_size	)	-	nesdev	->	cqp	.	sq_head	)	&	(	nesdev	->	cqp	.	sq_size	-	1	)	!=	1	)
arp_index	==	-	1

(	ep	->	speed_hi	<<	16	)	|	ep	->	speed

(	ETHTOOL_RX_FLOW_SPEC_RING_VF	&	ring_cookie	)	>>	ETHTOOL_RX_FLOW_SPEC_RING_VF_OFF
ETHTOOL_RX_FLOW_SPEC_RING_VF	&	ring_cookie	>>	ETHTOOL_RX_FLOW_SPEC_RING_VF_OFF
(	(	(	(	nesdev	->	cqp	.	sq_tail	+	(	nesdev	->	cqp	.	sq_size	*	2	)	)	-	nesdev	->	cqp	.	sq_head	)	&	(	nesdev	->	cqp	.	sq_size	-	1	)	)	!=	1	)	&&	(	list_empty	(	&	nesdev	->	cqp_pending_reqs	)	)
(	(	(	nesdev	->	cqp	.	sq_tail	+	(	nesdev	->	cqp	.	sq_size	*	2	)	)	-	nesdev	->	cqp	.	sq_head	)	&	(	nesdev	->	cqp	.	sq_size	-	1	)	!=	1	)	&&	(	list_empty	(	&	nesdev	->	cqp_pending_reqs	)	)
*	ptr	<	0x20	||	*	ptr	>	0x7e

(	*	ptr	&	0xf0	)	>>	4
*	ptr	&	0xf0	>>	4
(	(	nesmgt	->	rq_size	-	1	)	==	atomic_read	(	&	mgtvnic	->	rx_skbs_needed	)	)	&&	(	atomic_read	(	&	mgtvnic	->	rx_skb_timer_running	)	==	0	)

(	(	nesmgt	->	rq_size	-	1	)	==	atomic_read	(	&	mgtvnic	->	rx_skbs_needed	)	)	&&	(	atomic_read	(	&	mgtvnic	->	rx_skb_timer_running	)	==	0	)

(	(	char	*	)	iph	)	+	(	4	*	iph	->	ihl	)

skb	->	next	==	(	struct	sk_buff	*	)	&	nesqp	->	pau_list

skb	->	next	==	(	struct	sk_buff	*	)	&	nesqp	->	pau_list

(	(	char	*	)	iph	)	+	(	4	*	iph	->	ihl	)

(	(	(	unsigned	char	*	)	tcph	)	+	4	*	(	tcph	->	doff	)	)	-	cb	->	data_start

(	(	char	*	)	iph	)	+	(	4	*	iph	->	ihl	)

(	(	char	*	)	iph	)	+	(	4	*	iph	->	ihl	)

(	(	char	*	)	iph	)	+	(	4	*	iph	->	ihl	)

(	(	char	*	)	tcph	)	+	(	4	*	tcph	->	doff	)

tmpskb	!=	(	struct	sk_buff	*	)	&	nesqp	->	pau_list

(	skb_queue_len	(	&	nesvnic	->	mgt_skb_list	)	)	&&	!	kthread_should_stop	(	)

(	ep	->	speed_hi	<<	16	)	|	ep	->	speed

(	ETHTOOL_RX_FLOW_SPEC_RING_VF	&	ring_cookie	)	>>	ETHTOOL_RX_FLOW_SPEC_RING_VF_OFF
ETHTOOL_RX_FLOW_SPEC_RING_VF	&	ring_cookie	>>	ETHTOOL_RX_FLOW_SPEC_RING_VF_OFF
(	ep	->	speed_hi	<<	16	)	|	ep	->	speed

(	ETHTOOL_RX_FLOW_SPEC_RING_VF	&	ring_cookie	)	>>	ETHTOOL_RX_FLOW_SPEC_RING_VF_OFF
ETHTOOL_RX_FLOW_SPEC_RING_VF	&	ring_cookie	>>	ETHTOOL_RX_FLOW_SPEC_RING_VF_OFF
(	!	nesvnic	->	of_device_registered	)	&&	(	nesvnic	->	rdma_enabled	)

(	first_nesvnic	->	netdev_open	==	1	)	&&	(	first_nesvnic	!=	nesvnic	)	&&	(	PCI_FUNC	(	first_nesvnic	->	nesdev	->	pcidev	->	devfn	)	!=	PCI_FUNC	(	nesvnic	->	nesdev	->	pcidev	->	devfn	)	)

(	skb_shinfo	(	skb	)	->	nr_frags	+	1	)	>	4

(	(	(	nesnic	->	sq_tail	+	(	nesnic	->	sq_size	*	2	)	)	-	nesnic	->	sq_head	)	&	(	nesnic	->	sq_size	-	1	)	)	==	1
(	(	nesnic	->	sq_tail	+	(	nesnic	->	sq_size	*	2	)	)	-	nesnic	->	sq_head	)	&	(	nesnic	->	sq_size	-	1	)	==	1
(	(	(	(	(	volatile	u16	)	nesnic	->	sq_tail	)	+	(	nesnic	->	sq_size	*	2	)	)	-	nesnic	->	sq_head	)	&	(	nesnic	->	sq_size	-	1	)	)	!=	1
(	(	(	(	volatile	u16	)	nesnic	->	sq_tail	)	+	(	nesnic	->	sq_size	*	2	)	)	-	nesnic	->	sq_head	)	&	(	nesnic	->	sq_size	-	1	)	!=	1
(	netdev	->	flags	&	IFF_ALLMULTI	)	||	(	nesvnic	->	nic_index	>	3	)

(	et_pauseparam	->	tx_pause	==	1	)	&&	(	nesdev	->	disable_tx_flow_control	==	1	)

(	et_pauseparam	->	tx_pause	==	0	)	&&	(	nesdev	->	disable_tx_flow_control	==	0	)

(	et_pauseparam	->	rx_pause	==	1	)	&&	(	nesdev	->	disable_rx_flow_control	==	1	)

(	et_pauseparam	->	rx_pause	==	0	)	&&	(	nesdev	->	disable_rx_flow_control	==	0	)

nesvnic	->	nesdev	->	nesadapter	->	port_count	==	1	&&	nesvnic	->	nesdev	->	nesadapter	->	adapter_fcn_count	==	1

nesvnic	->	nesdev	->	nesadapter	->	port_count	==	2	||	(	nesvnic	->	nesdev	->	nesadapter	->	port_count	==	1	&&	nesvnic	->	nesdev	->	nesadapter	->	adapter_fcn_count	==	2	)

(	!	ret	)	||	(	cqp_request	->	major_code	)

(	ibmw	->	rkey	&	0x0fffff00	)	>>	8
ibmw	->	rkey	&	0x0fffff00	>>	8
(	!	ret	)	||	(	cqp_request	->	major_code	)

(	nesqp	->	nesrcq	)	&&	(	nesqp	->	nesrcq	!=	nesqp	->	nesscq	)

nesvnic	->	nic	.	qp_id	+	28	+	2	*	(	(	nes_ucontext	->	mcrqf	&	0xf	)	-	1	)
nesvnic	->	nic	.	qp_id	+	28	+	2	*	nes_ucontext	->	mcrqf	&	0xf	-	1
(	!	ret	)	||	(	cqp_request	->	major_code	)

num_phys_buf	>	(	1024	*	512	)

region	->	length	&	(	4096	-	1	)

(	ib_mr	->	rkey	&	0x0fffff00	)	>>	8
ib_mr	->	rkey	&	0x0fffff00	>>	8
nesqp	->	cm_id	&&	nesqp	->	hw_tcp_state	!=	0

(	1ull	<<	IB_USER_VERBS_CMD_GET_CONTEXT	)	|	(	1ull	<<	IB_USER_VERBS_CMD_QUERY_DEVICE	)	|	(	1ull	<<	IB_USER_VERBS_CMD_QUERY_PORT	)	|	(	1ull	<<	IB_USER_VERBS_CMD_ALLOC_PD	)	|	(	1ull	<<	IB_USER_VERBS_CMD_DEALLOC_PD	)	|	(	1ull	<<	IB_USER_VERBS_CMD_REG_MR	)	|	(	1ull	<<	IB_USER_VERBS_CMD_DEREG_MR	)	|	(	1ull	<<	IB_USER_VERBS_CMD_CREATE_COMP_CHANNEL	)	|	(	1ull	<<	IB_USER_VERBS_CMD_CREATE_CQ	)	|	(	1ull	<<	IB_USER_VERBS_CMD_DESTROY_CQ	)	|	(	1ull	<<	IB_USER_VERBS_CMD_CREATE_AH	)	|	(	1ull	<<	IB_USER_VERBS_CMD_DESTROY_AH	)	|	(	1ull	<<	IB_USER_VERBS_CMD_REQ_NOTIFY_CQ	)	|	(	1ull	<<	IB_USER_VERBS_CMD_CREATE_QP	)	|	(	1ull	<<	IB_USER_VERBS_CMD_MODIFY_QP	)	|	(	1ull	<<	IB_USER_VERBS_CMD_POLL_CQ	)	|	(	1ull	<<	IB_USER_VERBS_CMD_DESTROY_QP	)	|	(	1ull	<<	IB_USER_VERBS_CMD_ALLOC_MW	)	|	(	1ull	<<	IB_USER_VERBS_CMD_BIND_MW	)	|	(	1ull	<<	IB_USER_VERBS_CMD_DEALLOC_MW	)	|	(	1ull	<<	IB_USER_VERBS_CMD_POST_RECV	)	|	(	1ull	<<	IB_USER_VERBS_CMD_POST_SEND	)

++	qp	->	s_cur	>=	qp	->	s_size

++	qp	->	s_cur	>=	qp	->	s_size

++	qp	->	s_cur	>=	qp	->	s_size

++	qp	->	s_cur	>=	qp	->	s_size

!	dd	->	cspec	->	serdes_first_init_done	&&	qib_sd7220_ib_vfy	(	dd	,	fw	)	>	0

tries	<	(	4	*	IBSD_RESYNC_TRIES	)

ret	!=	0xF0	&&	ret	!=	0x55	&&	tries	==	0

(	ret	&	0x70	)	!=	(	(	chn	<<	4	)	|	0x40	)
ret	&	0x70	!=	(	chn	<<	4	)	|	0x40
++	chn	==	4

!	(	ret	&	0x10	)
!	ret	&	0x10
baduns	&	(	1	<<	chn	)

epb_access	(	dd	,	sdnum	,	-	1	)	<	0

tries	>	0	&&	sofar	<	cnt

(	addr	+	sofar	)	>>	8

(	addr	+	sofar	)	&	0xFF

epb_access	(	dd	,	sdnum	,	-	1	)	<	0

(	loc	>>	(	4	+	EPB_ADDR_SHF	)	)	&	7

(	sloc	>>	9	)	&	0x3f

(	ret	&	~	mask	)	|	(	val	&	mask	)

~	(	7	<<	(	4	+	EPB_ADDR_SHF	)	)
~	7	<<	(	4	+	EPB_ADDR_SHF	)
(	sloc	>>	9	)	&	0x3f

~	(	7	<<	(	4	+	EPB_ADDR_SHF	)	)
~	7	<<	(	4	+	EPB_ADDR_SHF	)
loc	|	(	chnl	<<	(	4	+	EPB_ADDR_SHF	)	)

(	sloc	>>	9	)	&	0x3f

idx	<	niov	&&	npkts	<	maxpkts

pktnwc	<	pktnw	&&	idx	<	niov

descq	|	cpu_to_le64	(	1ULL	<<	12	)

